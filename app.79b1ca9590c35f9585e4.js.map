{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/playcanvas/build/playcanvas.js","webpack:///./src/game/app.ts","webpack:///./src/game/assets-loader.ts","webpack:///./src/game/helpers.ts","webpack:///./src/game/index.ts","webpack:///./src/main.ts"],"names":[],"mappings":";QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,GAAG;;QAEH;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA,MAAM;QACN;QACA;QACA,MAAM;QACN;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA,6BAA6B;QAC7B,6BAA6B;QAC7B;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,qBAAqB,gBAAgB;QACrC;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,qBAAqB,gBAAgB;QACrC;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA,kBAAkB,8BAA8B;QAChD;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,IAAI;QACJ;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA,IAAI;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,oBAAoB,2BAA2B;QAC/C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,OAAO;QACP;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,mBAAmB,cAAc;QACjC;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,gBAAgB,KAAK;QACrB;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA,gBAAgB,YAAY;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA,cAAc,4BAA4B;QAC1C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;;QAEJ;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;QACA,eAAe,4BAA4B;QAC3C;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA,eAAe,4BAA4B;QAC3C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,uCAAuC;QACxD;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,uCAAuC;QACxD;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,sBAAsB;QACvC;QACA;QACA;QACA,QAAQ;QACR;QACA;QACA;QACA;QACA;QACA;QACA,UAAU;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,cAAc,wCAAwC;QACtD;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,SAAS;QACT;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA,QAAQ;QACR;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA,KAAK;QACL;;QAEA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,eAAe;QACf;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA,sCAAsC,uBAAuB;;;QAG7D;QACA;;;;;;;;;;;;ACv1BA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAA4D;AAC7D,CAAC,SACmG;AACpG,CAAC,4BAA4B;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,0BAA0B;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA,iBAAiB,qDAAqD;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB,eAAe;AACpF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,kBAAkB,mGAAmG;AACrH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA,MAAM;AACN,iBAAiB,sBAAsB;AACvC;AACA;AACA,MAAM;AACN;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,KAAK;AACL,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,oBAAoB,gBAAgB;AACpC;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,SAAS;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA,MAAM;AACN,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,cAAc;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,eAAe;AACjC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF,4CAA4C,2BAA2B,+BAA+B,GAAG;;AAEzG,6CAA6C,yCAAyC,GAAG;;AAEzF,iHAAiH,6BAA6B,iFAAiF,yDAAyD,qHAAqH,GAAG;;AAEhZ,qKAAqK,6BAA6B,iFAAiF,yDAAyD,oIAAoI,GAAG;;AAEnd,8CAA8C,qBAAqB,qCAAqC,6SAA6S,+DAA+D,GAAG;;AAEvd,gEAAgE,0BAA0B,cAAc,kEAAkE,oEAAoE,mCAAmC,GAAG;;AAEpR,oEAAoE,0BAA0B,6CAA6C,4FAA4F,mEAAmE,8BAA8B,2BAA2B,GAAG;;AAEtW,iDAAiD,6CAA6C,4FAA4F,8BAA8B,2BAA2B,GAAG;;AAEtP,uDAAuD,wBAAwB,8BAA8B,2BAA2B,GAAG;;AAE3I,0EAA0E,0BAA0B,qEAAqE,8BAA8B,2BAA2B,GAAG;;AAErO,2EAA2E,wBAAwB,6BAA6B,gDAAgD,kCAAkC,sGAAsG,0CAA0C,0DAA0D,OAAO,OAAO,6BAA6B,OAAO,KAAK,OAAO,mCAAmC,yEAAyE,KAAK;;AAE3kB,uDAAuD,wDAAwD,4BAA4B,wHAAwH,0DAA0D,uCAAuC;;AAEpW,0CAA0C,mCAAmC,yBAAyB,eAAe,GAAG,2BAA2B,8BAA8B,GAAG,yBAAyB,0CAA0C,GAAG;;AAE1P,8CAA8C,+BAA+B,gCAAgC,kCAAkC,kCAAkC,8BAA8B,qCAAqC,4BAA4B,6BAA6B,kBAAkB,oBAAoB,qBAAqB,kBAAkB,sBAAsB,gBAAgB;;AAEha,gEAAgE,wBAAwB,mCAAmC,kCAAkC,iCAAiC,oBAAoB;;AAElN,gEAAgE,wBAAwB,mCAAmC,kCAAkC,iCAAiC;;AAE9L,6FAA6F,wBAAwB,mCAAmC,kCAAkC,iCAAiC,oBAAoB;;AAE/O,8FAA8F,mBAAmB,GAAG;;AAEpH,oCAAoC,2BAA2B,2BAA2B,8CAA8C,uDAAuD,mCAAmC,GAAG,iCAAiC,oCAAoC,qBAAqB,+CAA+C,eAAe,GAAG,2BAA2B,6BAA6B,0DAA0D,iBAAiB,WAAW,OAAO,8DAA8D,+EAA+E,iEAAiE,kCAAkC,iBAAiB,+CAA+C,uGAAuG,uEAAuE,aAAa;;AAEhgC,sEAAsE,oEAAoE,+BAA+B,wBAAwB,2DAA2D,6FAA6F,8EAA8E,aAAa;;AAEpb,qFAAqF,yEAAyE,yCAAyC,uBAAuB,oEAAoE,iGAAiG,6EAA6E,wCAAwC,GAAG;;AAE3f,0FAA0F,4CAA4C,qCAAqC,mGAAmG,4FAA4F,iCAAiC,mDAAmD,qEAAqE,GAAG;;AAEtgB,kDAAkD,wGAAwG,GAAG;;AAE7J,8CAA8C,mCAAmC,GAAG;;AAEpF,sDAAsD,wGAAwG,GAAG;;AAEjK,gEAAgE,uGAAuG,GAAG;;AAE1K,4DAA4D,mEAAmE,GAAG;;AAElI,oFAAoF,uBAAuB,oIAAoI,GAAG;;AAElP,yDAAyD,wGAAwG,GAAG;;AAEpK,mFAAmF,qDAAqD,4BAA4B,iEAAiE,GAAG,wEAAwE,qDAAqD,4BAA4B,sHAAsH,iEAAiE,GAAG,+GAA+G,qDAAqD,4BAA4B,+BAA+B,sEAAsE,yDAAyD,GAAG,mHAAmH,qDAAqD,4BAA4B,+BAA+B,sHAAsH,sEAAsE,yDAAyD,GAAG,wEAAwE,yFAAyF,GAAG;;AAE3hD,8DAA8D,mCAAmC,iCAAiC,kDAAkD,kDAAkD,kBAAkB,gDAAgD,gDAAgD,gDAAgD,4DAA4D,4CAA4C,mDAAmD,gCAAgC,GAAG;;AAEtkB,4DAA4D,8BAA8B,GAAG;;AAE7F,oFAAoF,2CAA2C,mEAAmE,yBAAyB,WAAW;;AAEtO,6DAA6D,mBAAmB,GAAG,yCAAyC,mBAAmB,GAAG,4CAA4C,uCAAuC,GAAG,6CAA6C,gFAAgF,GAAG,yCAAyC,uBAAuB,GAAG,yCAAyC,uBAAuB,GAAG;;AAE9e,iEAAiE,kEAAkE,4BAA4B,wBAAwB,uDAAuD,yHAAyH,2FAA2F,aAAa;;AAE/c,yFAAyF,6CAA6C,gGAAgG,wDAAwD,2BAA2B,aAAa;;AAEtU,mCAAmC,2BAA2B,2BAA2B,mBAAmB,qCAAqC,2DAA2D,uEAAuE,mFAAmF,uEAAuE,sEAAsE,mFAAmF,sEAAsE,2DAA2D,qBAAqB,GAAG;;AAE/tB,wCAAwC,2BAA2B,sBAAsB,mBAAmB,mBAAmB,8BAA8B,oBAAoB,wBAAwB,yCAAyC,GAAG;;AAErP,mEAAmE,oEAAoE,mEAAmE,8BAA8B,8BAA8B,8DAA8D,+DAA+D,8FAA8F,4FAA4F,8BAA8B,GAAG;;AAE9lB,wEAAwE,+CAA+C,gDAAgD,gDAAgD,gEAAgE,4DAA4D;;AAEnV,wDAAwD,iBAAiB,GAAG;;AAE5E,oDAAoD,uCAAuC,mCAAmC,GAAG;;AAEjI;;AAEA;;AAEA,uEAAuE,gDAAgD,wCAAwC,6EAA6E,GAAG,iDAAiD,gDAAgD,0CAA0C,wCAAwC,oBAAoB,iFAAiF,mBAAmB,GAAG;;AAE7hB,mEAAmE,iCAAiC,uDAAuD,GAAG;;AAE9J,0EAA0E,eAAe,GAAG,2BAA2B,eAAe,GAAG,sDAAsD,eAAe,GAAG,2BAA2B,mBAAmB,GAAG,oDAAoD,eAAe,GAAG;;AAExU,6EAA6E,kDAAkD,2DAA2D,wCAAwC,wCAAwC,wCAAwC,eAAe,GAAG,2BAA2B,oCAAoC,2DAA2D,wCAAwC,wCAAwC,wCAAwC,eAAe,GAAG,sDAAsD,gCAAgC,2DAA2D,wCAAwC,wCAAwC,wCAAwC,eAAe,GAAG,2BAA2B,yBAAyB,+CAA+C,6GAA6G,GAAG,oDAAoD,6CAA6C,GAAG;;AAE1pC,wCAAwC,4BAA4B,kCAAkC,2BAA2B,kDAAkD,gDAAgD,2CAA2C,kEAAkE,GAAG;;AAEnV,yCAAyC,4BAA4B,kCAAkC,2BAA2B,kDAAkD,sEAAsE,2CAA2C,kEAAkE,GAAG;;AAE1W,2CAA2C,0BAA0B,wBAAwB,kCAAkC,2BAA2B,kDAAkD,gEAAgE,2CAA2C,6CAA6C,kEAAkE,GAAG;;AAEza,kDAAkD,2BAA2B,iBAAiB,GAAG;;AAEjG,gEAAgE,qBAAqB,6DAA6D,uCAAuC,mCAAmC,yCAAyC,iEAAiE,4EAA4E,iCAAiC,mCAAmC,2CAA2C,oEAAoE,aAAa;;AAEllB,2CAA2C,2BAA2B,mBAAmB,2CAA2C,GAAG;;AAEvI,wDAAwD,oBAAoB,oBAAoB,kDAAkD,sCAAsC,GAAG;;AAE3L,+DAA+D,8BAA8B,GAAG,0DAA0D,oCAAoC,GAAG,mDAAmD,iCAAiC,GAAG,uCAAuC,iBAAiB,GAAG,sCAAsC,iBAAiB,GAAG,wCAAwC,iBAAiB,GAAG,sCAAsC,iBAAiB,GAAG;;AAEngB,uDAAuD,iCAAiC,GAAG,wCAAwC,2BAA2B,GAAG,sCAAsC,oDAAoD,GAAG,8CAA8C,mCAAmC,2CAA2C,gBAAgB,GAAG,0DAA0D,yCAAyC,2CAA2C,gBAAgB,GAAG,mDAAmD,sCAAsC,2CAA2C,gBAAgB,GAAG,uCAAuC,+BAA+B,sCAAsC,kCAAkC,aAAa;;AAEh2B,0CAA0C,6BAA6B,sBAAsB,mBAAmB,mBAAmB,wCAAwC,YAAY,yCAAyC,4BAA4B,4BAA4B,gBAAgB,aAAa,uCAAuC,uBAAuB,8BAA8B,kCAAkC,kDAAkD,yBAAyB,GAAG;;AAEjgB,gEAAgE;;AAEhE;;AAEA,kEAAkE,gEAAgE,gCAAgC,sBAAsB,yDAAyD,uFAAuF,4EAA4E,uCAAuC,GAAG;;AAE9b,mDAAmD,gCAAgC,gCAAgC,gCAAgC;;AAEnJ,uDAAuD,oDAAoD,GAAG;;AAE9G,+DAA+D,wCAAwC,2CAA2C,2BAA2B,GAAG;;AAEhL,yDAAyD,wCAAwC,sBAAsB,6DAA6D,uDAAuD,wCAAwC,6BAA6B,KAAK,OAAO,wDAAwD,oEAAoE,8DAA8D,wDAAwD,4CAA4C,KAAK,iDAAiD,GAAG;;AAEnpB,+EAA+E,8BAA8B,wBAAwB,2EAA2E,mEAAmE,kCAAkC,GAAG;;AAExT,iDAAiD,gDAAgD,GAAG;;AAEpG,6FAA6F,iCAAiC,4EAA4E,uDAAuD,8DAA8D,8DAA8D,0EAA0E,iCAAiC,gCAAgC,gCAAgC,uBAAuB,gDAAgD,yBAAyB,uBAAuB,wCAAwC,wCAAwC,wCAAwC,8CAA8C,8CAA8C,yCAAyC,+CAA+C,gEAAgE,gEAAgE,wCAAwC,iBAAiB,GAAG,4BAA4B,oDAAoD,GAAG,8BAA8B,sDAAsD,GAAG;;AAEjzC,0FAA0F,sDAAsD,8CAA8C,6CAA6C,2CAA2C,mCAAmC,oDAAoD,GAAG,4BAA4B,oDAAoD,GAAG,8BAA8B,sDAAsD,GAAG;;AAE1hB,yFAAyF,gCAAgC,2CAA2C,4EAA4E,GAAG,4BAA4B,qDAAqD,GAAG,8BAA8B,uDAAuD,GAAG;;AAE/Z,qDAAqD,aAAa,oDAAoD,oDAAoD,oDAAoD,eAAe,GAAG,6EAA6E,gCAAgC,0DAA0D,0CAA0C,0CAA0C,qDAAqD,mCAAmC,cAAc,GAAG,wDAAwD,0BAA0B,qDAAqD,GAAG,uEAAuE,4BAA4B,uBAAuB,4DAA4D,gDAAgD,oBAAoB,+FAA+F,4CAA4C,GAAG,iBAAiB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,IAAI,8HAA8H,oDAAoD,oDAAoD,uCAAuC,oEAAoE,gBAAgB,0CAA0C,kCAAkC,yDAAyD,qBAAqB,kDAAkD,kDAAkD,kDAAkD,kDAAkD,2CAA2C,2CAA2C,2CAA2C,2CAA2C,wCAAwC,6EAA6E,6EAA6E,6EAA6E,6EAA6E,mEAAmE,kBAAkB,GAAG,oBAAoB,2EAA2E,kBAAkB,sDAAsD,sDAAsD,sDAAsD,sDAAsD,kBAAkB,GAAG,sBAAsB,8EAA8E,kBAAkB,6DAA6D,2BAA2B,+CAA+C,6CAA6C,oCAAoC,uDAAuD,uDAAuD,uDAAuD,uDAAuD,kBAAkB,GAAG,cAAc,iCAAiC,iEAAiE,4EAA4E,oDAAoD,GAAG,oBAAoB,uCAAuC,iEAAiE,iDAAiD,+DAA+D,+BAA+B,gFAAgF,GAAG,8BAA8B,kDAAkD,mEAAmE,uEAAuE,sEAAsE,WAAW,6EAA6E,oEAAoE,yBAAyB,GAAG,6EAA6E,yDAAyD,GAAG,+EAA+E,uEAAuE,yBAAyB,GAAG,sCAAsC,uBAAuB,qCAAqC,0BAA0B,4BAA4B,4BAA4B,4BAA4B,4BAA4B,oMAAoM,sEAAsE,wBAAwB,kBAAkB,KAAK,sBAAsB,0BAA0B,+CAA+C,yDAAyD,iDAAiD,oEAAoE,eAAe,oDAAoD,4BAA4B,4BAA4B,KAAK,KAAK,oBAAoB,0BAA0B,mDAAmD,6DAA6D,iDAAiD,oEAAoE,eAAe,kDAAkD,4BAA4B,6BAA6B,KAAK,6BAA6B,6CAA6C,6BAA6B,mDAAmD,kEAAkE,qEAAqE,0EAA0E,gBAAgB,GAAG,6EAA6E,gBAAgB,sCAAsC,sBAAsB,gDAAgD,iBAAiB,wCAAwC,wCAAwC,wCAAwC,wBAAwB,oCAAoC,oCAAoC,oCAAoC,kBAAkB,mBAAmB,mBAAmB,eAAe,4BAA4B,4BAA4B,4BAA4B,iDAAiD,2BAA2B,yCAAyC,sBAAsB,2CAA2C,2CAA2C,sCAAsC,sCAAsC,oBAAoB,2BAA2B,4CAA4C,4CAA4C,OAAO,iBAAiB,wCAAwC,wCAAwC,OAAO,sBAAsB,sBAAsB,0BAA0B,0BAA0B,KAAK,aAAa,4BAA4B,4BAA4B,oBAAoB,oBAAoB,KAAK,4BAA4B,0CAA0C,0BAA0B,8BAA8B,8BAA8B,8BAA8B,8BAA8B,eAAe,eAAe,qBAAqB,yDAAyD,+DAA+D,mBAAmB,kDAAkD,uBAAuB,uBAAuB,uBAAuB,kEAAkE,mCAAmC,6BAA6B,+BAA+B,8BAA8B,8BAA8B,gFAAgF,gCAAgC,0DAA0D,0CAA0C,qDAAqD,iCAAiC,uDAAuD,4BAA4B,GAAG,+BAA+B,wFAAwF,GAAG,+BAA+B,wFAAwF,GAAG,iCAAiC,kFAAkF,qCAAqC,GAAG,oCAAoC,iDAAiD,+EAA+E,4CAA4C,+GAA+G,GAAG,uDAAuD,sCAAsC,iFAAiF,GAAG,gCAAgC,mDAAmD,GAAG,oDAAoD,qDAAqD,GAAG,+DAA+D,sCAAsC,iFAAiF,GAAG,gCAAgC,mDAAmD,GAAG,oDAAoD,qDAAqD,GAAG,0CAA0C,mDAAmD,GAAG,sDAAsD,qDAAqD,GAAG;;AAExgV,4DAA4D,oCAAoC,+DAA+D,+BAA+B,GAAG,oDAAoD,oEAAoE,iCAAiC,0BAA0B,uDAAuD,yFAAyF,0EAA0E,0CAA0C,GAAG;;AAE3nB,iDAAiD,mJAAmJ,6CAA6C,GAAG,6CAA6C,mCAAmC,GAAG,kCAAkC,6BAA6B,kCAAkC,6BAA6B,kCAAkC,4BAA4B,6BAA6B,8BAA8B,wDAAwD,uCAAuC,0DAA0D,4DAA4D,gEAAgE,+CAA+C,8EAA8E,oCAAoC,gEAAgE,kCAAkC,+DAA+D,sDAAsD,4EAA4E,uEAAuE,uBAAuB,gFAAgF,mFAAmF,+EAA+E,wHAAwH,wCAAwC,iHAAiH,0CAA0C,kBAAkB,GAAG;;AAEv7D,8FAA8F,4BAA4B,uGAAuG,kHAAkH,2CAA2C,8CAA8C,8FAA8F,kDAAkD,kDAAkD,kDAAkD,qFAAqF,kDAAkD,kDAAkD,kDAAkD,uGAAuG,8DAA8D,8BAA8B,2DAA2D,GAAG;;AAE5oC,uFAAuF,kDAAkD,uCAAuC,wBAAwB,0BAA0B,+CAA+C,GAAG,gDAAgD,sGAAsG,8GAA8G,oDAAoD,8BAA8B,aAAa;;AAEvnB,4CAA4C,qFAAqF,oDAAoD,GAAG;;AAExL,wDAAwD,mCAAmC,oBAAoB,qEAAqE,mFAAmF,4CAA4C,iCAAiC,GAAG;;AAEvV,4DAA4D,oBAAoB,qEAAqE,4CAA4C,iCAAiC,GAAG;;AAErO,0CAA0C,wFAAwF,oDAAoD,GAAG;;AAEzL,yCAAyC,yCAAyC,GAAG;;AAErF,iDAAiD,gBAAgB,oCAAoC,+DAA+D,kBAAkB,GAAG;;AAEzL,kDAAkD,gCAAgC,GAAG;;AAErF,kEAAkE,kEAAkE,6BAA6B,iBAAiB,kDAAkD,oFAAoF,8EAA8E,aAAa;;AAEnZ,8CAA8C;;AAE9C,iDAAiD;;AAEjD,uDAAuD,0BAA0B;;AAEjF,0CAA0C,6BAA6B,sBAAsB,2BAA2B,8BAA8B,GAAG,+BAA+B,0CAA0C,2BAA2B,sFAAsF,4CAA4C,yBAAyB,iBAAiB,GAAG,mBAAmB,+BAA+B,0BAA0B,aAAa,oBAAoB,kCAAkC,KAAK,sBAAsB,kCAAkC,KAAK,sBAAsB,gCAAgC,KAAK,sBAAsB,kCAAkC,KAAK,sBAAsB,iCAAiC,KAAK,OAAO,mCAAmC,KAAK,4CAA4C,iEAAiE,GAAG;;AAEh9B,wCAAwC,2BAA2B,mBAAmB,2CAA2C,GAAG;;AAEpI,mDAAmD,kFAAkF,4EAA4E,0EAA0E,+BAA+B,eAAe,GAAG;;AAE5U,qDAAqD,kFAAkF,4EAA4E,0EAA0E,gBAAgB,+BAA+B,eAAe,GAAG;;AAE9V,uDAAuD,yCAAyC,sBAAsB,mDAAmD,yDAAyD,wDAAwD,qCAAqC,uBAAuB,oDAAoD,GAAG;;AAE7Y,mDAAmD,6BAA6B,+BAA+B,gCAAgC,gCAAgC,yEAAyE,kCAAkC,0BAA0B,2BAA2B,8BAA8B,GAAG,+EAA+E,uGAAuG,2CAA2C,iBAAiB,GAAG,2BAA2B,+DAA+D,2EAA2E,0BAA0B,mCAAmC,kCAAkC,8BAA8B;;AAEv4B,mDAAmD,yBAAyB,iCAAiC,mCAAmC,yBAAyB,GAAG,2BAA2B,8BAA8B,GAAG,oDAAoD,sGAAsG,GAAG,gEAAgE,+BAA+B,iDAAiD,0CAA0C,yCAAyC,yCAAyC,qCAAqC,wBAAwB,GAAG,iEAAiE,6BAA6B,6BAA6B,+BAA+B,kBAAkB,sBAAsB,GAAG,oDAAoD,8FAA8F,wGAAwG,yBAAyB,GAAG,qDAAqD,8DAA8D,eAAe,GAAG,8BAA8B,wBAAwB,mCAAmC,GAAG,mBAAmB,gDAAgD,4CAA4C,kDAAkD,qFAAqF,oCAAoC,kBAAkB,2DAA2D,2EAA2E,sCAAsC,wFAAwF,kCAAkC,6DAA6D,kBAAkB,wEAAwE,2BAA2B,gCAAgC,gCAAgC,8EAA8E,6IAA6I,0HAA0H,qCAAqC,sCAAsC,mBAAmB;;AAEpoF,2IAA2I;;AAE3I,gJAAgJ;;AAEhJ,iDAAiD,sCAAsC,+FAA+F,KAAK,OAAO,sEAAsE,KAAK,uEAAuE,oEAAoE,2BAA2B,mDAAmD,kDAAkD;;AAExhB,uDAAuD,wDAAwD,yDAAyD,oBAAoB,qBAAqB,qDAAqD,0BAA0B,oBAAoB,GAAG;;AAEvT,wFAAwF,8BAA8B,uBAAuB,gCAAgC,mCAAmC,GAAG,sCAAsC,2EAA2E,GAAG,4BAA4B,0DAA0D,0DAA0D,0DAA0D,0DAA0D,yFAAyF,gEAAgE,qBAAqB,yCAAyC,2CAA2C,0BAA0B,mCAAmC,4EAA4E,oCAAoC,6DAA6D,GAAG;;AAE1jC,kDAAkD,6BAA6B,iEAAiE,KAAK,OAAO,2CAA2C,KAAK,GAAG;;AAE/M,wDAAwD,4BAA4B,iCAAiC,oCAAoC,qBAAqB,+CAA+C,eAAe,GAAG,mCAAmC,0DAA0D,qBAAqB,8DAA8D,eAAe,GAAG,sBAAsB,kDAAkD,qCAAqC,2CAA2C,4EAA4E,oCAAoC,iEAAiE,+BAA+B,4EAA4E,KAAK,iCAAiC,4EAA4E,KAAK,iCAAiC,mDAAmD,KAAK,OAAO,8CAA8C,KAAK,GAAG;;AAElnC,uDAAuD,kCAAkC,0DAA0D,oCAAoC,2BAA2B,+DAA+D,mEAAmE,wEAAwE,wEAAwE,wEAAwE,+DAA+D,oCAAoC,WAAW,oEAAoE,iDAAiD,GAAG;;AAElxB,6CAA6C,GAAG;;AAEhD,gDAAgD,wCAAwC,uCAAuC,uCAAuC,uCAAuC,uCAAuC,+CAA+C,4BAA4B,8EAA8E,wGAAwG,wCAAwC,gCAAgC,gCAAgC,gCAAgC,aAAa,aAAa,gBAAgB,cAAc,eAAe,gBAAgB,cAAc,cAAc,iBAAiB,eAAe,gBAAgB;;AAEhyB,+DAA+D,oEAAoE,qBAAqB,KAAK;;AAE7J,yEAAyE;;AAEzE,6DAA6D,oEAAoE,oBAAoB,KAAK,0CAA0C;;AAEpM,gEAAgE,4CAA4C,0DAA0D,2CAA2C,oDAAoD,uFAAuF,0EAA0E,+CAA+C,WAAW,oEAAoE,uEAAuE,GAAG;;AAE9mB,wDAAwD,8BAA8B,GAAG,kCAAkC,yBAAyB,iCAAiC,mCAAmC,yBAAyB,GAAG,gEAAgE,gCAAgC,kDAAkD,4CAA4C,yCAAyC,yCAAyC,qCAAqC,gCAAgC,GAAG,4EAA4E,0CAA0C,iCAAiC,uGAAuG,GAAG,mBAAmB,+CAA+C,sBAAsB,iCAAiC,mDAAmD,sDAAsD,6BAA6B,sDAAsD,0BAA0B,qBAAqB,kBAAkB,uFAAuF,gFAAgF,2EAA2E,8BAA8B,mCAAmC,8EAA8E,uCAAuC,0CAA0C,wDAAwD,4EAA4E,4EAA4E,6DAA6D,kCAAkC,8GAA8G,+FAA+F,wGAAwG,4FAA4F,8EAA8E,qDAAqD,wGAAwG,6FAA6F,4CAA4C,0CAA0C;;AAEnvF,2EAA2E,mDAAmD;;AAE9H,wDAAwD,oDAAoD,oDAAoD;;AAEhK,sEAAsE,8CAA8C;;AAEpH,uDAAuD;;AAEvD,0DAA0D,sCAAsC,sCAAsC,uCAAuC,+HAA+H,qCAAqC,4BAA4B,mEAAmE,qCAAqC,kCAAkC,6BAA6B,yBAAyB,wBAAwB,qBAAqB,iEAAiE,2CAA2C,uCAAuC,uCAAuC,uCAAuC,0BAA0B,kCAAkC,kEAAkE,6BAA6B,6BAA6B,+BAA+B,kBAAkB,sBAAsB,GAAG,qDAAqD,6FAA6F,eAAe,GAAG,sDAAsD,8DAA8D,eAAe,GAAG,oBAAoB,+CAA+C,6BAA6B,4CAA4C,8FAA8F,2CAA2C,kDAAkD,qFAAqF,2DAA2D,uEAAuE,6BAA6B,oHAAoH,6GAA6G,2BAA2B,2CAA2C,sCAAsC,iDAAiD;;AAEhyE,+EAA+E,4BAA4B,8DAA8D;;AAEzK,4EAA4E,oDAAoD;;AAEhI,2CAA2C,uBAAuB,kCAAkC,gCAAgC,GAAG;;AAEvI,0DAA0D,4BAA4B,gFAAgF,2EAA2E;;AAEjP,iEAAiE,qCAAqC,2BAA2B,2BAA2B;;AAE5J,2DAA2D,8CAA8C,6CAA6C,4BAA4B,6BAA6B,kCAAkC,mEAAmE,sDAAsD,gCAAgC,gCAAgC,wBAAwB,0BAA0B,iEAAiE,wGAAwG,kDAAkD,uCAAuC,uCAAuC,uCAAuC,yEAAyE,0CAA0C,aAAa,aAAa,gBAAgB,cAAc,eAAe;;AAEt+B,qEAAqE,6CAA6C;;AAElH,qOAAqO,iBAAiB;;AAEtP,0FAA0F;;AAE1F,uDAAuD,0DAA0D,0DAA0D,mCAAmC;;AAE9M,qFAAqF;;AAErF,uHAAuH,0CAA0C;;AAEjK,yEAAyE;;AAEzE,+DAA+D,iCAAiC,uEAAuE,mBAAmB;;AAE1L,4DAA4D;;AAE5D,4DAA4D,yCAAyC,gCAAgC,wEAAwE,uEAAuE,2DAA2D;;AAE/U,uIAAuI,iHAAiH;;AAExP,6DAA6D,uCAAuC,kEAAkE,uCAAuC,qDAAqD;;AAElQ,yCAAyC,sCAAsC,GAAG;;AAElF,kDAAkD,+BAA+B,kFAAkF,4EAA4E,0EAA0E,+BAA+B,eAAe,GAAG,mBAAmB,6CAA6C,sDAAsD,mCAAmC,GAAG;;AAEtgB,6CAA6C,6BAA6B,sBAAsB,2BAA2B,8BAA8B,GAAG,sBAAsB,yEAAyE,GAAG,oCAAoC,gFAAgF,gCAAgC,sCAAsC,qDAAqD,8EAA8E,mEAAmE,GAAG,oFAAoF,gCAAgC,4DAA4D,qDAAqD,8EAA8E,gCAAgC,GAAG,iCAAiC,gCAAgC,6BAA6B,iDAAiD,iDAAiD,2BAA2B,GAAG,+BAA+B,iBAAiB,4CAA4C,6BAA6B,8FAA8F,gDAAgD,6BAA6B,mBAAmB,GAAG,mBAAmB,+BAA+B,yCAAyC,iEAAiE,KAAK,0BAA0B,aAAa,oBAAoB,kCAAkC,KAAK,sBAAsB,kCAAkC,KAAK,sBAAsB,gCAAgC,KAAK,sBAAsB,kCAAkC,KAAK,sBAAsB,iCAAiC,KAAK,OAAO,mCAAmC,KAAK,qDAAqD,2BAA2B,oCAAoC,cAAc,gBAAgB,WAAW,OAAO,iCAAiC,iCAAiC,yCAAyC,sGAAsG,8CAA8C,KAAK,4BAA4B,wEAAwE,GAAG;;AAEjiF,qCAAqC,yDAAyD,GAAG;;AAEjG,0CAA0C,wDAAwD,uDAAuD,sEAAsE,qEAAqE,6EAA6E,oGAAoG,gDAAgD,GAAG;;AAExgB,sFAAsF,0BAA0B,mGAAmG,GAAG;;AAEtN,6DAA6D,sCAAsC,0DAA0D,yDAAyD,sDAAsD,sEAAsE,GAAG,wBAAwB,uFAAuF,GAAG;;AAEvc,gEAAgE,sCAAsC,yCAAyC,cAAc,mCAAmC,sBAAsB,iCAAiC,2BAA2B,6CAA6C,2BAA2B,kCAAkC,0BAA0B,iCAAiC,6CAA6C,sDAAsD,gDAAgD,gCAAgC,cAAc,GAAG,0DAA0D,wDAAwD,8BAA8B,qDAAqD,4DAA4D,4CAA4C,8BAA8B,yBAAyB,sDAAsD,kDAAkD,mDAAmD,4BAA4B,+EAA+E,8BAA8B,+EAA+E,wCAAwC,oCAAoC,gBAAgB,GAAG,wBAAwB,uFAAuF,GAAG;;AAEniD,sFAAsF,mDAAmD,mDAAmD,mDAAmD,kDAAkD,kFAAkF,8CAA8C,0DAA0D,0CAA0C,iDAAiD,uCAAuC,6FAA6F,4FAA4F,4FAA4F,4FAA4F,4FAA4F,4FAA4F,mDAAmD,gBAAgB,gBAAgB,qBAAqB,kBAAkB,kBAAkB,KAAK,uBAAuB,kBAAkB,kBAAkB,KAAK,uBAAuB,kBAAkB,kBAAkB,KAAK,uBAAuB,kBAAkB,kBAAkB,KAAK,OAAO,kBAAkB,kBAAkB,KAAK,sDAAsD,sDAAsD,GAAG,wBAAwB,uFAAuF,GAAG;;AAExuD,wKAAwK,8CAA8C,0DAA0D,mDAAmD,kEAAkE,yDAAyD,gIAAgI,gBAAgB,GAAG,wBAAwB,uFAAuF,GAAG;;AAEnsB,4FAA4F,8CAA8C,sCAAsC,0DAA0D,wDAAwD,8FAA8F,6CAA6C,gEAAgE,GAAG,wBAAwB,uFAAuF,GAAG;;AAElmB,kEAAkE,sCAAsC,0DAA0D,6BAA6B,+CAA+C,gEAAgE,GAAG,wBAAwB,uFAAuF,GAAG;;AAEna,iFAAiF,uDAAuD,oCAAoC,gDAAgD,iEAAiE,mBAAmB,GAAG,wBAAwB,yBAAyB,4BAA4B,4BAA4B,yEAAyE,oBAAoB,uFAAuF,oBAAoB,uBAAuB,GAAG;;AAE9nB,wCAAwC,8BAA8B,iCAAiC,sBAAsB,sBAAsB,iBAAiB,EAAE,yBAAyB,iBAAiB,EAAE,+BAA+B,iBAAiB,EAAE,+BAA+B,iBAAiB,EAAE,+BAA+B,2BAA2B,8BAA8B,GAAG,kCAAkC,sBAAsB,GAAG,kCAAkC,6BAA6B,GAAG,iCAAiC,sCAAsC,GAAG,iCAAiC,+DAA+D,GAAG,8BAA8B,2CAA2C,yBAAyB,GAAG,gCAAgC,gBAAgB,4CAA4C,4BAA4B,0FAA0F,8CAA8C,2BAA2B,kBAAkB,GAAG,gCAAgC,0BAA0B,iCAAiC,KAAK,OAAO,6DAA6D,KAAK,GAAG,gCAAgC,0DAA0D,yBAAyB,8BAA8B,KAAK,OAAO,mCAAmC,6DAA6D,KAAK,GAAG,4CAA4C,wBAAwB,2BAA2B,iDAAiD,wBAAwB,wBAAwB,wBAAwB,OAAO,6BAA6B,wBAAwB,wBAAwB,OAAO,OAAO,wBAAwB,wBAAwB,OAAO,KAAK,eAAe,GAAG,8BAA8B,wDAAwD,GAAG,+BAA+B,6FAA6F,GAAG,iCAAiC,gEAAgE,GAAG,iCAAiC,4CAA4C,GAAG,gCAAgC,4EAA4E,GAAG,gCAAgC,6CAA6C,GAAG,+BAA+B,kEAAkE,GAAG,8BAA8B,+BAA+B,8BAA8B,aAAa,sBAAsB,kCAAkC,KAAK,wBAAwB,kCAAkC,KAAK,wBAAwB,gCAAgC,KAAK,wBAAwB,kCAAkC,KAAK,wBAAwB,iCAAiC,KAAK,OAAO,mCAAmC,KAAK,oEAAoE,GAAG,iCAAiC,gCAAgC,6BAA6B,iDAAiD,iDAAiD,2BAA2B,GAAG,qCAAqC,gDAAgD,yBAAyB,yBAAyB,GAAG,oBAAoB,+BAA+B,+BAA+B,uFAAuF,GAAG,sDAAsD,gCAAgC,4DAA4D,qDAAqD,oEAAoE,GAAG,oBAAoB,2BAA2B,kEAAkE,KAAK,OAAO,4CAA4C,4BAA4B,4BAA4B,iDAAiD,8BAA8B,uBAAuB,OAAO,OAAO,yBAAyB,OAAO,OAAO,0JAA0J,SAAS,OAAO,+CAA+C,KAAK,GAAG,oBAAoB,6BAA6B,8CAA8C,4BAA4B,iBAAiB,eAAe,OAAO,4DAA4D,uEAAuE,8CAA8C,KAAK,oDAAoD,GAAG,mBAAmB,kCAAkC,GAAG;;AAEl5J,2CAA2C,2CAA2C,yBAAyB,GAAG,8CAA8C,0CAA0C,GAAG,mDAAmD,6CAA6C,GAAG;;AAEhT,kDAAkD,mEAAmE,2EAA2E,iFAAiF,qDAAqD,sBAAsB,yDAAyD,GAAG,sFAAsF,uGAAuG,oCAAoC,GAAG,uDAAuD,sFAAsF,4EAA4E,aAAa,sDAAsD,+CAA+C,oCAAoC,GAAG,0CAA0C,6CAA6C,GAAG;;AAExkC,wEAAwE,yCAAyC,uIAAuI,iCAAiC,qBAAqB,GAAG;;AAEjT,kGAAkG,wDAAwD,uDAAuD,yFAAyF,aAAa,8EAA8E,kDAAkD,4BAA4B,iCAAiC,yDAAyD,yFAAyF,aAAa,kEAAkE,iEAAiE,GAAG,kEAAkE,iEAAiE,GAAG,8EAA8E,wEAAwE,uIAAuI,2DAA2D,GAAG,8EAA8E,2HAA2H,2DAA2D,GAAG;;AAEjgD,6DAA6D,4CAA4C,0CAA0C,2BAA2B,GAAG,8EAA8E,kDAAkD,4BAA4B,GAAG,8EAA8E,kDAAkD,4BAA4B,GAAG,kEAAkE,iEAAiE,GAAG,kEAAkE,iEAAiE,GAAG,8EAA8E,wEAAwE,2HAA2H,2DAA2D,GAAG,8EAA8E,+GAA+G,2DAA2D,GAAG;;AAEr0C,qHAAqH,kDAAkD,6BAA6B,+BAA+B,GAAG,qFAAqF,wEAAwE,uIAAuI,kEAAkE,GAAG,yEAAyE,wEAAwE,GAAG;;AAEnuB,0HAA0H,iDAAiD,wDAAwD,GAAG,+EAA+E,sGAAsG,GAAG,mFAAmF,4IAA4I,GAAG;;AAEhoB,2HAA2H,uCAAuC,iCAAiC,6CAA6C,kEAAkE,kEAAkE,+DAA+D,4CAA4C,kCAAkC,kCAAkC,qCAAqC,wDAAwD,GAAG,+EAA+E,sGAAsG,GAAG,mFAAmF,4IAA4I,GAAG;;AAE7hC,yDAAyD,2CAA2C,GAAG,+EAA+E,uGAAuG,oCAAoC,GAAG,4FAA4F,6BAA6B,+CAA+C,kDAAkD,mCAAmC,uCAAuC,uCAAuC,yBAAyB,gCAAgC,oBAAoB,gCAAgC,gCAAgC,qCAAqC,6BAA6B,gCAAgC,gCAAgC,qCAAqC,6BAA6B,2CAA2C,2CAA2C,2CAA2C,2CAA2C,2DAA2D,2DAA2D,2DAA2D,2DAA2D,uBAAuB,eAAe,GAAG,uEAAuE,qDAAqD,GAAG,2EAA2E,yDAAyD,GAAG,4FAA4F,sBAAsB,oCAAoC,uCAAuC,iEAAiE,iEAAiE,iEAAiE,oEAAoE,+EAA+E,+EAA+E,sBAAsB,oFAAoF,oFAAoF,oFAAoF,oFAAoF,mDAAmD,GAAG,kEAAkE,oCAAoC,yCAAyC,yBAAyB,wBAAwB,qBAAqB,2FAA2F,2FAA2F,2FAA2F,2FAA2F,0EAA0E,2FAA2F,2FAA2F,2FAA2F,2FAA2F,mEAAmE,GAAG,iEAAiE,qDAAqD,GAAG,qEAAqE,yDAAyD,GAAG,qFAAqF,6BAA6B,yBAAyB,kCAAkC,kCAAkC,iCAAiC,qDAAqD,+BAA+B,+BAA+B,6BAA6B,KAAK,uDAAuD,+BAA+B,+BAA+B,6BAA6B,KAAK,wFAAwF,wDAAwD,wDAAwD,wBAAwB,wBAAwB,uBAAuB,uBAAuB,sBAAsB,qBAAqB,4EAA4E,sEAAsE,4EAA4E,sEAAsE,gEAAgE,sEAAsE,4EAA4E,sEAAsE,4EAA4E,uEAAuE,+DAA+D,+DAA+D,+DAA+D,kEAAkE,wDAAwD,+EAA+E,+EAA+E,sBAAsB,oFAAoF,oFAAoF,oFAAoF,oFAAoF,yDAAyD,GAAG,wEAAwE,gEAAgE,GAAG;;AAE1hN,kGAAkG,6BAA6B,+CAA+C,kDAAkD,mCAAmC,uCAAuC,uCAAuC,yBAAyB,gCAAgC,gCAAgC,oBAAoB,gCAAgC,2CAA2C,+BAA+B,6BAA6B,gCAAgC,oBAAoB,gCAAgC,2CAA2C,+BAA+B,6BAA6B,oBAAoB,2CAA2C,2CAA2C,2CAA2C,2CAA2C,2CAA2C,2CAA2C,2DAA2D,2DAA2D,2DAA2D,2DAA2D,2DAA2D,2DAA2D,2DAA2D,2DAA2D,2DAA2D,wBAAwB,iCAAiC,wBAAwB,eAAe,GAAG,uEAAuE,qDAAqD,GAAG,2EAA2E,yDAAyD,GAAG;;AAEl5D,qGAAqG,qCAAqC,uDAAuD,qDAAqD,GAAG;;AAEzP,4MAA4M,qCAAqC,uDAAuD,yFAAyF,+DAA+D,GAAG;;AAEnc,gFAAgF,4BAA4B,mCAAmC,iDAAiD,iEAAiE,GAAG,gCAAgC,mCAAmC,GAAG,uGAAuG,uCAAuC,uEAAuE,8CAA8C,GAAG,+EAA+E,iGAAiG,GAAG,mFAAmF,uIAAuI,GAAG;;AAEh+B,qGAAqG,qCAAqC,qCAAqC,wCAAwC,8CAA8C,sGAAsG,GAAG;;AAE9W,qEAAqE,uCAAuC,GAAG,uDAAuD,uCAAuC,GAAG,wGAAwG,yDAAyD,0CAA0C,+BAA+B,iDAAiD,6DAA6D,4CAA4C,GAAG,6EAA6E,sBAAsB,0CAA0C,iFAAiF,4BAA4B,wDAAwD,iDAAiD,2EAA2E,GAAG;;AAExgC,4DAA4D,2CAA2C,wCAAwC,wCAAwC,8CAA8C,8CAA8C,6HAA6H,GAAG;;AAEnZ,0DAA0D,0CAA0C,mCAAmC,wCAAwC,sBAAsB,qCAAqC,qCAAqC,4BAA4B,8CAA8C,uBAAuB,kEAAkE,kEAAkE,kEAAkE,6HAA6H,GAAG;;AAEtrB,sDAAsD,oCAAoC,2CAA2C,+EAA+E,mCAAmC,yCAAyC,yCAAyC,GAAG,oEAAoE,oBAAoB,yCAAyC,oBAAoB,yCAAyC,oBAAoB,yCAAyC,oBAAoB,yCAAyC,gFAAgF,gFAAgF,gFAAgF,wCAAwC,+HAA+H,GAAG;;AAE9hC,oDAAoD,oCAAoC,0CAA0C,mCAAmC,+EAA+E,sBAAsB,qCAAqC,qCAAqC,4BAA4B,8CAA8C,uBAAuB,6DAA6D,6DAA6D,6DAA6D,GAAG,oEAAoE,oBAAoB,yCAAyC,oBAAoB,yCAAyC,oBAAoB,yCAAyC,oBAAoB,yCAAyC,gFAAgF,gFAAgF,gFAAgF,wCAAwC,+HAA+H,GAAG;;AAEj0C,uCAAuC,sCAAsC,mBAAmB,oEAAoE,GAAG;;AAEvK,0CAA0C,mEAAmE,+CAA+C,wBAAwB,mBAAmB,4BAA4B,+CAA+C,wEAAwE,4CAA4C,yBAAyB,GAAG;;AAEla,0CAA0C,sCAAsC,8DAA8D,2BAA2B,uEAAuE,6BAA6B,wDAAwD,qHAAqH,2BAA2B,sCAAsC,oCAAoC,GAAG;;AAEliB,sDAAsD,sCAAsC,wEAAwE,wDAAwD,2DAA2D,wCAAwC,wCAAwC,wCAAwC,eAAe,GAAG,mBAAmB,yFAAyF,2BAA2B,sCAAsC,oCAAoC,GAAG;;AAErnB,mEAAmE,mEAAmE,iCAAiC,6BAA6B,yDAAyD,2FAA2F,6EAA6E,aAAa;;AAElb,iEAAiE,iBAAiB,GAAG;;AAErF,oEAAoE,oDAAoD,uDAAuD,yDAAyD,GAAG;;AAE3O,wEAAwE,oDAAoD,uDAAuD,2BAA2B,GAAG;;AAEjN,8GAA8G,wDAAwD,0EAA0E,GAAG;;AAEnP,iCAAiC,4BAA4B,6BAA6B,0BAA0B,2BAA2B,kDAAkD,2BAA2B;;AAE5N,iCAAiC,gCAAgC;;AAEjE,gDAAgD;;AAEhD,4EAA4E,8FAA8F,wDAAwD,wEAAwE;;AAE1S,kDAAkD,4BAA4B,iCAAiC,oDAAoD;;AAEnK,6CAA6C,yDAAyD,GAAG,sBAAsB,yDAAyD,GAAG,2BAA2B,oDAAoD,GAAG;;AAE7Q,6BAA6B,wFAAwF,GAAG;;AAExH,yCAAyC,kBAAkB,kCAAkC,kCAAkC,2BAA2B,2BAA2B,gDAAgD,gDAAgD,iDAAiD,iDAAiD,2DAA2D,0DAA0D,GAAG;;AAE/e,iCAAiC,uDAAuD,GAAG;;AAE3F,wCAAwC,oDAAoD,sCAAsC,2BAA2B,gFAAgF,yCAAyC,6CAA6C,mCAAmC,OAAO,8CAA8C,6CAA6C,mCAAmC,OAAO,8CAA8C,6CAA6C,mCAAmC,OAAO,KAAK,uEAAuE,GAAG;;AAEtsB,iDAAiD,4BAA4B,oBAAoB,oBAAoB,oBAAoB,oBAAoB,oBAAoB,8BAA8B,0CAA0C,GAAG;;AAE5P,kDAAkD,8HAA8H,wIAAwI,6BAA6B,+CAA+C,uDAAuD,iBAAiB,GAAG,4BAA4B,sBAAsB,iCAAiC,gCAAgC,kCAAkC,mCAAmC,iBAAiB,GAAG;;AAE3pB,kDAAkD,wBAAwB,wBAAwB,wBAAwB,wBAAwB,wBAAwB,wBAAwB,yBAAyB,kCAAkC,oDAAoD,GAAG,4BAA4B,gDAAgD,2DAA2D,+BAA+B,iBAAiB,GAAG;;AAE9e,iDAAiD,4BAA4B,sBAAsB,sEAAsE,2BAA2B,mDAAmD,yIAAyI,GAAG;;AAEnY,mDAAmD,4BAA4B,4BAA4B,GAAG;;AAE9G,oDAAoD,iBAAiB,GAAG;;AAExE,+DAA+D,wDAAwD,+BAA+B,uEAAuE,gCAAgC,qCAAqC,2CAA2C,8CAA8C,0DAA0D,+DAA+D,oFAAoF,GAAG,2FAA2F,iCAAiC,oEAAoE,uGAAuG,6GAA6G,iCAAiC,aAAa,sBAAsB,oCAAoC,oCAAoC,mDAAmD,8EAA8E,+EAA+E,sHAAsH,wEAAwE,wBAAwB,4BAA4B,0GAA0G,oDAAoD,oDAAoD,oDAAoD,uFAAuF,oDAAoD,oDAAoD,oDAAoD,yGAAyG,6DAA6D,yBAAyB,6DAA6D,mDAAmD,oCAAoC,mBAAmB,kFAAkF,oDAAoD,sDAAsD,4EAA4E,mCAAmC,uCAAuC,mCAAmC,8CAA8C,yCAAyC,GAAG,2BAA2B,sBAAsB,GAAG;;AAE/4F,uDAAuD,4BAA4B,qCAAqC,kBAAkB,oBAAoB;;AAE9J,gDAAgD,iCAAiC,8EAA8E,+EAA+E,6GAA6G,yBAAyB,0CAA0C,gCAAgC,cAAc,GAAG,wBAAwB,4BAA4B,GAAG;;AAEtgB,6BAA6B,4BAA4B,GAAG;;AAE5D,qCAAqC,sDAAsD,GAAG;;AAE9F,sFAAsF,gCAAgC,wCAAwC,GAAG;;AAEjwDAAwD;;AAExD;AACA,4EAA4E;AAC5E;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,yCAAyC;AACzC,iCAAiC;AACjC;;AAEA;AACA,6CAA6C;AAC7C,+BAA+B;AAC/B;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA,0FAA0F;AAC1F;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC,IAAI;AACJ,iCAAiC;AACjC;;AAEA;AACA,+BAA+B;AAC/B,kDAAkD;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;;AAEA;;AAEA;AACA,qCAAqC;AACrC,IAAI;AACJ,qCAAqC;AACrC;;AAEA;AACA,mEAAmE;AACnE;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,iDAAiD;AACjD,KAAK;AACL;AACA,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,iEAAiE;AACjE,sEAAsE;AACtE,mEAAmE;AACnE,8DAA8D;AAC9D,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;AACA,uCAAuC;AACvC,KAAK;AACL,4CAA4C;AAC5C;;AAEA,4CAA4C;AAC5C;;AAEA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA,sEAAsE;AACtE;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB;AACpB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,cAAc,kBAAkB;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,2BAA2B;AAC1C;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA,uDAAuD;AACvD,uIAAuI;AACvI;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA,uEAAuE;AACvE,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,2BAA2B;AAC1C;;AAEA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,qHAAqH;AACrH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA,kCAAkC;AAClC;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,wCAAwC;AACxC;AACA,sFAAsF;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C,+CAA+C;AAC/C,KAAK;AACL;AACA,yDAAyD;AACzD;;AAEA;AACA;;AAEA;AACA,+EAA+E;AAC/E,MAAM;AACN,+EAA+E;AAC/E;;AAEA,mHAAmH;AACnH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oGAAoG;;AAEpG;AACA,iCAAiC;AACjC;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B,kCAAkC;AAClC;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kCAAkC;AAClC;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B,kCAAkC;AAClC;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,yCAAyC;AACzC,yCAAyC;AACzC;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,6CAA6C;AAC7C,gDAAgD;AAChD,iCAAiC;AACjC,2DAA2D;AAC3D,2BAA2B;AAC3B,eAAe;AACf;;AAEA;;AAEA;AACA,6BAA6B;AAC7B,kCAAkC;AAClC;;AAEA;;AAEA;AACA,+FAA+F;AAC/F,KAAK;AACL,6CAA6C;AAC7C;;AAEA;AACA;AACA,yDAAyD,2CAA2C;AACpG,iHAAiH;AACjH,iDAAiD;AACjD,MAAM;AACN,iDAAiD;AACjD;AACA,KAAK;AACL,yCAAyC;AACzC,KAAK;AACL,sFAAsF;AACtF,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD;;AAEA;;AAEA,cAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,+CAA+C;;AAE/C;AACA,oDAAoD;AACpD,KAAK;AACL,mDAAmD;AACnD,kDAAkD;;AAElD;AACA,qDAAqD;AACrD,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;;AAEA,oDAAoD;AACpD,qDAAqD;AACrD;;AAEA;AACA,uDAAuD;;AAEvD;AACA,wDAAwD;AACxD,MAAM;AACN,wDAAwD;AACxD;;AAEA;AACA,4DAA4D;AAC5D,MAAM;AACN;AACA,iEAAiE;AACjE,OAAO;AACP,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0DAA0D;AAC1D,6DAA6D;AAC7D,qGAAqG;AACrG;AACA,MAAM;AACN;AACA,wDAAwD;AACxD,6DAA6D;AAC7D,qGAAqG;;AAErG;AACA,0DAA0D;AAC1D,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6EAA6E;;AAE7E;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;;AAEA;AACA;AACA;AACA,qJAAqJ;AACrJ,MAAM;AACN,sDAAsD;AACtD;AACA,KAAK;AACL;AACA,0IAA0I;AAC1I,MAAM;AACN,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,uIAAuI;AACvI,0IAA0I;AAC1I,MAAM;AACN,uCAAuC;AACvC,yCAAyC;AACzC;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B;AAC5B,IAAI;AACJ;AACA;AACA,KAAK;AACL,6BAA6B;;AAE7B;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B;;AAE5B;AACA,yBAAyB;AACzB;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA,6BAA6B;;AAE7B;AACA,mCAAmC;AACnC;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA,0BAA0B;;AAE1B;AACA,8BAA8B;AAC9B,wCAAwC;AACxC,oCAAoC;AACpC;;AAEA;AACA,gCAAgC;AAChC,yDAAyD;;AAEzD;AACA;AACA,kDAAkD;AAClD;AACA,oDAAoD;AACpD;AACA;AACA;;AAEA,0DAA0D;AAC1D;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA,gCAAgC;AAChC;;AAEA;AACA,kDAAkD;AAClD,gDAAgD;AAChD,+CAA+C;AAC/C,wFAAwF;AACxF;;AAEA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,kIAAkI;AAClI;;AAEA;AACA,2DAA2D;AAC3D,8BAA8B;AAC9B,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,2DAA2D;AAC3D;;AAEA;AACA;AACA,oVAAoV;AACpV,QAAQ;AACR,4JAA4J;AAC5J;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA,QAAQ;AACR,wEAAwE;AACxE;AACA;AACA,OAAO;AACP,mEAAmE;AACnE;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA,qIAAqI;AACrI;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD;AAChD,OAAO;AACP,0EAA0E;AAC1E;AACA,MAAM;AACN,+CAA+C;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,mFAAmF;;AAEnF;AACA,2EAA2E;AAC3E;;AAEA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT,uFAAuF;AACvF;AACA;;AAEA;AACA,kKAAkK;AAClK;AACA;AACA;;AAEA;AACA;AACA,sJAAsJ;AACtJ,OAAO;AACP,0HAA0H;AAC1H;AACA,MAAM;AACN;AACA,0IAA0I;AAC1I,OAAO;AACP,8GAA8G;AAC9G;AACA;;AAEA;AACA,oMAAoM;AACpM,8LAA8L;AAC9L,MAAM;AACN;AACA,kLAAkL;AAClL,4KAA4K;AAC5K,OAAO;AACP,kKAAkK;AAClK,6JAA6J;AAC7J;AACA;;AAEA;AACA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;;AAEA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA,qIAAqI;AACrI,qKAAqK;AACrK,4EAA4E;AAC5E;;AAEA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,sDAAsD;AACtD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE;AACrE,uDAAuD;AACvD,6DAA6D;AAC7D,iEAAiE;AACjE,+DAA+D;AAC/D,2EAA2E;AAC3E,iEAAiE;AACjE,mEAAmE;AACnE,iEAAiE;AACjE,iEAAiE;AACjE,yEAAyE;AACzE,2EAA2E;AAC3E,2EAA2E;AAC3E,mEAAmE;AACnE,mEAAmE;AACnE,uEAAuE;AACvE,mEAAmE;AACnE,uEAAuE;AACvE,mFAAmF;AACnF,iEAAiE;AACjE,sEAAsE;AACtE,4DAA4D;AAC5D,4DAA4D;AAC5D,8DAA8D;AAC9D,6DAA6D;AAC7D,sDAAsD;AACtD,yDAAyD;AACzD,uEAAuE;AACvE,iEAAiE;AACjE,mEAAmE;AACnE,6EAA6E;AAC7E,0EAA0E;AAC1E,sFAAsF;AACtF,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,mBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,yBAAyB;AACxC;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA,IAAI;AACJ,kBAAkB,UAAU;AAC5B,gBAAgB,yBAAyB;AACzC;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,+BAA+B;AACjD;;AAEA,eAAe,iCAAiC;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,+BAA+B;AACjD;;AAEA,eAAe,iCAAiC;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,4BAA4B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,gCAAgC;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,cAAc;AAC5B,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,kBAAkB;AACxC,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,mBAAmB,mCAAmC;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,+BAA+B;AAC/C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,eAAe;AAC7B;;AAEA,eAAe,wBAAwB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,wBAAwB;AACtC;;AAEA,eAAe,4BAA4B;AAC3C;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA,gEAAgE,wBAAwB,wBAAwB,uDAAuD,8CAA8C,QAAQ;;AAE7N;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAA4D;AACpG;;AAEA,cAAc,iBAAiB;AAC/B,sEAAsE;AACtE;;AAEA,wCAAwC,6CAA6C;;AAErF,cAAc,iBAAiB;AAC/B,0GAA0G;AAC1G;;AAEA,6CAA6C,QAAQ;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,gCAAgC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,6BAA6B;AAClD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;AACA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;;AAEA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;;AAEA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,eAAe,8BAA8B;AAC7C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,kBAAkB;AACjC;AACA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,+BAA+B;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,oCAAoC;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,oCAAoC;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kBAAkB,gCAAgC;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,2BAA2B;AAClE;AACA;AACA;;AAEA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI,IAAI,IAAI,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B,iCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,+CAA+C;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,yCAAyC,iCAAiC;AAC1E,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,aAAa;AAC7B;AACA;;AAEA;AACA;;AAEA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,kBAAkB;AAClE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,+CAA+C,kBAAkB;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;;AAEA,eAAe,SAAS;AACxB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,qCAAqC;AACpD;;AAEA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;;AAEA,gBAAgB,SAAS;AACzB;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA,OAAO;AACP,4BAA4B,oCAAoC;AAChE,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe,qCAAqC;AACpD;;AAEA,gBAAgB,wCAAwC;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,2BAA2B;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,2BAA2B;AAC1C,gBAAgB,8BAA8B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,2CAA2C,QAAQ;AACnD,gBAAgB,kBAAkB;AAClC;AACA,kBAAkB,8BAA8B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,cAAc,kBAAkB;AAChC;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,wBAAwB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,sBAAsB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,gGAAgG,wBAAwB;AACxH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,2BAA2B;AACzC,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA,cAAc,2BAA2B;AACzC;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA,cAAc,wBAAwB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G,IAAI;AACJ;AACA;AACA;AACA,+GAA+G;AAC/G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,0BAA0B;AACzC;AACA;;AAEA,gBAAgB,yCAAyC;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B,gBAAgB,gBAAgB;AAChcAAc,wBAAwB;AACtC;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,2BAA2B;AACjD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;;AAEA;;AAEA,cAAc,kCAAkC;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,mBAAmB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,sBAAsB;AACnC;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,qBAAqB;AACnC,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,gBAAgB;AAC9B,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,yCAAyC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,aAAa,kCAAkC;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,iBAAiB;AAChC,gBAAgB,UAAU;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtcAAc,eAAe;AAC7B,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,yEAAyE,0EAA0E,wCAAwC,wBAAwB,+DAA+D,6FAA6F,kFAAkF,oDAAoD,mCAAmC,KAAK;AAC7hB,0EAA0E,6EAA6E,yCAAyC,+BAA+B,mEAAmE,mGAAmG,mFAAmF,yFAAyF,iBAAiB;AAClkB,4FAA4F,mFAAmF,iDAAiD,yBAAyB,0EAA0E,uGAAuG,mFAAmF,sDAAsD,oCAAoC,KAAK;AAC5lB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mCAAmC;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mCAAmC;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,iBAAiB,uBAAuB;AACxC;;AAEA;AACA,mBAAmB,8BAA8B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,WAAW;AAC7B;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR,OAAO;AACP,MAAM;AACN,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;;AAEA,gBAAgB,kCAAkC;AAClD;;AAEA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,qBAAqB;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,8BAA8B,SAAS;AACvC;AACA;;AAEA;;AAEA;AACA,eAAe,kCAAkC;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,2BAA2B;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB,gCAAgC;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,wBAAwB;AACvC;AACA;;AAEA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;;AAEA;;AAEA,eAAe,4BAA4B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,OAAO;AACvB;;AAEA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,kBAAkB,sCAAsC;AACxD;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;;AAEA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,IAAI;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP,MAAM;AACN;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,kCAAkC;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;AACA;;AAEA,2BAA2B,eAAe;AAC1C;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,qBAAqB;AACnC;AACA;;AAEA,cAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;;AAEA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,oCAAoC;AAClF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAe,uBAAuB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;;AAEA,gBAAgB,kCAAkC;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,iBAAiB,gCAAgC;AACjD;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,8BAA8B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,4BAA4B;AAC1C;AACA;;AAEA,eAAe,yCAAyC;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,6BAA6B;AAC5C;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,+BAA+B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,iBAAiB;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,6BAA6B;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,0BAA0B;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gCAAgC;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,gCAAgC;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,MAAM;AACN;;AAEA,qBAAqB,iCAAiC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6EAA6E,6BAA6B;AAC1G;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,IAAI;AACJ;;AAEA,aAAa,qBAAqB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,kDAAkD;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,6BAA6B;AACnD;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC,mBAAmB,kBAAkB;AACrC,oBAAoB,OAAO;AAC3B;;AAEA,sBAAsB,SAAS;AAC/B,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,2BAA2B;AACrE;AACA;;AAEA;AACA;;AAEA,sBAAsB,UAAU;AAChC;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sCAAsC;AACvD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,kCAAkC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,OAAO;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kBAAkB,4BAA4B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,mDAAmD,SAAS;AAC5D;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,0CAA0C;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;AACA;;AAEA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uCAAuC;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,0CAA0C,SAAS;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,qBAAqB;AACzC;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;;AAEA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,wBAAwB;AACtC;AACA;;AAEA,cAAc,sBAAsB;AACpC;AACA;AACA;;AAEA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAkB,+BAA+B;AACjD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,oCAAoC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,eAAe,mCAAmC;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,SAAS;AACpD;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,UAAU;AACzB;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,8BAA8B;AAC3C;AACA;;AAEA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA,IAAI;AACJ,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,aAAa;AAC/B,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,8BAA8B;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;;AAEA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,gBAAgB,mBAAmB;AACnC;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,6DAA6D,qDAAqD;AAClH;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,mCAAmC;AAClD;AACA;;AAEA;AACA;AACA,IAAI;AACJ,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mCAAmC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qCAAqC;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,gCAAgC;AACtD;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,+BAA+B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,kCAAkC;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,eAAe,2CAA2C;AAC1D;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mCAAmC;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,2CAA2C;AAC3D;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,gBAAgB,8BAA8B;AAC9C;AACA;;AAEA;AACA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,gBAAgB,6BAA6B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,uCAAuC;AAC1D;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,uCAAuC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,8BAA8B;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,qBAAqB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAkB,uCAAuC;AACzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gCAAgC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uCAAuC;AACzD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,+BAA+B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gCAAgC;AAC/C;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,wBAAwB,EAAE,EAAE,EAAE;AAC9B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,iCAAiC,kBAAkB;AACncAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;;AAEA,yBAAyB,UAAU;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iDAAiD,SAAS;AAC1D;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC,2BAA2B;AACnE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,oBAAoB,2BAA2B;AAC/C;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,mCAAmC;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,eAAe,yBAAyB;AACxC;;AAEA;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,yBAAyB;AACvC;;AAEA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAkB,OAAO;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,4BAA4B;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;;AAEA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,0BAA0B;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B,4BAA4B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,4BAA4B;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;;AAEA,8BAA8B,4BAA4B;AAC1D;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,IAAI;AACJ,eAAe,cAAc;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;;AAEA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA,MAAM;AACN,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,kBAAkB;AACjC;AACA;;AAEA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,qCAAqC;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,gCAAgC;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,2BAA2B;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,gCAAgC;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,yBAAyB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,kBAAkB;AACjC;AACA;;AAEA;;AAEA,eAAe,yBAAyB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA,2BAA2B,qCAAqC;AAChE;AACA;;AAEA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,wBAAwB;AACtC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,eAAe,2DAA2D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,SAAS;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,6BAA6B;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,iBAAiB;AACpC,oBAAoB,OAAO;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,aAAa;AAChkBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;;AAEA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;;AAEA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sDAAsD,EAAE,EAAE,IAAI;AACnE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2BAA2B,8BAA8B;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,2BAA2B,8BAA8B;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,SAAS;AAC1D;AACA;AACA;;AAEA;AACA,iCAAiC,0CAA0C;AAC3E;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C,SAAS;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0IAA0I,yBAAyB;AACnK;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mDAAmD;AACnD,uDAAuD;AACvD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,SAAS;AACvD;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,4BAA4B;AAC1C;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,oBAAoB;AACnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uCAAuC;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA,mBAAmB,gCAAgC;AACnD;AACA;;AAEA,oBAAoB,iCAAiC;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,yBAAyB;AAC3C;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6JAA6J;;AAE7J;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,2EAA2E;AAC3E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,4GAA4G;AAC5G;AACA;;AAEA,kBAAkB,qCAAqC;AACvD;AACA;;AAEA,gBAAgB;AAChB,kDAAkD;AAClD;AACA,wHAAwH;AACxH;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA,cAAc,kBAAkB;AAChC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,8BAA8B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,iCAAiC;AACvD,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;;AAEA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,aAAa;AAC1B,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;AAC5B,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,cAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,cAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA,aAAa,cAAc;AAC3B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,UAAU;AAC1B,cAAc,cAAc;AAC5B,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,QAAQ;AACvC;AACA;;AAEA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,qDAAqD,SAAS;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qDAAqD,SAAS;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAA+C,SAAS;AACxuCAAuC,OAAO;AAC9C;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,0CAA0C;AAC1C,qCAAqC;AACrC,6EAA6E,mBAAmB;AAChG,8EAA8E,GAAG,GAAG;AACpF,yHAAyH,mBAAmB;AAC5I,+GAA+G,GAAG,GAAG;AACrH;AACA,oDAAoD;AACpD;AACA;AACA,2EAA2E;AAC3E,0DAA0D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB,cAAc,qBAAqB;AACnC;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;;AAEA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,kBAAkB;AAC/B;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,4BAA4B;AACzC;;AAEA,cAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wCAAwC;AACxC,uCAAuC;AACvC;;AAEA,qBAAqB,cAAc;AACnC;AACA;;AAEA;AACA,sIAAsI;AACtI;;AAEA;AACA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA,mDAAmD,GAAG;AACtD;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,YAAY;AACzcAAc;;AAE7D,CAAC;;;;;;;;;;;;;AC1msED;AAAA;AAAA;AAAA;AAAA;AAAgC;AACY;AAI5C;IAAA;QAIS,UAAK,GAAa,EAAE,CAAC;IAsH9B,CAAC;IApHG,sBAAW,oBAAG;aAAd;YACI,OAAO,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;;;OAAA;IAAA,CAAC;IAEK,mBAAK,GAAZ;QAAA,iBAGC;QAFG,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,2DAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC,cAAM,YAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC;IAC/D,CAAC;IAGO,qBAAO,GAAf;QAAA,iBAgBC;QAfG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAElC,IAAI,CAAC,GAAG,GAAG,IAAI,sDAAc,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,gDAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,IAAI,sDAAc,CAAC,IAAI,CAAC,MAAM,CAAC;YACtC,QAAQ,EAAE,IAAI,mDAAW,CAAC,MAAM,CAAC;SAC1C,CAAC,CAAC;QAEG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,+DAAuB,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,0DAAkB,CAAC,CAAC;QACjD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC9B,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;IACnC,CAAC;IAGM,0BAAY,GAAnB;QACI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACnC,gBAAgB;QAChB,IAAI,CAAC,GAAG,IAAI,iDAAS,EAAE,CAAC;QACxB,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE;YACxB,UAAU,EAAE,IAAI,gDAAQ,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC;YACtD,OAAO,EAAE,KAAK;SACd,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,IAAI,iDAAS,EAAE,CAAC;QACxB,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE;YACvB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,EAAE;SACT,CAAC,CAAC;QACH,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE1B,IAAI,QAAQ,GAAG,IAAI,2DAAmB,EAAE,CAAC;QAGzC,yBAAyB;QACzB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,QAAQ,CAAC,CAAC;aAC5D;SACD;QAGD,mDAAmD;QAEnD,IAAI,KAAK,GAAY,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpD,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;QACrC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,OAAO;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEtB,CAAC;IAEK,wBAAU,GAAnB,UAAuB,CAAQ,EAAE,CAAQ,EAAE,CAAQ,EAAE,QAA4B;QAChF,IAAI,IAAI,GAAG,IAAI,iDAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC1B,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,QAAQ;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAAA,CAAC;IAES,0BAAY,GAApB;QACI,IAAM,MAAM,GAAqB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QACjE,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC;QACrC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,OAAO,MAAM,CAAC;IAClB,CAAC;IAEJ,sBAAQ,GAAR,UAAS,GAAkB;QAC1B,IAAI,KAAK,GAAY,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,KAAK,GAAG,IAAI,iDAAS,CAAC,OAAO,CAAC,CAAC;QACnC,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7B,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAC5B,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,IAAI,gDAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAClC,SAAS,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YACf,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;YACjB,qCAAqC;YACrC,yCAAyC;YACzC,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,2DAAmB;SACzB,CAAC,CAAC;QACH,IAAG,KAAK,CAAC,OAAO;YACf,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC;QACpC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC3B,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC;QACnC,KAAK,CAAC,mBAAmB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAE7B,CAAC;IACF,UAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9HD;AAAA;AAAA;AAAA;AAAA;AAAiC;AACQ;AAEzC;IAAA;IAMA,CAAC;IAAD,gBAAC;AAAD,CAAC;AAED,IAAM,UAAU,GAAe;IAC9B,QAAQ;IACD,EAAE,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,mBAAmB,EAAE,GAAG,EAAC,MAAM,EAAC;IACxE,EAAE,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,oBAAoB,EAAE,GAAG,EAAC,MAAM,EAAC;IAChE,EAAE,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,oBAAoB,EAAE,GAAG,EAAC,MAAM,EAAC;IAChE,EAAE,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,yBAAyB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC1E,EAAE,EAAE,EAAC,aAAa,EAAE,IAAI,EAAC,QAAQ,EAAE,GAAG,EAAC,2BAA2B,EAAE,GAAG,EAAC,MAAM,EAAC;IAC/E,EAAE,EAAE,EAAC,YAAY,EAAE,IAAI,EAAC,SAAS,EAAE,GAAG,EAAC,sBAAsB,EAAE,GAAG,EAAC,MAAM,EAAE,OAAO,EAAC,EAAE,IAAI,EAAE,2DAAmB,EAAC,EAAC;IAChH,EAAE,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,2BAA2B,EAAE,GAAG,EAAC,MAAM,EAAC;IAC/E,EAAE,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,qBAAqB,EAAE,GAAG,EAAC,MAAM,EAAC;IACtE,EAAE,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,uBAAuB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC1E,EAAE,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,yBAAyB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC9E,EAAE,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,yBAAyB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC9E,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,sBAAsB,EAAE,GAAG,EAAC,MAAM,EAAC;IACxE,EAAE,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,MAAM,EAAE,GAAG,EAAC,oBAAoB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC/D,EAAE,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,SAAS,EAAE,GAAG,EAAC,oBAAoB,EAAE,GAAG,EAAC,MAAM,EAAC;IACnE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,SAAS,EAAE,GAAG,EAAC,qBAAqB,EAAE,GAAG,EAAC,MAAM,EAAC;IAC/D,EAAE,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,QAAQ,EAAE,GAAG,EAAC,wBAAwB,EAAE,GAAG,EAAC,MAAM,EAAC;IACzE,EAAE,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,WAAW,EAAE,GAAG,EAAC,oBAAoB,EAAE,GAAG,EAAC,MAAM,EAAC;CAK1E,CAAC;AAIH;IAAA;IAmCA,CAAC;IAjCiB,uBAAU,GAAxB,UAAyB,GAAkB,EAAE,eAA2B;QACpE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,UAAU,CAAC,OAAO,CAAC,UAAC,IAAc;YAC9B,IAAM,KAAK,GAAG,IAAI,gDAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE;gBAC3C,GAAG,EAAE,6DAAY,CAAC,IAAI,CAAC,GAAG,CAAC;aAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAChD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACpC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,0CAA0C;QAC1C,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;QAElC,+BAA+B;QAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACZ,YAAY,IAAI,CAAC,CAAC;gBACtB,0BAA0B;gBAC1B,iEAAiE;gBACjE,IAAI,YAAY,KAAK,WAAW,EAAE;oBAC9B,eAAe,EAAE,CAAC;iBACrB;YACD,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAChB,eAAe,EAAE,CAAC;SACrB;IACL,CAAC;IAEL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1ED;AAAA;AAAA,SAAS,YAAY,CAAC,SAAiB;IACnC,mDAAmD;IACnD,OAAO,CAAC,SAAe,CAAC,CAAC,CAAC,SAAe,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;AACxE,CAAC;AAEuB;;;;;;;;;;;;;ACLxB;AAAA;AAAA;AAAA;AAAqB;;;;;;;;;;;;;ACArB;AAAA;AAAA;AAA4B;AACkB;AAK9C,MAAM,CAAC,EAAE,GAAG,mBAAO,CAAC,iEAAY,CAAC,CAAC;AAClC;;;;EAIE;AACF,IAAI,CAAC,y3oBAwrBJ,CACA;AAED,IAAI,aAAa,EAAE,EAAE;IACjB,mBAAmB,CAAC,MAAM,EAAE,kEAAY,CAAC,qBAAqB,CAAC,EAAE,kEAAY,CAAC,uBAAuB,CAAC,EACtG,cAAK,WAAI,yCAAG,EAAE,CAAC,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC;CAC3B;KAAM;IACH,mBAAmB,CAAC,MAAM,EAAE,kEAAY,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,cAAK,WAAI,yCAAG,EAAE,CAAC,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC;CAC3F","file":"app.79b1ca9590c35f9585e4.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"79b1ca9590c35f9585e4\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_selfInvalidated: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n \t\t\tinvalidate: function() {\n \t\t\t\tthis._selfInvalidated = true;\n \t\t\t\tswitch (hotStatus) {\n \t\t\t\t\tcase \"idle\":\n \t\t\t\t\t\thotUpdate = {};\n \t\t\t\t\t\thotUpdate[moduleId] = modules[moduleId];\n \t\t\t\t\t\thotSetStatus(\"ready\");\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"ready\":\n \t\t\t\t\t\thotApplyInvalidatedModule(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"prepare\":\n \t\t\t\t\tcase \"check\":\n \t\t\t\t\tcase \"dispose\":\n \t\t\t\t\tcase \"apply\":\n \t\t\t\t\t\t(hotQueuedInvalidatedModules =\n \t\t\t\t\t\t\thotQueuedInvalidatedModules || []).push(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\t// ignore requests in error states\n \t\t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash, hotQueuedInvalidatedModules;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(hotApplyInvalidatedModules() ? \"ready\" : \"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"app\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n \t\treturn hotApplyInternal(options);\n \t}\n\n \tfunction hotApplyInternal(options) {\n \t\thotApplyInvalidatedModules();\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (\n \t\t\t\t\t!module ||\n \t\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n \t\t\t\t)\n \t\t\t\t\tcontinue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire &&\n \t\t\t\t// when called invalidate self-accepting is not possible\n \t\t\t\t!installedModules[moduleId].hot._selfInvalidated\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\tparents: installedModules[moduleId].parents.slice(),\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\tif (hotUpdateNewHash !== undefined) {\n \t\t\thotCurrentHash = hotUpdateNewHash;\n \t\t\thotUpdateNewHash = undefined;\n \t\t}\n \t\thotUpdate = undefined;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = item.parents;\n \t\t\thotCurrentChildModule = moduleId;\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\treturn hotApplyInternal(options).then(function(list) {\n \t\t\t\toutdatedModules.forEach(function(moduleId) {\n \t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n \t\t\t\t});\n \t\t\t\treturn list;\n \t\t\t});\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \tfunction hotApplyInvalidatedModules() {\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\tif (!hotUpdate) hotUpdate = {};\n \t\t\thotQueuedInvalidatedModules.forEach(hotApplyInvalidatedModule);\n \t\t\thotQueuedInvalidatedModules = undefined;\n \t\t\treturn true;\n \t\t}\n \t}\n\n \tfunction hotApplyInvalidatedModule(moduleId) {\n \t\tif (!Object.prototype.hasOwnProperty.call(hotUpdate, moduleId))\n \t\t\thotUpdate[moduleId] = modules[moduleId];\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./src/main.ts\")(__webpack_require__.s = \"./src/main.ts\");\n","/**\n * @license\n * PlayCanvas Engine v1.38.3 revision a9cf16e58\n * Copyright 2011-2021 PlayCanvas Ltd. All rights reserved.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.pc = {}));\n}(this, (function (exports) { 'use strict';\n\n\tif (!Array.prototype.find) {\n\t\tObject.defineProperty(Array.prototype, 'find', {\n\t\t\tvalue: function value(predicate) {\n\t\t\t\tif (this == null) {\n\t\t\t\t\tthrow TypeError('\"this\" is null or not defined');\n\t\t\t\t}\n\n\t\t\t\tvar o = Object(this);\n\t\t\t\tvar len = o.length >>> 0;\n\n\t\t\t\tif (typeof predicate !== 'function') {\n\t\t\t\t\tthrow TypeError('predicate must be a function');\n\t\t\t\t}\n\n\t\t\t\tvar thisArg = arguments[1];\n\t\t\t\tvar k = 0;\n\n\t\t\t\twhile (k < len) {\n\t\t\t\t\tvar kValue = o[k];\n\n\t\t\t\t\tif (predicate.call(thisArg, kValue, k, o)) {\n\t\t\t\t\t\treturn kValue;\n\t\t\t\t\t}\n\n\t\t\t\t\tk++;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tconfigurable: true,\n\t\t\twritable: true\n\t\t});\n\t}\n\n\tMath.log2 = Math.log2 || function (x) {\n\t\treturn Math.log(x) * Math.LOG2E;\n\t};\n\n\tif (!Math.sign) {\n\t\tMath.sign = function (x) {\n\t\t\treturn (x > 0) - (x < 0) || +x;\n\t\t};\n\t}\n\n\tif (typeof Object.assign != 'function') {\n\t\tObject.defineProperty(Object, \"assign\", {\n\t\t\tvalue: function assign(target, varArgs) {\n\n\t\t\t\tif (target == null) {\n\t\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t\t}\n\n\t\t\t\tvar to = Object(target);\n\n\t\t\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\t\t\tvar nextSource = arguments[index];\n\n\t\t\t\t\tif (nextSource != null) {\n\t\t\t\t\t\tfor (var nextKey in nextSource) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn to;\n\t\t\t},\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\t(function () {\n\t\tif (typeof navigator === 'undefined' || typeof document === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tnavigator.pointer = navigator.pointer || navigator.webkitPointer || navigator.mozPointer;\n\n\t\tvar pointerlockchange = function pointerlockchange() {\n\t\t\tvar e = document.createEvent('CustomEvent');\n\t\t\te.initCustomEvent('pointerlockchange', true, false, null);\n\t\t\tdocument.dispatchEvent(e);\n\t\t};\n\n\t\tvar pointerlockerror = function pointerlockerror() {\n\t\t\tvar e = document.createEvent('CustomEvent');\n\t\t\te.initCustomEvent('pointerlockerror', true, false, null);\n\t\t\tdocument.dispatchEvent(e);\n\t\t};\n\n\t\tdocument.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n\t\tdocument.addEventListener('webkitpointerlocklost', pointerlockchange, false);\n\t\tdocument.addEventListener('mozpointerlockchange', pointerlockchange, false);\n\t\tdocument.addEventListener('mozpointerlocklost', pointerlockchange, false);\n\t\tdocument.addEventListener('webkitpointerlockerror', pointerlockerror, false);\n\t\tdocument.addEventListener('mozpointerlockerror', pointerlockerror, false);\n\n\t\tif (Element.prototype.mozRequestPointerLock) {\n\t\t\tElement.prototype.requestPointerLock = function () {\n\t\t\t\tthis.mozRequestPointerLock();\n\t\t\t};\n\t\t} else {\n\t\t\tElement.prototype.requestPointerLock = Element.prototype.requestPointerLock || Element.prototype.webkitRequestPointerLock || Element.prototype.mozRequestPointerLock;\n\t\t}\n\n\t\tif (!Element.prototype.requestPointerLock && navigator.pointer) {\n\t\t\tElement.prototype.requestPointerLock = function () {\n\t\t\t\tvar el = this;\n\t\t\t\tdocument.pointerLockElement = el;\n\t\t\t\tnavigator.pointer.lock(el, pointerlockchange, pointerlockerror);\n\t\t\t};\n\t\t}\n\n\t\tdocument.exitPointerLock = document.exitPointerLock || document.webkitExitPointerLock || document.mozExitPointerLock;\n\n\t\tif (!document.exitPointerLock) {\n\t\t\tdocument.exitPointerLock = function () {\n\t\t\t\tif (navigator.pointer) {\n\t\t\t\t\tdocument.pointerLockElement = null;\n\t\t\t\t\tnavigator.pointer.unlock();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t})();\n\n\t(function () {\n\t\tif (typeof window === 'undefined') return;\n\t\tvar lastTime = 0;\n\t\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\n\t\tfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t\t}\n\n\t\tif (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n\t\t\tvar currTime = new Date().getTime();\n\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\tvar id = window.setTimeout(function () {\n\t\t\t\tcallback(currTime + timeToCall);\n\t\t\t}, timeToCall);\n\t\t\tlastTime = currTime + timeToCall;\n\t\t\treturn id;\n\t\t};\n\t\tif (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n\t\t\tclearTimeout(id);\n\t\t};\n\t})();\n\n\tif (!String.prototype.endsWith) {\n\t\tString.prototype.endsWith = function (search, this_len) {\n\t\t\tif (this_len === undefined || this_len > this.length) {\n\t\t\t\tthis_len = this.length;\n\t\t\t}\n\n\t\t\treturn this.substring(this_len - search.length, this_len) === search;\n\t\t};\n\t}\n\n\tif (!String.prototype.includes) {\n\t\tString.prototype.includes = function (search, start) {\n\n\t\t\tif (typeof start !== 'number') {\n\t\t\t\tstart = 0;\n\t\t\t}\n\n\t\t\tif (start + search.length > this.length) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn this.indexOf(search, start) !== -1;\n\t\t\t}\n\t\t};\n\t}\n\n\tif (!String.prototype.startsWith) {\n\t\tString.prototype.startsWith = function (search, pos) {\n\t\t\treturn this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n\t\t};\n\t}\n\n\t(function () {\n\n\t\tvar glErrorShadow = {};\n\n\t\tfunction error(msg) {\n\t\t\tif (window.console && window.console.error) {\n\t\t\t\twindow.console.error(msg);\n\t\t\t}\n\t\t}\n\n\t\tfunction log(msg) {\n\t\t\tif (window.console && window.console.log) {\n\t\t\t\twindow.console.log(msg);\n\t\t\t}\n\t\t}\n\n\t\tfunction synthesizeGLError(err, opt_msg) {\n\t\t\tglErrorShadow[err] = true;\n\n\t\t\tif (opt_msg !== undefined) {\n\t\t\t\terror(opt_msg);\n\t\t\t}\n\t\t}\n\n\t\tfunction wrapGLError(gl) {\n\t\t\tvar f = gl.getError;\n\n\t\t\tgl.getError = function () {\n\t\t\t\tvar err;\n\n\t\t\t\tdo {\n\t\t\t\t\terr = f.apply(gl);\n\n\t\t\t\t\tif (err != gl.NO_ERROR) {\n\t\t\t\t\t\tglErrorShadow[err] = true;\n\t\t\t\t\t}\n\t\t\t\t} while (err != gl.NO_ERROR);\n\n\t\t\t\tfor (var err in glErrorShadow) {\n\t\t\t\t\tif (glErrorShadow[err]) {\n\t\t\t\t\t\tdelete glErrorShadow[err];\n\t\t\t\t\t\treturn parseInt(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn gl.NO_ERROR;\n\t\t\t};\n\t\t}\n\n\t\tvar WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n\t\t\tvar gl = ext.gl;\n\t\t\tthis.ext = ext;\n\t\t\tthis.isAlive = true;\n\t\t\tthis.hasBeenBound = false;\n\t\t\tthis.elementArrayBuffer = null;\n\t\t\tthis.attribs = new Array(ext.maxVertexAttribs);\n\n\t\t\tfor (var n = 0; n < this.attribs.length; n++) {\n\t\t\t\tvar attrib = new WebGLVertexArrayObjectOES.VertexAttrib(gl);\n\t\t\t\tthis.attribs[n] = attrib;\n\t\t\t}\n\n\t\t\tthis.maxAttrib = 0;\n\t\t};\n\n\t\tWebGLVertexArrayObjectOES.VertexAttrib = function VertexAttrib(gl) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.size = 4;\n\t\t\tthis.type = gl.FLOAT;\n\t\t\tthis.normalized = false;\n\t\t\tthis.stride = 16;\n\t\t\tthis.offset = 0;\n\t\t\tthis.cached = \"\";\n\t\t\tthis.recache();\n\t\t};\n\n\t\tWebGLVertexArrayObjectOES.VertexAttrib.prototype.recache = function recache() {\n\t\t\tthis.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\n\t\t};\n\n\t\tvar OESVertexArrayObject = function OESVertexArrayObject(gl) {\n\t\t\tvar self = this;\n\t\t\tthis.gl = gl;\n\t\t\twrapGLError(gl);\n\t\t\tvar original = this.original = {\n\t\t\t\tgetParameter: gl.getParameter,\n\t\t\t\tenableVertexAttribArray: gl.enableVertexAttribArray,\n\t\t\t\tdisableVertexAttribArray: gl.disableVertexAttribArray,\n\t\t\t\tbindBuffer: gl.bindBuffer,\n\t\t\t\tgetVertexAttrib: gl.getVertexAttrib,\n\t\t\t\tvertexAttribPointer: gl.vertexAttribPointer\n\t\t\t};\n\n\t\t\tgl.getParameter = function getParameter(pname) {\n\t\t\t\tif (pname == self.VERTEX_ARRAY_BINDING_OES) {\n\t\t\t\t\tif (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn self.currentVertexArrayObject;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn original.getParameter.apply(this, arguments);\n\t\t\t};\n\n\t\t\tgl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n\t\t\t\tvar vao = self.currentVertexArrayObject;\n\t\t\t\tvao.maxAttrib = Math.max(vao.maxAttrib, index);\n\t\t\t\tvar attrib = vao.attribs[index];\n\t\t\t\tattrib.enabled = true;\n\t\t\t\treturn original.enableVertexAttribArray.apply(this, arguments);\n\t\t\t};\n\n\t\t\tgl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n\t\t\t\tvar vao = self.currentVertexArrayObject;\n\t\t\t\tvao.maxAttrib = Math.max(vao.maxAttrib, index);\n\t\t\t\tvar attrib = vao.attribs[index];\n\t\t\t\tattrib.enabled = false;\n\t\t\t\treturn original.disableVertexAttribArray.apply(this, arguments);\n\t\t\t};\n\n\t\t\tgl.bindBuffer = function bindBuffer(target, buffer) {\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase gl.ARRAY_BUFFER:\n\t\t\t\t\t\tself.currentArrayBuffer = buffer;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase gl.ELEMENT_ARRAY_BUFFER:\n\t\t\t\t\t\tself.currentVertexArrayObject.elementArrayBuffer = buffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn original.bindBuffer.apply(this, arguments);\n\t\t\t};\n\n\t\t\tgl.getVertexAttrib = function getVertexAttrib(index, pname) {\n\t\t\t\tvar vao = self.currentVertexArrayObject;\n\t\t\t\tvar attrib = vao.attribs[index];\n\n\t\t\t\tswitch (pname) {\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n\t\t\t\t\t\treturn attrib.buffer;\n\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n\t\t\t\t\t\treturn attrib.enabled;\n\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_SIZE:\n\t\t\t\t\t\treturn attrib.size;\n\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n\t\t\t\t\t\treturn attrib.stride;\n\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_TYPE:\n\t\t\t\t\t\treturn attrib.type;\n\n\t\t\t\t\tcase gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n\t\t\t\t\t\treturn attrib.normalized;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn original.getVertexAttrib.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tgl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n\t\t\t\tvar vao = self.currentVertexArrayObject;\n\t\t\t\tvao.maxAttrib = Math.max(vao.maxAttrib, indx);\n\t\t\t\tvar attrib = vao.attribs[indx];\n\t\t\t\tattrib.buffer = self.currentArrayBuffer;\n\t\t\t\tattrib.size = size;\n\t\t\t\tattrib.type = type;\n\t\t\t\tattrib.normalized = normalized;\n\t\t\t\tattrib.stride = stride;\n\t\t\t\tattrib.offset = offset;\n\t\t\t\tattrib.recache();\n\t\t\t\treturn original.vertexAttribPointer.apply(this, arguments);\n\t\t\t};\n\n\t\t\tif (gl.instrumentExtension) {\n\t\t\t\tgl.instrumentExtension(this, \"OES_vertex_array_object\");\n\t\t\t}\n\n\t\t\tgl.canvas.addEventListener('webglcontextrestored', function () {\n\t\t\t\tlog(\"OESVertexArrayObject emulation library context restored\");\n\t\t\t\tself.reset_();\n\t\t\t}, true);\n\t\t\tthis.reset_();\n\t\t};\n\n\t\tOESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\n\t\tOESVertexArrayObject.prototype.reset_ = function reset_() {\n\t\t\tvar contextWasLost = this.vertexArrayObjects !== undefined;\n\n\t\t\tif (contextWasLost) {\n\t\t\t\tfor (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n\t\t\t\t\tthis.vertexArrayObjects.isAlive = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar gl = this.gl;\n\t\t\tthis.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\t\tthis.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n\t\t\tthis.currentVertexArrayObject = null;\n\t\t\tthis.currentArrayBuffer = null;\n\t\t\tthis.vertexArrayObjects = [this.defaultVertexArrayObject];\n\t\t\tthis.bindVertexArrayOES(null);\n\t\t};\n\n\t\tOESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n\t\t\tvar arrayObject = new WebGLVertexArrayObjectOES(this);\n\t\t\tthis.vertexArrayObjects.push(arrayObject);\n\t\t\treturn arrayObject;\n\t\t};\n\n\t\tOESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n\t\t\tarrayObject.isAlive = false;\n\t\t\tthis.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n\n\t\t\tif (this.currentVertexArrayObject == arrayObject) {\n\t\t\t\tthis.bindVertexArrayOES(null);\n\t\t\t}\n\t\t};\n\n\t\tOESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n\t\t\tif (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n\t\t\t\tif (arrayObject.hasBeenBound && arrayObject.ext == this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tOESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n\t\t\tvar gl = this.gl;\n\n\t\t\tif (arrayObject && !arrayObject.isAlive) {\n\t\t\t\tsynthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar original = this.original;\n\t\t\tvar oldVAO = this.currentVertexArrayObject;\n\t\t\tthis.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n\t\t\tthis.currentVertexArrayObject.hasBeenBound = true;\n\t\t\tvar newVAO = this.currentVertexArrayObject;\n\n\t\t\tif (oldVAO == newVAO) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\n\t\t\t\toriginal.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\n\t\t\t}\n\n\t\t\tvar currentBinding = this.currentArrayBuffer;\n\t\t\tvar maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n\n\t\t\tfor (var n = 0; n <= maxAttrib; n++) {\n\t\t\t\tvar attrib = newVAO.attribs[n];\n\t\t\t\tvar oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n\n\t\t\t\tif (!oldVAO || attrib.enabled != oldAttrib.enabled) {\n\t\t\t\t\tif (attrib.enabled) {\n\t\t\t\t\t\toriginal.enableVertexAttribArray.call(gl, n);\n\t\t\t\t\t} else {\n\t\t\t\t\t\toriginal.disableVertexAttribArray.call(gl, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrib.enabled) {\n\t\t\t\t\tvar bufferChanged = false;\n\n\t\t\t\t\tif (!oldVAO || attrib.buffer != oldAttrib.buffer) {\n\t\t\t\t\t\tif (currentBinding != attrib.buffer) {\n\t\t\t\t\t\t\toriginal.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\n\t\t\t\t\t\t\tcurrentBinding = attrib.buffer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbufferChanged = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bufferChanged || attrib.cached != oldAttrib.cached) {\n\t\t\t\t\t\toriginal.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.currentArrayBuffer != currentBinding) {\n\t\t\t\toriginal.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\n\t\t\t}\n\t\t};\n\n\t\twindow.setupVertexArrayObject = function (gl) {\n\t\t\tif (gl.getSupportedExtensions) {\n\t\t\t\tvar exts = gl.getSupportedExtensions();\n\n\t\t\t\tif (exts.indexOf(\"OES_vertex_array_object\") != -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (gl.getExtension) {\n\t\t\t\tvar vao = gl.getExtension(\"OES_vertex_array_object\");\n\n\t\t\t\tif (vao) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gl.getSupportedExtensions) {\n\t\t\t\tvar original_getSupportedExtensions = gl.getSupportedExtensions;\n\n\t\t\t\tgl.getSupportedExtensions = function getSupportedExtensions() {\n\t\t\t\t\tvar list = original_getSupportedExtensions.call(this) || [];\n\t\t\t\t\tlist.push(\"OES_vertex_array_object\");\n\t\t\t\t\treturn list;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar original_getExtension = gl.getExtension;\n\n\t\t\tgl.getExtension = function getExtension(name) {\n\t\t\t\tif (name == \"OES_vertex_array_object\") {\n\t\t\t\t\tif (!gl.__OESVertexArrayObject) {\n\t\t\t\t\t\tgl.__OESVertexArrayObject = new OESVertexArrayObject(gl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn gl.__OESVertexArrayObject;\n\t\t\t\t}\n\n\t\t\t\tif (original_getExtension) {\n\t\t\t\t\treturn original_getExtension.call(this, name);\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t})();\n\n\tvar _typeLookup = function () {\n\t\tvar result = {};\n\t\tvar names = [\"Array\", \"Object\", \"Function\", \"Date\", \"RegExp\", \"Float32Array\"];\n\n\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\tresult[\"[object \" + names[i] + \"]\"] = names[i].toLowerCase();\n\t\t}\n\n\t\treturn result;\n\t}();\n\n\tvar version = \"1.38.3\";\n\tvar revision = \"a9cf16e58\";\n\tvar config = {};\n\tvar common = {};\n\tvar apps = {};\n\tvar data = {};\n\n\tfunction type(obj) {\n\t\tif (obj === null) {\n\t\t\treturn \"null\";\n\t\t}\n\n\t\tvar type = typeof obj;\n\n\t\tif (type === \"undefined\" || type === \"number\" || type === \"string\" || type === \"boolean\") {\n\t\t\treturn type;\n\t\t}\n\n\t\treturn _typeLookup[Object.prototype.toString.call(obj)];\n\t}\n\n\tfunction extend(target, ex) {\n\t\tvar prop, copy;\n\n\t\tfor (prop in ex) {\n\t\t\tcopy = ex[prop];\n\n\t\t\tif (type(copy) == \"object\") {\n\t\t\t\ttarget[prop] = extend({}, copy);\n\t\t\t} else if (type(copy) == \"array\") {\n\t\t\t\ttarget[prop] = extend([], copy);\n\t\t\t} else {\n\t\t\t\ttarget[prop] = copy;\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tfunction isDefined(o) {\n\t\tvar a;\n\t\treturn o !== a;\n\t}\n\n\tvar debug = function () {\n\t\tvar table = null;\n\t\tvar row = null;\n\t\tvar title = null;\n\t\tvar field = null;\n\t\treturn {\n\t\t\tdisplay: function display(data) {\n\t\t\t\tfunction init() {\n\t\t\t\t\ttable = document.createElement('table');\n\t\t\t\t\trow = document.createElement('tr');\n\t\t\t\t\ttitle = document.createElement('td');\n\t\t\t\t\tfield = document.createElement('td');\n\t\t\t\t\ttable.style.cssText = 'position:absolute;font-family:sans-serif;font-size:12px;color:#cccccc';\n\t\t\t\t\ttable.style.top = '0px';\n\t\t\t\t\ttable.style.left = '0px';\n\t\t\t\t\ttable.style.border = 'thin solid #cccccc';\n\t\t\t\t\tdocument.body.appendChild(table);\n\t\t\t\t}\n\n\t\t\t\tif (!table) {\n\t\t\t\t\tinit();\n\t\t\t\t}\n\n\t\t\t\ttable.innerHTML = '';\n\n\t\t\t\tfor (var key in data) {\n\t\t\t\t\tvar r = row.cloneNode();\n\t\t\t\t\tvar t = title.cloneNode();\n\t\t\t\t\tvar f = field.cloneNode();\n\t\t\t\t\tt.textContent = key;\n\t\t\t\t\tf.textContent = data[key];\n\t\t\t\t\tr.appendChild(t);\n\t\t\t\t\tr.appendChild(f);\n\t\t\t\t\ttable.appendChild(r);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar EventHandler = function () {\n\t\tfunction EventHandler() {\n\t\t\tthis._callbacks = {};\n\t\t\tthis._callbackActive = {};\n\t\t}\n\n\t\tvar _proto = EventHandler.prototype;\n\n\t\t_proto._addCallback = function _addCallback(name, callback, scope, once) {\n\t\t\tif (once === void 0) {\n\t\t\t\tonce = false;\n\t\t\t}\n\n\t\t\tif (!name || typeof name !== 'string' || !callback) return;\n\t\t\tif (!this._callbacks[name]) this._callbacks[name] = [];\n\t\t\tif (this._callbackActive[name] && this._callbackActive[name] === this._callbacks[name]) this._callbackActive[name] = this._callbackActive[name].slice();\n\n\t\t\tthis._callbacks[name].push({\n\t\t\t\tcallback: callback,\n\t\t\t\tscope: scope || this,\n\t\t\t\tonce: once\n\t\t\t});\n\t\t};\n\n\t\t_proto.on = function on(name, callback, scope) {\n\t\t\tthis._addCallback(name, callback, scope, false);\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.off = function off(name, callback, scope) {\n\t\t\tif (name) {\n\t\t\t\tif (this._callbackActive[name] && this._callbackActive[name] === this._callbacks[name]) this._callbackActive[name] = this._callbackActive[name].slice();\n\t\t\t} else {\n\t\t\t\tfor (var key in this._callbackActive) {\n\t\t\t\t\tif (!this._callbacks[key]) continue;\n\t\t\t\t\tif (this._callbacks[key] !== this._callbackActive[key]) continue;\n\t\t\t\t\tthis._callbackActive[key] = this._callbackActive[key].slice();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!name) {\n\t\t\t\tthis._callbacks = {};\n\t\t\t} else if (!callback) {\n\t\t\t\tif (this._callbacks[name]) this._callbacks[name] = [];\n\t\t\t} else {\n\t\t\t\tvar events = this._callbacks[name];\n\t\t\t\tif (!events) return this;\n\t\t\t\tvar count = events.length;\n\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tif (events[i].callback !== callback) continue;\n\t\t\t\t\tif (scope && events[i].scope !== scope) continue;\n\t\t\t\t\tevents[i--] = events[--count];\n\t\t\t\t}\n\n\t\t\t\tevents.length = count;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.fire = function fire(name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n\t\t\tif (!name || !this._callbacks[name]) return this;\n\t\t\tvar callbacks;\n\n\t\t\tif (!this._callbackActive[name]) {\n\t\t\t\tthis._callbackActive[name] = this._callbacks[name];\n\t\t\t} else {\n\t\t\t\tif (this._callbackActive[name] === this._callbacks[name]) this._callbackActive[name] = this._callbackActive[name].slice();\n\t\t\t\tcallbacks = this._callbacks[name].slice();\n\t\t\t}\n\n\t\t\tfor (var i = 0; (callbacks || this._callbackActive[name]) && i < (callbacks || this._callbackActive[name]).length; i++) {\n\t\t\t\tvar evt = (callbacks || this._callbackActive[name])[i];\n\t\t\t\tevt.callback.call(evt.scope, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n\n\t\t\t\tif (evt.once) {\n\t\t\t\t\tvar ind = this._callbacks[name].indexOf(evt);\n\n\t\t\t\t\tif (ind !== -1) {\n\t\t\t\t\t\tif (this._callbackActive[name] === this._callbacks[name]) this._callbackActive[name] = this._callbackActive[name].slice();\n\n\t\t\t\t\t\tthis._callbacks[name].splice(ind, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!callbacks) this._callbackActive[name] = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.once = function once(name, callback, scope) {\n\t\t\tthis._addCallback(name, callback, scope, true);\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.hasEvent = function hasEvent(name) {\n\t\t\treturn this._callbacks[name] && this._callbacks[name].length !== 0 || false;\n\t\t};\n\n\t\treturn EventHandler;\n\t}();\n\n\tvar events = {\n\t\tattach: function attach(target) {\n\t\t\tvar ev = events;\n\t\t\ttarget._addCallback = ev._addCallback;\n\t\t\ttarget.on = ev.on;\n\t\t\ttarget.off = ev.off;\n\t\t\ttarget.fire = ev.fire;\n\t\t\ttarget.once = ev.once;\n\t\t\ttarget.hasEvent = ev.hasEvent;\n\t\t\ttarget._callbacks = {};\n\t\t\ttarget._callbackActive = {};\n\t\t\treturn target;\n\t\t},\n\t\t_addCallback: EventHandler.prototype._addCallback,\n\t\ton: EventHandler.prototype.on,\n\t\toff: EventHandler.prototype.off,\n\t\tfire: EventHandler.prototype.fire,\n\t\tonce: EventHandler.prototype.once,\n\t\thasEvent: EventHandler.prototype.hasEvent\n\t};\n\n\tvar guid = {\n\t\tcreate: function create() {\n\t\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\t\t\tvar r = Math.random() * 16 | 0,\n\t\t\t\t\t\tv = c == 'x' ? r : r & 0x3 | 0x8;\n\t\t\t\treturn v.toString(16);\n\t\t\t});\n\t\t}\n\t};\n\n\tvar path = {\n\t\tdelimiter: \"/\",\n\t\tjoin: function join() {\n\t\t\tvar index;\n\t\t\tvar num = arguments.length;\n\t\t\tvar result = arguments[0];\n\n\t\t\tfor (index = 0; index < num - 1; ++index) {\n\t\t\t\tvar one = arguments[index];\n\t\t\t\tvar two = arguments[index + 1];\n\n\t\t\t\tif (!isDefined(one) || !isDefined(two)) {\n\t\t\t\t\tthrow new Error(\"undefined argument to pc.path.join\");\n\t\t\t\t}\n\n\t\t\t\tif (two[0] === path.delimiter) {\n\t\t\t\t\tresult = two;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (one && two && one[one.length - 1] !== path.delimiter && two[0] !== path.delimiter) {\n\t\t\t\t\tresult += path.delimiter + two;\n\t\t\t\t} else {\n\t\t\t\t\tresult += two;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tnormalize: function normalize(pathname) {\n\t\t\tvar lead = pathname.startsWith(path.delimiter);\n\t\t\tvar trail = pathname.endsWith(path.delimiter);\n\t\t\tvar parts = pathname.split('/');\n\t\t\tvar result = '';\n\t\t\tvar cleaned = [];\n\n\t\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\t\tif (parts[i] === '') continue;\n\t\t\t\tif (parts[i] === '.') continue;\n\n\t\t\t\tif (parts[i] === '..' && cleaned.length > 0) {\n\t\t\t\t\tcleaned = cleaned.slice(0, cleaned.length - 2);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) cleaned.push(path.delimiter);\n\t\t\t\tcleaned.push(parts[i]);\n\t\t\t}\n\n\t\t\tresult = cleaned.join('');\n\n\t\t\tif (!lead && result[0] === path.delimiter) {\n\t\t\t\tresult = result.slice(1);\n\t\t\t}\n\n\t\t\tif (trail && result[result.length - 1] !== path.delimiter) {\n\t\t\t\tresult += path.delimiter;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tsplit: function split(pathname) {\n\t\t\tvar parts = pathname.split(path.delimiter);\n\t\t\tvar tail = parts.slice(parts.length - 1)[0];\n\t\t\tvar head = parts.slice(0, parts.length - 1).join(path.delimiter);\n\t\t\treturn [head, tail];\n\t\t},\n\t\tgetBasename: function getBasename(pathname) {\n\t\t\treturn path.split(pathname)[1];\n\t\t},\n\t\tgetDirectory: function getDirectory(pathname) {\n\t\t\tvar parts = pathname.split(path.delimiter);\n\t\t\treturn parts.slice(0, parts.length - 1).join(path.delimiter);\n\t\t},\n\t\tgetExtension: function getExtension(pathname) {\n\t\t\tvar ext = pathname.split('?')[0].split('.').pop();\n\n\t\t\tif (ext !== pathname) {\n\t\t\t\treturn \".\" + ext;\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t},\n\t\tisRelativePath: function isRelativePath(pathname) {\n\t\t\treturn pathname.charAt(0) !== \"/\" && pathname.match(/:\\/\\//) === null;\n\t\t},\n\t\textractPath: function extractPath(pathname) {\n\t\t\tvar result = \"\";\n\t\t\tvar parts = pathname.split(\"/\");\n\t\t\tvar i = 0;\n\n\t\t\tif (parts.length > 1) {\n\t\t\t\tif (path.isRelativePath(pathname)) {\n\t\t\t\t\tif (parts[0] === \".\") {\n\t\t\t\t\t\tfor (i = 0; i < parts.length - 1; ++i) {\n\t\t\t\t\t\t\tresult += i === 0 ? parts[i] : \"/\" + parts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (parts[0] === \"..\") {\n\t\t\t\t\t\tfor (i = 0; i < parts.length - 1; ++i) {\n\t\t\t\t\t\t\tresult += i === 0 ? parts[i] : \"/\" + parts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = \".\";\n\n\t\t\t\t\t\tfor (i = 0; i < parts.length - 1; ++i) {\n\t\t\t\t\t\t\tresult += \"/\" + parts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0; i < parts.length - 1; ++i) {\n\t\t\t\t\t\tresult += i === 0 ? parts[i] : \"/\" + parts[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\tvar platform = {\n\t\tdesktop: false,\n\t\tmobile: false,\n\t\tios: false,\n\t\tandroid: false,\n\t\twindows: false,\n\t\txbox: false,\n\t\tgamepads: false,\n\t\ttouch: false,\n\t\tworkers: false,\n\t\tpassiveEvents: false\n\t};\n\n\tif (typeof navigator !== 'undefined') {\n\t\tvar ua = navigator.userAgent;\n\t\tif (/(windows|mac os|linux|cros)/i.test(ua)) platform.desktop = true;\n\t\tif (/xbox/i.test(ua)) platform.xbox = true;\n\n\t\tif (/(windows phone|iemobile|wpdesktop)/i.test(ua)) {\n\t\t\tplatform.desktop = false;\n\t\t\tplatform.mobile = true;\n\t\t\tplatform.windows = true;\n\t\t} else if (/android/i.test(ua)) {\n\t\t\tplatform.desktop = false;\n\t\t\tplatform.mobile = true;\n\t\t\tplatform.android = true;\n\t\t} else if (/ip([ao]d|hone)/i.test(ua)) {\n\t\t\tplatform.desktop = false;\n\t\t\tplatform.mobile = true;\n\t\t\tplatform.ios = true;\n\t\t}\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\tplatform.touch = 'ontouchstart' in window || 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 0;\n\t\t}\n\n\t\tplatform.gamepads = 'getGamepads' in navigator;\n\t\tplatform.workers = typeof Worker !== 'undefined';\n\n\t\ttry {\n\t\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\t\tget: function get() {\n\t\t\t\t\tplatform.passiveEvents = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\twindow.addEventListener(\"testpassive\", null, opts);\n\t\t\twindow.removeEventListener(\"testpassive\", null, opts);\n\t\t} catch (e) {}\n\t}\n\n\tvar ASCII_LOWERCASE = \"abcdefghijklmnopqrstuvwxyz\";\n\tvar ASCII_UPPERCASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tvar ASCII_LETTERS = ASCII_LOWERCASE + ASCII_UPPERCASE;\n\tvar HIGH_SURROGATE_BEGIN = 0xD800;\n\tvar HIGH_SURROGATE_END = 0xDBFF;\n\tvar LOW_SURROGATE_BEGIN = 0xDC00;\n\tvar LOW_SURROGATE_END = 0xDFFF;\n\tvar ZERO_WIDTH_JOINER = 0x200D;\n\tvar REGIONAL_INDICATOR_BEGIN = 0x1F1E6;\n\tvar REGIONAL_INDICATOR_END = 0x1F1FF;\n\tvar FITZPATRICK_MODIFIER_BEGIN = 0x1F3FB;\n\tvar FITZPATRICK_MODIFIER_END = 0x1F3FF;\n\tvar DIACRITICAL_MARKS_BEGIN = 0x20D0;\n\tvar DIACRITICAL_MARKS_END = 0x20FF;\n\tvar VARIATION_MODIFIER_BEGIN = 0xFE00;\n\tvar VARIATION_MODIFIER_END = 0xFE0F;\n\n\tfunction getCodePointData(string, i) {\n\t\tvar size = string.length;\n\t\ti = i || 0;\n\n\t\tif (i < 0 || i >= size) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar first = string.charCodeAt(i);\n\t\tvar second;\n\n\t\tif (size > 1 && first >= HIGH_SURROGATE_BEGIN && first <= HIGH_SURROGATE_END) {\n\t\t\tsecond = string.charCodeAt(i + 1);\n\n\t\t\tif (second >= LOW_SURROGATE_BEGIN && second <= LOW_SURROGATE_END) {\n\t\t\t\treturn {\n\t\t\t\t\tcode: (first - HIGH_SURROGATE_BEGIN) * 0x400 + second - LOW_SURROGATE_BEGIN + 0x10000,\n\t\t\t\t\tlong: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcode: first,\n\t\t\tlong: false\n\t\t};\n\t}\n\n\tfunction isCodeBetween(string, begin, end) {\n\t\tif (!string) return false;\n\t\tvar codeData = getCodePointData(string);\n\n\t\tif (codeData) {\n\t\t\tvar code = codeData.code;\n\t\t\treturn code >= begin && code <= end;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction numCharsToTakeForNextSymbol(string, index) {\n\t\tif (index === string.length - 1) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (isCodeBetween(string[index], HIGH_SURROGATE_BEGIN, HIGH_SURROGATE_END)) {\n\t\t\tvar first = string.substring(index, index + 2);\n\t\t\tvar second = string.substring(index + 2, index + 4);\n\n\t\t\tif (isCodeBetween(second, FITZPATRICK_MODIFIER_BEGIN, FITZPATRICK_MODIFIER_END) || isCodeBetween(first, REGIONAL_INDICATOR_BEGIN, REGIONAL_INDICATOR_END) && isCodeBetween(second, REGIONAL_INDICATOR_BEGIN, REGIONAL_INDICATOR_END)) {\n\t\t\t\treturn 4;\n\t\t\t}\n\n\t\t\tif (isCodeBetween(second, VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\treturn 2;\n\t\t}\n\n\t\tif (isCodeBetween(string[index + 1], VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\n\t\t\treturn 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tvar string = {\n\t\tASCII_LOWERCASE: ASCII_LOWERCASE,\n\t\tASCII_UPPERCASE: ASCII_UPPERCASE,\n\t\tASCII_LETTERS: ASCII_LETTERS,\n\t\tformat: function format(s) {\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\ts = s.replace('{' + (i - 1) + '}', arguments[i]);\n\t\t\t}\n\n\t\t\treturn s;\n\t\t},\n\t\ttoBool: function toBool(s, strict) {\n\t\t\tif (s === 'true') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (strict) {\n\t\t\t\tif (s === 'false') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthrow new TypeError('Not a boolean string');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tgetCodePoint: function getCodePoint(string, i) {\n\t\t\tvar codePointData = getCodePointData(string, i);\n\t\t\treturn codePointData && codePointData.code;\n\t\t},\n\t\tgetCodePoints: function getCodePoints(string) {\n\t\t\tif (typeof string !== 'string') {\n\t\t\t\tthrow new TypeError('Not a string');\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\tvar arr = [];\n\t\t\tvar codePoint;\n\n\t\t\twhile (!!(codePoint = getCodePointData(string, i))) {\n\t\t\t\tarr.push(codePoint.code);\n\t\t\t\ti += codePoint.long ? 2 : 1;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t},\n\t\tgetSymbols: function getSymbols(string) {\n\t\t\tif (typeof string !== 'string') {\n\t\t\t\tthrow new TypeError('Not a string');\n\t\t\t}\n\n\t\t\tvar index = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar output = [];\n\t\t\tvar take = 0;\n\t\t\tvar ch;\n\n\t\t\twhile (index < length) {\n\t\t\t\ttake += numCharsToTakeForNextSymbol(string, index + take);\n\t\t\t\tch = string[index + take];\n\n\t\t\t\tif (isCodeBetween(ch, DIACRITICAL_MARKS_BEGIN, DIACRITICAL_MARKS_END)) {\n\t\t\t\t\tch = string[index + take++];\n\t\t\t\t}\n\n\t\t\t\tif (isCodeBetween(ch, VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\n\t\t\t\t\tch = string[index + take++];\n\t\t\t\t}\n\n\t\t\t\tif (ch && ch.charCodeAt(0) === ZERO_WIDTH_JOINER) {\n\t\t\t\t\tch = string[index + take++];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar char = string.substring(index, index + take);\n\t\t\t\toutput.push(char);\n\t\t\t\tindex += take;\n\t\t\t\ttake = 0;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t},\n\t\tfromCodePoint: function fromCodePoint() {\n\t\t\tvar chars = [];\n\t\t\tvar current;\n\t\t\tvar codePoint;\n\t\t\tvar units;\n\n\t\t\tfor (var i = 0; i < arguments.length; ++i) {\n\t\t\t\tcurrent = Number(arguments[i]);\n\t\t\t\tcodePoint = current - 0x10000;\n\t\t\t\tunits = current > 0xFFFF ? [(codePoint >> 10) + 0xD800, codePoint % 0x400 + 0xDC00] : [current];\n\t\t\t\tchars.push(String.fromCharCode.apply(null, units));\n\t\t\t}\n\n\t\t\treturn chars.join('');\n\t\t}\n\t};\n\n\tvar math = {\n\t\tDEG_TO_RAD: Math.PI / 180,\n\t\tRAD_TO_DEG: 180 / Math.PI,\n\t\tclamp: function clamp(value, min, max) {\n\t\t\tif (value >= max) return max;\n\t\t\tif (value <= min) return min;\n\t\t\treturn value;\n\t\t},\n\t\tintToBytes24: function intToBytes24(i) {\n\t\t\tvar r, g, b;\n\t\t\tr = i >> 16 & 0xff;\n\t\t\tg = i >> 8 & 0xff;\n\t\t\tb = i & 0xff;\n\t\t\treturn [r, g, b];\n\t\t},\n\t\tintToBytes32: function intToBytes32(i) {\n\t\t\tvar r, g, b, a;\n\t\t\tr = i >> 24 & 0xff;\n\t\t\tg = i >> 16 & 0xff;\n\t\t\tb = i >> 8 & 0xff;\n\t\t\ta = i & 0xff;\n\t\t\treturn [r, g, b, a];\n\t\t},\n\t\tbytesToInt24: function bytesToInt24(r, g, b) {\n\t\t\tif (r.length) {\n\t\t\t\tb = r[2];\n\t\t\t\tg = r[1];\n\t\t\t\tr = r[0];\n\t\t\t}\n\n\t\t\treturn r << 16 | g << 8 | b;\n\t\t},\n\t\tbytesToInt32: function bytesToInt32(r, g, b, a) {\n\t\t\tif (r.length) {\n\t\t\t\ta = r[3];\n\t\t\t\tb = r[2];\n\t\t\t\tg = r[1];\n\t\t\t\tr = r[0];\n\t\t\t}\n\n\t\t\treturn (r << 24 | g << 16 | b << 8 | a) >>> 32;\n\t\t},\n\t\tlerp: function lerp(a, b, alpha) {\n\t\t\treturn a + (b - a) * math.clamp(alpha, 0, 1);\n\t\t},\n\t\tlerpAngle: function lerpAngle(a, b, alpha) {\n\t\t\tif (b - a > 180) {\n\t\t\t\tb -= 360;\n\t\t\t}\n\n\t\t\tif (b - a < -180) {\n\t\t\t\tb += 360;\n\t\t\t}\n\n\t\t\treturn math.lerp(a, b, math.clamp(alpha, 0, 1));\n\t\t},\n\t\tpowerOfTwo: function powerOfTwo(x) {\n\t\t\treturn x !== 0 && !(x & x - 1);\n\t\t},\n\t\tnextPowerOfTwo: function nextPowerOfTwo(val) {\n\t\t\tval--;\n\t\t\tval |= val >> 1;\n\t\t\tval |= val >> 2;\n\t\t\tval |= val >> 4;\n\t\t\tval |= val >> 8;\n\t\t\tval |= val >> 16;\n\t\t\tval++;\n\t\t\treturn val;\n\t\t},\n\t\trandom: function random(min, max) {\n\t\t\tvar diff = max - min;\n\t\t\treturn Math.random() * diff + min;\n\t\t},\n\t\tsmoothstep: function smoothstep(min, max, x) {\n\t\t\tif (x <= min) return 0;\n\t\t\tif (x >= max) return 1;\n\t\t\tx = (x - min) / (max - min);\n\t\t\treturn x * x * (3 - 2 * x);\n\t\t},\n\t\tsmootherstep: function smootherstep(min, max, x) {\n\t\t\tif (x <= min) return 0;\n\t\t\tif (x >= max) return 1;\n\t\t\tx = (x - min) / (max - min);\n\t\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t\t},\n\t\troundUp: function roundUp(numToRound, multiple) {\n\t\t\tif (multiple === 0) return numToRound;\n\t\t\treturn Math.ceil(numToRound / multiple) * multiple;\n\t\t},\n\t\tfloat2Half: function () {\n\t\t\tvar floatView = new Float32Array(1);\n\t\t\tvar int32View = new Int32Array(floatView.buffer);\n\t\t\treturn function (val) {\n\t\t\t\tfloatView[0] = val;\n\t\t\t\tvar x = int32View[0];\n\t\t\t\tvar bits = x >> 16 & 0x8000;\n\t\t\t\tvar m = x >> 12 & 0x07ff;\n\t\t\t\tvar e = x >> 23 & 0xff;\n\n\t\t\t\tif (e < 103) {\n\t\t\t\t\treturn bits;\n\t\t\t\t}\n\n\t\t\t\tif (e > 142) {\n\t\t\t\t\tbits |= 0x7c00;\n\t\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\t\treturn bits;\n\t\t\t\t}\n\n\t\t\t\tif (e < 113) {\n\t\t\t\t\tm |= 0x0800;\n\t\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\t\treturn bits;\n\t\t\t\t}\n\n\t\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t\tbits += m & 1;\n\t\t\t\treturn bits;\n\t\t\t};\n\t\t}()\n\t};\n\n\tvar Color = function () {\n\t\tfunction Color(r, g, b, a) {\n\t\t\tif (r === void 0) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (g === void 0) {\n\t\t\t\tg = 0;\n\t\t\t}\n\n\t\t\tif (b === void 0) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tif (a === void 0) {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tvar length = r.length;\n\n\t\t\tif (length === 3 || length === 4) {\n\t\t\t\tthis.r = r[0];\n\t\t\t\tthis.g = r[1];\n\t\t\t\tthis.b = r[2];\n\t\t\t\tthis.a = r[3] !== undefined ? r[3] : 1;\n\t\t\t} else {\n\t\t\t\tthis.r = r;\n\t\t\t\tthis.g = g;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.a = a;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Color.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Color(this.r, this.g, this.b, this.a);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tthis.r = rhs.r;\n\t\t\tthis.g = rhs.g;\n\t\t\tthis.b = rhs.b;\n\t\t\tthis.a = rhs.a;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\treturn this.r === rhs.r && this.g === rhs.g && this.b === rhs.b && this.a === rhs.a;\n\t\t};\n\n\t\t_proto.set = function set(r, g, b, a) {\n\t\t\tif (a === void 0) {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\tthis.a = a;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerp = function lerp(lhs, rhs, alpha) {\n\t\t\tthis.r = lhs.r + alpha * (rhs.r - lhs.r);\n\t\t\tthis.g = lhs.g + alpha * (rhs.g - lhs.g);\n\t\t\tthis.b = lhs.b + alpha * (rhs.b - lhs.b);\n\t\t\tthis.a = lhs.a + alpha * (rhs.a - lhs.a);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.fromString = function fromString(hex) {\n\t\t\tvar i = parseInt(hex.replace('#', '0x'), 16);\n\t\t\tvar bytes;\n\n\t\t\tif (hex.length > 7) {\n\t\t\t\tbytes = math.intToBytes32(i);\n\t\t\t} else {\n\t\t\t\tbytes = math.intToBytes24(i);\n\t\t\t\tbytes[3] = 255;\n\t\t\t}\n\n\t\t\tthis.set(bytes[0] / 255, bytes[1] / 255, bytes[2] / 255, bytes[3] / 255);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toString = function toString(alpha) {\n\t\t\tvar s = \"#\" + ((1 << 24) + (Math.round(this.r * 255) << 16) + (Math.round(this.g * 255) << 8) + Math.round(this.b * 255)).toString(16).slice(1);\n\n\t\t\tif (alpha === true) {\n\t\t\t\tvar a = Math.round(this.a * 255).toString(16);\n\n\t\t\t\tif (this.a < 16 / 255) {\n\t\t\t\t\ts += '0' + a;\n\t\t\t\t} else {\n\t\t\t\t\ts += a;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn s;\n\t\t};\n\n\t\treturn Color;\n\t}();\n\n\tColor.BLACK = Object.freeze(new Color(0, 0, 0, 1));\n\tColor.BLUE = Object.freeze(new Color(0, 0, 1, 1));\n\tColor.CYAN = Object.freeze(new Color(0, 1, 1, 1));\n\tColor.GRAY = Object.freeze(new Color(0.5, 0.5, 0.5, 1));\n\tColor.GREEN = Object.freeze(new Color(0, 1, 0, 1));\n\tColor.MAGENTA = Object.freeze(new Color(1, 0, 1, 1));\n\tColor.RED = Object.freeze(new Color(1, 0, 0, 1));\n\tColor.WHITE = Object.freeze(new Color(1, 1, 1, 1));\n\tColor.YELLOW = Object.freeze(new Color(1, 1, 0, 1));\n\n\tvar IndexedList = function () {\n\t\tfunction IndexedList() {\n\t\t\tthis._list = [];\n\t\t\tthis._index = {};\n\t\t}\n\n\t\tvar _proto = IndexedList.prototype;\n\n\t\t_proto.push = function push(key, item) {\n\t\t\tif (this._index[key]) {\n\t\t\t\tthrow Error(\"Key already in index \" + key);\n\t\t\t}\n\n\t\t\tvar location = this._list.push(item) - 1;\n\t\t\tthis._index[key] = location;\n\t\t};\n\n\t\t_proto.has = function has(key) {\n\t\t\treturn this._index[key] !== undefined;\n\t\t};\n\n\t\t_proto.get = function get(key) {\n\t\t\tvar location = this._index[key];\n\n\t\t\tif (location !== undefined) {\n\t\t\t\treturn this._list[location];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.remove = function remove(key) {\n\t\t\tvar location = this._index[key];\n\n\t\t\tif (location !== undefined) {\n\t\t\t\tthis._list.splice(location, 1);\n\n\t\t\t\tdelete this._index[key];\n\n\t\t\t\tfor (key in this._index) {\n\t\t\t\t\tvar idx = this._index[key];\n\n\t\t\t\t\tif (idx > location) {\n\t\t\t\t\t\tthis._index[key] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.list = function list() {\n\t\t\treturn this._list;\n\t\t};\n\n\t\t_proto.clear = function clear() {\n\t\t\tthis._list.length = 0;\n\n\t\t\tfor (var prop in this._index) {\n\t\t\t\tdelete this._index[prop];\n\t\t\t}\n\t\t};\n\n\t\treturn IndexedList;\n\t}();\n\n\tvar SortedLoopArray = function () {\n\t\tfunction SortedLoopArray(args) {\n\t\t\tthis._sortBy = args.sortBy;\n\t\t\tthis.items = [];\n\t\t\tthis.length = 0;\n\t\t\tthis.loopIndex = -1;\n\t\t\tthis._sortHandler = this._doSort.bind(this);\n\t\t}\n\n\t\tvar _proto = SortedLoopArray.prototype;\n\n\t\t_proto._binarySearch = function _binarySearch(item) {\n\t\t\tvar left = 0;\n\t\t\tvar right = this.items.length - 1;\n\t\t\tvar search = item[this._sortBy];\n\t\t\tvar middle;\n\t\t\tvar current;\n\n\t\t\twhile (left <= right) {\n\t\t\t\tmiddle = Math.floor((left + right) / 2);\n\t\t\t\tcurrent = this.items[middle][this._sortBy];\n\n\t\t\t\tif (current <= search) {\n\t\t\t\t\tleft = middle + 1;\n\t\t\t\t} else if (current > search) {\n\t\t\t\t\tright = middle - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn left;\n\t\t};\n\n\t\t_proto._doSort = function _doSort(a, b) {\n\t\t\tvar sortBy = this._sortBy;\n\t\t\treturn a[sortBy] - b[sortBy];\n\t\t};\n\n\t\t_proto.insert = function insert(item) {\n\t\t\tvar index = this._binarySearch(item);\n\n\t\t\tthis.items.splice(index, 0, item);\n\t\t\tthis.length++;\n\n\t\t\tif (this.loopIndex >= index) {\n\t\t\t\tthis.loopIndex++;\n\t\t\t}\n\t\t};\n\n\t\t_proto.append = function append(item) {\n\t\t\tthis.items.push(item);\n\t\t\tthis.length++;\n\t\t};\n\n\t\t_proto.remove = function remove(item) {\n\t\t\tvar idx = this.items.indexOf(item);\n\t\t\tif (idx < 0) return;\n\t\t\tthis.items.splice(idx, 1);\n\t\t\tthis.length--;\n\n\t\t\tif (this.loopIndex >= idx) {\n\t\t\t\tthis.loopIndex--;\n\t\t\t}\n\t\t};\n\n\t\t_proto.sort = function sort() {\n\t\t\tvar current = this.loopIndex >= 0 ? this.items[this.loopIndex] : null;\n\t\t\tthis.items.sort(this._sortHandler);\n\n\t\t\tif (current !== null) {\n\t\t\t\tthis.loopIndex = this.items.indexOf(current);\n\t\t\t}\n\t\t};\n\n\t\treturn SortedLoopArray;\n\t}();\n\n\tfunction _defineProperties(target, props) {\n\t  for (var i = 0; i < props.length; i++) {\n\t    var descriptor = props[i];\n\t    descriptor.enumerable = descriptor.enumerable || false;\n\t    descriptor.configurable = true;\n\t    if (\"value\" in descriptor) descriptor.writable = true;\n\t    Object.defineProperty(target, descriptor.key, descriptor);\n\t  }\n\t}\n\n\tfunction _createClass(Constructor, protoProps, staticProps) {\n\t  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n\t  if (staticProps) _defineProperties(Constructor, staticProps);\n\t  return Constructor;\n\t}\n\n\tfunction _inheritsLoose(subClass, superClass) {\n\t  subClass.prototype = Object.create(superClass.prototype);\n\t  subClass.prototype.constructor = subClass;\n\t  subClass.__proto__ = superClass;\n\t}\n\n\tfunction _assertThisInitialized(self) {\n\t  if (self === void 0) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return self;\n\t}\n\n\tfunction _unsupportedIterableToArray(o, minLen) {\n\t  if (!o) return;\n\t  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\t  var n = Object.prototype.toString.call(o).slice(8, -1);\n\t  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n\t  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n\t  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n\t}\n\n\tfunction _arrayLikeToArray(arr, len) {\n\t  if (len == null || len > arr.length) len = arr.length;\n\n\t  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n\t  return arr2;\n\t}\n\n\tfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n\t  var it;\n\n\t  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n\t    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n\t      if (it) o = it;\n\t      var i = 0;\n\t      return function () {\n\t        if (i >= o.length) return {\n\t          done: true\n\t        };\n\t        return {\n\t          done: false,\n\t          value: o[i++]\n\t        };\n\t      };\n\t    }\n\n\t    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\t  }\n\n\t  it = o[Symbol.iterator]();\n\t  return it.next.bind(it);\n\t}\n\n\tvar Tags = function (_EventHandler) {\n\t\t_inheritsLoose(Tags, _EventHandler);\n\n\t\tfunction Tags(parent) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._index = {};\n\t\t\t_this._list = [];\n\t\t\t_this._parent = parent;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Tags.prototype;\n\n\t\t_proto.add = function add() {\n\t\t\tvar changed = false;\n\n\t\t\tvar tags = this._processArguments(arguments, true);\n\n\t\t\tif (!tags.length) return changed;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tif (this._index[tags[i]]) continue;\n\t\t\t\tchanged = true;\n\t\t\t\tthis._index[tags[i]] = true;\n\n\t\t\t\tthis._list.push(tags[i]);\n\n\t\t\t\tthis.fire('add', tags[i], this._parent);\n\t\t\t}\n\n\t\t\tif (changed) this.fire('change', this._parent);\n\t\t\treturn changed;\n\t\t};\n\n\t\t_proto.remove = function remove() {\n\t\t\tvar changed = false;\n\t\t\tif (!this._list.length) return changed;\n\n\t\t\tvar tags = this._processArguments(arguments, true);\n\n\t\t\tif (!tags.length) return changed;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tif (!this._index[tags[i]]) continue;\n\t\t\t\tchanged = true;\n\t\t\t\tdelete this._index[tags[i]];\n\n\t\t\t\tthis._list.splice(this._list.indexOf(tags[i]), 1);\n\n\t\t\t\tthis.fire('remove', tags[i], this._parent);\n\t\t\t}\n\n\t\t\tif (changed) this.fire('change', this._parent);\n\t\t\treturn changed;\n\t\t};\n\n\t\t_proto.clear = function clear() {\n\t\t\tif (!this._list.length) return;\n\n\t\t\tvar tags = this._list.slice(0);\n\n\t\t\tthis._list = [];\n\t\t\tthis._index = {};\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tthis.fire('remove', tags[i], this._parent);\n\t\t\t}\n\n\t\t\tthis.fire('change', this._parent);\n\t\t};\n\n\t\t_proto.has = function has() {\n\t\t\tif (!this._list.length) return false;\n\t\t\treturn this._has(this._processArguments(arguments));\n\t\t};\n\n\t\t_proto._has = function _has(tags) {\n\t\t\tif (!this._list.length || !tags.length) return false;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tif (tags[i].length === 1) {\n\t\t\t\t\tif (this._index[tags[i][0]]) return true;\n\t\t\t\t} else {\n\t\t\t\t\tvar multiple = true;\n\n\t\t\t\t\tfor (var t = 0; t < tags[i].length; t++) {\n\t\t\t\t\t\tif (this._index[tags[i][t]]) continue;\n\t\t\t\t\t\tmultiple = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (multiple) return true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.list = function list() {\n\t\t\treturn this._list.slice(0);\n\t\t};\n\n\t\t_proto._processArguments = function _processArguments(args, flat) {\n\t\t\tvar tags = [];\n\t\t\tvar tmp = [];\n\t\t\tif (!args || !args.length) return tags;\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tif (args[i] instanceof Array) {\n\t\t\t\t\tif (!flat) tmp = [];\n\n\t\t\t\t\tfor (var t = 0; t < args[i].length; t++) {\n\t\t\t\t\t\tif (typeof args[i][t] !== 'string') continue;\n\n\t\t\t\t\t\tif (flat) {\n\t\t\t\t\t\t\ttags.push(args[i][t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttmp.push(args[i][t]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!flat && tmp.length) tags.push(tmp);\n\t\t\t\t} else if (typeof args[i] === 'string') {\n\t\t\t\t\tif (flat) {\n\t\t\t\t\t\ttags.push(args[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttags.push([args[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tags;\n\t\t};\n\n\t\t_createClass(Tags, [{\n\t\t\tkey: \"size\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._list.length;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Tags;\n\t}(EventHandler);\n\n\tvar now = typeof window !== 'undefined' && window.performance && window.performance.now && window.performance.timing ? function () {\n\t\treturn window.performance.now();\n\t} : Date.now;\n\n\tvar Timer = function () {\n\t\tfunction Timer() {\n\t\t\tthis._isRunning = false;\n\t\t\tthis._a = 0;\n\t\t\tthis._b = 0;\n\t\t}\n\n\t\tvar _proto = Timer.prototype;\n\n\t\t_proto.start = function start() {\n\t\t\tthis._isRunning = true;\n\t\t\tthis._a = now();\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tthis._isRunning = false;\n\t\t\tthis._b = now();\n\t\t};\n\n\t\t_proto.getMilliseconds = function getMilliseconds() {\n\t\t\treturn this._b - this._a;\n\t\t};\n\n\t\treturn Timer;\n\t}();\n\n\tfunction createURI(options) {\n\t\tvar s = \"\";\n\n\t\tif ((options.authority || options.scheme) && (options.host || options.hostpath)) {\n\t\t\tthrow new Error(\"Can't have 'scheme' or 'authority' and 'host' or 'hostpath' option\");\n\t\t}\n\n\t\tif (options.host && options.hostpath) {\n\t\t\tthrow new Error(\"Can't have 'host' and 'hostpath' option\");\n\t\t}\n\n\t\tif (options.path && options.hostpath) {\n\t\t\tthrow new Error(\"Can't have 'path' and 'hostpath' option\");\n\t\t}\n\n\t\tif (options.scheme) {\n\t\t\ts += options.scheme + \":\";\n\t\t}\n\n\t\tif (options.authority) {\n\t\t\ts += \"//\" + options.authority;\n\t\t}\n\n\t\tif (options.host) {\n\t\t\ts += options.host;\n\t\t}\n\n\t\tif (options.path) {\n\t\t\ts += options.path;\n\t\t}\n\n\t\tif (options.hostpath) {\n\t\t\ts += options.hostpath;\n\t\t}\n\n\t\tif (options.query) {\n\t\t\ts += \"?\" + options.query;\n\t\t}\n\n\t\tif (options.fragment) {\n\t\t\ts += \"#\" + options.fragment;\n\t\t}\n\n\t\treturn s;\n\t}\n\n\tfunction URI(uri) {\n\t\tvar re = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/,\n\t\t\t\tresult = uri.match(re);\n\t\tthis.scheme = result[2];\n\t\tthis.authority = result[4];\n\t\tthis.path = result[5];\n\t\tthis.query = result[7];\n\t\tthis.fragment = result[9];\n\n\t\tthis.toString = function () {\n\t\t\tvar s = \"\";\n\n\t\t\tif (this.scheme) {\n\t\t\t\ts += this.scheme + \":\";\n\t\t\t}\n\n\t\t\tif (this.authority) {\n\t\t\t\ts += \"//\" + this.authority;\n\t\t\t}\n\n\t\t\ts += this.path;\n\n\t\t\tif (this.query) {\n\t\t\t\ts += \"?\" + this.query;\n\t\t\t}\n\n\t\t\tif (this.fragment) {\n\t\t\t\ts += \"#\" + this.fragment;\n\t\t\t}\n\n\t\t\treturn s;\n\t\t};\n\n\t\tthis.getQuery = function () {\n\t\t\tvar vars;\n\t\t\tvar pair;\n\t\t\tvar result = {};\n\n\t\t\tif (this.query) {\n\t\t\t\tvars = decodeURIComponent(this.query).split(\"&\");\n\t\t\t\tvars.forEach(function (item, index, arr) {\n\t\t\t\t\tpair = item.split(\"=\");\n\t\t\t\t\tresult[pair[0]] = pair[1];\n\t\t\t\t}, this);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tthis.setQuery = function (params) {\n\t\t\tvar q = \"\";\n\n\t\t\tfor (var key in params) {\n\t\t\t\tif (params.hasOwnProperty(key)) {\n\t\t\t\t\tif (q !== \"\") {\n\t\t\t\t\t\tq += \"&\";\n\t\t\t\t\t}\n\n\t\t\t\t\tq += encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.query = q;\n\t\t};\n\t}\n\n\tvar Http = function () {\n\t\tfunction Http() {\n\t\t\tthis.ContentType = Http.ContentType;\n\t\t\tthis.ResponseType = Http.ResponseType;\n\t\t\tthis.binaryExtensions = Http.binaryExtensions;\n\t\t}\n\n\t\tvar _proto = Http.prototype;\n\n\t\t_proto.get = function get(url, options, callback) {\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\treturn this.request(\"GET\", url, options, callback);\n\t\t};\n\n\t\t_proto.post = function post(url, data, options, callback) {\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\toptions.postdata = data;\n\t\t\treturn this.request(\"POST\", url, options, callback);\n\t\t};\n\n\t\t_proto.put = function put(url, data, options, callback) {\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\toptions.postdata = data;\n\t\t\treturn this.request(\"PUT\", url, options, callback);\n\t\t};\n\n\t\t_proto.del = function del(url, options, callback) {\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\treturn this.request(\"DELETE\", url, options, callback);\n\t\t};\n\n\t\t_proto.request = function request(method, url, options, callback) {\n\t\t\tvar uri, query, timestamp, postdata, xhr;\n\t\t\tvar errored = false;\n\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tif (options.retry) {\n\t\t\t\toptions = Object.assign({\n\t\t\t\t\tretries: 0,\n\t\t\t\t\tmaxRetries: 5\n\t\t\t\t}, options);\n\t\t\t}\n\n\t\t\toptions.callback = callback;\n\n\t\t\tif (options.async == null) {\n\t\t\t\toptions.async = true;\n\t\t\t}\n\n\t\t\tif (options.headers == null) {\n\t\t\t\toptions.headers = {};\n\t\t\t}\n\n\t\t\tif (options.postdata != null) {\n\t\t\t\tif (options.postdata instanceof Document) {\n\t\t\t\t\tpostdata = options.postdata;\n\t\t\t\t} else if (options.postdata instanceof FormData) {\n\t\t\t\t\tpostdata = options.postdata;\n\t\t\t\t} else if (options.postdata instanceof Object) {\n\t\t\t\t\tvar contentType = options.headers[\"Content-Type\"];\n\n\t\t\t\t\tif (contentType === undefined) {\n\t\t\t\t\t\toptions.headers[\"Content-Type\"] = Http.ContentType.FORM_URLENCODED;\n\t\t\t\t\t\tcontentType = options.headers[\"Content-Type\"];\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (contentType) {\n\t\t\t\t\t\tcase Http.ContentType.FORM_URLENCODED:\n\t\t\t\t\t\t\tpostdata = \"\";\n\t\t\t\t\t\t\tvar bFirstItem = true;\n\n\t\t\t\t\t\t\tfor (var key in options.postdata) {\n\t\t\t\t\t\t\t\tif (options.postdata.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\tif (bFirstItem) {\n\t\t\t\t\t\t\t\t\t\tbFirstItem = false;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpostdata += \"&\";\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpostdata += escape(key) + \"=\" + escape(options.postdata[key]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\tcase Http.ContentType.JSON:\n\t\t\t\t\t\t\tif (contentType == null) {\n\t\t\t\t\t\t\t\toptions.headers[\"Content-Type\"] = Http.ContentType.JSON;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpostdata = JSON.stringify(options.postdata);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpostdata = options.postdata;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.cache === false) {\n\t\t\t\ttimestamp = now();\n\t\t\t\turi = new URI(url);\n\n\t\t\t\tif (!uri.query) {\n\t\t\t\t\turi.query = \"ts=\" + timestamp;\n\t\t\t\t} else {\n\t\t\t\t\turi.query = uri.query + \"&ts=\" + timestamp;\n\t\t\t\t}\n\n\t\t\t\turl = uri.toString();\n\t\t\t}\n\n\t\t\tif (options.query) {\n\t\t\t\turi = new URI(url);\n\t\t\t\tquery = extend(uri.getQuery(), options.query);\n\t\t\t\turi.setQuery(query);\n\t\t\t\turl = uri.toString();\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\t\t\txhr.open(method, url, options.async);\n\t\t\txhr.withCredentials = options.withCredentials !== undefined ? options.withCredentials : false;\n\t\t\txhr.responseType = options.responseType || this._guessResponseType(url);\n\n\t\t\tfor (var header in options.headers) {\n\t\t\t\tif (options.headers.hasOwnProperty(header)) {\n\t\t\t\t\txhr.setRequestHeader(header, options.headers[header]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tthis._onReadyStateChange(method, url, options, xhr);\n\t\t\t}.bind(this);\n\n\t\t\txhr.onerror = function () {\n\t\t\t\tthis._onError(method, url, options, xhr);\n\n\t\t\t\terrored = true;\n\t\t\t}.bind(this);\n\n\t\t\ttry {\n\t\t\t\txhr.send(postdata);\n\t\t\t} catch (e) {\n\t\t\t\tif (!errored) {\n\t\t\t\t\toptions.error(xhr.status, xhr, e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn xhr;\n\t\t};\n\n\t\t_proto._guessResponseType = function _guessResponseType(url) {\n\t\t\tvar uri = new URI(url);\n\t\t\tvar ext = path.getExtension(uri.path);\n\n\t\t\tif (Http.binaryExtensions.indexOf(ext) >= 0) {\n\t\t\t\treturn Http.ResponseType.ARRAY_BUFFER;\n\t\t\t}\n\n\t\t\tif (ext === \".xml\") {\n\t\t\t\treturn Http.ResponseType.DOCUMENT;\n\t\t\t}\n\n\t\t\treturn Http.ResponseType.TEXT;\n\t\t};\n\n\t\t_proto._isBinaryContentType = function _isBinaryContentType(contentType) {\n\t\t\tvar binTypes = [Http.ContentType.MP4, Http.ContentType.WAV, Http.ContentType.OGG, Http.ContentType.MP3, Http.ContentType.BIN, Http.ContentType.DDS, Http.ContentType.BASIS, Http.ContentType.GLB];\n\n\t\t\tif (binTypes.indexOf(contentType) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto._onReadyStateChange = function _onReadyStateChange(method, url, options, xhr) {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tswitch (xhr.status) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (xhr.responseURL && xhr.responseURL.startsWith('file:///')) {\n\t\t\t\t\t\t\t\tthis._onSuccess(method, url, options, xhr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._onError(method, url, options, xhr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase 200:\n\t\t\t\t\tcase 201:\n\t\t\t\t\tcase 206:\n\t\t\t\t\tcase 304:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._onSuccess(method, url, options, xhr);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._onError(method, url, options, xhr);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSuccess = function _onSuccess(method, url, options, xhr) {\n\t\t\tvar response;\n\t\t\tvar header;\n\t\t\tvar contentType;\n\t\t\tvar parts;\n\t\t\theader = xhr.getResponseHeader(\"Content-Type\");\n\n\t\t\tif (header) {\n\t\t\t\tparts = header.split(\";\");\n\t\t\t\tcontentType = parts[0].trim();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (contentType === this.ContentType.JSON || url.split('?')[0].endsWith(\".json\")) {\n\t\t\t\t\tresponse = JSON.parse(xhr.responseText);\n\t\t\t\t} else if (this._isBinaryContentType(contentType)) {\n\t\t\t\t\tresponse = xhr.response;\n\t\t\t\t} else {\n\t\t\t\t\tif (contentType) {\n\t\t\t\t\t\tconsole.warn(\"responseType: \" + xhr.responseType + \" being served with Content-Type: \" + contentType);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xhr.responseType === Http.ResponseType.ARRAY_BUFFER) {\n\t\t\t\t\t\tresponse = xhr.response;\n\t\t\t\t\t} else if (xhr.responseType === Http.ResponseType.BLOB || xhr.responseType === Http.ResponseType.JSON) {\n\t\t\t\t\t\tresponse = xhr.response;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (xhr.responseType === Http.ResponseType.DOCUMENT || contentType === this.ContentType.XML) {\n\t\t\t\t\t\t\tresponse = xhr.responseXML;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponse = xhr.responseText;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toptions.callback(null, response);\n\t\t\t} catch (err) {\n\t\t\t\toptions.callback(err);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onError = function _onError(method, url, options, xhr) {\n\t\t\tif (options.retrying) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (options.retry && options.retries < options.maxRetries) {\n\t\t\t\toptions.retries++;\n\t\t\t\toptions.retrying = true;\n\t\t\t\tvar retryDelay = math.clamp(Math.pow(2, options.retries) * Http.retryDelay, 0, options.maxRetryDelay || 5000);\n\t\t\t\tconsole.log(method + ': ' + url + ' - Error ' + xhr.status + '. Retrying in ' + retryDelay + ' ms');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\toptions.retrying = false;\n\t\t\t\t\tthis.request(method, url, options, options.callback);\n\t\t\t\t}.bind(this), retryDelay);\n\t\t\t} else {\n\t\t\t\toptions.callback(xhr.status === 0 ? 'Network error' : xhr.status, null);\n\t\t\t}\n\t\t};\n\n\t\treturn Http;\n\t}();\n\n\tHttp.ContentType = {\n\t\tFORM_URLENCODED: \"application/x-www-form-urlencoded\",\n\t\tGIF: \"image/gif\",\n\t\tJPEG: \"image/jpeg\",\n\t\tDDS: \"image/dds\",\n\t\tJSON: \"application/json\",\n\t\tPNG: \"image/png\",\n\t\tTEXT: \"text/plain\",\n\t\tXML: \"application/xml\",\n\t\tWAV: \"audio/x-wav\",\n\t\tOGG: \"audio/ogg\",\n\t\tMP3: \"audio/mpeg\",\n\t\tMP4: \"audio/mp4\",\n\t\tAAC: \"audio/aac\",\n\t\tBIN: \"application/octet-stream\",\n\t\tBASIS: \"image/basis\",\n\t\tGLB: \"model/gltf-binary\"\n\t};\n\tHttp.ResponseType = {\n\t\tTEXT: 'text',\n\t\tARRAY_BUFFER: 'arraybuffer',\n\t\tBLOB: 'blob',\n\t\tDOCUMENT: 'document',\n\t\tJSON: 'json'\n\t};\n\tHttp.binaryExtensions = ['.model', '.wav', '.ogg', '.mp3', '.mp4', '.m4a', '.aac', '.dds', '.basis', '.glb'];\n\tHttp.retryDelay = 100;\n\tvar http = new Http();\n\n\tvar CURVE_LINEAR = 0;\n\tvar CURVE_SMOOTHSTEP = 1;\n\tvar CURVE_CATMULL = 2;\n\tvar CURVE_CARDINAL = 3;\n\tvar CURVE_SPLINE = 4;\n\tvar CURVE_STEP = 5;\n\n\tvar CurveEvaluator = function () {\n\t\tfunction CurveEvaluator(curve, time) {\n\t\t\tthis._curve = curve;\n\t\t\tthis._left = -Infinity;\n\t\t\tthis._right = Infinity;\n\t\t\tthis._recip = 0;\n\t\t\tthis._p0 = 0;\n\t\t\tthis._p1 = 0;\n\t\t\tthis._m0 = 0;\n\t\t\tthis._m1 = 0;\n\n\t\t\tthis._reset(time || 0);\n\t\t}\n\n\t\tvar _proto = CurveEvaluator.prototype;\n\n\t\t_proto.evaluate = function evaluate(time, forceReset) {\n\t\t\tif (forceReset || time < this._left || time >= this._right) {\n\t\t\t\tthis._reset(time);\n\t\t\t}\n\n\t\t\tvar result;\n\t\t\tvar type = this._curve.type;\n\n\t\t\tif (type === CURVE_STEP) {\n\t\t\t\tresult = this._p0;\n\t\t\t} else {\n\t\t\t\tvar t = this._recip === 0 ? 0 : (time - this._left) * this._recip;\n\n\t\t\t\tif (type === CURVE_LINEAR) {\n\t\t\t\t\tresult = math.lerp(this._p0, this._p1, t);\n\t\t\t\t} else if (type === CURVE_SMOOTHSTEP) {\n\t\t\t\t\tresult = math.lerp(this._p0, this._p1, t * t * (3 - 2 * t));\n\t\t\t\t} else {\n\t\t\t\t\tresult = this._evaluateHermite(this._p0, this._p1, this._m0, this._m1, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._reset = function _reset(time) {\n\t\t\tvar keys = this._curve.keys;\n\t\t\tvar len = keys.length;\n\n\t\t\tif (!len) {\n\t\t\t\tthis._left = -Infinity;\n\t\t\t\tthis._right = Infinity;\n\t\t\t\tthis._recip = 0;\n\t\t\t\tthis._p0 = this._p1 = this._m0 = this._m1 = 0;\n\t\t\t} else {\n\t\t\t\tif (time < keys[0][0]) {\n\t\t\t\t\tthis._left = -Infinity;\n\t\t\t\t\tthis._right = keys[0][0];\n\t\t\t\t\tthis._recip = 0;\n\t\t\t\t\tthis._p0 = this._p1 = keys[0][1];\n\t\t\t\t\tthis._m0 = this._m1 = 0;\n\t\t\t\t} else if (time >= keys[len - 1][0]) {\n\t\t\t\t\tthis._left = keys[len - 1][0];\n\t\t\t\t\tthis._right = Infinity;\n\t\t\t\t\tthis._recip = 0;\n\t\t\t\t\tthis._p0 = this._p1 = keys[len - 1][1];\n\t\t\t\t\tthis._m0 = this._m1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar index = 0;\n\n\t\t\t\t\twhile (time >= keys[index + 1][0]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._left = keys[index][0];\n\t\t\t\t\tthis._right = keys[index + 1][0];\n\t\t\t\t\tvar diff = 1.0 / (this._right - this._left);\n\t\t\t\t\tthis._recip = isFinite(diff) ? diff : 0;\n\t\t\t\t\tthis._p0 = keys[index][1];\n\t\t\t\t\tthis._p1 = keys[index + 1][1];\n\n\t\t\t\t\tif (this._isHermite()) {\n\t\t\t\t\t\tthis._calcTangents(keys, index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._isHermite = function _isHermite() {\n\t\t\treturn this._curve.type === CURVE_CATMULL || this._curve.type === CURVE_CARDINAL || this._curve.type === CURVE_SPLINE;\n\t\t};\n\n\t\t_proto._calcTangents = function _calcTangents(keys, index) {\n\t\t\tvar a;\n\t\t\tvar b = keys[index];\n\t\t\tvar c = keys[index + 1];\n\t\t\tvar d;\n\n\t\t\tif (index === 0) {\n\t\t\t\ta = [keys[0][0] + (keys[0][0] - keys[1][0]), keys[0][1] + (keys[0][1] - keys[1][1])];\n\t\t\t} else {\n\t\t\t\ta = keys[index - 1];\n\t\t\t}\n\n\t\t\tif (index == keys.length - 2) {\n\t\t\t\td = [keys[index + 1][0] + (keys[index + 1][0] - keys[index][0]), keys[index + 1][1] + (keys[index + 1][1] - keys[index][1])];\n\t\t\t} else {\n\t\t\t\td = keys[index + 2];\n\t\t\t}\n\n\t\t\tif (this._curve.type === CURVE_SPLINE) {\n\t\t\t\tvar s1_ = 2 * (c[0] - b[0]) / (c[0] - a[0]);\n\t\t\t\tvar s2_ = 2 * (c[0] - b[0]) / (d[0] - b[0]);\n\t\t\t\tthis._m0 = this._curve.tension * (isFinite(s1_) ? s1_ : 0) * (c[1] - a[1]);\n\t\t\t\tthis._m1 = this._curve.tension * (isFinite(s2_) ? s2_ : 0) * (d[1] - b[1]);\n\t\t\t} else {\n\t\t\t\tvar s1 = (c[0] - b[0]) / (b[0] - a[0]);\n\t\t\t\tvar s2 = (c[0] - b[0]) / (d[0] - c[0]);\n\t\t\t\tvar a_ = b[1] + (a[1] - b[1]) * (isFinite(s1) ? s1 : 0);\n\t\t\t\tvar d_ = c[1] + (d[1] - c[1]) * (isFinite(s2) ? s2 : 0);\n\t\t\t\tvar tension = this._curve.type === CURVE_CATMULL ? 0.5 : this._curve.tension;\n\t\t\t\tthis._m0 = tension * (c[1] - a_);\n\t\t\t\tthis._m1 = tension * (d_ - b[1]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._evaluateHermite = function _evaluateHermite(p0, p1, m0, m1, t) {\n\t\t\tvar t2 = t * t;\n\t\t\tvar twot = t + t;\n\t\t\tvar omt = 1 - t;\n\t\t\tvar omt2 = omt * omt;\n\t\t\treturn p0 * ((1 + twot) * omt2) + m0 * (t * omt2) + p1 * (t2 * (3 - twot)) + m1 * (t2 * (t - 1));\n\t\t};\n\n\t\treturn CurveEvaluator;\n\t}();\n\n\tvar Curve = function () {\n\t\tfunction Curve(data) {\n\t\t\tthis.keys = [];\n\t\t\tthis.type = CURVE_SMOOTHSTEP;\n\t\t\tthis.tension = 0.5;\n\t\t\tthis._eval = new CurveEvaluator(this);\n\n\t\t\tif (data) {\n\t\t\t\tfor (var i = 0; i < data.length - 1; i += 2) {\n\t\t\t\t\tthis.keys.push([data[i], data[i + 1]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.sort();\n\t\t}\n\n\t\tvar _proto = Curve.prototype;\n\n\t\t_proto.add = function add(time, value) {\n\t\t\tvar keys = this.keys;\n\t\t\tvar len = keys.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < len; i++) {\n\t\t\t\tif (keys[i][0] > time) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar key = [time, value];\n\t\t\tthis.keys.splice(i, 0, key);\n\t\t\treturn key;\n\t\t};\n\n\t\t_proto.get = function get(index) {\n\t\t\treturn this.keys[index];\n\t\t};\n\n\t\t_proto.sort = function sort() {\n\t\t\tthis.keys.sort(function (a, b) {\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\t\t};\n\n\t\t_proto.value = function value(time) {\n\t\t\treturn this._eval.evaluate(time, true);\n\t\t};\n\n\t\t_proto.closest = function closest(time) {\n\t\t\tvar keys = this.keys;\n\t\t\tvar length = keys.length;\n\t\t\tvar min = 2;\n\t\t\tvar result = null;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar diff = Math.abs(time - keys[i][0]);\n\n\t\t\t\tif (min >= diff) {\n\t\t\t\t\tmin = diff;\n\t\t\t\t\tresult = keys[i];\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar result = new Curve();\n\t\t\tresult.keys = extend(result.keys, this.keys);\n\t\t\tresult.type = this.type;\n\t\t\tresult.tension = this.tension;\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.quantize = function quantize(precision) {\n\t\t\tprecision = Math.max(precision, 2);\n\t\t\tvar values = new Float32Array(precision);\n\t\t\tvar step = 1.0 / (precision - 1);\n\t\t\tvalues[0] = this._eval.evaluate(0, true);\n\n\t\t\tfor (var i = 1; i < precision; i++) {\n\t\t\t\tvalues[i] = this._eval.evaluate(step * i);\n\t\t\t}\n\n\t\t\treturn values;\n\t\t};\n\n\t\t_proto.quantizeClamped = function quantizeClamped(precision, min, max) {\n\t\t\tvar result = this.quantize(precision);\n\n\t\t\tfor (var i = 0; i < result.length; ++i) {\n\t\t\t\tresult[i] = Math.min(max, Math.max(min, result[i]));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_createClass(Curve, [{\n\t\t\tkey: \"length\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.keys.length;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Curve;\n\t}();\n\n\tvar CurveSet = function () {\n\t\tfunction CurveSet() {\n\t\t\tvar i;\n\t\t\tthis.curves = [];\n\t\t\tthis._type = CURVE_SMOOTHSTEP;\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.curves.push(new Curve(arguments[i]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\tthis.curves.push(new Curve());\n\t\t\t\t} else {\n\t\t\t\t\tvar arg = arguments[0];\n\n\t\t\t\t\tif (typeof arg === 'number') {\n\t\t\t\t\t\tfor (i = 0; i < arg; i++) {\n\t\t\t\t\t\t\tthis.curves.push(new Curve());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (i = 0; i < arg.length; i++) {\n\t\t\t\t\t\t\tthis.curves.push(new Curve(arg[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = CurveSet.prototype;\n\n\t\t_proto.get = function get(index) {\n\t\t\treturn this.curves[index];\n\t\t};\n\n\t\t_proto.value = function value(time, result) {\n\t\t\tif (result === void 0) {\n\t\t\t\tresult = [];\n\t\t\t}\n\n\t\t\tvar length = this.curves.length;\n\t\t\tresult.length = length;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tresult[i] = this.curves[i].value(time);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar result = new CurveSet();\n\t\t\tresult.curves = [];\n\n\t\t\tfor (var i = 0; i < this.curves.length; i++) {\n\t\t\t\tresult.curves.push(this.curves[i].clone());\n\t\t\t}\n\n\t\t\tresult._type = this._type;\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.quantize = function quantize(precision) {\n\t\t\tprecision = Math.max(precision, 2);\n\t\t\tvar numCurves = this.curves.length;\n\t\t\tvar values = new Float32Array(precision * numCurves);\n\t\t\tvar step = 1.0 / (precision - 1);\n\n\t\t\tfor (var c = 0; c < numCurves; c++) {\n\t\t\t\tvar ev = new CurveEvaluator(this.curves[c]);\n\n\t\t\t\tfor (var i = 0; i < precision; i++) {\n\t\t\t\t\tvalues[i * numCurves + c] = ev.evaluate(step * i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn values;\n\t\t};\n\n\t\t_proto.quantizeClamped = function quantizeClamped(precision, min, max) {\n\t\t\tvar result = this.quantize(precision);\n\n\t\t\tfor (var i = 0; i < result.length; ++i) {\n\t\t\t\tresult[i] = Math.min(max, Math.max(min, result[i]));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_createClass(CurveSet, [{\n\t\t\tkey: \"length\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.curves.length;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._type = value;\n\n\t\t\t\tfor (var i = 0; i < this.curves.length; i++) {\n\t\t\t\t\tthis.curves[i].type = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn CurveSet;\n\t}();\n\n\tvar Mat3 = function () {\n\t\tfunction Mat3() {\n\t\t\tvar data;\n\t\t\tdata = new Float32Array(9);\n\t\t\tdata[0] = data[4] = data[8] = 1;\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tvar _proto = Mat3.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Mat3().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tvar src = rhs.data;\n\t\t\tvar dst = this.data;\n\t\t\tdst[0] = src[0];\n\t\t\tdst[1] = src[1];\n\t\t\tdst[2] = src[2];\n\t\t\tdst[3] = src[3];\n\t\t\tdst[4] = src[4];\n\t\t\tdst[5] = src[5];\n\t\t\tdst[6] = src[6];\n\t\t\tdst[7] = src[7];\n\t\t\tdst[8] = src[8];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(src) {\n\t\t\tvar dst = this.data;\n\t\t\tdst[0] = src[0];\n\t\t\tdst[1] = src[1];\n\t\t\tdst[2] = src[2];\n\t\t\tdst[3] = src[3];\n\t\t\tdst[4] = src[4];\n\t\t\tdst[5] = src[5];\n\t\t\tdst[6] = src[6];\n\t\t\tdst[7] = src[7];\n\t\t\tdst[8] = src[8];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\tvar l = this.data;\n\t\t\tvar r = rhs.data;\n\t\t\treturn l[0] === r[0] && l[1] === r[1] && l[2] === r[2] && l[3] === r[3] && l[4] === r[4] && l[5] === r[5] && l[6] === r[6] && l[7] === r[7] && l[8] === r[8];\n\t\t};\n\n\t\t_proto.isIdentity = function isIdentity() {\n\t\t\tvar m = this.data;\n\t\t\treturn m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 0 && m[4] === 1 && m[5] === 0 && m[6] === 0 && m[7] === 0 && m[8] === 1;\n\t\t};\n\n\t\t_proto.setIdentity = function setIdentity() {\n\t\t\tvar m = this.data;\n\t\t\tm[0] = 1;\n\t\t\tm[1] = 0;\n\t\t\tm[2] = 0;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = 1;\n\t\t\tm[5] = 0;\n\t\t\tm[6] = 0;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\tvar t = '[';\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tt += this.data[i];\n\t\t\t\tt += i !== 8 ? ', ' : '';\n\t\t\t}\n\n\t\t\tt += ']';\n\t\t\treturn t;\n\t\t};\n\n\t\t_proto.transpose = function transpose() {\n\t\t\tvar m = this.data;\n\t\t\tvar tmp;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMat4 = function setFromMat4(m) {\n\t\t\tvar src = m.data;\n\t\t\tvar dst = this.data;\n\t\t\tdst[0] = src[0];\n\t\t\tdst[1] = src[1];\n\t\t\tdst[2] = src[2];\n\t\t\tdst[3] = src[4];\n\t\t\tdst[4] = src[5];\n\t\t\tdst[5] = src[6];\n\t\t\tdst[6] = src[8];\n\t\t\tdst[7] = src[9];\n\t\t\tdst[8] = src[10];\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Mat3;\n\t}();\n\n\tMat3.IDENTITY = Object.freeze(new Mat3());\n\tMat3.ZERO = Object.freeze(new Mat3().set([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\n\tvar Vec2 = function () {\n\t\tfunction Vec2(x, y) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (x.length === 2) {\n\t\t\t\tthis.x = x[0];\n\t\t\t\tthis.y = x[1];\n\t\t\t} else {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Vec2.prototype;\n\n\t\t_proto.add = function add(rhs) {\n\t\t\tthis.x += rhs.x;\n\t\t\tthis.y += rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add2 = function add2(lhs, rhs) {\n\t\t\tthis.x = lhs.x + rhs.x;\n\t\t\tthis.y = lhs.y + rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Vec2(this.x, this.y);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tthis.x = rhs.x;\n\t\t\tthis.y = rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.distance = function distance(rhs) {\n\t\t\tvar x = this.x - rhs.x;\n\t\t\tvar y = this.y - rhs.y;\n\t\t\treturn Math.sqrt(x * x + y * y);\n\t\t};\n\n\t\t_proto.dot = function dot(rhs) {\n\t\t\treturn this.x * rhs.x + this.y * rhs.y;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\treturn this.x === rhs.x && this.y === rhs.y;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t};\n\n\t\t_proto.lerp = function lerp(lhs, rhs, alpha) {\n\t\t\tthis.x = lhs.x + alpha * (rhs.x - lhs.x);\n\t\t\tthis.y = lhs.y + alpha * (rhs.y - lhs.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul = function mul(rhs) {\n\t\t\tthis.x *= rhs.x;\n\t\t\tthis.y *= rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul2 = function mul2(lhs, rhs) {\n\t\t\tthis.x = lhs.x * rhs.x;\n\t\t\tthis.y = lhs.y * rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\tvar lengthSq = this.x * this.x + this.y * this.y;\n\n\t\t\tif (lengthSq > 0) {\n\t\t\t\tvar invLength = 1 / Math.sqrt(lengthSq);\n\t\t\t\tthis.x *= invLength;\n\t\t\t\tthis.y *= invLength;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(rhs) {\n\t\t\tthis.x -= rhs.x;\n\t\t\tthis.y -= rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub2 = function sub2(lhs, rhs) {\n\t\t\tthis.x = lhs.x - rhs.x;\n\t\t\tthis.y = lhs.y - rhs.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\treturn '[' + this.x + ', ' + this.y + ']';\n\t\t};\n\n\t\treturn Vec2;\n\t}();\n\n\tVec2.ZERO = Object.freeze(new Vec2(0, 0));\n\tVec2.ONE = Object.freeze(new Vec2(1, 1));\n\tVec2.UP = Object.freeze(new Vec2(0, 1));\n\tVec2.DOWN = Object.freeze(new Vec2(0, -1));\n\tVec2.RIGHT = Object.freeze(new Vec2(1, 0));\n\tVec2.LEFT = Object.freeze(new Vec2(-1, 0));\n\n\tvar Vec3 = function () {\n\t\tfunction Vec3(x, y, z) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (x.length === 3) {\n\t\t\t\tthis.x = x[0];\n\t\t\t\tthis.y = x[1];\n\t\t\t\tthis.z = x[2];\n\t\t\t} else {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Vec3.prototype;\n\n\t\t_proto.add = function add(rhs) {\n\t\t\tthis.x += rhs.x;\n\t\t\tthis.y += rhs.y;\n\t\t\tthis.z += rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add2 = function add2(lhs, rhs) {\n\t\t\tthis.x = lhs.x + rhs.x;\n\t\t\tthis.y = lhs.y + rhs.y;\n\t\t\tthis.z = lhs.z + rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Vec3(this.x, this.y, this.z);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tthis.x = rhs.x;\n\t\t\tthis.y = rhs.y;\n\t\t\tthis.z = rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.cross = function cross(lhs, rhs) {\n\t\t\tvar lx = lhs.x;\n\t\t\tvar ly = lhs.y;\n\t\t\tvar lz = lhs.z;\n\t\t\tvar rx = rhs.x;\n\t\t\tvar ry = rhs.y;\n\t\t\tvar rz = rhs.z;\n\t\t\tthis.x = ly * rz - ry * lz;\n\t\t\tthis.y = lz * rx - rz * lx;\n\t\t\tthis.z = lx * ry - rx * ly;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.distance = function distance(rhs) {\n\t\t\tvar x = this.x - rhs.x;\n\t\t\tvar y = this.y - rhs.y;\n\t\t\tvar z = this.z - rhs.z;\n\t\t\treturn Math.sqrt(x * x + y * y + z * z);\n\t\t};\n\n\t\t_proto.dot = function dot(rhs) {\n\t\t\treturn this.x * rhs.x + this.y * rhs.y + this.z * rhs.z;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\treturn this.x === rhs.x && this.y === rhs.y && this.z === rhs.z;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t};\n\n\t\t_proto.lerp = function lerp(lhs, rhs, alpha) {\n\t\t\tthis.x = lhs.x + alpha * (rhs.x - lhs.x);\n\t\t\tthis.y = lhs.y + alpha * (rhs.y - lhs.y);\n\t\t\tthis.z = lhs.z + alpha * (rhs.z - lhs.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul = function mul(rhs) {\n\t\t\tthis.x *= rhs.x;\n\t\t\tthis.y *= rhs.y;\n\t\t\tthis.z *= rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul2 = function mul2(lhs, rhs) {\n\t\t\tthis.x = lhs.x * rhs.x;\n\t\t\tthis.y = lhs.y * rhs.y;\n\t\t\tthis.z = lhs.z * rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\tvar lengthSq = this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t\tif (lengthSq > 0) {\n\t\t\t\tvar invLength = 1 / Math.sqrt(lengthSq);\n\t\t\t\tthis.x *= invLength;\n\t\t\t\tthis.y *= invLength;\n\t\t\t\tthis.z *= invLength;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.project = function project(rhs) {\n\t\t\tvar a_dot_b = this.x * rhs.x + this.y * rhs.y + this.z * rhs.z;\n\t\t\tvar b_dot_b = rhs.x * rhs.x + rhs.y * rhs.y + rhs.z * rhs.z;\n\t\t\tvar s = a_dot_b / b_dot_b;\n\t\t\tthis.x = rhs.x * s;\n\t\t\tthis.y = rhs.y * s;\n\t\t\tthis.z = rhs.z * s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(x, y, z) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(rhs) {\n\t\t\tthis.x -= rhs.x;\n\t\t\tthis.y -= rhs.y;\n\t\t\tthis.z -= rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub2 = function sub2(lhs, rhs) {\n\t\t\tthis.x = lhs.x - rhs.x;\n\t\t\tthis.y = lhs.y - rhs.y;\n\t\t\tthis.z = lhs.z - rhs.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\treturn '[' + this.x + ', ' + this.y + ', ' + this.z + ']';\n\t\t};\n\n\t\treturn Vec3;\n\t}();\n\n\tVec3.ZERO = Object.freeze(new Vec3(0, 0, 0));\n\tVec3.ONE = Object.freeze(new Vec3(1, 1, 1));\n\tVec3.UP = Object.freeze(new Vec3(0, 1, 0));\n\tVec3.DOWN = Object.freeze(new Vec3(0, -1, 0));\n\tVec3.RIGHT = Object.freeze(new Vec3(1, 0, 0));\n\tVec3.LEFT = Object.freeze(new Vec3(-1, 0, 0));\n\tVec3.FORWARD = Object.freeze(new Vec3(0, 0, -1));\n\tVec3.BACK = Object.freeze(new Vec3(0, 0, 1));\n\n\tvar Vec4 = function () {\n\t\tfunction Vec4(x, y, z, w) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (w === void 0) {\n\t\t\t\tw = 0;\n\t\t\t}\n\n\t\t\tif (x.length === 4) {\n\t\t\t\tthis.x = x[0];\n\t\t\t\tthis.y = x[1];\n\t\t\t\tthis.z = x[2];\n\t\t\t\tthis.w = x[3];\n\t\t\t} else {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t\tthis.w = w;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Vec4.prototype;\n\n\t\t_proto.add = function add(rhs) {\n\t\t\tthis.x += rhs.x;\n\t\t\tthis.y += rhs.y;\n\t\t\tthis.z += rhs.z;\n\t\t\tthis.w += rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add2 = function add2(lhs, rhs) {\n\t\t\tthis.x = lhs.x + rhs.x;\n\t\t\tthis.y = lhs.y + rhs.y;\n\t\t\tthis.z = lhs.z + rhs.z;\n\t\t\tthis.w = lhs.w + rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Vec4(this.x, this.y, this.z, this.w);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tthis.x = rhs.x;\n\t\t\tthis.y = rhs.y;\n\t\t\tthis.z = rhs.z;\n\t\t\tthis.w = rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dot = function dot(rhs) {\n\t\t\treturn this.x * rhs.x + this.y * rhs.y + this.z * rhs.z + this.w * rhs.w;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\treturn this.x === rhs.x && this.y === rhs.y && this.z === rhs.z && this.w === rhs.w;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t};\n\n\t\t_proto.lerp = function lerp(lhs, rhs, alpha) {\n\t\t\tthis.x = lhs.x + alpha * (rhs.x - lhs.x);\n\t\t\tthis.y = lhs.y + alpha * (rhs.y - lhs.y);\n\t\t\tthis.z = lhs.z + alpha * (rhs.z - lhs.z);\n\t\t\tthis.w = lhs.w + alpha * (rhs.w - lhs.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul = function mul(rhs) {\n\t\t\tthis.x *= rhs.x;\n\t\t\tthis.y *= rhs.y;\n\t\t\tthis.z *= rhs.z;\n\t\t\tthis.w *= rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul2 = function mul2(lhs, rhs) {\n\t\t\tthis.x = lhs.x * rhs.x;\n\t\t\tthis.y = lhs.y * rhs.y;\n\t\t\tthis.z = lhs.z * rhs.z;\n\t\t\tthis.w = lhs.w * rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\tvar lengthSq = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t\tif (lengthSq > 0) {\n\t\t\t\tvar invLength = 1 / Math.sqrt(lengthSq);\n\t\t\t\tthis.x *= invLength;\n\t\t\t\tthis.y *= invLength;\n\t\t\t\tthis.z *= invLength;\n\t\t\t\tthis.w *= invLength;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(rhs) {\n\t\t\tthis.x -= rhs.x;\n\t\t\tthis.y -= rhs.y;\n\t\t\tthis.z -= rhs.z;\n\t\t\tthis.w -= rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub2 = function sub2(lhs, rhs) {\n\t\t\tthis.x = lhs.x - rhs.x;\n\t\t\tthis.y = lhs.y - rhs.y;\n\t\t\tthis.z = lhs.z - rhs.z;\n\t\t\tthis.w = lhs.w - rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\treturn '[' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ']';\n\t\t};\n\n\t\treturn Vec4;\n\t}();\n\n\tVec4.ZERO = Object.freeze(new Vec4(0, 0, 0, 0));\n\tVec4.ONE = Object.freeze(new Vec4(1, 1, 1, 1));\n\n\tvar _halfSize = new Vec2();\n\n\tvar x = new Vec3();\n\tvar y = new Vec3();\n\tvar z = new Vec3();\n\tvar scale = new Vec3();\n\n\tvar Mat4 = function () {\n\t\tfunction Mat4() {\n\t\t\tvar data = new Float32Array(16);\n\t\t\tdata[0] = data[5] = data[10] = data[15] = 1;\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tMat4._getPerspectiveHalfSize = function _getPerspectiveHalfSize(halfSize, fov, aspect, znear, fovIsHorizontal) {\n\t\t\tif (fovIsHorizontal) {\n\t\t\t\thalfSize.x = znear * Math.tan(fov * Math.PI / 360);\n\t\t\t\thalfSize.y = halfSize.x / aspect;\n\t\t\t} else {\n\t\t\t\thalfSize.y = znear * Math.tan(fov * Math.PI / 360);\n\t\t\t\thalfSize.x = halfSize.y * aspect;\n\t\t\t}\n\t\t};\n\n\t\tvar _proto = Mat4.prototype;\n\n\t\t_proto.add2 = function add2(lhs, rhs) {\n\t\t\tvar a = lhs.data,\n\t\t\t\t\tb = rhs.data,\n\t\t\t\t\tr = this.data;\n\t\t\tr[0] = a[0] + b[0];\n\t\t\tr[1] = a[1] + b[1];\n\t\t\tr[2] = a[2] + b[2];\n\t\t\tr[3] = a[3] + b[3];\n\t\t\tr[4] = a[4] + b[4];\n\t\t\tr[5] = a[5] + b[5];\n\t\t\tr[6] = a[6] + b[6];\n\t\t\tr[7] = a[7] + b[7];\n\t\t\tr[8] = a[8] + b[8];\n\t\t\tr[9] = a[9] + b[9];\n\t\t\tr[10] = a[10] + b[10];\n\t\t\tr[11] = a[11] + b[11];\n\t\t\tr[12] = a[12] + b[12];\n\t\t\tr[13] = a[13] + b[13];\n\t\t\tr[14] = a[14] + b[14];\n\t\t\tr[15] = a[15] + b[15];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add = function add(rhs) {\n\t\t\treturn this.add2(this, rhs);\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Mat4().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tvar src = rhs.data,\n\t\t\t\t\tdst = this.data;\n\t\t\tdst[0] = src[0];\n\t\t\tdst[1] = src[1];\n\t\t\tdst[2] = src[2];\n\t\t\tdst[3] = src[3];\n\t\t\tdst[4] = src[4];\n\t\t\tdst[5] = src[5];\n\t\t\tdst[6] = src[6];\n\t\t\tdst[7] = src[7];\n\t\t\tdst[8] = src[8];\n\t\t\tdst[9] = src[9];\n\t\t\tdst[10] = src[10];\n\t\t\tdst[11] = src[11];\n\t\t\tdst[12] = src[12];\n\t\t\tdst[13] = src[13];\n\t\t\tdst[14] = src[14];\n\t\t\tdst[15] = src[15];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\tvar l = this.data,\n\t\t\t\t\tr = rhs.data;\n\t\t\treturn l[0] === r[0] && l[1] === r[1] && l[2] === r[2] && l[3] === r[3] && l[4] === r[4] && l[5] === r[5] && l[6] === r[6] && l[7] === r[7] && l[8] === r[8] && l[9] === r[9] && l[10] === r[10] && l[11] === r[11] && l[12] === r[12] && l[13] === r[13] && l[14] === r[14] && l[15] === r[15];\n\t\t};\n\n\t\t_proto.isIdentity = function isIdentity() {\n\t\t\tvar m = this.data;\n\t\t\treturn m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 0 && m[4] === 0 && m[5] === 1 && m[6] === 0 && m[7] === 0 && m[8] === 0 && m[9] === 0 && m[10] === 1 && m[11] === 0 && m[12] === 0 && m[13] === 0 && m[14] === 0 && m[15] === 1;\n\t\t};\n\n\t\t_proto.mul2 = function mul2(lhs, rhs) {\n\t\t\tvar a00,\n\t\t\t\t\ta01,\n\t\t\t\t\ta02,\n\t\t\t\t\ta03,\n\t\t\t\t\ta10,\n\t\t\t\t\ta11,\n\t\t\t\t\ta12,\n\t\t\t\t\ta13,\n\t\t\t\t\ta20,\n\t\t\t\t\ta21,\n\t\t\t\t\ta22,\n\t\t\t\t\ta23,\n\t\t\t\t\ta30,\n\t\t\t\t\ta31,\n\t\t\t\t\ta32,\n\t\t\t\t\ta33,\n\t\t\t\t\tb0,\n\t\t\t\t\tb1,\n\t\t\t\t\tb2,\n\t\t\t\t\tb3,\n\t\t\t\t\ta = lhs.data,\n\t\t\t\t\tb = rhs.data,\n\t\t\t\t\tr = this.data;\n\t\t\ta00 = a[0];\n\t\t\ta01 = a[1];\n\t\t\ta02 = a[2];\n\t\t\ta03 = a[3];\n\t\t\ta10 = a[4];\n\t\t\ta11 = a[5];\n\t\t\ta12 = a[6];\n\t\t\ta13 = a[7];\n\t\t\ta20 = a[8];\n\t\t\ta21 = a[9];\n\t\t\ta22 = a[10];\n\t\t\ta23 = a[11];\n\t\t\ta30 = a[12];\n\t\t\ta31 = a[13];\n\t\t\ta32 = a[14];\n\t\t\ta33 = a[15];\n\t\t\tb0 = b[0];\n\t\t\tb1 = b[1];\n\t\t\tb2 = b[2];\n\t\t\tb3 = b[3];\n\t\t\tr[0] = a00 * b0 + a10 * b1 + a20 * b2 + a30 * b3;\n\t\t\tr[1] = a01 * b0 + a11 * b1 + a21 * b2 + a31 * b3;\n\t\t\tr[2] = a02 * b0 + a12 * b1 + a22 * b2 + a32 * b3;\n\t\t\tr[3] = a03 * b0 + a13 * b1 + a23 * b2 + a33 * b3;\n\t\t\tb0 = b[4];\n\t\t\tb1 = b[5];\n\t\t\tb2 = b[6];\n\t\t\tb3 = b[7];\n\t\t\tr[4] = a00 * b0 + a10 * b1 + a20 * b2 + a30 * b3;\n\t\t\tr[5] = a01 * b0 + a11 * b1 + a21 * b2 + a31 * b3;\n\t\t\tr[6] = a02 * b0 + a12 * b1 + a22 * b2 + a32 * b3;\n\t\t\tr[7] = a03 * b0 + a13 * b1 + a23 * b2 + a33 * b3;\n\t\t\tb0 = b[8];\n\t\t\tb1 = b[9];\n\t\t\tb2 = b[10];\n\t\t\tb3 = b[11];\n\t\t\tr[8] = a00 * b0 + a10 * b1 + a20 * b2 + a30 * b3;\n\t\t\tr[9] = a01 * b0 + a11 * b1 + a21 * b2 + a31 * b3;\n\t\t\tr[10] = a02 * b0 + a12 * b1 + a22 * b2 + a32 * b3;\n\t\t\tr[11] = a03 * b0 + a13 * b1 + a23 * b2 + a33 * b3;\n\t\t\tb0 = b[12];\n\t\t\tb1 = b[13];\n\t\t\tb2 = b[14];\n\t\t\tb3 = b[15];\n\t\t\tr[12] = a00 * b0 + a10 * b1 + a20 * b2 + a30 * b3;\n\t\t\tr[13] = a01 * b0 + a11 * b1 + a21 * b2 + a31 * b3;\n\t\t\tr[14] = a02 * b0 + a12 * b1 + a22 * b2 + a32 * b3;\n\t\t\tr[15] = a03 * b0 + a13 * b1 + a23 * b2 + a33 * b3;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mulAffine2 = function mulAffine2(lhs, rhs) {\n\t\t\tvar a00,\n\t\t\t\t\ta01,\n\t\t\t\t\ta02,\n\t\t\t\t\ta10,\n\t\t\t\t\ta11,\n\t\t\t\t\ta12,\n\t\t\t\t\ta20,\n\t\t\t\t\ta21,\n\t\t\t\t\ta22,\n\t\t\t\t\ta30,\n\t\t\t\t\ta31,\n\t\t\t\t\ta32,\n\t\t\t\t\tb0,\n\t\t\t\t\tb1,\n\t\t\t\t\tb2,\n\t\t\t\t\ta = lhs.data,\n\t\t\t\t\tb = rhs.data,\n\t\t\t\t\tr = this.data;\n\t\t\ta00 = a[0];\n\t\t\ta01 = a[1];\n\t\t\ta02 = a[2];\n\t\t\ta10 = a[4];\n\t\t\ta11 = a[5];\n\t\t\ta12 = a[6];\n\t\t\ta20 = a[8];\n\t\t\ta21 = a[9];\n\t\t\ta22 = a[10];\n\t\t\ta30 = a[12];\n\t\t\ta31 = a[13];\n\t\t\ta32 = a[14];\n\t\t\tb0 = b[0];\n\t\t\tb1 = b[1];\n\t\t\tb2 = b[2];\n\t\t\tr[0] = a00 * b0 + a10 * b1 + a20 * b2;\n\t\t\tr[1] = a01 * b0 + a11 * b1 + a21 * b2;\n\t\t\tr[2] = a02 * b0 + a12 * b1 + a22 * b2;\n\t\t\tr[3] = 0;\n\t\t\tb0 = b[4];\n\t\t\tb1 = b[5];\n\t\t\tb2 = b[6];\n\t\t\tr[4] = a00 * b0 + a10 * b1 + a20 * b2;\n\t\t\tr[5] = a01 * b0 + a11 * b1 + a21 * b2;\n\t\t\tr[6] = a02 * b0 + a12 * b1 + a22 * b2;\n\t\t\tr[7] = 0;\n\t\t\tb0 = b[8];\n\t\t\tb1 = b[9];\n\t\t\tb2 = b[10];\n\t\t\tr[8] = a00 * b0 + a10 * b1 + a20 * b2;\n\t\t\tr[9] = a01 * b0 + a11 * b1 + a21 * b2;\n\t\t\tr[10] = a02 * b0 + a12 * b1 + a22 * b2;\n\t\t\tr[11] = 0;\n\t\t\tb0 = b[12];\n\t\t\tb1 = b[13];\n\t\t\tb2 = b[14];\n\t\t\tr[12] = a00 * b0 + a10 * b1 + a20 * b2 + a30;\n\t\t\tr[13] = a01 * b0 + a11 * b1 + a21 * b2 + a31;\n\t\t\tr[14] = a02 * b0 + a12 * b1 + a22 * b2 + a32;\n\t\t\tr[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul = function mul(rhs) {\n\t\t\treturn this.mul2(this, rhs);\n\t\t};\n\n\t\t_proto.transformPoint = function transformPoint(vec, res) {\n\t\t\tif (res === void 0) {\n\t\t\t\tres = new Vec3();\n\t\t\t}\n\n\t\t\tvar x, y, z, m;\n\t\t\tm = this.data;\n\t\t\tx = vec.x;\n\t\t\ty = vec.y;\n\t\t\tz = vec.z;\n\t\t\tres.x = x * m[0] + y * m[4] + z * m[8] + m[12];\n\t\t\tres.y = x * m[1] + y * m[5] + z * m[9] + m[13];\n\t\t\tres.z = x * m[2] + y * m[6] + z * m[10] + m[14];\n\t\t\treturn res;\n\t\t};\n\n\t\t_proto.transformVector = function transformVector(vec, res) {\n\t\t\tif (res === void 0) {\n\t\t\t\tres = new Vec3();\n\t\t\t}\n\n\t\t\tvar x, y, z, m;\n\t\t\tm = this.data;\n\t\t\tx = vec.x;\n\t\t\ty = vec.y;\n\t\t\tz = vec.z;\n\t\t\tres.x = x * m[0] + y * m[4] + z * m[8];\n\t\t\tres.y = x * m[1] + y * m[5] + z * m[9];\n\t\t\tres.z = x * m[2] + y * m[6] + z * m[10];\n\t\t\treturn res;\n\t\t};\n\n\t\t_proto.transformVec4 = function transformVec4(vec, res) {\n\t\t\tif (res === void 0) {\n\t\t\t\tres = new Vec4();\n\t\t\t}\n\n\t\t\tvar x, y, z, w, m;\n\t\t\tm = this.data;\n\t\t\tx = vec.x;\n\t\t\ty = vec.y;\n\t\t\tz = vec.z;\n\t\t\tw = vec.w;\n\t\t\tres.x = x * m[0] + y * m[4] + z * m[8] + w * m[12];\n\t\t\tres.y = x * m[1] + y * m[5] + z * m[9] + w * m[13];\n\t\t\tres.z = x * m[2] + y * m[6] + z * m[10] + w * m[14];\n\t\t\tres.w = x * m[3] + y * m[7] + z * m[11] + w * m[15];\n\t\t\treturn res;\n\t\t};\n\n\t\t_proto.setLookAt = function setLookAt(position, target, up) {\n\t\t\tz.sub2(position, target).normalize();\n\t\t\ty.copy(up).normalize();\n\t\t\tx.cross(y, z).normalize();\n\t\t\ty.cross(z, x);\n\t\t\tvar r = this.data;\n\t\t\tr[0] = x.x;\n\t\t\tr[1] = x.y;\n\t\t\tr[2] = x.z;\n\t\t\tr[3] = 0;\n\t\t\tr[4] = y.x;\n\t\t\tr[5] = y.y;\n\t\t\tr[6] = y.z;\n\t\t\tr[7] = 0;\n\t\t\tr[8] = z.x;\n\t\t\tr[9] = z.y;\n\t\t\tr[10] = z.z;\n\t\t\tr[11] = 0;\n\t\t\tr[12] = position.x;\n\t\t\tr[13] = position.y;\n\t\t\tr[14] = position.z;\n\t\t\tr[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFrustum = function setFrustum(left, right, bottom, top, znear, zfar) {\n\t\t\tvar temp1, temp2, temp3, temp4, r;\n\t\t\ttemp1 = 2 * znear;\n\t\t\ttemp2 = right - left;\n\t\t\ttemp3 = top - bottom;\n\t\t\ttemp4 = zfar - znear;\n\t\t\tr = this.data;\n\t\t\tr[0] = temp1 / temp2;\n\t\t\tr[1] = 0;\n\t\t\tr[2] = 0;\n\t\t\tr[3] = 0;\n\t\t\tr[4] = 0;\n\t\t\tr[5] = temp1 / temp3;\n\t\t\tr[6] = 0;\n\t\t\tr[7] = 0;\n\t\t\tr[8] = (right + left) / temp2;\n\t\t\tr[9] = (top + bottom) / temp3;\n\t\t\tr[10] = (-zfar - znear) / temp4;\n\t\t\tr[11] = -1;\n\t\t\tr[12] = 0;\n\t\t\tr[13] = 0;\n\t\t\tr[14] = -temp1 * zfar / temp4;\n\t\t\tr[15] = 0;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setPerspective = function setPerspective(fov, aspect, znear, zfar, fovIsHorizontal) {\n\t\t\tMat4._getPerspectiveHalfSize(_halfSize, fov, aspect, znear, fovIsHorizontal);\n\n\t\t\treturn this.setFrustum(-_halfSize.x, _halfSize.x, -_halfSize.y, _halfSize.y, znear, zfar);\n\t\t};\n\n\t\t_proto.setOrtho = function setOrtho(left, right, bottom, top, near, far) {\n\t\t\tvar r = this.data;\n\t\t\tr[0] = 2 / (right - left);\n\t\t\tr[1] = 0;\n\t\t\tr[2] = 0;\n\t\t\tr[3] = 0;\n\t\t\tr[4] = 0;\n\t\t\tr[5] = 2 / (top - bottom);\n\t\t\tr[6] = 0;\n\t\t\tr[7] = 0;\n\t\t\tr[8] = 0;\n\t\t\tr[9] = 0;\n\t\t\tr[10] = -2 / (far - near);\n\t\t\tr[11] = 0;\n\t\t\tr[12] = -(right + left) / (right - left);\n\t\t\tr[13] = -(top + bottom) / (top - bottom);\n\t\t\tr[14] = -(far + near) / (far - near);\n\t\t\tr[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromAxisAngle = function setFromAxisAngle(axis, angle) {\n\t\t\tvar x, y, z, c, s, t, tx, ty, m;\n\t\t\tangle *= math.DEG_TO_RAD;\n\t\t\tx = axis.x;\n\t\t\ty = axis.y;\n\t\t\tz = axis.z;\n\t\t\tc = Math.cos(angle);\n\t\t\ts = Math.sin(angle);\n\t\t\tt = 1 - c;\n\t\t\ttx = t * x;\n\t\t\tty = t * y;\n\t\t\tm = this.data;\n\t\t\tm[0] = tx * x + c;\n\t\t\tm[1] = tx * y + s * z;\n\t\t\tm[2] = tx * z - s * y;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = tx * y - s * z;\n\t\t\tm[5] = ty * y + c;\n\t\t\tm[6] = ty * z + s * x;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = tx * z + s * y;\n\t\t\tm[9] = ty * z - x * s;\n\t\t\tm[10] = t * z * z + c;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = 0;\n\t\t\tm[13] = 0;\n\t\t\tm[14] = 0;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setTranslate = function setTranslate(x, y, z) {\n\t\t\tvar m = this.data;\n\t\t\tm[0] = 1;\n\t\t\tm[1] = 0;\n\t\t\tm[2] = 0;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = 0;\n\t\t\tm[5] = 1;\n\t\t\tm[6] = 0;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = 0;\n\t\t\tm[9] = 0;\n\t\t\tm[10] = 1;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = x;\n\t\t\tm[13] = y;\n\t\t\tm[14] = z;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setScale = function setScale(x, y, z) {\n\t\t\tvar m = this.data;\n\t\t\tm[0] = x;\n\t\t\tm[1] = 0;\n\t\t\tm[2] = 0;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = 0;\n\t\t\tm[5] = y;\n\t\t\tm[6] = 0;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = 0;\n\t\t\tm[9] = 0;\n\t\t\tm[10] = z;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = 0;\n\t\t\tm[13] = 0;\n\t\t\tm[14] = 0;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.invert = function invert() {\n\t\t\tvar a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33, b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11, det, invDet, m;\n\t\t\tm = this.data;\n\t\t\ta00 = m[0];\n\t\t\ta01 = m[1];\n\t\t\ta02 = m[2];\n\t\t\ta03 = m[3];\n\t\t\ta10 = m[4];\n\t\t\ta11 = m[5];\n\t\t\ta12 = m[6];\n\t\t\ta13 = m[7];\n\t\t\ta20 = m[8];\n\t\t\ta21 = m[9];\n\t\t\ta22 = m[10];\n\t\t\ta23 = m[11];\n\t\t\ta30 = m[12];\n\t\t\ta31 = m[13];\n\t\t\ta32 = m[14];\n\t\t\ta33 = m[15];\n\t\t\tb00 = a00 * a11 - a01 * a10;\n\t\t\tb01 = a00 * a12 - a02 * a10;\n\t\t\tb02 = a00 * a13 - a03 * a10;\n\t\t\tb03 = a01 * a12 - a02 * a11;\n\t\t\tb04 = a01 * a13 - a03 * a11;\n\t\t\tb05 = a02 * a13 - a03 * a12;\n\t\t\tb06 = a20 * a31 - a21 * a30;\n\t\t\tb07 = a20 * a32 - a22 * a30;\n\t\t\tb08 = a20 * a33 - a23 * a30;\n\t\t\tb09 = a21 * a32 - a22 * a31;\n\t\t\tb10 = a21 * a33 - a23 * a31;\n\t\t\tb11 = a22 * a33 - a23 * a32;\n\t\t\tdet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\t\t\tif (det === 0) {\n\t\t\t\tthis.setIdentity();\n\t\t\t} else {\n\t\t\t\tinvDet = 1 / det;\n\t\t\t\tm[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n\t\t\t\tm[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n\t\t\t\tm[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n\t\t\t\tm[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n\t\t\t\tm[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n\t\t\t\tm[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n\t\t\t\tm[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n\t\t\t\tm[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n\t\t\t\tm[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n\t\t\t\tm[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n\t\t\t\tm[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n\t\t\t\tm[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n\t\t\t\tm[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n\t\t\t\tm[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n\t\t\t\tm[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n\t\t\t\tm[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(src) {\n\t\t\tvar dst = this.data;\n\t\t\tdst[0] = src[0];\n\t\t\tdst[1] = src[1];\n\t\t\tdst[2] = src[2];\n\t\t\tdst[3] = src[3];\n\t\t\tdst[4] = src[4];\n\t\t\tdst[5] = src[5];\n\t\t\tdst[6] = src[6];\n\t\t\tdst[7] = src[7];\n\t\t\tdst[8] = src[8];\n\t\t\tdst[9] = src[9];\n\t\t\tdst[10] = src[10];\n\t\t\tdst[11] = src[11];\n\t\t\tdst[12] = src[12];\n\t\t\tdst[13] = src[13];\n\t\t\tdst[14] = src[14];\n\t\t\tdst[15] = src[15];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setIdentity = function setIdentity() {\n\t\t\tvar m = this.data;\n\t\t\tm[0] = 1;\n\t\t\tm[1] = 0;\n\t\t\tm[2] = 0;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = 0;\n\t\t\tm[5] = 1;\n\t\t\tm[6] = 0;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = 0;\n\t\t\tm[9] = 0;\n\t\t\tm[10] = 1;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = 0;\n\t\t\tm[13] = 0;\n\t\t\tm[14] = 0;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setTRS = function setTRS(t, r, s) {\n\t\t\tvar qx, qy, qz, qw, sx, sy, sz, x2, y2, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, m;\n\t\t\tqx = r.x;\n\t\t\tqy = r.y;\n\t\t\tqz = r.z;\n\t\t\tqw = r.w;\n\t\t\tsx = s.x;\n\t\t\tsy = s.y;\n\t\t\tsz = s.z;\n\t\t\tx2 = qx + qx;\n\t\t\ty2 = qy + qy;\n\t\t\tz2 = qz + qz;\n\t\t\txx = qx * x2;\n\t\t\txy = qx * y2;\n\t\t\txz = qx * z2;\n\t\t\tyy = qy * y2;\n\t\t\tyz = qy * z2;\n\t\t\tzz = qz * z2;\n\t\t\twx = qw * x2;\n\t\t\twy = qw * y2;\n\t\t\twz = qw * z2;\n\t\t\tm = this.data;\n\t\t\tm[0] = (1 - (yy + zz)) * sx;\n\t\t\tm[1] = (xy + wz) * sx;\n\t\t\tm[2] = (xz - wy) * sx;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = (xy - wz) * sy;\n\t\t\tm[5] = (1 - (xx + zz)) * sy;\n\t\t\tm[6] = (yz + wx) * sy;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = (xz + wy) * sz;\n\t\t\tm[9] = (yz - wx) * sz;\n\t\t\tm[10] = (1 - (xx + yy)) * sz;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = t.x;\n\t\t\tm[13] = t.y;\n\t\t\tm[14] = t.z;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.transpose = function transpose() {\n\t\t\tvar tmp,\n\t\t\t\t\tm = this.data;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[4];\n\t\t\tm[4] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[8];\n\t\t\tm[8] = tmp;\n\t\t\ttmp = m[3];\n\t\t\tm[3] = m[12];\n\t\t\tm[12] = tmp;\n\t\t\ttmp = m[6];\n\t\t\tm[6] = m[9];\n\t\t\tm[9] = tmp;\n\t\t\ttmp = m[7];\n\t\t\tm[7] = m[13];\n\t\t\tm[13] = tmp;\n\t\t\ttmp = m[11];\n\t\t\tm[11] = m[14];\n\t\t\tm[14] = tmp;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.invertTo3x3 = function invertTo3x3(res) {\n\t\t\tvar a11, a21, a31, a12, a22, a32, a13, a23, a33, m, r, det, idet;\n\t\t\tm = this.data;\n\t\t\tr = res.data;\n\t\t\tvar m0 = m[0];\n\t\t\tvar m1 = m[1];\n\t\t\tvar m2 = m[2];\n\t\t\tvar m4 = m[4];\n\t\t\tvar m5 = m[5];\n\t\t\tvar m6 = m[6];\n\t\t\tvar m8 = m[8];\n\t\t\tvar m9 = m[9];\n\t\t\tvar m10 = m[10];\n\t\t\ta11 = m10 * m5 - m6 * m9;\n\t\t\ta21 = -m10 * m1 + m2 * m9;\n\t\t\ta31 = m6 * m1 - m2 * m5;\n\t\t\ta12 = -m10 * m4 + m6 * m8;\n\t\t\ta22 = m10 * m0 - m2 * m8;\n\t\t\ta32 = -m6 * m0 + m2 * m4;\n\t\t\ta13 = m9 * m4 - m5 * m8;\n\t\t\ta23 = -m9 * m0 + m1 * m8;\n\t\t\ta33 = m5 * m0 - m1 * m4;\n\t\t\tdet = m0 * a11 + m1 * a12 + m2 * a13;\n\n\t\t\tif (det === 0) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tidet = 1 / det;\n\t\t\tr[0] = idet * a11;\n\t\t\tr[1] = idet * a21;\n\t\t\tr[2] = idet * a31;\n\t\t\tr[3] = idet * a12;\n\t\t\tr[4] = idet * a22;\n\t\t\tr[5] = idet * a32;\n\t\t\tr[6] = idet * a13;\n\t\t\tr[7] = idet * a23;\n\t\t\tr[8] = idet * a33;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getTranslation = function getTranslation(t) {\n\t\t\tif (t === void 0) {\n\t\t\t\tt = new Vec3();\n\t\t\t}\n\n\t\t\treturn t.set(this.data[12], this.data[13], this.data[14]);\n\t\t};\n\n\t\t_proto.getX = function getX(x) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = new Vec3();\n\t\t\t}\n\n\t\t\treturn x.set(this.data[0], this.data[1], this.data[2]);\n\t\t};\n\n\t\t_proto.getY = function getY(y) {\n\t\t\tif (y === void 0) {\n\t\t\t\ty = new Vec3();\n\t\t\t}\n\n\t\t\treturn y.set(this.data[4], this.data[5], this.data[6]);\n\t\t};\n\n\t\t_proto.getZ = function getZ(z) {\n\t\t\tif (z === void 0) {\n\t\t\t\tz = new Vec3();\n\t\t\t}\n\n\t\t\treturn z.set(this.data[8], this.data[9], this.data[10]);\n\t\t};\n\n\t\t_proto.getScale = function getScale(scale) {\n\t\t\tif (scale === void 0) {\n\t\t\t\tscale = new Vec3();\n\t\t\t}\n\n\t\t\tthis.getX(x);\n\t\t\tthis.getY(y);\n\t\t\tthis.getZ(z);\n\t\t\tscale.set(x.length(), y.length(), z.length());\n\t\t\treturn scale;\n\t\t};\n\n\t\t_proto.setFromEulerAngles = function setFromEulerAngles(ex, ey, ez) {\n\t\t\tvar s1, c1, s2, c2, s3, c3, m;\n\t\t\tex *= math.DEG_TO_RAD;\n\t\t\tey *= math.DEG_TO_RAD;\n\t\t\tez *= math.DEG_TO_RAD;\n\t\t\ts1 = Math.sin(-ex);\n\t\t\tc1 = Math.cos(-ex);\n\t\t\ts2 = Math.sin(-ey);\n\t\t\tc2 = Math.cos(-ey);\n\t\t\ts3 = Math.sin(-ez);\n\t\t\tc3 = Math.cos(-ez);\n\t\t\tm = this.data;\n\t\t\tm[0] = c2 * c3;\n\t\t\tm[1] = -c2 * s3;\n\t\t\tm[2] = s2;\n\t\t\tm[3] = 0;\n\t\t\tm[4] = c1 * s3 + c3 * s1 * s2;\n\t\t\tm[5] = c1 * c3 - s1 * s2 * s3;\n\t\t\tm[6] = -c2 * s1;\n\t\t\tm[7] = 0;\n\t\t\tm[8] = s1 * s3 - c1 * c3 * s2;\n\t\t\tm[9] = c3 * s1 + c1 * s2 * s3;\n\t\t\tm[10] = c1 * c2;\n\t\t\tm[11] = 0;\n\t\t\tm[12] = 0;\n\t\t\tm[13] = 0;\n\t\t\tm[14] = 0;\n\t\t\tm[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getEulerAngles = function getEulerAngles(eulers) {\n\t\t\tif (eulers === void 0) {\n\t\t\t\teulers = new Vec3();\n\t\t\t}\n\n\t\t\tvar x, y, z, sx, sy, sz, m, halfPi;\n\t\t\tthis.getScale(scale);\n\t\t\tsx = scale.x;\n\t\t\tsy = scale.y;\n\t\t\tsz = scale.z;\n\t\t\tm = this.data;\n\t\t\ty = Math.asin(-m[2] / sx);\n\t\t\thalfPi = Math.PI * 0.5;\n\n\t\t\tif (y < halfPi) {\n\t\t\t\tif (y > -halfPi) {\n\t\t\t\t\tx = Math.atan2(m[6] / sy, m[10] / sz);\n\t\t\t\t\tz = Math.atan2(m[1] / sx, m[0] / sx);\n\t\t\t\t} else {\n\t\t\t\t\tz = 0;\n\t\t\t\t\tx = -Math.atan2(m[4] / sy, m[5] / sy);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tz = 0;\n\t\t\t\tx = Math.atan2(m[4] / sy, m[5] / sy);\n\t\t\t}\n\n\t\t\treturn eulers.set(x, y, z).scale(math.RAD_TO_DEG);\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\tvar i, t;\n\t\t\tt = '[';\n\n\t\t\tfor (i = 0; i < 16; i += 1) {\n\t\t\t\tt += this.data[i];\n\t\t\t\tt += i !== 15 ? ', ' : '';\n\t\t\t}\n\n\t\t\tt += ']';\n\t\t\treturn t;\n\t\t};\n\n\t\treturn Mat4;\n\t}();\n\n\tMat4.IDENTITY = Object.freeze(new Mat4());\n\tMat4.ZERO = Object.freeze(new Mat4().set([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n\n\tvar Quat = function () {\n\t\tfunction Quat(x, y, z, w) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (w === void 0) {\n\t\t\t\tw = 1;\n\t\t\t}\n\n\t\t\tif (x.length === 4) {\n\t\t\t\tthis.x = x[0];\n\t\t\t\tthis.y = x[1];\n\t\t\t\tthis.z = x[2];\n\t\t\t\tthis.w = x[3];\n\t\t\t} else {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t\tthis.w = w;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Quat.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Quat(this.x, this.y, this.z, this.w);\n\t\t};\n\n\t\t_proto.conjugate = function conjugate() {\n\t\t\tthis.x *= -1;\n\t\t\tthis.y *= -1;\n\t\t\tthis.z *= -1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copy = function copy(rhs) {\n\t\t\tthis.x = rhs.x;\n\t\t\tthis.y = rhs.y;\n\t\t\tthis.z = rhs.z;\n\t\t\tthis.w = rhs.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(rhs) {\n\t\t\treturn this.x === rhs.x && this.y === rhs.y && this.z === rhs.z && this.w === rhs.w;\n\t\t};\n\n\t\t_proto.getAxisAngle = function getAxisAngle(axis) {\n\t\t\tvar rad = Math.acos(this.w) * 2;\n\t\t\tvar s = Math.sin(rad / 2);\n\n\t\t\tif (s !== 0) {\n\t\t\t\taxis.x = this.x / s;\n\t\t\t\taxis.y = this.y / s;\n\t\t\t\taxis.z = this.z / s;\n\n\t\t\t\tif (axis.x < 0 || axis.y < 0 || axis.z < 0) {\n\t\t\t\t\taxis.x *= -1;\n\t\t\t\t\taxis.y *= -1;\n\t\t\t\t\taxis.z *= -1;\n\t\t\t\t\trad *= -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taxis.x = 1;\n\t\t\t\taxis.y = 0;\n\t\t\t\taxis.z = 0;\n\t\t\t}\n\n\t\t\treturn rad * math.RAD_TO_DEG;\n\t\t};\n\n\t\t_proto.getEulerAngles = function getEulerAngles(eulers) {\n\t\t\tif (eulers === void 0) {\n\t\t\t\teulers = new Vec3();\n\t\t\t}\n\n\t\t\tvar x, y, z, qx, qy, qz, qw, a2;\n\t\t\tqx = this.x;\n\t\t\tqy = this.y;\n\t\t\tqz = this.z;\n\t\t\tqw = this.w;\n\t\t\ta2 = 2 * (qw * qy - qx * qz);\n\n\t\t\tif (a2 <= -0.99999) {\n\t\t\t\tx = 2 * Math.atan2(qx, qw);\n\t\t\t\ty = -Math.PI / 2;\n\t\t\t\tz = 0;\n\t\t\t} else if (a2 >= 0.99999) {\n\t\t\t\tx = 2 * Math.atan2(qx, qw);\n\t\t\t\ty = Math.PI / 2;\n\t\t\t\tz = 0;\n\t\t\t} else {\n\t\t\t\tx = Math.atan2(2 * (qw * qx + qy * qz), 1 - 2 * (qx * qx + qy * qy));\n\t\t\t\ty = Math.asin(a2);\n\t\t\t\tz = Math.atan2(2 * (qw * qz + qx * qy), 1 - 2 * (qy * qy + qz * qz));\n\t\t\t}\n\n\t\t\treturn eulers.set(x, y, z).scale(math.RAD_TO_DEG);\n\t\t};\n\n\t\t_proto.invert = function invert() {\n\t\t\treturn this.conjugate().normalize();\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t};\n\n\t\t_proto.mul = function mul(rhs) {\n\t\t\tvar q1x, q1y, q1z, q1w, q2x, q2y, q2z, q2w;\n\t\t\tq1x = this.x;\n\t\t\tq1y = this.y;\n\t\t\tq1z = this.z;\n\t\t\tq1w = this.w;\n\t\t\tq2x = rhs.x;\n\t\t\tq2y = rhs.y;\n\t\t\tq2z = rhs.z;\n\t\t\tq2w = rhs.w;\n\t\t\tthis.x = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\n\t\t\tthis.y = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\n\t\t\tthis.z = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\n\t\t\tthis.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.mul2 = function mul2(lhs, rhs) {\n\t\t\tvar q1x, q1y, q1z, q1w, q2x, q2y, q2z, q2w;\n\t\t\tq1x = lhs.x;\n\t\t\tq1y = lhs.y;\n\t\t\tq1z = lhs.z;\n\t\t\tq1w = lhs.w;\n\t\t\tq2x = rhs.x;\n\t\t\tq2y = rhs.y;\n\t\t\tq2z = rhs.z;\n\t\t\tq2w = rhs.w;\n\t\t\tthis.x = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\n\t\t\tthis.y = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\n\t\t\tthis.z = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\n\t\t\tthis.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\tvar len = this.length();\n\n\t\t\tif (len === 0) {\n\t\t\t\tthis.x = this.y = this.z = 0;\n\t\t\t\tthis.w = 1;\n\t\t\t} else {\n\t\t\t\tlen = 1 / len;\n\t\t\t\tthis.x *= len;\n\t\t\t\tthis.y *= len;\n\t\t\t\tthis.z *= len;\n\t\t\t\tthis.w *= len;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.set = function set(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromAxisAngle = function setFromAxisAngle(axis, angle) {\n\t\t\tvar sa, ca;\n\t\t\tangle *= 0.5 * math.DEG_TO_RAD;\n\t\t\tsa = Math.sin(angle);\n\t\t\tca = Math.cos(angle);\n\t\t\tthis.x = sa * axis.x;\n\t\t\tthis.y = sa * axis.y;\n\t\t\tthis.z = sa * axis.z;\n\t\t\tthis.w = ca;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromEulerAngles = function setFromEulerAngles(ex, ey, ez) {\n\t\t\tvar sx, cx, sy, cy, sz, cz, halfToRad;\n\t\t\thalfToRad = 0.5 * math.DEG_TO_RAD;\n\t\t\tex *= halfToRad;\n\t\t\tey *= halfToRad;\n\t\t\tez *= halfToRad;\n\t\t\tsx = Math.sin(ex);\n\t\t\tcx = Math.cos(ex);\n\t\t\tsy = Math.sin(ey);\n\t\t\tcy = Math.cos(ey);\n\t\t\tsz = Math.sin(ez);\n\t\t\tcz = Math.cos(ez);\n\t\t\tthis.x = sx * cy * cz - cx * sy * sz;\n\t\t\tthis.y = cx * sy * cz + sx * cy * sz;\n\t\t\tthis.z = cx * cy * sz - sx * sy * cz;\n\t\t\tthis.w = cx * cy * cz + sx * sy * sz;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMat4 = function setFromMat4(m) {\n\t\t\tvar m00, m01, m02, m10, m11, m12, m20, m21, m22, tr, s, rs, lx, ly, lz;\n\t\t\tm = m.data;\n\t\t\tm00 = m[0];\n\t\t\tm01 = m[1];\n\t\t\tm02 = m[2];\n\t\t\tm10 = m[4];\n\t\t\tm11 = m[5];\n\t\t\tm12 = m[6];\n\t\t\tm20 = m[8];\n\t\t\tm21 = m[9];\n\t\t\tm22 = m[10];\n\t\t\tlx = m00 * m00 + m01 * m01 + m02 * m02;\n\t\t\tif (lx === 0) return this;\n\t\t\tlx = 1 / Math.sqrt(lx);\n\t\t\tly = m10 * m10 + m11 * m11 + m12 * m12;\n\t\t\tif (ly === 0) return this;\n\t\t\tly = 1 / Math.sqrt(ly);\n\t\t\tlz = m20 * m20 + m21 * m21 + m22 * m22;\n\t\t\tif (lz === 0) return this;\n\t\t\tlz = 1 / Math.sqrt(lz);\n\t\t\tm00 *= lx;\n\t\t\tm01 *= lx;\n\t\t\tm02 *= lx;\n\t\t\tm10 *= ly;\n\t\t\tm11 *= ly;\n\t\t\tm12 *= ly;\n\t\t\tm20 *= lz;\n\t\t\tm21 *= lz;\n\t\t\tm22 *= lz;\n\t\t\ttr = m00 + m11 + m22;\n\n\t\t\tif (tr >= 0) {\n\t\t\t\ts = Math.sqrt(tr + 1);\n\t\t\t\tthis.w = s * 0.5;\n\t\t\t\ts = 0.5 / s;\n\t\t\t\tthis.x = (m12 - m21) * s;\n\t\t\t\tthis.y = (m20 - m02) * s;\n\t\t\t\tthis.z = (m01 - m10) * s;\n\t\t\t} else {\n\t\t\t\tif (m00 > m11) {\n\t\t\t\t\tif (m00 > m22) {\n\t\t\t\t\t\trs = m00 - (m11 + m22) + 1;\n\t\t\t\t\t\trs = Math.sqrt(rs);\n\t\t\t\t\t\tthis.x = rs * 0.5;\n\t\t\t\t\t\trs = 0.5 / rs;\n\t\t\t\t\t\tthis.w = (m12 - m21) * rs;\n\t\t\t\t\t\tthis.y = (m01 + m10) * rs;\n\t\t\t\t\t\tthis.z = (m02 + m20) * rs;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trs = m22 - (m00 + m11) + 1;\n\t\t\t\t\t\trs = Math.sqrt(rs);\n\t\t\t\t\t\tthis.z = rs * 0.5;\n\t\t\t\t\t\trs = 0.5 / rs;\n\t\t\t\t\t\tthis.w = (m01 - m10) * rs;\n\t\t\t\t\t\tthis.x = (m20 + m02) * rs;\n\t\t\t\t\t\tthis.y = (m21 + m12) * rs;\n\t\t\t\t\t}\n\t\t\t\t} else if (m11 > m22) {\n\t\t\t\t\trs = m11 - (m22 + m00) + 1;\n\t\t\t\t\trs = Math.sqrt(rs);\n\t\t\t\t\tthis.y = rs * 0.5;\n\t\t\t\t\trs = 0.5 / rs;\n\t\t\t\t\tthis.w = (m20 - m02) * rs;\n\t\t\t\t\tthis.z = (m12 + m21) * rs;\n\t\t\t\t\tthis.x = (m10 + m01) * rs;\n\t\t\t\t} else {\n\t\t\t\t\trs = m22 - (m00 + m11) + 1;\n\t\t\t\t\trs = Math.sqrt(rs);\n\t\t\t\t\tthis.z = rs * 0.5;\n\t\t\t\t\trs = 0.5 / rs;\n\t\t\t\t\tthis.w = (m01 - m10) * rs;\n\t\t\t\t\tthis.x = (m20 + m02) * rs;\n\t\t\t\t\tthis.y = (m21 + m12) * rs;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.slerp = function slerp(lhs, rhs, alpha) {\n\t\t\tvar lx, ly, lz, lw, rx, ry, rz, rw;\n\t\t\tlx = lhs.x;\n\t\t\tly = lhs.y;\n\t\t\tlz = lhs.z;\n\t\t\tlw = lhs.w;\n\t\t\trx = rhs.x;\n\t\t\try = rhs.y;\n\t\t\trz = rhs.z;\n\t\t\trw = rhs.w;\n\t\t\tvar cosHalfTheta = lw * rw + lx * rx + ly * ry + lz * rz;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\trw = -rw;\n\t\t\t\trx = -rx;\n\t\t\t\try = -ry;\n\t\t\t\trz = -rz;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t}\n\n\t\t\tif (Math.abs(cosHalfTheta) >= 1) {\n\t\t\t\tthis.w = lw;\n\t\t\t\tthis.x = lx;\n\t\t\t\tthis.y = ly;\n\t\t\t\tthis.z = lz;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.acos(cosHalfTheta);\n\t\t\tvar sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\n\n\t\t\tif (Math.abs(sinHalfTheta) < 0.001) {\n\t\t\t\tthis.w = lw * 0.5 + rw * 0.5;\n\t\t\t\tthis.x = lx * 0.5 + rx * 0.5;\n\t\t\t\tthis.y = ly * 0.5 + ry * 0.5;\n\t\t\t\tthis.z = lz * 0.5 + rz * 0.5;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar ratioA = Math.sin((1 - alpha) * halfTheta) / sinHalfTheta;\n\t\t\tvar ratioB = Math.sin(alpha * halfTheta) / sinHalfTheta;\n\t\t\tthis.w = lw * ratioA + rw * ratioB;\n\t\t\tthis.x = lx * ratioA + rx * ratioB;\n\t\t\tthis.y = ly * ratioA + ry * ratioB;\n\t\t\tthis.z = lz * ratioA + rz * ratioB;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.transformVector = function transformVector(vec, res) {\n\t\t\tif (res === void 0) {\n\t\t\t\tres = new Vec3();\n\t\t\t}\n\n\t\t\tvar x = vec.x,\n\t\t\t\t\ty = vec.y,\n\t\t\t\t\tz = vec.z;\n\t\t\tvar qx = this.x,\n\t\t\t\t\tqy = this.y,\n\t\t\t\t\tqz = this.z,\n\t\t\t\t\tqw = this.w;\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = -qx * x - qy * y - qz * z;\n\t\t\tres.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tres.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tres.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn res;\n\t\t};\n\n\t\t_proto.toString = function toString() {\n\t\t\treturn '[' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ']';\n\t\t};\n\n\t\treturn Quat;\n\t}();\n\n\tQuat.IDENTITY = Object.freeze(new Quat(0, 0, 0, 1));\n\tQuat.ZERO = Object.freeze(new Quat(0, 0, 0, 0));\n\n\tvar tmpVecA = new Vec3();\n\tvar tmpVecB = new Vec3();\n\tvar tmpVecC = new Vec3();\n\tvar tmpVecD = new Vec3();\n\tvar tmpVecE = new Vec3();\n\n\tvar BoundingBox = function () {\n\t\tfunction BoundingBox(center, halfExtents) {\n\t\t\tif (center === void 0) {\n\t\t\t\tcenter = new Vec3();\n\t\t\t}\n\n\t\t\tif (halfExtents === void 0) {\n\t\t\t\thalfExtents = new Vec3(0.5, 0.5, 0.5);\n\t\t\t}\n\n\t\t\tthis.center = center;\n\t\t\tthis.halfExtents = halfExtents;\n\t\t\tthis._min = new Vec3();\n\t\t\tthis._max = new Vec3();\n\t\t}\n\n\t\tvar _proto = BoundingBox.prototype;\n\n\t\t_proto.add = function add(other) {\n\t\t\tvar tc = this.center;\n\t\t\tvar tcx = tc.x;\n\t\t\tvar tcy = tc.y;\n\t\t\tvar tcz = tc.z;\n\t\t\tvar th = this.halfExtents;\n\t\t\tvar thx = th.x;\n\t\t\tvar thy = th.y;\n\t\t\tvar thz = th.z;\n\t\t\tvar tminx = tcx - thx;\n\t\t\tvar tmaxx = tcx + thx;\n\t\t\tvar tminy = tcy - thy;\n\t\t\tvar tmaxy = tcy + thy;\n\t\t\tvar tminz = tcz - thz;\n\t\t\tvar tmaxz = tcz + thz;\n\t\t\tvar oc = other.center;\n\t\t\tvar ocx = oc.x;\n\t\t\tvar ocy = oc.y;\n\t\t\tvar ocz = oc.z;\n\t\t\tvar oh = other.halfExtents;\n\t\t\tvar ohx = oh.x;\n\t\t\tvar ohy = oh.y;\n\t\t\tvar ohz = oh.z;\n\t\t\tvar ominx = ocx - ohx;\n\t\t\tvar omaxx = ocx + ohx;\n\t\t\tvar ominy = ocy - ohy;\n\t\t\tvar omaxy = ocy + ohy;\n\t\t\tvar ominz = ocz - ohz;\n\t\t\tvar omaxz = ocz + ohz;\n\t\t\tif (ominx < tminx) tminx = ominx;\n\t\t\tif (omaxx > tmaxx) tmaxx = omaxx;\n\t\t\tif (ominy < tminy) tminy = ominy;\n\t\t\tif (omaxy > tmaxy) tmaxy = omaxy;\n\t\t\tif (ominz < tminz) tminz = ominz;\n\t\t\tif (omaxz > tmaxz) tmaxz = omaxz;\n\t\t\ttc.x = (tminx + tmaxx) * 0.5;\n\t\t\ttc.y = (tminy + tmaxy) * 0.5;\n\t\t\ttc.z = (tminz + tmaxz) * 0.5;\n\t\t\tth.x = (tmaxx - tminx) * 0.5;\n\t\t\tth.y = (tmaxy - tminy) * 0.5;\n\t\t\tth.z = (tmaxz - tminz) * 0.5;\n\t\t};\n\n\t\t_proto.copy = function copy(src) {\n\t\t\tthis.center.copy(src.center);\n\t\t\tthis.halfExtents.copy(src.halfExtents);\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new BoundingBox(this.center.clone(), this.halfExtents.clone());\n\t\t};\n\n\t\t_proto.intersects = function intersects(other) {\n\t\t\tvar aMax = this.getMax();\n\t\t\tvar aMin = this.getMin();\n\t\t\tvar bMax = other.getMax();\n\t\t\tvar bMin = other.getMin();\n\t\t\treturn aMin.x <= bMax.x && aMax.x >= bMin.x && aMin.y <= bMax.y && aMax.y >= bMin.y && aMin.z <= bMax.z && aMax.z >= bMin.z;\n\t\t};\n\n\t\t_proto._intersectsRay = function _intersectsRay(ray, point) {\n\t\t\tvar tMin = tmpVecA.copy(this.getMin()).sub(ray.origin);\n\t\t\tvar tMax = tmpVecB.copy(this.getMax()).sub(ray.origin);\n\t\t\tvar dir = ray.direction;\n\n\t\t\tif (dir.x === 0) {\n\t\t\t\ttMin.x = tMin.x < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t\ttMax.x = tMax.x < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t} else {\n\t\t\t\ttMin.x /= dir.x;\n\t\t\t\ttMax.x /= dir.x;\n\t\t\t}\n\n\t\t\tif (dir.y === 0) {\n\t\t\t\ttMin.y = tMin.y < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t\ttMax.y = tMax.y < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t} else {\n\t\t\t\ttMin.y /= dir.y;\n\t\t\t\ttMax.y /= dir.y;\n\t\t\t}\n\n\t\t\tif (dir.z === 0) {\n\t\t\t\ttMin.z = tMin.z < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t\ttMax.z = tMax.z < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n\t\t\t} else {\n\t\t\t\ttMin.z /= dir.z;\n\t\t\t\ttMax.z /= dir.z;\n\t\t\t}\n\n\t\t\tvar realMin = tmpVecC.set(Math.min(tMin.x, tMax.x), Math.min(tMin.y, tMax.y), Math.min(tMin.z, tMax.z));\n\t\t\tvar realMax = tmpVecD.set(Math.max(tMin.x, tMax.x), Math.max(tMin.y, tMax.y), Math.max(tMin.z, tMax.z));\n\t\t\tvar minMax = Math.min(Math.min(realMax.x, realMax.y), realMax.z);\n\t\t\tvar maxMin = Math.max(Math.max(realMin.x, realMin.y), realMin.z);\n\t\t\tvar intersects = minMax >= maxMin && maxMin >= 0;\n\t\t\tif (intersects) point.copy(ray.direction).scale(maxMin).add(ray.origin);\n\t\t\treturn intersects;\n\t\t};\n\n\t\t_proto._fastIntersectsRay = function _fastIntersectsRay(ray) {\n\t\t\tvar diff = tmpVecA;\n\t\t\tvar cross = tmpVecB;\n\t\t\tvar prod = tmpVecC;\n\t\t\tvar absDiff = tmpVecD;\n\t\t\tvar absDir = tmpVecE;\n\t\t\tvar rayDir = ray.direction;\n\t\t\tdiff.sub2(ray.origin, this.center);\n\t\t\tabsDiff.set(Math.abs(diff.x), Math.abs(diff.y), Math.abs(diff.z));\n\t\t\tprod.mul2(diff, rayDir);\n\t\t\tif (absDiff.x > this.halfExtents.x && prod.x >= 0) return false;\n\t\t\tif (absDiff.y > this.halfExtents.y && prod.y >= 0) return false;\n\t\t\tif (absDiff.z > this.halfExtents.z && prod.z >= 0) return false;\n\t\t\tabsDir.set(Math.abs(rayDir.x), Math.abs(rayDir.y), Math.abs(rayDir.z));\n\t\t\tcross.cross(rayDir, diff);\n\t\t\tcross.set(Math.abs(cross.x), Math.abs(cross.y), Math.abs(cross.z));\n\t\t\tif (cross.x > this.halfExtents.y * absDir.z + this.halfExtents.z * absDir.y) return false;\n\t\t\tif (cross.y > this.halfExtents.x * absDir.z + this.halfExtents.z * absDir.x) return false;\n\t\t\tif (cross.z > this.halfExtents.x * absDir.y + this.halfExtents.y * absDir.x) return false;\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.intersectsRay = function intersectsRay(ray, point) {\n\t\t\tif (point) {\n\t\t\t\treturn this._intersectsRay(ray, point);\n\t\t\t}\n\n\t\t\treturn this._fastIntersectsRay(ray);\n\t\t};\n\n\t\t_proto.setMinMax = function setMinMax(min, max) {\n\t\t\tthis.center.add2(max, min).scale(0.5);\n\t\t\tthis.halfExtents.sub2(max, min).scale(0.5);\n\t\t};\n\n\t\t_proto.getMin = function getMin() {\n\t\t\treturn this._min.copy(this.center).sub(this.halfExtents);\n\t\t};\n\n\t\t_proto.getMax = function getMax() {\n\t\t\treturn this._max.copy(this.center).add(this.halfExtents);\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\tvar min = this.getMin();\n\t\t\tvar max = this.getMax();\n\n\t\t\tif (point.x < min.x || point.x > max.x || point.y < min.y || point.y > max.y || point.z < min.z || point.z > max.z) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.setFromTransformedAabb = function setFromTransformedAabb(aabb, m) {\n\t\t\tvar ac = aabb.center;\n\t\t\tvar ar = aabb.halfExtents;\n\t\t\tvar d = m.data;\n\t\t\tvar mx0 = d[0];\n\t\t\tvar mx1 = d[4];\n\t\t\tvar mx2 = d[8];\n\t\t\tvar my0 = d[1];\n\t\t\tvar my1 = d[5];\n\t\t\tvar my2 = d[9];\n\t\t\tvar mz0 = d[2];\n\t\t\tvar mz1 = d[6];\n\t\t\tvar mz2 = d[10];\n\t\t\tthis.center.set(d[12] + mx0 * ac.x + mx1 * ac.y + mx2 * ac.z, d[13] + my0 * ac.x + my1 * ac.y + my2 * ac.z, d[14] + mz0 * ac.x + mz1 * ac.y + mz2 * ac.z);\n\t\t\tthis.halfExtents.set(Math.abs(mx0) * ar.x + Math.abs(mx1) * ar.y + Math.abs(mx2) * ar.z, Math.abs(my0) * ar.x + Math.abs(my1) * ar.y + Math.abs(my2) * ar.z, Math.abs(mz0) * ar.x + Math.abs(mz1) * ar.y + Math.abs(mz2) * ar.z);\n\t\t};\n\n\t\t_proto.compute = function compute(vertices, numVerts) {\n\t\t\tnumVerts = numVerts === undefined ? vertices.length / 3 : numVerts;\n\n\t\t\tif (numVerts > 0) {\n\t\t\t\tvar min = tmpVecA.set(vertices[0], vertices[1], vertices[2]);\n\t\t\t\tvar max = tmpVecB.set(vertices[0], vertices[1], vertices[2]);\n\n\t\t\t\tfor (var i = 1; i < numVerts; i++) {\n\t\t\t\t\tvar x = vertices[i * 3 + 0];\n\t\t\t\t\tvar y = vertices[i * 3 + 1];\n\t\t\t\t\tvar z = vertices[i * 3 + 2];\n\t\t\t\t\tif (x < min.x) min.x = x;\n\t\t\t\t\tif (y < min.y) min.y = y;\n\t\t\t\t\tif (z < min.z) min.z = z;\n\t\t\t\t\tif (x > max.x) max.x = x;\n\t\t\t\t\tif (y > max.y) max.y = y;\n\t\t\t\t\tif (z > max.z) max.z = z;\n\t\t\t\t}\n\n\t\t\t\tthis.setMinMax(min, max);\n\t\t\t}\n\t\t};\n\n\t\t_proto.intersectsBoundingSphere = function intersectsBoundingSphere(sphere) {\n\t\t\tvar sq = this._distanceToBoundingSphereSq(sphere);\n\n\t\t\tif (sq <= sphere.radius * sphere.radius) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto._distanceToBoundingSphereSq = function _distanceToBoundingSphereSq(sphere) {\n\t\t\tvar boxMin = this.getMin();\n\t\t\tvar boxMax = this.getMax();\n\t\t\tvar sq = 0;\n\t\t\tvar axis = ['x', 'y', 'z'];\n\n\t\t\tfor (var i = 0; i < 3; ++i) {\n\t\t\t\tvar out = 0;\n\t\t\t\tvar pn = sphere.center[axis[i]];\n\t\t\t\tvar bMin = boxMin[axis[i]];\n\t\t\t\tvar bMax = boxMax[axis[i]];\n\t\t\t\tvar val = 0;\n\n\t\t\t\tif (pn < bMin) {\n\t\t\t\t\tval = bMin - pn;\n\t\t\t\t\tout += val * val;\n\t\t\t\t}\n\n\t\t\t\tif (pn > bMax) {\n\t\t\t\t\tval = pn - bMax;\n\t\t\t\t\tout += val * val;\n\t\t\t\t}\n\n\t\t\t\tsq += out;\n\t\t\t}\n\n\t\t\treturn sq;\n\t\t};\n\n\t\t_proto._expand = function _expand(expandMin, expandMax) {\n\t\t\ttmpVecA.add2(this.getMin(), expandMin);\n\t\t\ttmpVecB.add2(this.getMax(), expandMax);\n\t\t\tthis.setMinMax(tmpVecA, tmpVecB);\n\t\t};\n\n\t\treturn BoundingBox;\n\t}();\n\n\tvar tmpVecA$1 = new Vec3();\n\tvar tmpVecB$1 = new Vec3();\n\tvar tmpVecC$1 = new Vec3();\n\tvar tmpVecD$1 = new Vec3();\n\n\tvar BoundingSphere = function () {\n\t\tfunction BoundingSphere(center, radius) {\n\t\t\tif (center === void 0) {\n\t\t\t\tcenter = new Vec3();\n\t\t\t}\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 0.5;\n\t\t\t}\n\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tvar _proto = BoundingSphere.prototype;\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\tvar lenSq = tmpVecA$1.sub2(point, this.center).lengthSq();\n\t\t\tvar r = this.radius;\n\t\t\treturn lenSq < r * r;\n\t\t};\n\n\t\t_proto.compute = function compute(vertices) {\n\t\t\tvar i;\n\t\t\tvar numVerts = vertices.length / 3;\n\t\t\tvar vertex = tmpVecA$1;\n\t\t\tvar avgVertex = tmpVecB$1;\n\t\t\tvar sum = tmpVecC$1;\n\n\t\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\t\tvertex.set(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2]);\n\t\t\t\tsum.addSelf(vertex);\n\n\t\t\t\tif (i % 100 === 0) {\n\t\t\t\t\tsum.scale(1 / numVerts);\n\t\t\t\t\tavgVertex.add(sum);\n\t\t\t\t\tsum.set(0, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsum.scale(1 / numVerts);\n\t\t\tavgVertex.add(sum);\n\t\t\tthis.center.copy(avgVertex);\n\t\t\tvar maxDistSq = 0;\n\t\t\tvar centerToVert = tmpVecD$1;\n\n\t\t\tfor (i = 0; i < numVerts; i++) {\n\t\t\t\tvertex.set(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2]);\n\t\t\t\tcenterToVert.sub2(vertex, this.center);\n\t\t\t\tmaxDistSq = Math.max(centerToVert.lengthSq(), maxDistSq);\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxDistSq);\n\t\t};\n\n\t\t_proto.intersectsRay = function intersectsRay(ray, point) {\n\t\t\tvar m = tmpVecA$1.copy(ray.origin).sub(this.center);\n\t\t\tvar b = m.dot(tmpVecB$1.copy(ray.direction).normalize());\n\t\t\tvar c = m.dot(m) - this.radius * this.radius;\n\t\t\tif (c > 0 && b > 0) return null;\n\t\t\tvar discr = b * b - c;\n\t\t\tif (discr < 0) return false;\n\t\t\tvar t = Math.abs(-b - Math.sqrt(discr));\n\t\t\tif (point) point.copy(ray.direction).scale(t).add(ray.origin);\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.intersectsBoundingSphere = function intersectsBoundingSphere(sphere) {\n\t\t\ttmpVecA$1.sub2(sphere.center, this.center);\n\t\t\tvar totalRadius = sphere.radius + this.radius;\n\n\t\t\tif (tmpVecA$1.lengthSq() <= totalRadius * totalRadius) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\treturn BoundingSphere;\n\t}();\n\n\tvar Frustum = function () {\n\t\tfunction Frustum() {\n\t\t\tthis.planes = [];\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tthis.planes[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Frustum.prototype;\n\n\t\t_proto.setFromMat4 = function setFromMat4(matrix) {\n\t\t\tvar vpm = matrix.data;\n\t\t\tvar plane;\n\t\t\tvar planes = this.planes;\n\t\t\tplane = planes[0];\n\t\t\tplane[0] = vpm[3] - vpm[0];\n\t\t\tplane[1] = vpm[7] - vpm[4];\n\t\t\tplane[2] = vpm[11] - vpm[8];\n\t\t\tplane[3] = vpm[15] - vpm[12];\n\t\t\tvar t = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t\tplane = planes[1];\n\t\t\tplane[0] = vpm[3] + vpm[0];\n\t\t\tplane[1] = vpm[7] + vpm[4];\n\t\t\tplane[2] = vpm[11] + vpm[8];\n\t\t\tplane[3] = vpm[15] + vpm[12];\n\t\t\tt = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t\tplane = planes[2];\n\t\t\tplane[0] = vpm[3] + vpm[1];\n\t\t\tplane[1] = vpm[7] + vpm[5];\n\t\t\tplane[2] = vpm[11] + vpm[9];\n\t\t\tplane[3] = vpm[15] + vpm[13];\n\t\t\tt = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t\tplane = planes[3];\n\t\t\tplane[0] = vpm[3] - vpm[1];\n\t\t\tplane[1] = vpm[7] - vpm[5];\n\t\t\tplane[2] = vpm[11] - vpm[9];\n\t\t\tplane[3] = vpm[15] - vpm[13];\n\t\t\tt = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t\tplane = planes[4];\n\t\t\tplane[0] = vpm[3] - vpm[2];\n\t\t\tplane[1] = vpm[7] - vpm[6];\n\t\t\tplane[2] = vpm[11] - vpm[10];\n\t\t\tplane[3] = vpm[15] - vpm[14];\n\t\t\tt = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t\tplane = planes[5];\n\t\t\tplane[0] = vpm[3] + vpm[2];\n\t\t\tplane[1] = vpm[7] + vpm[6];\n\t\t\tplane[2] = vpm[11] + vpm[10];\n\t\t\tplane[3] = vpm[15] + vpm[14];\n\t\t\tt = Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n\t\t\tplane[0] /= t;\n\t\t\tplane[1] /= t;\n\t\t\tplane[2] /= t;\n\t\t\tplane[3] /= t;\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\tvar p, plane;\n\n\t\t\tfor (p = 0; p < 6; p++) {\n\t\t\t\tplane = this.planes[p];\n\n\t\t\t\tif (plane[0] * point.x + plane[1] * point.y + plane[2] * point.z + plane[3] <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.containsSphere = function containsSphere(sphere) {\n\t\t\tvar c = 0;\n\t\t\tvar d;\n\t\t\tvar p;\n\t\t\tvar sr = sphere.radius;\n\t\t\tvar sc = sphere.center;\n\t\t\tvar scx = sc.x;\n\t\t\tvar scy = sc.y;\n\t\t\tvar scz = sc.z;\n\t\t\tvar planes = this.planes;\n\t\t\tvar plane;\n\n\t\t\tfor (p = 0; p < 6; p++) {\n\t\t\t\tplane = planes[p];\n\t\t\t\td = plane[0] * scx + plane[1] * scy + plane[2] * scz + plane[3];\n\t\t\t\tif (d <= -sr) return 0;\n\t\t\t\tif (d > sr) c++;\n\t\t\t}\n\n\t\t\treturn c === 6 ? 2 : 1;\n\t\t};\n\n\t\treturn Frustum;\n\t}();\n\n\tvar Ray = function () {\n\t\tfunction Ray(origin, direction) {\n\t\t\tif (origin === void 0) {\n\t\t\t\torigin = new Vec3();\n\t\t\t}\n\n\t\t\tif (direction === void 0) {\n\t\t\t\tdirection = new Vec3(0, 0, -1);\n\t\t\t}\n\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tvar _proto = Ray.prototype;\n\n\t\t_proto.set = function set(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Ray;\n\t}();\n\n\tvar tmpRay = new Ray();\n\tvar tmpVec3 = new Vec3();\n\tvar tmpSphere = new BoundingSphere();\n\tvar tmpMat4 = new Mat4();\n\n\tvar OrientedBox = function () {\n\t\tfunction OrientedBox(worldTransform, halfExtents) {\n\t\t\tif (worldTransform === void 0) {\n\t\t\t\tworldTransform = new Mat4();\n\t\t\t}\n\n\t\t\tif (halfExtents === void 0) {\n\t\t\t\thalfExtents = new Vec3(0.5, 0.5, 0.5);\n\t\t\t}\n\n\t\t\tthis.halfExtents = halfExtents;\n\t\t\tthis._modelTransform = worldTransform.clone().invert();\n\t\t\tthis._worldTransform = worldTransform.clone();\n\t\t\tthis._aabb = new BoundingBox(new Vec3(), this.halfExtents);\n\t\t}\n\n\t\tvar _proto = OrientedBox.prototype;\n\n\t\t_proto.intersectsRay = function intersectsRay(ray, point) {\n\t\t\tthis._modelTransform.transformPoint(ray.origin, tmpRay.origin);\n\n\t\t\tthis._modelTransform.transformVector(ray.direction, tmpRay.direction);\n\n\t\t\tif (point) {\n\t\t\t\tvar result = this._aabb._intersectsRay(tmpRay, point);\n\n\t\t\t\ttmpMat4.copy(this._modelTransform).invert().transformPoint(point, point);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn this._aabb._fastIntersectsRay(tmpRay);\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\tthis._modelTransform.transformPoint(point, tmpVec3);\n\n\t\t\treturn this._aabb.containsPoint(tmpVec3);\n\t\t};\n\n\t\t_proto.intersectsBoundingSphere = function intersectsBoundingSphere(sphere) {\n\t\t\tthis._modelTransform.transformPoint(sphere.center, tmpSphere.center);\n\n\t\t\ttmpSphere.radius = sphere.radius;\n\n\t\t\tif (this._aabb.intersectsBoundingSphere(tmpSphere)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_createClass(OrientedBox, [{\n\t\t\tkey: \"worldTransform\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._worldTransform;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._worldTransform.copy(value);\n\n\t\t\t\tthis._modelTransform.copy(value).invert();\n\t\t\t}\n\t\t}]);\n\n\t\treturn OrientedBox;\n\t}();\n\n\tvar tmpVecA$2 = new Vec3();\n\n\tvar Plane = function () {\n\t\tfunction Plane(point, normal) {\n\t\t\tif (point === void 0) {\n\t\t\t\tpoint = new Vec3();\n\t\t\t}\n\n\t\t\tif (normal === void 0) {\n\t\t\t\tnormal = new Vec3(0, 0, 1);\n\t\t\t}\n\n\t\t\tthis.normal = normal;\n\t\t\tthis.point = point;\n\t\t}\n\n\t\tvar _proto = Plane.prototype;\n\n\t\t_proto.intersectsLine = function intersectsLine(start, end, point) {\n\t\t\tvar d = -this.normal.dot(this.point);\n\t\t\tvar d0 = this.normal.dot(start) + d;\n\t\t\tvar d1 = this.normal.dot(end) + d;\n\t\t\tvar t = d0 / (d0 - d1);\n\t\t\tvar intersects = t >= 0 && t <= 1;\n\t\t\tif (intersects && point) point.lerp(start, end, t);\n\t\t\treturn intersects;\n\t\t};\n\n\t\t_proto.intersectsRay = function intersectsRay(ray, point) {\n\t\t\tvar pointToOrigin = tmpVecA$2.sub2(this.point, ray.origin);\n\t\t\tvar t = this.normal.dot(pointToOrigin) / this.normal.dot(ray.direction);\n\t\t\tvar intersects = t >= 0;\n\t\t\tif (intersects && point) point.copy(ray.direction).scale(t).add(ray.origin);\n\t\t\treturn intersects;\n\t\t};\n\n\t\treturn Plane;\n\t}();\n\n\tvar ADDRESS_REPEAT = 0;\n\tvar ADDRESS_CLAMP_TO_EDGE = 1;\n\tvar ADDRESS_MIRRORED_REPEAT = 2;\n\tvar BLENDMODE_ZERO = 0;\n\tvar BLENDMODE_ONE = 1;\n\tvar BLENDMODE_SRC_COLOR = 2;\n\tvar BLENDMODE_ONE_MINUS_SRC_COLOR = 3;\n\tvar BLENDMODE_DST_COLOR = 4;\n\tvar BLENDMODE_ONE_MINUS_DST_COLOR = 5;\n\tvar BLENDMODE_SRC_ALPHA = 6;\n\tvar BLENDMODE_SRC_ALPHA_SATURATE = 7;\n\tvar BLENDMODE_ONE_MINUS_SRC_ALPHA = 8;\n\tvar BLENDMODE_DST_ALPHA = 9;\n\tvar BLENDMODE_ONE_MINUS_DST_ALPHA = 10;\n\tvar BLENDEQUATION_ADD = 0;\n\tvar BLENDEQUATION_SUBTRACT = 1;\n\tvar BLENDEQUATION_REVERSE_SUBTRACT = 2;\n\tvar BLENDEQUATION_MIN = 3;\n\tvar BLENDEQUATION_MAX = 4;\n\tvar BUFFER_STATIC = 0;\n\tvar BUFFER_DYNAMIC = 1;\n\tvar BUFFER_STREAM = 2;\n\tvar BUFFER_GPUDYNAMIC = 3;\n\tvar CLEARFLAG_COLOR = 1;\n\tvar CLEARFLAG_DEPTH = 2;\n\tvar CLEARFLAG_STENCIL = 4;\n\tvar CUBEFACE_POSX = 0;\n\tvar CUBEFACE_NEGX = 1;\n\tvar CUBEFACE_POSY = 2;\n\tvar CUBEFACE_NEGY = 3;\n\tvar CUBEFACE_POSZ = 4;\n\tvar CUBEFACE_NEGZ = 5;\n\tvar CULLFACE_NONE = 0;\n\tvar CULLFACE_BACK = 1;\n\tvar CULLFACE_FRONT = 2;\n\tvar CULLFACE_FRONTANDBACK = 3;\n\tvar FILTER_NEAREST = 0;\n\tvar FILTER_LINEAR = 1;\n\tvar FILTER_NEAREST_MIPMAP_NEAREST = 2;\n\tvar FILTER_NEAREST_MIPMAP_LINEAR = 3;\n\tvar FILTER_LINEAR_MIPMAP_NEAREST = 4;\n\tvar FILTER_LINEAR_MIPMAP_LINEAR = 5;\n\tvar FUNC_NEVER = 0;\n\tvar FUNC_LESS = 1;\n\tvar FUNC_EQUAL = 2;\n\tvar FUNC_LESSEQUAL = 3;\n\tvar FUNC_GREATER = 4;\n\tvar FUNC_NOTEQUAL = 5;\n\tvar FUNC_GREATEREQUAL = 6;\n\tvar FUNC_ALWAYS = 7;\n\tvar INDEXFORMAT_UINT8 = 0;\n\tvar INDEXFORMAT_UINT16 = 1;\n\tvar INDEXFORMAT_UINT32 = 2;\n\tvar PIXELFORMAT_A8 = 0;\n\tvar PIXELFORMAT_L8 = 1;\n\tvar PIXELFORMAT_L8_A8 = 2;\n\tvar PIXELFORMAT_R5_G6_B5 = 3;\n\tvar PIXELFORMAT_R5_G5_B5_A1 = 4;\n\tvar PIXELFORMAT_R4_G4_B4_A4 = 5;\n\tvar PIXELFORMAT_R8_G8_B8 = 6;\n\tvar PIXELFORMAT_R8_G8_B8_A8 = 7;\n\tvar PIXELFORMAT_DXT1 = 8;\n\tvar PIXELFORMAT_DXT3 = 9;\n\tvar PIXELFORMAT_DXT5 = 10;\n\tvar PIXELFORMAT_RGB16F = 11;\n\tvar PIXELFORMAT_RGBA16F = 12;\n\tvar PIXELFORMAT_RGB32F = 13;\n\tvar PIXELFORMAT_RGBA32F = 14;\n\tvar PIXELFORMAT_R32F = 15;\n\tvar PIXELFORMAT_DEPTH = 16;\n\tvar PIXELFORMAT_DEPTHSTENCIL = 17;\n\tvar PIXELFORMAT_111110F = 18;\n\tvar PIXELFORMAT_SRGB = 19;\n\tvar PIXELFORMAT_SRGBA = 20;\n\tvar PIXELFORMAT_ETC1 = 21;\n\tvar PIXELFORMAT_ETC2_RGB = 22;\n\tvar PIXELFORMAT_ETC2_RGBA = 23;\n\tvar PIXELFORMAT_PVRTC_2BPP_RGB_1 = 24;\n\tvar PIXELFORMAT_PVRTC_2BPP_RGBA_1 = 25;\n\tvar PIXELFORMAT_PVRTC_4BPP_RGB_1 = 26;\n\tvar PIXELFORMAT_PVRTC_4BPP_RGBA_1 = 27;\n\tvar PIXELFORMAT_ASTC_4x4 = 28;\n\tvar PIXELFORMAT_ATC_RGB = 29;\n\tvar PIXELFORMAT_ATC_RGBA = 30;\n\tvar PRIMITIVE_POINTS = 0;\n\tvar PRIMITIVE_LINES = 1;\n\tvar PRIMITIVE_LINELOOP = 2;\n\tvar PRIMITIVE_LINESTRIP = 3;\n\tvar PRIMITIVE_TRIANGLES = 4;\n\tvar PRIMITIVE_TRISTRIP = 5;\n\tvar PRIMITIVE_TRIFAN = 6;\n\tvar SEMANTIC_POSITION = \"POSITION\";\n\tvar SEMANTIC_NORMAL = \"NORMAL\";\n\tvar SEMANTIC_TANGENT = \"TANGENT\";\n\tvar SEMANTIC_BLENDWEIGHT = \"BLENDWEIGHT\";\n\tvar SEMANTIC_BLENDINDICES = \"BLENDINDICES\";\n\tvar SEMANTIC_COLOR = \"COLOR\";\n\tvar SEMANTIC_TEXCOORD = \"TEXCOORD\";\n\tvar SEMANTIC_TEXCOORD0 = \"TEXCOORD0\";\n\tvar SEMANTIC_TEXCOORD1 = \"TEXCOORD1\";\n\tvar SEMANTIC_TEXCOORD2 = \"TEXCOORD2\";\n\tvar SEMANTIC_TEXCOORD3 = \"TEXCOORD3\";\n\tvar SEMANTIC_TEXCOORD4 = \"TEXCOORD4\";\n\tvar SEMANTIC_TEXCOORD5 = \"TEXCOORD5\";\n\tvar SEMANTIC_TEXCOORD6 = \"TEXCOORD6\";\n\tvar SEMANTIC_TEXCOORD7 = \"TEXCOORD7\";\n\tvar SEMANTIC_ATTR = \"ATTR\";\n\tvar SEMANTIC_ATTR0 = \"ATTR0\";\n\tvar SEMANTIC_ATTR1 = \"ATTR1\";\n\tvar SEMANTIC_ATTR2 = \"ATTR2\";\n\tvar SEMANTIC_ATTR3 = \"ATTR3\";\n\tvar SEMANTIC_ATTR4 = \"ATTR4\";\n\tvar SEMANTIC_ATTR5 = \"ATTR5\";\n\tvar SEMANTIC_ATTR6 = \"ATTR6\";\n\tvar SEMANTIC_ATTR7 = \"ATTR7\";\n\tvar SEMANTIC_ATTR8 = \"ATTR8\";\n\tvar SEMANTIC_ATTR9 = \"ATTR9\";\n\tvar SEMANTIC_ATTR10 = \"ATTR10\";\n\tvar SEMANTIC_ATTR11 = \"ATTR11\";\n\tvar SEMANTIC_ATTR12 = \"ATTR12\";\n\tvar SEMANTIC_ATTR13 = \"ATTR13\";\n\tvar SEMANTIC_ATTR14 = \"ATTR14\";\n\tvar SEMANTIC_ATTR15 = \"ATTR15\";\n\tvar SHADERTAG_MATERIAL = 1;\n\tvar STENCILOP_KEEP = 0;\n\tvar STENCILOP_ZERO = 1;\n\tvar STENCILOP_REPLACE = 2;\n\tvar STENCILOP_INCREMENT = 3;\n\tvar STENCILOP_INCREMENTWRAP = 4;\n\tvar STENCILOP_DECREMENT = 5;\n\tvar STENCILOP_DECREMENTWRAP = 6;\n\tvar STENCILOP_INVERT = 7;\n\tvar TEXTURELOCK_READ = 1;\n\tvar TEXTURELOCK_WRITE = 2;\n\tvar TEXTURETYPE_DEFAULT = 'default';\n\tvar TEXTURETYPE_RGBM = 'rgbm';\n\tvar TEXTURETYPE_RGBE = 'rgbe';\n\tvar TEXTURETYPE_SWIZZLEGGGR = 'swizzleGGGR';\n\tvar TEXHINT_NONE = 0;\n\tvar TEXHINT_SHADOWMAP = 1;\n\tvar TEXHINT_ASSET = 2;\n\tvar TEXHINT_LIGHTMAP = 3;\n\tvar TYPE_INT8 = 0;\n\tvar TYPE_UINT8 = 1;\n\tvar TYPE_INT16 = 2;\n\tvar TYPE_UINT16 = 3;\n\tvar TYPE_INT32 = 4;\n\tvar TYPE_UINT32 = 5;\n\tvar TYPE_FLOAT32 = 6;\n\tvar UNIFORMTYPE_BOOL = 0;\n\tvar UNIFORMTYPE_INT = 1;\n\tvar UNIFORMTYPE_FLOAT = 2;\n\tvar UNIFORMTYPE_VEC2 = 3;\n\tvar UNIFORMTYPE_VEC3 = 4;\n\tvar UNIFORMTYPE_VEC4 = 5;\n\tvar UNIFORMTYPE_IVEC2 = 6;\n\tvar UNIFORMTYPE_IVEC3 = 7;\n\tvar UNIFORMTYPE_IVEC4 = 8;\n\tvar UNIFORMTYPE_BVEC2 = 9;\n\tvar UNIFORMTYPE_BVEC3 = 10;\n\tvar UNIFORMTYPE_BVEC4 = 11;\n\tvar UNIFORMTYPE_MAT2 = 12;\n\tvar UNIFORMTYPE_MAT3 = 13;\n\tvar UNIFORMTYPE_MAT4 = 14;\n\tvar UNIFORMTYPE_TEXTURE2D = 15;\n\tvar UNIFORMTYPE_TEXTURECUBE = 16;\n\tvar UNIFORMTYPE_FLOATARRAY = 17;\n\tvar UNIFORMTYPE_TEXTURE2D_SHADOW = 18;\n\tvar UNIFORMTYPE_TEXTURECUBE_SHADOW = 19;\n\tvar UNIFORMTYPE_TEXTURE3D = 20;\n\tvar UNIFORMTYPE_VEC2ARRAY = 21;\n\tvar UNIFORMTYPE_VEC3ARRAY = 22;\n\tvar UNIFORMTYPE_VEC4ARRAY = 23;\n\tvar typedArrayTypes = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array];\n\tvar typedArrayTypesByteSize = [1, 1, 2, 2, 4, 4, 4];\n\tvar typedArrayToType = {\n\t\t\"Int8Array\": TYPE_INT8,\n\t\t\"Uint8Array\": TYPE_UINT8,\n\t\t\"Int16Array\": TYPE_INT16,\n\t\t\"Uint16Array\": TYPE_UINT16,\n\t\t\"Int32Array\": TYPE_INT32,\n\t\t\"Uint32Array\": TYPE_UINT32,\n\t\t\"Float32Array\": TYPE_FLOAT32\n\t};\n\tvar typedArrayIndexFormats = [Uint8Array, Uint16Array, Uint32Array];\n\tvar typedArrayIndexFormatsByteSize = [1, 2, 4];\n\tvar semanticToLocation = {};\n\tsemanticToLocation[SEMANTIC_POSITION] = 0;\n\tsemanticToLocation[SEMANTIC_NORMAL] = 1;\n\tsemanticToLocation[SEMANTIC_BLENDWEIGHT] = 2;\n\tsemanticToLocation[SEMANTIC_BLENDINDICES] = 3;\n\tsemanticToLocation[SEMANTIC_COLOR] = 4;\n\tsemanticToLocation[SEMANTIC_TEXCOORD0] = 5;\n\tsemanticToLocation[SEMANTIC_TEXCOORD1] = 6;\n\tsemanticToLocation[SEMANTIC_TEXCOORD2] = 7;\n\tsemanticToLocation[SEMANTIC_TEXCOORD3] = 8;\n\tsemanticToLocation[SEMANTIC_TEXCOORD4] = 9;\n\tsemanticToLocation[SEMANTIC_TEXCOORD5] = 10;\n\tsemanticToLocation[SEMANTIC_TEXCOORD6] = 11;\n\tsemanticToLocation[SEMANTIC_TEXCOORD7] = 12;\n\tsemanticToLocation[SEMANTIC_TANGENT] = 13;\n\tsemanticToLocation[SEMANTIC_ATTR0] = 0;\n\tsemanticToLocation[SEMANTIC_ATTR1] = 1;\n\tsemanticToLocation[SEMANTIC_ATTR2] = 2;\n\tsemanticToLocation[SEMANTIC_ATTR3] = 3;\n\tsemanticToLocation[SEMANTIC_ATTR4] = 4;\n\tsemanticToLocation[SEMANTIC_ATTR5] = 5;\n\tsemanticToLocation[SEMANTIC_ATTR6] = 6;\n\tsemanticToLocation[SEMANTIC_ATTR7] = 7;\n\tsemanticToLocation[SEMANTIC_ATTR8] = 8;\n\tsemanticToLocation[SEMANTIC_ATTR9] = 9;\n\tsemanticToLocation[SEMANTIC_ATTR10] = 10;\n\tsemanticToLocation[SEMANTIC_ATTR11] = 11;\n\tsemanticToLocation[SEMANTIC_ATTR12] = 12;\n\tsemanticToLocation[SEMANTIC_ATTR13] = 13;\n\tsemanticToLocation[SEMANTIC_ATTR14] = 14;\n\tsemanticToLocation[SEMANTIC_ATTR15] = 15;\n\n\tvar id = 0;\n\n\tvar VertexBuffer = function () {\n\t\tfunction VertexBuffer(graphicsDevice, format, numVertices, usage, initialData) {\n\t\t\tif (usage === void 0) {\n\t\t\t\tusage = BUFFER_STATIC;\n\t\t\t}\n\n\t\t\tthis.device = graphicsDevice;\n\t\t\tthis.format = format;\n\t\t\tthis.numVertices = numVertices;\n\t\t\tthis.usage = usage;\n\t\t\tthis.id = id++;\n\t\t\tthis._vao = null;\n\t\t\tthis.numBytes = format.verticesByteSize ? format.verticesByteSize : format.size * numVertices;\n\t\t\tgraphicsDevice._vram.vb += this.numBytes;\n\n\t\t\tif (initialData) {\n\t\t\t\tthis.setData(initialData);\n\t\t\t} else {\n\t\t\t\tthis.storage = new ArrayBuffer(this.numBytes);\n\t\t\t}\n\n\t\t\tthis.device.buffers.push(this);\n\t\t}\n\n\t\tvar _proto = VertexBuffer.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar device = this.device;\n\t\t\tvar idx = device.buffers.indexOf(this);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tdevice.buffers.splice(idx, 1);\n\t\t\t}\n\n\t\t\tif (this.bufferId) {\n\t\t\t\tvar gl = device.gl;\n\t\t\t\tdevice.boundVao = null;\n\t\t\t\tgl.bindVertexArray(null);\n\t\t\t\tgl.deleteBuffer(this.bufferId);\n\t\t\t\tdevice._vram.vb -= this.storage.byteLength;\n\t\t\t\tthis.bufferId = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.loseContext = function loseContext() {\n\t\t\tthis.bufferId = undefined;\n\t\t\tthis._vao = null;\n\t\t};\n\n\t\t_proto.getFormat = function getFormat() {\n\t\t\treturn this.format;\n\t\t};\n\n\t\t_proto.getUsage = function getUsage() {\n\t\t\treturn this.usage;\n\t\t};\n\n\t\t_proto.getNumVertices = function getNumVertices() {\n\t\t\treturn this.numVertices;\n\t\t};\n\n\t\t_proto.lock = function lock() {\n\t\t\treturn this.storage;\n\t\t};\n\n\t\t_proto.unlock = function unlock() {\n\t\t\tvar gl = this.device.gl;\n\n\t\t\tif (!this.bufferId) {\n\t\t\t\tthis.bufferId = gl.createBuffer();\n\t\t\t}\n\n\t\t\tvar glUsage;\n\n\t\t\tswitch (this.usage) {\n\t\t\t\tcase BUFFER_STATIC:\n\t\t\t\t\tglUsage = gl.STATIC_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_DYNAMIC:\n\t\t\t\t\tglUsage = gl.DYNAMIC_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_STREAM:\n\t\t\t\t\tglUsage = gl.STREAM_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_GPUDYNAMIC:\n\t\t\t\t\tif (this.device.webgl2) {\n\t\t\t\t\t\tglUsage = gl.DYNAMIC_COPY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglUsage = gl.STATIC_DRAW;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.bufferId);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, this.storage, glUsage);\n\t\t};\n\n\t\t_proto.setData = function setData(data) {\n\t\t\tif (data.byteLength !== this.numBytes) {\n\t\t\t\tconsole.error(\"VertexBuffer: wrong initial data size: expected \" + this.numBytes + \", got \" + data.byteLength);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.storage = data;\n\t\t\tthis.unlock();\n\t\t\treturn true;\n\t\t};\n\n\t\treturn VertexBuffer;\n\t}();\n\n\tfunction hashCode(str) {\n\t\tvar hash = 0;\n\n\t\tfor (var i = 0, len = str.length; i < len; i++) {\n\t\t\thash = (hash << 5) - hash + str.charCodeAt(i);\n\t\t\thash |= 0;\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\tvar VertexFormat = function () {\n\t\tfunction VertexFormat(graphicsDevice, description, vertexCount) {\n\t\t\tvar i, len, element;\n\t\t\tthis.elements = [];\n\t\t\tthis.hasUv0 = false;\n\t\t\tthis.hasUv1 = false;\n\t\t\tthis.hasColor = false;\n\t\t\tthis.hasTangents = false;\n\t\t\tthis.verticesByteSize = 0;\n\t\t\tthis.vertexCount = vertexCount;\n\t\t\tthis.interleaved = vertexCount === undefined;\n\t\t\tthis.size = description.reduce(function (total, desc) {\n\t\t\t\treturn total + Math.ceil(desc.components * typedArrayTypesByteSize[desc.type] / 4) * 4;\n\t\t\t}, 0);\n\t\t\tvar offset = 0,\n\t\t\t\t\telementSize;\n\n\t\t\tfor (i = 0, len = description.length; i < len; i++) {\n\t\t\t\tvar elementDesc = description[i];\n\t\t\t\telementSize = elementDesc.components * typedArrayTypesByteSize[elementDesc.type];\n\n\t\t\t\tif (vertexCount) {\n\t\t\t\t\toffset = math.roundUp(offset, elementSize);\n\t\t\t\t}\n\n\t\t\t\telement = {\n\t\t\t\t\tname: elementDesc.semantic,\n\t\t\t\t\toffset: vertexCount ? offset : elementDesc.hasOwnProperty('offset') ? elementDesc.offset : offset,\n\t\t\t\t\tstride: vertexCount ? elementSize : elementDesc.hasOwnProperty('stride') ? elementDesc.stride : this.size,\n\t\t\t\t\tdataType: elementDesc.type,\n\t\t\t\t\tnumComponents: elementDesc.components,\n\t\t\t\t\tnormalize: elementDesc.normalize === undefined ? false : elementDesc.normalize,\n\t\t\t\t\tsize: elementSize\n\t\t\t\t};\n\t\t\t\tthis.elements.push(element);\n\n\t\t\t\tif (vertexCount) {\n\t\t\t\t\toffset += elementSize * vertexCount;\n\t\t\t\t} else {\n\t\t\t\t\toffset += Math.ceil(elementSize / 4) * 4;\n\t\t\t\t}\n\n\t\t\t\tif (elementDesc.semantic === SEMANTIC_TEXCOORD0) {\n\t\t\t\t\tthis.hasUv0 = true;\n\t\t\t\t} else if (elementDesc.semantic === SEMANTIC_TEXCOORD1) {\n\t\t\t\t\tthis.hasUv1 = true;\n\t\t\t\t} else if (elementDesc.semantic === SEMANTIC_COLOR) {\n\t\t\t\t\tthis.hasColor = true;\n\t\t\t\t} else if (elementDesc.semantic === SEMANTIC_TANGENT) {\n\t\t\t\t\tthis.hasTangents = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (vertexCount) {\n\t\t\t\tthis.verticesByteSize = offset;\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t}\n\n\t\tVertexFormat.init = function init(graphicsDevice) {\n\t\t\tvar formatDesc = [{\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD2,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD3,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD4,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD5,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}];\n\t\t\tVertexFormat._defaultInstancingFormat = new VertexFormat(graphicsDevice, formatDesc);\n\t\t};\n\n\t\tvar _proto = VertexFormat.prototype;\n\n\t\t_proto.update = function update() {\n\t\t\tthis._evaluateHash();\n\t\t};\n\n\t\t_proto._evaluateHash = function _evaluateHash() {\n\t\t\tvar stringElementBatch,\n\t\t\t\t\tstringElementsBatch = [];\n\t\t\tvar stringElementRender,\n\t\t\t\t\tstringElementsRender = [];\n\t\t\tvar i,\n\t\t\t\t\tlen = this.elements.length,\n\t\t\t\t\telement;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\telement = this.elements[i];\n\t\t\t\tstringElementBatch = element.name;\n\t\t\t\tstringElementBatch += element.dataType;\n\t\t\t\tstringElementBatch += element.numComponents;\n\t\t\t\tstringElementBatch += element.normalize;\n\t\t\t\tstringElementsBatch.push(stringElementBatch);\n\t\t\t\tstringElementRender = stringElementBatch;\n\t\t\t\tstringElementRender += element.offset;\n\t\t\t\tstringElementRender += element.stride;\n\t\t\t\tstringElementRender += element.size;\n\t\t\t\tstringElementsRender.push(stringElementRender);\n\t\t\t}\n\n\t\t\tstringElementsBatch.sort();\n\t\t\tthis.batchingHash = hashCode(stringElementsBatch.join());\n\t\t\tthis.renderingingHash = hashCode(stringElementsRender.join());\n\t\t};\n\n\t\t_createClass(VertexFormat, null, [{\n\t\t\tkey: \"defaultInstancingFormat\",\n\t\t\tget: function get() {\n\t\t\t\treturn VertexFormat._defaultInstancingFormat;\n\t\t\t}\n\t\t}]);\n\n\t\treturn VertexFormat;\n\t}();\n\n\tVertexFormat._defaultInstancingFormat = null;\n\n\tfunction set1(a) {\n\t\tthis.array[this.index] = a;\n\t}\n\n\tfunction set2(a, b) {\n\t\tthis.array[this.index] = a;\n\t\tthis.array[this.index + 1] = b;\n\t}\n\n\tfunction set3(a, b, c) {\n\t\tthis.array[this.index] = a;\n\t\tthis.array[this.index + 1] = b;\n\t\tthis.array[this.index + 2] = c;\n\t}\n\n\tfunction set4(a, b, c, d) {\n\t\tthis.array[this.index] = a;\n\t\tthis.array[this.index + 1] = b;\n\t\tthis.array[this.index + 2] = c;\n\t\tthis.array[this.index + 3] = d;\n\t}\n\n\tfunction arraySet1(index, inputArray, inputIndex) {\n\t\tthis.array[index] = inputArray[inputIndex];\n\t}\n\n\tfunction arraySet2(index, inputArray, inputIndex) {\n\t\tthis.array[index] = inputArray[inputIndex];\n\t\tthis.array[index + 1] = inputArray[inputIndex + 1];\n\t}\n\n\tfunction arraySet3(index, inputArray, inputIndex) {\n\t\tthis.array[index] = inputArray[inputIndex];\n\t\tthis.array[index + 1] = inputArray[inputIndex + 1];\n\t\tthis.array[index + 2] = inputArray[inputIndex + 2];\n\t}\n\n\tfunction arraySet4(index, inputArray, inputIndex) {\n\t\tthis.array[index] = inputArray[inputIndex];\n\t\tthis.array[index + 1] = inputArray[inputIndex + 1];\n\t\tthis.array[index + 2] = inputArray[inputIndex + 2];\n\t\tthis.array[index + 3] = inputArray[inputIndex + 3];\n\t}\n\n\tfunction arrayGet1(offset, outputArray, outputIndex) {\n\t\toutputArray[outputIndex] = this.array[offset];\n\t}\n\n\tfunction arrayGet2(offset, outputArray, outputIndex) {\n\t\toutputArray[outputIndex] = this.array[offset];\n\t\toutputArray[outputIndex + 1] = this.array[offset + 1];\n\t}\n\n\tfunction arrayGet3(offset, outputArray, outputIndex) {\n\t\toutputArray[outputIndex] = this.array[offset];\n\t\toutputArray[outputIndex + 1] = this.array[offset + 1];\n\t\toutputArray[outputIndex + 2] = this.array[offset + 2];\n\t}\n\n\tfunction arrayGet4(offset, outputArray, outputIndex) {\n\t\toutputArray[outputIndex] = this.array[offset];\n\t\toutputArray[outputIndex + 1] = this.array[offset + 1];\n\t\toutputArray[outputIndex + 2] = this.array[offset + 2];\n\t\toutputArray[outputIndex + 3] = this.array[offset + 3];\n\t}\n\n\tvar VertexIteratorAccessor = function () {\n\t\tfunction VertexIteratorAccessor(buffer, vertexElement, vertexFormat) {\n\t\t\tthis.index = 0;\n\t\t\tthis.numComponents = vertexElement.numComponents;\n\n\t\t\tif (vertexFormat.interleaved) {\n\t\t\t\tthis.array = new typedArrayTypes[vertexElement.dataType](buffer, vertexElement.offset);\n\t\t\t} else {\n\t\t\t\tthis.array = new typedArrayTypes[vertexElement.dataType](buffer, vertexElement.offset, vertexFormat.vertexCount * vertexElement.numComponents);\n\t\t\t}\n\n\t\t\tthis.stride = vertexElement.stride / this.array.constructor.BYTES_PER_ELEMENT;\n\n\t\t\tswitch (vertexElement.numComponents) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.set = set1;\n\t\t\t\t\tthis.getToArray = arrayGet1;\n\t\t\t\t\tthis.setFromArray = arraySet1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.set = set2;\n\t\t\t\t\tthis.getToArray = arrayGet2;\n\t\t\t\t\tthis.setFromArray = arraySet2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.set = set3;\n\t\t\t\t\tthis.getToArray = arrayGet3;\n\t\t\t\t\tthis.setFromArray = arraySet3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\tthis.set = set4;\n\t\t\t\t\tthis.getToArray = arrayGet4;\n\t\t\t\t\tthis.setFromArray = arraySet4;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = VertexIteratorAccessor.prototype;\n\n\t\t_proto.get = function get(offset) {\n\t\t\treturn this.array[this.index + offset];\n\t\t};\n\n\t\t_proto.set = function set(a, b, c, d) {};\n\n\t\t_proto.getToArray = function getToArray(offset, outputArray, outputIndex) {};\n\n\t\t_proto.setFromArray = function setFromArray(index, inputArray, inputIndex) {};\n\n\t\treturn VertexIteratorAccessor;\n\t}();\n\n\tvar VertexIterator = function () {\n\t\tfunction VertexIterator(vertexBuffer) {\n\t\t\tthis.vertexBuffer = vertexBuffer;\n\t\t\tthis.vertexFormatSize = vertexBuffer.getFormat().size;\n\t\t\tthis.buffer = this.vertexBuffer.lock();\n\t\t\tthis.accessors = [];\n\t\t\tthis.element = {};\n\t\t\tvar vertexFormat = this.vertexBuffer.getFormat();\n\n\t\t\tfor (var i = 0; i < vertexFormat.elements.length; i++) {\n\t\t\t\tvar vertexElement = vertexFormat.elements[i];\n\t\t\t\tthis.accessors[i] = new VertexIteratorAccessor(this.buffer, vertexElement, vertexFormat);\n\t\t\t\tthis.element[vertexElement.name] = this.accessors[i];\n\t\t\t}\n\t\t}\n\n\t\tvar _proto2 = VertexIterator.prototype;\n\n\t\t_proto2.next = function next(count) {\n\t\t\tif (count === void 0) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\tvar accessors = this.accessors;\n\t\t\tvar numAccessors = this.accessors.length;\n\n\t\t\twhile (i < numAccessors) {\n\t\t\t\tvar accessor = accessors[i++];\n\t\t\t\taccessor.index += count * accessor.stride;\n\t\t\t}\n\t\t};\n\n\t\t_proto2.end = function end() {\n\t\t\tthis.vertexBuffer.unlock();\n\t\t};\n\n\t\t_proto2.writeData = function writeData(semantic, data, numVertices) {\n\t\t\tvar element = this.element[semantic];\n\n\t\t\tif (element) {\n\t\t\t\tif (numVertices > this.vertexBuffer.numVertices) {\n\t\t\t\t\tnumVertices = this.vertexBuffer.numVertices;\n\t\t\t\t}\n\n\t\t\t\tvar i,\n\t\t\t\t\t\tnumComponents = element.numComponents;\n\n\t\t\t\tif (this.vertexBuffer.getFormat().interleaved) {\n\t\t\t\t\tvar index = 0;\n\n\t\t\t\t\tfor (i = 0; i < numVertices; i++) {\n\t\t\t\t\t\telement.setFromArray(index, data, i * numComponents);\n\t\t\t\t\t\tindex += element.stride;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (data.length > numVertices * numComponents) {\n\t\t\t\t\t\tvar copyCount = numVertices * numComponents;\n\n\t\t\t\t\t\tif (ArrayBuffer.isView(data)) {\n\t\t\t\t\t\t\tdata = data.subarray(0, copyCount);\n\t\t\t\t\t\t\telement.array.set(data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = 0; i < copyCount; i++) {\n\t\t\t\t\t\t\t\telement.array[i] = data[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.array.set(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.readData = function readData(semantic, data) {\n\t\t\tvar element = this.element[semantic];\n\t\t\tvar count = 0;\n\n\t\t\tif (element) {\n\t\t\t\tcount = this.vertexBuffer.numVertices;\n\t\t\t\tvar i,\n\t\t\t\t\t\tnumComponents = element.numComponents;\n\n\t\t\t\tif (this.vertexBuffer.getFormat().interleaved) {\n\t\t\t\t\tif (Array.isArray(data)) data.length = 0;\n\t\t\t\t\telement.index = 0;\n\t\t\t\t\tvar offset = 0;\n\n\t\t\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\t\t\telement.getToArray(offset, data, i * numComponents);\n\t\t\t\t\t\toffset += element.stride;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (ArrayBuffer.isView(data)) {\n\t\t\t\t\t\tdata.set(element.array);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.length = 0;\n\t\t\t\t\t\tvar copyCount = count * numComponents;\n\n\t\t\t\t\t\tfor (i = 0; i < copyCount; i++) {\n\t\t\t\t\t\t\tdata[i] = element.array[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t};\n\n\t\treturn VertexIterator;\n\t}();\n\n\tvar _postEffectQuadVB = null;\n\tvar _postEffectQuadDraw = {\n\t\ttype: PRIMITIVE_TRISTRIP,\n\t\tbase: 0,\n\t\tcount: 4,\n\t\tindexed: false\n\t};\n\n\tfunction drawQuadWithShader(device, target, shader, rect, scissorRect, useBlend) {\n\t\tif (useBlend === void 0) {\n\t\t\tuseBlend = false;\n\t\t}\n\n\t\tif (_postEffectQuadVB === null) {\n\t\t\tvar vertexFormat = new VertexFormat(device, [{\n\t\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}]);\n\t\t\t_postEffectQuadVB = new VertexBuffer(device, vertexFormat, 4);\n\t\t\tvar iterator = new VertexIterator(_postEffectQuadVB);\n\t\t\titerator.element[SEMANTIC_POSITION].set(-1.0, -1.0);\n\t\t\titerator.next();\n\t\t\titerator.element[SEMANTIC_POSITION].set(1.0, -1.0);\n\t\t\titerator.next();\n\t\t\titerator.element[SEMANTIC_POSITION].set(-1.0, 1.0);\n\t\t\titerator.next();\n\t\t\titerator.element[SEMANTIC_POSITION].set(1.0, 1.0);\n\t\t\titerator.end();\n\t\t}\n\n\t\tvar oldRt = device.renderTarget;\n\t\tdevice.setRenderTarget(target);\n\t\tdevice.updateBegin();\n\t\tvar x, y, w, h;\n\t\tvar sx, sy, sw, sh;\n\n\t\tif (!rect) {\n\t\t\tw = target ? target.width : device.width;\n\t\t\th = target ? target.height : device.height;\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t} else {\n\t\t\tx = rect.x;\n\t\t\ty = rect.y;\n\t\t\tw = rect.z;\n\t\t\th = rect.w;\n\t\t}\n\n\t\tif (!scissorRect) {\n\t\t\tsx = x;\n\t\t\tsy = y;\n\t\t\tsw = w;\n\t\t\tsh = h;\n\t\t} else {\n\t\t\tsx = scissorRect.x;\n\t\t\tsy = scissorRect.y;\n\t\t\tsw = scissorRect.z;\n\t\t\tsh = scissorRect.w;\n\t\t}\n\n\t\tvar oldVx = device.vx;\n\t\tvar oldVy = device.vy;\n\t\tvar oldVw = device.vw;\n\t\tvar oldVh = device.vh;\n\t\tdevice.setViewport(x, y, w, h);\n\t\tvar oldSx = device.sx;\n\t\tvar oldSy = device.sy;\n\t\tvar oldSw = device.sw;\n\t\tvar oldSh = device.sh;\n\t\tdevice.setScissor(sx, sy, sw, sh);\n\t\tvar oldDepthTest = device.getDepthTest();\n\t\tvar oldDepthWrite = device.getDepthWrite();\n\t\tvar oldCullMode = device.getCullMode();\n\t\tvar oldWR = device.writeRed;\n\t\tvar oldWG = device.writeGreen;\n\t\tvar oldWB = device.writeBlue;\n\t\tvar oldWA = device.writeAlpha;\n\t\tdevice.setDepthTest(false);\n\t\tdevice.setDepthWrite(false);\n\t\tdevice.setCullMode(CULLFACE_NONE);\n\t\tdevice.setColorWrite(true, true, true, true);\n\t\tif (!useBlend) device.setBlending(false);\n\t\tdevice.setVertexBuffer(_postEffectQuadVB, 0);\n\t\tdevice.setShader(shader);\n\t\tdevice.draw(_postEffectQuadDraw);\n\t\tdevice.setDepthTest(oldDepthTest);\n\t\tdevice.setDepthWrite(oldDepthWrite);\n\t\tdevice.setCullMode(oldCullMode);\n\t\tdevice.setColorWrite(oldWR, oldWG, oldWB, oldWA);\n\t\tdevice.updateEnd();\n\t\tdevice.setRenderTarget(oldRt);\n\t\tdevice.updateBegin();\n\t\tdevice.setViewport(oldVx, oldVy, oldVw, oldVh);\n\t\tdevice.setScissor(oldSx, oldSy, oldSw, oldSh);\n\t}\n\n\tfunction destroyPostEffectQuad() {\n\t\tif (_postEffectQuadVB) {\n\t\t\t_postEffectQuadVB.destroy();\n\n\t\t\t_postEffectQuadVB = null;\n\t\t}\n\t}\n\n\tfunction drawTexture(device, texture, target, shader, rect, scissorRect, useBlend) {\n\t\tif (useBlend === void 0) {\n\t\t\tuseBlend = false;\n\t\t}\n\n\t\tshader = shader || device.getCopyShader();\n\t\tdevice.constantTexSource.setValue(texture);\n\t\tdrawQuadWithShader(device, target, shader, rect, scissorRect, useBlend);\n\t}\n\n\tvar Shader = function () {\n\t\tfunction Shader(graphicsDevice, definition) {\n\t\t\tthis.device = graphicsDevice;\n\t\t\tthis.definition = definition;\n\t\t\tthis.init();\n\t\t\tthis.device.createShader(this);\n\t\t}\n\n\t\tvar _proto = Shader.prototype;\n\n\t\t_proto.init = function init() {\n\t\t\tthis.attributes = [];\n\t\t\tthis.uniforms = [];\n\t\t\tthis.samplers = [];\n\t\t\tthis.ready = false;\n\t\t\tthis.failed = false;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.device.destroyShader(this);\n\t\t};\n\n\t\t_proto.loseContext = function loseContext() {\n\t\t\tthis.init();\n\t\t};\n\n\t\treturn Shader;\n\t}();\n\n\tvar alphaTestPS = \"uniform float alpha_ref;\\nvoid alphaTest(float a) {\\n\\tif (a < alpha_ref) discard;\\n}\\n\";\n\n\tvar ambientConstantPS = \"void addAmbient() {\\n\\tdDiffuseLight += light_globalAmbient;\\n}\\n\";\n\n\tvar ambientPrefilteredCubePS = \"#ifndef PMREM4\\n#define PMREM4\\nuniform samplerCube texture_prefilteredCubeMap4;\\n#endif\\nvoid addAmbient() {\\n\\tvec3 fixedReflDir = fixSeamsStatic(cubeMapRotate(dNormalW), 1.0 - 1.0 / 4.0);\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\tfixedReflDir.x *= -1.0;\\n#endif\\n\\tdDiffuseLight += processEnvironment($DECODE(textureCube(texture_prefilteredCubeMap4, fixedReflDir)).rgb);\\n}\\n\";\n\n\tvar ambientPrefilteredCubeLodPS = \"#ifndef PMREM4\\n#define PMREM4\\n#extension GL_EXT_shader_texture_lod : enable\\nuniform samplerCube texture_prefilteredCubeMap128;\\n#endif\\nvoid addAmbient() {\\n\\tvec3 fixedReflDir = fixSeamsStatic(cubeMapRotate(dNormalW), 1.0 - 1.0 / 4.0);\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\tfixedReflDir.x *= -1.0;\\n#endif\\n\\tdDiffuseLight += processEnvironment($DECODE( textureCubeLodEXT(texture_prefilteredCubeMap128, fixedReflDir, 5.0) ).rgb);\\n}\\n\";\n\n\tvar ambientSHPS = \"uniform vec3 ambientSH[9];\\nvoid addAmbient() {\\n\\tvec3 n = cubeMapRotate(dNormalW);\\n\\tvec3 color =\\n\\t\\tambientSH[0] +\\n\\t\\tambientSH[1] * n.x +\\n\\t\\tambientSH[2] * n.y +\\n\\t\\tambientSH[3] * n.z +\\n\\t\\tambientSH[4] * n.x * n.z +\\n\\t\\tambientSH[5] * n.z * n.y +\\n\\t\\tambientSH[6] * n.y * n.x +\\n\\t\\tambientSH[7] * (3.0 * n.z * n.z - 1.0) +\\n\\t\\tambientSH[8] * (n.x * n.x - n.y * n.y);\\n\\tdDiffuseLight += processEnvironment(max(color, vec3(0.0)));\\n}\\n\";\n\n\tvar aoPS = \"#ifdef MAPTEXTURE\\nuniform sampler2D texture_aoMap;\\n#endif\\nvoid applyAO() {\\n\\tdAo = 1.0;\\n\\t#ifdef MAPTEXTURE\\n\\tdAo *= texture2D(texture_aoMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tdAo *= saturate(vVertexColor.$VC);\\n\\t#endif\\n\\tdDiffuseLight *= dAo;\\n}\\n\";\n\n\tvar aoSpecOccPS = \"uniform float material_occludeSpecularIntensity;\\nvoid occludeSpecular() {\\n\\tfloat specPow = exp2(dGlossiness * 11.0);\\n\\tfloat specOcc = saturate(pow(dot(dNormalW, dViewDirW) + dAo, 0.01*specPow) - 1.0 + dAo);\\n\\tspecOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);\\n\\tdSpecularLight *= specOcc;\\n\\tdReflection *= specOcc;\\n}\\n\";\n\n\tvar aoSpecOccConstPS = \"void occludeSpecular() {\\n\\tfloat specPow = exp2(dGlossiness * 11.0);\\n\\tfloat specOcc = saturate(pow(dot(dNormalW, dViewDirW) + dAo, 0.01*specPow) - 1.0 + dAo);\\n\\tdSpecularLight *= specOcc;\\n\\tdReflection *= specOcc;\\n}\\n\";\n\n\tvar aoSpecOccConstSimplePS = \"void occludeSpecular() {\\n\\tfloat specOcc = dAo;\\n\\tdSpecularLight *= specOcc;\\n\\tdReflection *= specOcc;\\n}\\n\";\n\n\tvar aoSpecOccSimplePS = \"uniform float material_occludeSpecularIntensity;\\nvoid occludeSpecular() {\\n\\tfloat specOcc = mix(1.0, dAo, material_occludeSpecularIntensity);\\n\\tdSpecularLight *= specOcc;\\n\\tdReflection *= specOcc;\\n}\\n\";\n\n\tvar bakeDirLmEndPS = \"\\tvec4 dirLm = texture2D(texture_dirLightMap, vUv1);\\n\\tif (bakeDir > 0.5) {\\n\\t\\tif (dAtten > 0.00001) {\\n\\t\\t\\tdirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);\\n\\t\\t\\tdAtten = saturate(dAtten);\\n\\t\\t\\tgl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);\\n\\t\\t\\tgl_FragColor.a = dirLm.w + dAtten;\\n\\t\\t\\tgl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);\\n\\t\\t} else {\\n\\t\\t\\tgl_FragColor = dirLm;\\n\\t\\t}\\n\\t} else {\\n\\t\\tgl_FragColor.rgb = dirLm.xyz;\\n\\t\\tgl_FragColor.a = max(dirLm.w, dAtten > 0.00001? (1.0/255.0) : 0.0);\\n\\t}\\n\";\n\n\tvar bakeLmEndPS = \"\\tgl_FragColor.rgb = dDiffuseLight;\\n\\tgl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));\\n\\tgl_FragColor.rgb /= 8.0;\\n\\tgl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );\\n\\tgl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;\\n\\tgl_FragColor.rgb /= gl_FragColor.a;\\n\";\n\n\tvar basePS = \"uniform vec3 view_position;\\nuniform vec3 light_globalAmbient;\\nfloat square(float x) {\\n\\treturn x*x;\\n}\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nvec3 saturate(vec3 x) {\\n\\treturn clamp(x, vec3(0.0), vec3(1.0));\\n}\\n\";\n\n\tvar baseVS = \"attribute vec3 vertex_position;\\nattribute vec3 vertex_normal;\\nattribute vec4 vertex_tangent;\\nattribute vec2 vertex_texCoord0;\\nattribute vec2 vertex_texCoord1;\\nattribute vec4 vertex_color;\\nuniform mat4 matrix_viewProjection;\\nuniform mat4 matrix_model;\\nuniform mat3 matrix_normal;\\nvec3 dPositionW;\\nmat4 dModelMatrix;\\nmat3 dNormalMatrix;\\nvec3 dLightPosW;\\nvec3 dLightDirNormW;\\nvec3 dNormalW;\\n\";\n\n\tvar baseNineSlicedPS = \"#define NINESLICED\\nvarying vec2 vMask;\\nvarying vec2 vTiledUv;\\nuniform mediump vec4 innerOffset;\\nuniform mediump vec2 outerScale;\\nuniform mediump vec4 atlasRect;\\nvec2 nineSlicedUv;\\n\";\n\n\tvar baseNineSlicedVS = \"#define NINESLICED\\nvarying vec2 vMask;\\nvarying vec2 vTiledUv;\\nuniform mediump vec4 innerOffset;\\nuniform mediump vec2 outerScale;\\nuniform mediump vec4 atlasRect;\\n\";\n\n\tvar baseNineSlicedTiledPS = \"#define NINESLICED\\n#define NINESLICETILED\\nvarying vec2 vMask;\\nvarying vec2 vTiledUv;\\nuniform mediump vec4 innerOffset;\\nuniform mediump vec2 outerScale;\\nuniform mediump vec4 atlasRect;\\nvec2 nineSlicedUv;\\n\";\n\n\tvar biasConstPS = \"#define SHADOWBIAS\\nfloat getShadowBias(float resolution, float maxBias) {\\n\\treturn maxBias;\\n}\\n\";\n\n\tvar blurVSMPS = \"varying vec2 vUv0;\\nuniform sampler2D source;\\nuniform vec2 pixelOffset;\\n#ifdef GAUSS\\nuniform float weight[SAMPLES];\\n#endif\\n#ifdef PACKED\\nfloat decodeFloatRG(vec2 rg) {\\n\\treturn rg.y*(1.0/255.0) + rg.x;\\n}\\nvec2 encodeFloatRG( float v ) {\\n\\tvec2 enc = vec2(1.0, 255.0) * v;\\n\\tenc = fract(enc);\\n\\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\\n\\treturn enc;\\n}\\n#endif\\nvoid main(void) {\\n\\tvec3 moments = vec3(0.0);\\n\\tvec2 uv = vUv0 - pixelOffset * (float(SAMPLES) * 0.5);\\n\\tfor (int i=0; i<SAMPLES; i++) {\\n\\t\\tvec4 c = texture2D(source, uv + pixelOffset * float(i));\\n\\t\\t#ifdef PACKED\\n\\t\\tc.xy = vec2(decodeFloatRG(c.xy), decodeFloatRG(c.zw));\\n\\t\\t#endif\\n\\t\\t#ifdef GAUSS\\n\\t\\tmoments += c.xyz * weight[i];\\n\\t\\t#else\\n\\t\\tmoments += c.xyz;\\n\\t\\t#endif\\n\\t}\\n\\t#ifndef GAUSS\\n\\tmoments /= float(SAMPLES);\\n\\t#endif\\n\\t#ifdef PACKED\\n\\tgl_FragColor = vec4(encodeFloatRG(moments.x), encodeFloatRG(moments.y));\\n\\t#else\\n\\tgl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);\\n\\t#endif\\n}\\n\";\n\n\tvar clearCoatPS = \"#ifdef MAPFLOAT\\nuniform float material_clearCoat;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_clearCoatMap;\\n#endif\\nvoid getClearCoat() {\\n\\tccSpecularity = 1.0;\\n\\t#ifdef MAPFLOAT\\n\\tccSpecularity *= material_clearCoat;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tccSpecularity *= texture2D(texture_clearCoatMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tccSpecularity *= saturate(vVertexColor.$VC);\\n\\t#endif\\n}\\n\";\n\n\tvar clearCoatGlossPS = \"#ifdef MAPFLOAT\\nuniform float material_clearCoatGlossiness;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_clearCoatGlossMap;\\n#endif\\nvoid getClearCoatGlossiness() {\\n\\tccGlossiness = 1.0;\\n\\t#ifdef MAPFLOAT\\n\\tccGlossiness *= material_clearCoatGlossiness;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tccGlossiness *= texture2D(texture_clearCoatGlossMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tccGlossiness *= saturate(vVertexColor.$VC);\\n\\t#endif\\n\\tccGlossiness += 0.0000001;\\n}\\n\";\n\n\tvar clearCoatNormalPS = \"#ifdef MAPTEXTURE\\nuniform sampler2D texture_clearCoatNormalMap;\\nuniform float material_clearCoatBumpiness;\\n#endif\\nvoid getClearCoatNormal() {\\n\\t#ifdef MAPTEXTURE\\n\\tvec3 normalMap = unpackNormal(texture2D(texture_clearCoatNormalMap, $UV));\\n\\tnormalMap = normalize(mix(vec3(0.0, 0.0, 1.0), normalMap, material_clearCoatBumpiness));\\n\\tccNormalW = dTBN * normalMap;\\n\\t#else\\n\\tccNormalW = normalize(dVertexNormalW);\\n\\t#endif\\n\\tccReflDirW = normalize(-reflect(dViewDirW, ccNormalW));\\n}\\n\";\n\n\tvar combineClearCoatPS = \"vec3 combineColorCC() {\\n\\treturn combineColor()+(ccSpecularLight*ccSpecularity+ccReflection.rgb*ccSpecularity*ccReflection.a);\\n}\\n\";\n\n\tvar combineDiffusePS = \"vec3 combineColor() {\\n\\treturn dAlbedo * dDiffuseLight;\\n}\\n\";\n\n\tvar combineDiffuseSpecularPS = \"vec3 combineColor() {\\n\\treturn mix(dAlbedo * dDiffuseLight, dSpecularLight + dReflection.rgb * dReflection.a, dSpecularity);\\n}\\n\";\n\n\tvar combineDiffuseSpecularNoConservePS = \"vec3 combineColor() {\\n\\treturn dAlbedo * dDiffuseLight + (dSpecularLight + dReflection.rgb * dReflection.a) * dSpecularity;\\n}\\n\";\n\n\tvar combineDiffuseSpecularNoReflPS = \"vec3 combineColor() {\\n\\treturn dAlbedo * dDiffuseLight + dSpecularLight * dSpecularity;\\n}\\n\";\n\n\tvar combineDiffuseSpecularNoReflSeparateAmbientPS = \"uniform vec3 material_ambient;\\nvec3 combineColor() {\\n\\treturn (dDiffuseLight - light_globalAmbient) * dAlbedo + dSpecularLight * dSpecularity + material_ambient * light_globalAmbient;\\n}\\n\";\n\n\tvar combineDiffuseSpecularOldPS = \"vec3 combineColor() {\\n\\treturn mix(dAlbedo * dDiffuseLight + dSpecularLight * dSpecularity, dReflection.rgb, dReflection.a);\\n}\\n\";\n\n\tvar cookiePS = \"vec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {\\n\\tvec4 projPos = transform * vec4(vPositionW, 1.0);\\n\\tprojPos.xy /= projPos.w;\\n\\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\\n}\\nvec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {\\n\\tvec4 projPos = transform * vec4(vPositionW, 1.0);\\n\\tprojPos.xy /= projPos.w;\\n\\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\\n\\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\\n}\\nvec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\\n\\tvec4 projPos = transform * vec4(vPositionW, 1.0);\\n\\tprojPos.xy /= projPos.w;\\n\\tprojPos.xy += cookieOffset;\\n\\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\\n\\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\\n}\\nvec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\\n\\tvec4 projPos = transform * vec4(vPositionW, 1.0);\\n\\tprojPos.xy /= projPos.w;\\n\\tprojPos.xy += cookieOffset;\\n\\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\\n\\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\\n\\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\\n}\\nvec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {\\n\\treturn mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);\\n}\\n\";\n\n\tvar cubeMapProjectBoxPS = \"uniform vec3 envBoxMin, envBoxMax;\\nvec3 cubeMapProject(vec3 nrdir) {\\n\\tnrdir = cubeMapRotate(nrdir);\\n\\tvec3 rbmax = (envBoxMax - vPositionW) / nrdir;\\n\\tvec3 rbmin = (envBoxMin - vPositionW) / nrdir;\\n\\tvec3 rbminmax;\\n\\trbminmax.x = nrdir.x>0.0? rbmax.x : rbmin.x;\\n\\trbminmax.y = nrdir.y>0.0? rbmax.y : rbmin.y;\\n\\trbminmax.z = nrdir.z>0.0? rbmax.z : rbmin.z;\\n\\tfloat fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\\n\\tvec3 posonbox = vPositionW + nrdir * fa;\\n\\tvec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;\\n\\treturn posonbox - envBoxPos;\\n}\\n\";\n\n\tvar cubeMapProjectNonePS = \"vec3 cubeMapProject(vec3 dir) {\\n\\treturn cubeMapRotate(dir);\\n}\\n\";\n\n\tvar cubeMapRotatePS = \"#ifdef CUBEMAP_ROTATION\\nuniform mat3 cubeMapRotationMatrix;\\n#endif\\nvec3 cubeMapRotate(vec3 refDir) {\\n#ifdef CUBEMAP_ROTATION\\n\\treturn refDir * cubeMapRotationMatrix;\\n#else\\n\\treturn refDir;\\n#endif\\n}\\n\";\n\n\tvar detailModesPS = \"vec3 detailMode_mul(vec3 c1, vec3 c2) {\\n\\treturn c1 * c2;\\n}\\nvec3 detailMode_add(vec3 c1, vec3 c2) {\\n\\treturn c1 + c2;\\n}\\nvec3 detailMode_screen(vec3 c1, vec3 c2) {\\n\\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\\n}\\nvec3 detailMode_overlay(vec3 c1, vec3 c2) {\\n\\treturn mix(1.0 - 2.0*(1.0 - c1)*(1.0 - c2), 2.0*c1*c2, step(c1, vec3(0.5)));\\n}\\nvec3 detailMode_min(vec3 c1, vec3 c2) {\\n\\treturn min(c1, c2);\\n}\\nvec3 detailMode_max(vec3 c1, vec3 c2) {\\n\\treturn max(c1, c2);\\n}\\n\";\n\n\tvar diffusePS = \"#ifdef MAPCOLOR\\nuniform vec3 material_diffuse;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_diffuseMap;\\n#endif\\nvoid getAlbedo() {\\n\\tdAlbedo = vec3(1.0);\\n\\t#ifdef MAPCOLOR\\n\\tdAlbedo *= material_diffuse.rgb;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tdAlbedo *= gammaCorrectInput(addAlbedoDetail(texture2D(texture_diffuseMap, $UV).$CH));\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tdAlbedo *= gammaCorrectInput(saturate(vVertexColor.$VC));\\n\\t#endif\\n}\\n\";\n\n\tvar diffuseDetailMapPS = \"#ifdef MAPTEXTURE\\nuniform sampler2D texture_diffuseDetailMap;\\n#endif\\nvec3 addAlbedoDetail(vec3 albedo) {\\n\\t#ifdef MAPTEXTURE\\n\\tvec3 albedoDetail = vec3(texture2D(texture_diffuseDetailMap, $UV).$CH);\\n\\treturn detailMode_$DETAILMODE(albedo, albedoDetail);\\n\\t#else\\n\\treturn albedo;\\n\\t#endif\\n}\\n\";\n\n\tvar dilatePS = \"varying vec2 vUv0;\\nuniform sampler2D source;\\nuniform vec2 pixelOffset;\\nvoid main(void) {\\n\\tvec4 c = texture2D(source, vUv0);\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 - pixelOffset);\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, -pixelOffset.y));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, 0));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, 0));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, pixelOffset.y));\\n\\tc = c.a>0.0? c : texture2D(source, vUv0 + pixelOffset);\\n\\tgl_FragColor = c;\\n}\\n\";\n\n\tvar dpAtlasQuadPS = \"varying vec2 vUv0;\\nuniform sampler2D source;\\nuniform vec4 params;\\nvoid main(void) {\\n\\tvec2 uv = vUv0;\\n\\tuv = uv * 2.0 - vec2(1.0);\\n\\tuv *= params.xy;\\n\\tuv = uv * 0.5 + 0.5;\\n\\tgl_FragColor = texture2D(source, uv);\\n}\\n\";\n\n\tvar emissivePS = \"#ifdef MAPCOLOR\\nuniform vec3 material_emissive;\\n#endif\\n#ifdef MAPFLOAT\\nuniform float material_emissiveIntensity;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_emissiveMap;\\n#endif\\nvec3 getEmission() {\\n\\tvec3 emission = vec3(1.0);\\n\\t#ifdef MAPFLOAT\\n\\temission *= material_emissiveIntensity;\\n\\t#endif\\n\\t#ifdef MAPCOLOR\\n\\temission *= material_emissive;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\temission *= $texture2DSAMPLE(texture_emissiveMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\temission *= gammaCorrectInput(saturate(vVertexColor.$VC));\\n\\t#endif\\n\\treturn emission;\\n}\\n\";\n\n\tvar endPS = \"\\t#ifdef CLEARCOAT\\n\\tgl_FragColor.rgb = combineColorCC();\\n\\t#else\\n\\tgl_FragColor.rgb = combineColor();\\n\\t#endif\\n\\tgl_FragColor.rgb += getEmission();\\n\\tgl_FragColor.rgb = addFog(gl_FragColor.rgb);\\n\\t#ifndef HDR\\n\\tgl_FragColor.rgb = toneMap(gl_FragColor.rgb);\\n\\tgl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);\\n\\t#endif\\n\";\n\n\tvar envConstPS = \"vec3 processEnvironment(vec3 color) {\\n\\treturn color;\\n}\\n\";\n\n\tvar envMultiplyPS = \"uniform float skyboxIntensity;\\nvec3 processEnvironment(vec3 color) {\\n\\treturn color * skyboxIntensity;\\n}\\n\";\n\n\tvar extensionPS = \"\\n\";\n\n\tvar extensionVS = \"\\n\";\n\n\tvar falloffInvSquaredPS = \"float getFalloffWindow(float lightRadius) {\\n\\tfloat sqrDist = dot(dLightDirW, dLightDirW);\\n\\tfloat invRadius = 1.0 / lightRadius;\\n\\treturn square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );\\n}\\nfloat getFalloffInvSquared(float lightRadius) {\\n\\tfloat sqrDist = dot(dLightDirW, dLightDirW);\\n\\tfloat falloff = 1.0 / (sqrDist + 1.0);\\n\\tfloat invRadius = 1.0 / lightRadius;\\n\\tfalloff *= 16.0;\\n\\tfalloff *= square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );\\n\\treturn falloff;\\n}\\n\";\n\n\tvar falloffLinearPS = \"float getFalloffLinear(float lightRadius) {\\n\\tfloat d = length(dLightDirW);\\n\\treturn max(((lightRadius - d) / lightRadius), 0.0);\\n}\\n\";\n\n\tvar fixCubemapSeamsNonePS = \"vec3 fixSeams(vec3 vec, float mipmapIndex) {\\n\\treturn vec;\\n}\\nvec3 fixSeams(vec3 vec) {\\n\\treturn vec;\\n}\\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\\n\\treturn vec;\\n}\\nvec3 calcSeam(vec3 vec) {\\n\\treturn vec3(0);\\n}\\nvec3 applySeam(vec3 vec, vec3 seam, float scale) {\\n\\treturn vec;\\n}\\n\";\n\n\tvar fixCubemapSeamsStretchPS = \"vec3 fixSeams(vec3 vec, float mipmapIndex) {\\n\\tfloat scale = 1.0 - exp2(mipmapIndex) / 128.0;\\n\\tfloat M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\\n\\tif (abs(vec.x) != M) vec.x *= scale;\\n\\tif (abs(vec.y) != M) vec.y *= scale;\\n\\tif (abs(vec.z) != M) vec.z *= scale;\\n\\treturn vec;\\n}\\nvec3 fixSeams(vec3 vec) {\\n\\tfloat scale = 1.0 - 1.0 / 128.0;\\n\\tfloat M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\\n\\tif (abs(vec.x) != M) vec.x *= scale;\\n\\tif (abs(vec.y) != M) vec.y *= scale;\\n\\tif (abs(vec.z) != M) vec.z *= scale;\\n\\treturn vec;\\n}\\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\\n\\tfloat scale = invRecMipSize;\\n\\tfloat M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\\n\\tif (abs(vec.x) != M) vec.x *= scale;\\n\\tif (abs(vec.y) != M) vec.y *= scale;\\n\\tif (abs(vec.z) != M) vec.z *= scale;\\n\\treturn vec;\\n}\\nvec3 calcSeam(vec3 vec) {\\n\\tvec3 avec = abs(vec);\\n\\tfloat M = max(avec.x, max(avec.y, avec.z));\\n\\treturn vec3(avec.x != M ? 1.0 : 0.0,\\n\\t\\t\\t\\tavec.y != M ? 1.0 : 0.0,\\n\\t\\t\\t\\tavec.z != M ? 1.0 : 0.0);\\n}\\nvec3 applySeam(vec3 vec, vec3 seam, float scale) {\\n\\treturn vec * (seam * -scale + vec3(1.0));\\n}\\n\";\n\n\tvar fogExpPS = \"uniform vec3 fog_color;\\nuniform float fog_density;\\nfloat dBlendModeFogFactor = 1.0;\\nvec3 addFog(vec3 color) {\\n\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\tfloat fogFactor = exp(-depth * fog_density);\\n\\tfogFactor = clamp(fogFactor, 0.0, 1.0);\\n\\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\\n}\\n\";\n\n\tvar fogExp2PS = \"uniform vec3 fog_color;\\nuniform float fog_density;\\nfloat dBlendModeFogFactor = 1.0;\\nvec3 addFog(vec3 color) {\\n\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\tfloat fogFactor = exp(-depth * depth * fog_density * fog_density);\\n\\tfogFactor = clamp(fogFactor, 0.0, 1.0);\\n\\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\\n}\\n\";\n\n\tvar fogLinearPS = \"uniform vec3 fog_color;\\nuniform float fog_start;\\nuniform float fog_end;\\nfloat dBlendModeFogFactor = 1.0;\\nvec3 addFog(vec3 color) {\\n\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\tfloat fogFactor = (fog_end - depth) / (fog_end - fog_start);\\n\\tfogFactor = clamp(fogFactor, 0.0, 1.0);\\n\\tfogFactor = gammaCorrectInput(fogFactor);\\n\\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\\n}\\n\";\n\n\tvar fogNonePS = \"float dBlendModeFogFactor = 1.0;\\nvec3 addFog(vec3 color) {\\n\\treturn color;\\n}\\n\";\n\n\tvar fresnelSchlickPS = \"\\nuniform float material_fresnelFactor;\\nvoid getFresnel() {\\n\\tfloat fresnel = 1.0 - max(dot(dNormalW, dViewDirW), 0.0);\\n\\tfloat fresnel2 = fresnel * fresnel;\\n\\tfresnel *= fresnel2 * fresnel2;\\n\\tfresnel *= dGlossiness * dGlossiness;\\n\\tdSpecularity = dSpecularity + (1.0 - dSpecularity) * fresnel;\\n\\t#ifdef CLEARCOAT\\n\\tfresnel = 1.0 - max(dot(ccNormalW, dViewDirW), 0.0);\\n\\tfresnel2 = fresnel * fresnel;\\n\\tfresnel *= fresnel2 * fresnel2;\\n\\tfresnel *= ccGlossiness * ccGlossiness;\\n\\tccSpecularity = ccSpecularity + (1.0 - ccSpecularity) * fresnel;\\n\\t#endif\\n}\\n\";\n\n\tvar fullscreenQuadPS = \"varying vec2 vUv0;\\nuniform sampler2D source;\\nvoid main(void) {\\n\\tgl_FragColor = texture2D(source, vUv0);\\n}\\n\";\n\n\tvar fullscreenQuadVS = \"attribute vec2 vertex_position;\\nvarying vec2 vUv0;\\nvoid main(void)\\n{\\n\\tgl_Position = vec4(vertex_position, 0.5, 1.0);\\n\\tvUv0 = vertex_position.xy*0.5+0.5;\\n}\\n\";\n\n\tvar gamma1_0PS = \"vec4 texture2DSRGB(sampler2D tex, vec2 uv) {\\n\\treturn texture2D(tex, uv);\\n}\\nvec4 texture2DSRGB(sampler2D tex, vec2 uv, float bias) {\\n\\treturn texture2D(tex, uv, bias);\\n}\\nvec4 textureCubeSRGB(samplerCube tex, vec3 uvw) {\\n\\treturn textureCube(tex, uvw);\\n}\\nvec3 gammaCorrectOutput(vec3 color) {\\n\\treturn color;\\n}\\nvec3 gammaCorrectInput(vec3 color) {\\n\\treturn color;\\n}\\nfloat gammaCorrectInput(float color) {\\n\\treturn color;\\n}\\nvec4 gammaCorrectInput(vec4 color) {\\n\\treturn color;\\n}\\n\";\n\n\tvar gamma2_2PS = \"vec3 gammaCorrectInput(vec3 color) {\\n\\treturn pow(color, vec3(2.2));\\n}\\nfloat gammaCorrectInput(float color) {\\n\\treturn pow(color, 2.2);\\n}\\nvec4 gammaCorrectInput(vec4 color) {\\n\\treturn vec4(pow(color.rgb, vec3(2.2)), color.a);\\n}\\nvec4 texture2DSRGB(sampler2D tex, vec2 uv) {\\n\\tvec4 rgba = texture2D(tex, uv);\\n\\trgba.rgb = gammaCorrectInput(rgba.rgb);\\n\\treturn rgba;\\n}\\nvec4 texture2DSRGB(sampler2D tex, vec2 uv, float bias) {\\n\\tvec4 rgba = texture2D(tex, uv, bias);\\n\\trgba.rgb = gammaCorrectInput(rgba.rgb);\\n\\treturn rgba;\\n}\\nvec4 textureCubeSRGB(samplerCube tex, vec3 uvw) {\\n\\tvec4 rgba = textureCube(tex, uvw);\\n\\trgba.rgb = gammaCorrectInput(rgba.rgb);\\n\\treturn rgba;\\n}\\nvec3 gammaCorrectOutput(vec3 color) {\\n\\t#ifdef HDR\\n\\treturn color;\\n\\t#else\\n\\tcolor += vec3(0.0000001);\\n\\treturn pow(color, vec3(0.45));\\n\\t#endif\\n}\\n\";\n\n\tvar genParaboloidPS = \"varying vec2 vUv0;\\nuniform samplerCube source;\\nuniform vec4 params;\\nvoid main(void) {\\n\\tvec2 uv = vUv0;\\n\\tfloat side = uv.x < 0.5? 1.0 : -1.0;\\n\\tvec2 tc;\\n\\ttc.x = fract(uv.x * 2.0) * 2.0 - 1.0;\\n\\ttc.y = uv.y * 2.0 - 1.0;\\n\\tconst float scale = 1.1;\\n\\ttc *= scale;\\n\\tvec3 dir;\\n\\tdir.y = (dot(tc, tc) - 1.0) * side;\\n\\tdir.xz = tc * -2.0;\\n\\tdir.x *= -side * params.y;\\n\\tdir = fixSeams(dir, params.x);\\n\\tvec4 color = textureCube(source, dir, -100.0);\\n\\tgl_FragColor = color;\\n}\\n\";\n\n\tvar gles3PS = \"#define varying in\\nout highp vec4 pc_fragColor;\\n#define gl_FragColor pc_fragColor\\n#define texture2D texture\\n#define textureCube texture\\n#define texture2DProj textureProj\\n#define texture2DLodEXT textureLod\\n#define texture2DProjLodEXT textureProjLod\\n#define textureCubeLodEXT textureLod\\n#define texture2DGradEXT textureGrad\\n#define texture2DProjGradEXT textureProjGrad\\n#define textureCubeGradEXT textureGrad\\n#define GL2\\n\";\n\n\tvar gles3VS = \"#define attribute in\\n#define varying out\\n#define texture2D texture\\n#define GL2\\n#define VERTEXSHADER\\n\";\n\n\tvar glossPS = \"#ifdef MAPFLOAT\\nuniform float material_shininess;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_glossMap;\\n#endif\\nvoid getGlossiness() {\\n\\tdGlossiness = 1.0;\\n\\t#ifdef MAPFLOAT\\n\\tdGlossiness *= material_shininess;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tdGlossiness *= texture2D(texture_glossMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tdGlossiness *= saturate(vVertexColor.$VC);\\n\\t#endif\\n\\tdGlossiness += 0.0000001;\\n}\\n\";\n\n\tvar instancingVS = \"attribute vec4 instance_line1;\\nattribute vec4 instance_line2;\\nattribute vec4 instance_line3;\\nattribute vec4 instance_line4;\\n\";\n\n\tvar lightDiffuseLambertPS = \"float getLightDiffuse() {\\n\\treturn max(dot(dNormalW, -dLightDirNormW), 0.0);\\n}\\n\";\n\n\tvar lightDirPointPS = \"void getLightDirPoint(vec3 lightPosW) {\\n\\tdLightDirW = vPositionW - lightPosW;\\n\\tdLightDirNormW = normalize(dLightDirW);\\n\\tdLightPosW = lightPosW;\\n}\\n\";\n\n\tvar lightmapDirPS = \"uniform sampler2D texture_lightMap;\\nuniform sampler2D texture_dirLightMap;\\nvoid addLightMap() {\\n\\tvec3 color = $texture2DSAMPLE(texture_lightMap, $UV).$CH;\\n\\tvec3 dir = texture2D(texture_dirLightMap, $UV).xyz;\\n\\tif (dot(dir, vec3(1.0)) < 0.00001) {\\n\\t\\tdDiffuseLight += color;\\n\\t} else {\\n\\t\\tdLightDirNormW = normalize(dir * 2.0 - vec3(1.0));\\n\\t\\tfloat vlight = saturate(dot(dLightDirNormW, -dVertexNormalW));\\n\\t\\tfloat flight = saturate(dot(dLightDirNormW, -dNormalW));\\n\\t\\tfloat nlight = (flight / max(vlight, 0.01)) * 0.5;\\n\\t\\tdDiffuseLight += color * nlight * 2.0;\\n\\t}\\n\\tdSpecularLight += color * getLightSpecular();\\n}\\n\";\n\n\tvar lightmapSinglePS = \"#ifdef MAPTEXTURE\\nuniform sampler2D texture_lightMap;\\n#endif\\nvoid addLightMap() {\\n\\tvec3 lm = vec3(1.0);\\n\\t#ifdef MAPTEXTURE\\n\\tlm *= $texture2DSAMPLE(texture_lightMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tlm *= saturate(vVertexColor.$VC);\\n\\t#endif\\n\\tdDiffuseLight += lm;\\n}\\n\";\n\n\tvar lightmapSingleVertPS = \"void addLightMap() {\\n\\tdDiffuseLight += saturate(vVertexColor.$CH);\\n}\\n\";\n\n\tvar lightSpecularAnisoGGXPS = \"\\nfloat calcLightSpecular(float tGlossiness, vec3 tNormalW) {\\n\\tfloat PI = 3.141592653589793;\\n\\tfloat roughness = max((1.0 - tGlossiness) * (1.0 - tGlossiness), 0.001);\\n\\tfloat anisotropy = material_anisotropy * roughness;\\n\\tfloat at = max((roughness + anisotropy), roughness / 4.0);\\n\\tfloat ab = max((roughness - anisotropy), roughness / 4.0);\\n\\tvec3 h = normalize(normalize(-dLightDirNormW) + normalize(dViewDirW));\\n\\tfloat NoH = dot(tNormalW, h);\\n\\tfloat ToH = dot(dTBN[0], h);\\n\\tfloat BoH = dot(dTBN[1], h);\\n\\tfloat a2 = at * ab;\\n\\tvec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\\n\\tfloat v2 = dot(v, v);\\n\\tfloat w2 = a2 / v2;\\n\\tfloat D = a2 * w2 * w2 * (1.0 / PI);\\n\\tfloat ToV = dot(dTBN[0], dViewDirW);\\n\\tfloat BoV = dot(dTBN[1], dViewDirW);\\n\\tfloat ToL = dot(dTBN[0], -dLightDirNormW);\\n\\tfloat BoL = dot(dTBN[1], -dLightDirNormW);\\n\\tfloat NoV = dot(tNormalW, dViewDirW);\\n\\tfloat NoL = dot(tNormalW, -dLightDirNormW);\\n\\tfloat lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\\n\\tfloat lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\\n\\tfloat G = 0.5 / (lambdaV + lambdaL);\\n\\treturn D * G;\\n}\\nfloat getLightSpecular() {\\n\\treturn calcLightSpecular(dGlossiness, dNormalW);\\n}\\nfloat getLightSpecularCC() {\\n\\treturn calcLightSpecular(ccGlossiness, ccNormalW);\\n}\\n\";\n\n\tvar lightSpecularBlinnPS = \"\\nfloat calcLightSpecular(float tGlossiness, vec3 tNormalW) {\\n\\tvec3 h = normalize( -dLightDirNormW + dViewDirW );\\n\\tfloat nh = max( dot( h, tNormalW ), 0.0 );\\n\\tfloat specPow = exp2(tGlossiness * 11.0);\\n\\tspecPow = antiAliasGlossiness(specPow);\\n\\tspecPow = max(specPow, 0.0001);\\n\\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\\n}\\nfloat getLightSpecular() {\\n\\treturn calcLightSpecular(dGlossiness, dNormalW);\\n}\\nfloat getLightSpecularCC() {\\n\\treturn calcLightSpecular(ccGlossiness, ccNormalW);\\n}\\n\";\n\n\tvar lightSpecularPhongPS = \"float calcLightSpecular(float tGlossiness, vec3 tReflDirW) {\\n\\tfloat specPow = tGlossiness;\\n\\tspecPow = antiAliasGlossiness(specPow);\\n\\treturn pow(max(dot(tReflDirW, -dLightDirNormW), 0.0), specPow + 0.0001);\\n}\\nfloat getLightSpecular() {\\n\\treturn calcLightSpecular(dGlossiness, dReflDirW);\\n}\\nfloat getLightSpecularCC() {\\n\\treturn calcLightSpecular(ccGlossiness, ccReflDirW);\\n}\\n\";\n\n\tvar ltc = \"\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nstruct Coords {\\n\\tvec3 coord0;\\n\\tvec3 coord1;\\n\\tvec3 coord2;\\n\\tvec3 coord3;\\n};\\nfloat LTC_EvaluateRect( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in Coords rectCoords) {\\n\\tvec3 v1 = rectCoords.coord1 - rectCoords.coord0;\\n\\tvec3 v2 = rectCoords.coord3 - rectCoords.coord0;\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tfloat factor = sign(-dot( lightNormal, P - rectCoords.coord0 ));\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 =  factor * cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords.coord0 - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords.coord1 - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords.coord2 - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords.coord3 - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn result;\\n}\\nCoords dLTCCoords;\\nCoords getLTCLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\\n\\tCoords coords;\\n\\tcoords.coord0 = lightPos + halfWidth - halfHeight;\\n\\tcoords.coord1 = lightPos - halfWidth - halfHeight;\\n\\tcoords.coord2 = lightPos - halfWidth + halfHeight;\\n\\tcoords.coord3 = lightPos + halfWidth + halfHeight;\\n\\treturn coords;\\n}\\nfloat dSphereRadius;\\nCoords getSphereLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\\n\\tCoords coords;\\n\\tfloat radius = max(length(halfWidth), length(halfWidth));\\n\\tdSphereRadius = radius;\\n\\tvec3 f = normalize(lightPos-view_position);\\n\\tvec3 w = normalize(cross(f, halfHeight));\\n\\tvec3 h = normalize(cross(f, w));\\n\\tcoords.coord0 = lightPos + w * radius - h * radius;\\n\\tcoords.coord1 = lightPos - w * radius - h * radius;\\n\\tcoords.coord2 = lightPos - w * radius + h * radius;\\n\\tcoords.coord3 = lightPos + w * radius + h * radius;\\n\\treturn coords;\\n}\\nvec2 dLTCUV;\\n#ifdef CLEARCOAT\\nvec2 ccLTCUV;\\n#endif\\nvec2 getLTCLightUV(float tGlossiness, vec3 tNormalW)\\n{\\n\\tfloat roughness = max((1.0 - tGlossiness) * (1.0 - tGlossiness), 0.001);\\n\\treturn LTC_Uv( tNormalW, dViewDirW, roughness );\\n}\\nvec3 dLTCSpecFres;\\n#ifdef CLEARCOAT\\nvec3 ccLTCSpecFres;\\n#endif\\nvec3 getLTCLightSpecFres(vec2 uv, vec3 tSpecularity)\\n{\\n\\tvec4 t2 = texture2D( areaLightsLutTex2, uv );\\n\\t#ifdef AREA_R8_G8_B8_A8_LUTS\\n\\tt2 *= vec4(0.693103,1,1,1);\\n\\tt2 += vec4(0.306897,0,0,0);\\n\\t#endif\\n\\treturn tSpecularity * t2.x + ( vec3( 1.0 ) - tSpecularity) * t2.y;\\n}\\nvoid calcLTCLightValues()\\n{\\n\\tdLTCUV = getLTCLightUV(dGlossiness, dNormalW);\\n\\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, dSpecularityNoFres);\\n#ifdef CLEARCOAT\\n\\tccLTCUV = getLTCLightUV(ccGlossiness, ccNormalW);\\n\\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, ccSpecularityNoFres);\\n#endif\\n}\\nvoid calcRectLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\\n{\\n\\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\\n\\tcalcLTCLightValues();\\n}\\nvoid calcDiskLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\\n{\\n\\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\\n}\\nvoid calcSphereLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\\n{\\n\\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\\n\\tcalcLTCLightValues();\\n}\\nvec3 SolveCubic(vec4 Coefficient)\\n{\\n\\tfloat pi = 3.14159;\\n\\tCoefficient.xyz /= Coefficient.w;\\n\\tCoefficient.yz /= 3.0;\\n\\tfloat A = Coefficient.w;\\n\\tfloat B = Coefficient.z;\\n\\tfloat C = Coefficient.y;\\n\\tfloat D = Coefficient.x;\\n\\tvec3 Delta = vec3(\\n\\t\\t-Coefficient.z * Coefficient.z + Coefficient.y,\\n\\t\\t-Coefficient.y * Coefficient.z + Coefficient.x,\\n\\t\\tdot(vec2(Coefficient.z, -Coefficient.y), Coefficient.xy)\\n\\t);\\n\\tfloat Discriminant = dot(vec2(4.0 * Delta.x, -Delta.y), Delta.zy);\\n\\tvec3 RootsA, RootsD;\\n\\tvec2 xlc, xsc;\\n\\t{\\n\\t\\tfloat A_a = 1.0;\\n\\t\\tfloat C_a = Delta.x;\\n\\t\\tfloat D_a = -2.0 * B * Delta.x + Delta.y;\\n\\t\\tfloat Theta = atan(sqrt(Discriminant), -D_a) / 3.0;\\n\\t\\tfloat x_1a = 2.0 * sqrt(-C_a) * cos(Theta);\\n\\t\\tfloat x_3a = 2.0 * sqrt(-C_a) * cos(Theta + (2.0 / 3.0) * pi);\\n\\t\\tfloat xl;\\n\\t\\tif ((x_1a + x_3a) > 2.0 * B)\\n\\t\\t\\txl = x_1a;\\n\\t\\telse\\n\\t\\t\\txl = x_3a;\\n\\t\\txlc = vec2(xl - B, A);\\n\\t}\\n\\t{\\n\\t\\tfloat A_d = D;\\n\\t\\tfloat C_d = Delta.z;\\n\\t\\tfloat D_d = -D * Delta.y + 2.0 * C * Delta.z;\\n\\t\\tfloat Theta = atan(D * sqrt(Discriminant), -D_d) / 3.0;\\n\\t\\tfloat x_1d = 2.0 * sqrt(-C_d) * cos(Theta);\\n\\t\\tfloat x_3d = 2.0 * sqrt(-C_d) * cos(Theta + (2.0 / 3.0) * pi);\\n\\t\\tfloat xs;\\n\\t\\tif (x_1d + x_3d < 2.0 * C)\\n\\t\\t\\txs = x_1d;\\n\\t\\telse\\n\\t\\t\\txs = x_3d;\\n\\t\\txsc = vec2(-D, xs + C);\\n\\t}\\n\\tfloat E =  xlc.y * xsc.y;\\n\\tfloat F = -xlc.x * xsc.y - xlc.y * xsc.x;\\n\\tfloat G =  xlc.x * xsc.x;\\n\\tvec2 xmc = vec2(C * F - B * G, -B * F + C * E);\\n\\tvec3 Root = vec3(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\\n\\tif (Root.x < Root.y && Root.x < Root.z)\\n\\t\\tRoot.xyz = Root.yxz;\\n\\telse if (Root.z < Root.x && Root.z < Root.y)\\n\\t\\tRoot.xyz = Root.xzy;\\n\\treturn Root;\\n}\\nfloat LTC_EvaluateDisk(vec3 N, vec3 V, vec3 P, mat3 Minv, Coords points)\\n{\\n\\tvec3 T1, T2;\\n\\tT1 = normalize(V - N * dot(V, N));\\n\\tT2 = cross(N, T1);\\n\\tmat3 R = transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 L_[ 3 ];\\n\\tL_[ 0 ] = R * ( points.coord0 - P );\\n\\tL_[ 1 ] = R * ( points.coord1 - P );\\n\\tL_[ 2 ] = R * ( points.coord2 - P );\\n\\tvec3 Lo_i = vec3(0);\\n\\tvec3 C  = 0.5 * (L_[0] + L_[2]);\\n\\tvec3 V1 = 0.5 * (L_[1] - L_[2]);\\n\\tvec3 V2 = 0.5 * (L_[1] - L_[0]);\\n\\tC  = Minv * C;\\n\\tV1 = Minv * V1;\\n\\tV2 = Minv * V2;\\n\\tfloat a, b;\\n\\tfloat d11 = dot(V1, V1);\\n\\tfloat d22 = dot(V2, V2);\\n\\tfloat d12 = dot(V1, V2);\\n\\tif (abs(d12) / sqrt(d11 * d22) > 0.0001)\\n\\t{\\n\\t\\tfloat tr = d11 + d22;\\n\\t\\tfloat det = -d12 * d12 + d11 * d22;\\n\\t\\tdet = sqrt(det);\\n\\t\\tfloat u = 0.5 * sqrt(tr - 2.0 * det);\\n\\t\\tfloat v = 0.5 * sqrt(tr + 2.0 * det);\\n\\t\\tfloat e_max = (u + v) * (u + v);\\n\\t\\tfloat e_min = (u - v) * (u - v);\\n\\t\\tvec3 V1_, V2_;\\n\\t\\tif (d11 > d22)\\n\\t\\t{\\n\\t\\t\\tV1_ = d12 * V1 + (e_max - d11) * V2;\\n\\t\\t\\tV2_ = d12 * V1 + (e_min - d11) * V2;\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tV1_ = d12*V2 + (e_max - d22)*V1;\\n\\t\\t\\tV2_ = d12*V2 + (e_min - d22)*V1;\\n\\t\\t}\\n\\t\\ta = 1.0 / e_max;\\n\\t\\tb = 1.0 / e_min;\\n\\t\\tV1 = normalize(V1_);\\n\\t\\tV2 = normalize(V2_);\\n\\t}\\n\\telse\\n\\t{\\n\\t\\ta = 1.0 / dot(V1, V1);\\n\\t\\tb = 1.0 / dot(V2, V2);\\n\\t\\tV1 *= sqrt(a);\\n\\t\\tV2 *= sqrt(b);\\n\\t}\\n\\tvec3 V3 = cross(V1, V2);\\n\\tif (dot(C, V3) < 0.0)\\n\\t\\tV3 *= -1.0;\\n\\tfloat L  = dot(V3, C);\\n\\tfloat x0 = dot(V1, C) / L;\\n\\tfloat y0 = dot(V2, C) / L;\\n\\tfloat E1 = inversesqrt(a);\\n\\tfloat E2 = inversesqrt(b);\\n\\ta *= L * L;\\n\\tb *= L * L;\\n\\tfloat c0 = a * b;\\n\\tfloat c1 = a * b * (1.0 + x0 * x0 + y0 * y0) - a - b;\\n\\tfloat c2 = 1.0 - a * (1.0 + x0 * x0) - b * (1.0 + y0 * y0);\\n\\tfloat c3 = 1.0;\\n\\tvec3 roots = SolveCubic(vec4(c0, c1, c2, c3));\\n\\tfloat e1 = roots.x;\\n\\tfloat e2 = roots.y;\\n\\tfloat e3 = roots.z;\\n\\tvec3 avgDir = vec3(a * x0 / (a - e2), b * y0 / (b - e2), 1.0);\\n\\tmat3 rotate = mat3(V1, V2, V3);\\n\\tavgDir = rotate * avgDir;\\n\\tavgDir = normalize(avgDir);\\n\\tfloat L1 = sqrt(-e2 / e3);\\n\\tfloat L2 = sqrt(-e2 / e1);\\n\\tfloat formFactor = L1 * L2 * inversesqrt((1.0 + L1 * L1) * (1.0 + L2 * L2));\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tvec2 uv = vec2(avgDir.z * 0.5 + 0.5, formFactor);\\n\\tuv = uv*LUT_SCALE + LUT_BIAS;\\n\\tfloat scale = texture2D( areaLightsLutTex2, uv ).w;\\n\\treturn formFactor*scale;\\n}\\nfloat getRectLightDiffuse() {\\n\\treturn LTC_EvaluateRect( dNormalW, dViewDirW, vPositionW, mat3( 1.0 ), dLTCCoords );\\n}\\nfloat getDiskLightDiffuse() {\\n\\treturn LTC_EvaluateDisk( dNormalW, dViewDirW, vPositionW, mat3( 1.0 ), dLTCCoords );\\n}\\nfloat getSphereLightDiffuse() {\\n\\tfloat falloff = dSphereRadius / (dot(dLightDirW, dLightDirW) + dSphereRadius);\\n\\treturn getLightDiffuse()*falloff;\\n}\\nmat3 getLTCLightInvMat(vec2 uv)\\n{\\n\\tvec4 t1 = texture2D( areaLightsLutTex1, uv );\\n\\t#ifdef AREA_R8_G8_B8_A8_LUTS\\n\\tt1 *= vec4(1.001, 0.3239, 0.60437568, 1.0);\\n\\tt1 += vec4(0.0, -0.2976, -0.01381, 0.0);\\n\\t#endif\\n\\treturn mat3(\\n\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\tvec3(\\t0, 1,\\t0 ),\\n\\t\\tvec3( t1.z, 0, t1.w )\\n\\t);\\n}\\nfloat calcRectLightSpecular(vec3 tNormalW, vec2 uv) {\\n\\tmat3 mInv = getLTCLightInvMat(uv);\\n\\treturn LTC_EvaluateRect( tNormalW, dViewDirW, vPositionW, mInv, dLTCCoords );\\n}\\nfloat getRectLightSpecular() {\\n\\treturn calcRectLightSpecular(dNormalW, dLTCUV);\\n}\\n#ifdef CLEARCOAT\\nfloat getRectLightSpecularCC() {\\n\\treturn calcRectLightSpecular(ccNormalW, ccLTCUV);\\n}\\n#endif\\nfloat calcDiskLightSpecular(vec3 tNormalW, vec2 uv) {\\n\\tmat3 mInv = getLTCLightInvMat(uv);\\n\\treturn LTC_EvaluateDisk( tNormalW, dViewDirW, vPositionW, mInv, dLTCCoords );\\n}\\nfloat getDiskLightSpecular() {\\n\\treturn calcDiskLightSpecular(dNormalW, dLTCUV);\\n}\\n#ifdef CLEARCOAT\\nfloat getDiskLightSpecularCC() {\\n\\treturn calcDiskLightSpecular(ccNormalW, ccLTCUV);\\n}\\n#endif\\nfloat getSphereLightSpecular() {\\n\\treturn calcDiskLightSpecular(dNormalW, dLTCUV);\\n}\\n#ifdef CLEARCOAT\\nfloat getSphereLightSpecularCC() {\\n\\treturn calcDiskLightSpecular(ccNormalW, ccLTCUV);\\n}\\n#endif\\n\";\n\n\tvar metalnessPS = \"void processMetalness(float metalness) {\\n\\tconst float dielectricF0 = 0.04;\\n\\tdSpecularity = mix(vec3(dielectricF0), dAlbedo, metalness);\\n\\tdAlbedo *= 1.0 - metalness;\\n}\\n#ifdef MAPFLOAT\\nuniform float material_metalness;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_metalnessMap;\\n#endif\\nvoid getSpecularity() {\\n\\tfloat metalness = 1.0;\\n\\t#ifdef MAPFLOAT\\n\\tmetalness *= material_metalness;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tmetalness *= texture2D(texture_metalnessMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tmetalness *= saturate(vVertexColor.$VC);\\n\\t#endif\\n\\tprocessMetalness(metalness);\\n}\\n\";\n\n\tvar msdfPS = \"uniform sampler2D texture_msdfMap;\\n#ifdef GL_OES_standard_derivatives\\n#define USE_FWIDTH\\n#endif\\n#ifdef GL2\\n#define USE_FWIDTH\\n#endif\\nfloat median(float r, float g, float b) {\\n\\treturn max(min(r, g), min(max(r, g), b));\\n}\\nfloat map (float min, float max, float v) {\\n\\treturn (v - min) / (max - min);\\n}\\nuniform float font_sdfIntensity;\\nuniform float font_pxrange;\\nuniform float font_textureWidth;\\nuniform vec4 outline_color;\\nuniform float outline_thickness;\\nuniform vec4 shadow_color;\\nuniform vec2 shadow_offset;\\nvec4 applyMsdf(vec4 color) {\\n\\tvec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;\\n\\tvec2 uvShdw = vUv0 - shadow_offset;\\n\\tvec3 ssample = texture2D(texture_msdfMap, uvShdw).rgb;\\n\\tfloat sigDist = median(tsample.r, tsample.g, tsample.b);\\n\\tfloat sigDistShdw = median(ssample.r, ssample.g, ssample.b);\\n\\t#ifdef USE_FWIDTH\\n\\tvec2 w = fwidth(vUv0);\\n\\tfloat smoothing = clamp(w.x * font_textureWidth / font_pxrange, 0.0, 0.5);\\n\\t#else\\n\\tfloat font_size = 16.0;\\n\\tfloat smoothing = clamp(font_pxrange / font_size, 0.0, 0.5);\\n\\t#endif\\n\\tfloat mapMin = 0.05;\\n\\tfloat mapMax = clamp(1.0 - font_sdfIntensity, mapMin, 1.0);\\n\\tfloat sigDistInner = map(mapMin, mapMax, sigDist);\\n\\tfloat sigDistOutline = map(mapMin, mapMax, sigDist + outline_thickness);\\n\\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thickness);\\n\\tfloat center = 0.5;\\n\\tfloat inside = smoothstep(center-smoothing, center+smoothing, sigDistInner);\\n\\tfloat outline = smoothstep(center-smoothing, center+smoothing, sigDistOutline);\\n\\tfloat shadow = smoothstep(center-smoothing, center+smoothing, sigDistShdw);\\n\\tvec4 tcolor = (outline > inside) ? outline * vec4(outline_color.a * outline_color.rgb, outline_color.a) : vec4(0.0);\\n\\ttcolor = mix(tcolor, color, inside);\\n\\tvec4 scolor = (shadow > outline) ? shadow * vec4(shadow_color.a * shadow_color.rgb, shadow_color.a) : tcolor;\\n\\ttcolor = mix(scolor, tcolor, outline);\\n\\treturn tcolor;\\n}\\n\";\n\n\tvar normalVS = \"#ifdef MORPHING_TEXTURE_BASED_NORMAL\\nuniform highp sampler2D morphNormalTex;\\n#endif\\nvec3 getNormal() {\\n\\t#ifdef SKIN\\n\\tdNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\\n\\t#elif defined(INSTANCING)\\n\\tdNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\\n\\t#else\\n\\tdNormalMatrix = matrix_normal;\\n\\t#endif\\n\\tvec3 tempNormal = vertex_normal;\\n\\t#ifdef MORPHING\\n\\t#ifdef MORPHING_NRM03\\n\\ttempNormal += morph_weights_a[0] * morph_nrm0;\\n\\ttempNormal += morph_weights_a[1] * morph_nrm1;\\n\\ttempNormal += morph_weights_a[2] * morph_nrm2;\\n\\ttempNormal += morph_weights_a[3] * morph_nrm3;\\n\\t#endif\\n\\t#ifdef MORPHING_NRM47\\n\\ttempNormal += morph_weights_b[0] * morph_nrm4;\\n\\ttempNormal += morph_weights_b[1] * morph_nrm5;\\n\\ttempNormal += morph_weights_b[2] * morph_nrm6;\\n\\ttempNormal += morph_weights_b[3] * morph_nrm7;\\n\\t#endif\\n\\t#endif\\n\\t#ifdef MORPHING_TEXTURE_BASED_NORMAL\\n\\tvec2 morphUV = getTextureMorphCoords();\\n\\tvec3 morphNormal = texture2D(morphNormalTex, morphUV).xyz;\\n\\ttempNormal += morphNormal;\\n\\t#endif\\n\\treturn normalize(dNormalMatrix * tempNormal);\\n}\\n\";\n\n\tvar normalDetailMapPS = \"#ifdef MAPTEXTURE\\nuniform sampler2D texture_normalDetailMap;\\nuniform float material_normalDetailMapBumpiness;\\nvec3 blendNormals(vec3 n1, vec3 n2) {\\n\\tn1 += vec3(0, 0, 1);\\n\\tn2 *= vec3(-1, -1, 1);\\n\\treturn normalize(n1*dot(n1, n2)/n1.z - n2);\\n}\\n#endif\\nvec3 addNormalDetail(vec3 normalMap) {\\n\\t#ifdef MAPTEXTURE\\n\\tvec3 normalDetailMap = unpackNormal(texture2D(texture_normalDetailMap, $UV));\\n\\tnormalDetailMap = normalize(mix(vec3(0.0, 0.0, 1.0), normalDetailMap, material_normalDetailMapBumpiness));\\n\\treturn blendNormals(normalMap, normalDetailMap);\\n\\t#else\\n\\treturn normalMap;\\n\\t#endif\\n}\\n\";\n\n\tvar normalInstancedVS = \"vec3 getNormal() {\\n\\tdNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\\n\\treturn normalize(dNormalMatrix * vertex_normal);\\n}\\n\";\n\n\tvar normalMapPS = \"uniform sampler2D texture_normalMap;\\nuniform float material_bumpiness;\\nvoid getNormal() {\\n\\tvec3 normalMap = unpackNormal(texture2D(texture_normalMap, $UV));\\n\\tnormalMap = normalize(mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness));\\n\\tdNormalMap = addNormalDetail(normalMap);\\n\\tdNormalW = dTBN * dNormalMap;\\n}\\n\";\n\n\tvar normalMapFastPS = \"uniform sampler2D texture_normalMap;\\nvoid getNormal() {\\n\\tvec3 normalMap = unpackNormal(texture2D(texture_normalMap, $UV));\\n\\tdNormalMap = addNormalDetail(normalMap);\\n\\tdNormalW = dTBN * dNormalMap;\\n}\\n\";\n\n\tvar normalSkinnedVS = \"vec3 getNormal() {\\n\\tdNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\\n\\treturn normalize(dNormalMatrix * vertex_normal);\\n}\\n\";\n\n\tvar normalVertexPS = \"void getNormal() {\\n\\tdNormalW = normalize(dVertexNormalW);\\n}\\n\";\n\n\tvar normalXYPS = \"vec3 unpackNormal(vec4 nmap) {\\n\\tvec3 normal;\\n\\tnormal.xy = nmap.wy * 2.0 - 1.0;\\n\\tnormal.z = sqrt(1.0 - saturate(dot(normal.xy, normal.xy)));\\n\\treturn normal;\\n}\\n\";\n\n\tvar normalXYZPS = \"vec3 unpackNormal(vec4 nmap) {\\n\\treturn nmap.xyz * 2.0 - 1.0;\\n}\\n\";\n\n\tvar opacityPS = \"#ifdef MAPFLOAT\\nuniform float material_opacity;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_opacityMap;\\n#endif\\nvoid getOpacity() {\\n\\tdAlpha = 1.0;\\n\\t#ifdef MAPFLOAT\\n\\tdAlpha *= material_opacity;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tdAlpha *= texture2D(texture_opacityMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tdAlpha *= clamp(vVertexColor.$VC, 0.0, 1.0);\\n\\t#endif\\n}\\n\";\n\n\tvar outputAlphaPS = \"gl_FragColor.a = dAlpha;\\n\";\n\n\tvar outputAlphaOpaquePS = \"gl_FragColor.a = 1.0;\\n\";\n\n\tvar outputAlphaPremulPS = \"gl_FragColor.rgb *= dAlpha;\\ngl_FragColor.a = dAlpha;\\n\";\n\n\tvar outputCubemapPS = \"varying vec2 vUv0;\\nuniform samplerCube source;\\nuniform vec4 params;\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nvec4 encodeRGBM(vec4 color) {\\n\\tcolor.rgb = pow(color.rgb, vec3(0.5));\\n\\tcolor.rgb *= 1.0 / 8.0;\\n\\tcolor.a = saturate( max( max( color.r, color.g ), max( color.b, 1.0 / 255.0 ) ) );\\n\\tcolor.a = ceil(color.a * 255.0) / 255.0;\\n\\tcolor.rgb /= color.a;\\n\\treturn color;\\n}\\nvoid main(void) {\\n\\tvec2 st = vUv0 * 2.0 - 1.0;\\n\\tfloat face = params.x;\\n\\tvec3 vec;\\n\\tif (face==0.0) {\\n\\t\\tvec = vec3(1, -st.y, -st.x);\\n\\t} else if (face==1.0) {\\n\\t\\tvec = vec3(-1, -st.y, st.x);\\n\\t} else if (face==2.0) {\\n\\t\\tvec = vec3(st.x, 1, st.y);\\n\\t} else if (face==3.0) {\\n\\t\\tvec = vec3(st.x, -1, -st.y);\\n\\t} else if (face==4.0) {\\n\\t\\tvec = vec3(st.x, -st.y, 1);\\n\\t} else {\\n\\t\\tvec = vec3(-st.x, -st.y, -1);\\n\\t}\\n\\tgl_FragColor = textureCube(source, vec);\\n\\tif (params.w >= 2.0) gl_FragColor = encodeRGBM(gl_FragColor);\\n}\\n\";\n\n\tvar outputTex2DPS = \"varying vec2 vUv0;\\nuniform sampler2D source;\\nvoid main(void) {\\n\\tgl_FragColor = texture2D(source, vUv0);\\n}\\n\";\n\n\tvar packDepthPS = \"\\nvec4 packFloat(float depth) {\\n\\tconst vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\\n\\tconst vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\\n\\tvec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\n\";\n\n\tvar packDepthMaskPS = \"vec4 packFloat(float depth) {\\n\\tconst vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\\n\\tconst vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\\n\\tvec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\\n\\tres.x = 0.0;\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\n\";\n\n\tvar parallaxPS = \"uniform sampler2D texture_heightMap;\\nuniform float material_heightMapFactor;\\nvoid getParallax() {\\n\\tfloat parallaxScale = material_heightMapFactor;\\n\\tfloat height = texture2D(texture_heightMap, $UV).$CH;\\n\\theight = height * parallaxScale - parallaxScale*0.5;\\n\\tvec3 viewDirT = dViewDirW * dTBN;\\n\\tviewDirT.z += 0.42;\\n\\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\\n}\\n\";\n\n\tvar particlePS = \"varying vec4 texCoordsAlphaLife;\\nuniform sampler2D colorMap;\\nuniform sampler2D colorParam;\\nuniform float graphSampleSize;\\nuniform float graphNumSamples;\\n#ifndef CAMERAPLANES\\n#define CAMERAPLANES\\nuniform vec4 camera_params;\\n#endif\\nuniform float softening;\\nuniform float colorMult;\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\n#ifndef UNPACKFLOAT\\n#define UNPACKFLOAT\\nfloat unpackFloat(vec4 rgbaDepth) {\\n\\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\\n\\tfloat depth = dot(rgbaDepth, bitShift);\\n\\treturn depth;\\n}\\n#endif\\nvoid main(void) {\\n\\tvec4 tex  = texture2DSRGB(colorMap, texCoordsAlphaLife.xy);\\n\\tvec4 ramp = texture2DSRGB(colorParam, vec2(texCoordsAlphaLife.w, 0.0));\\n\\tramp.rgb *= colorMult;\\n\\tramp.a += texCoordsAlphaLife.z;\\n\\tvec3 rgb = tex.rgb * ramp.rgb;\\n\\tfloat a  = tex.a * ramp.a;\\n\";\n\n\tvar particleVS = \"vec3 unpack3NFloats(float src) {\\n\\tfloat r = fract(src);\\n\\tfloat g = fract(src * 256.0);\\n\\tfloat b = fract(src * 65536.0);\\n\\treturn vec3(r, g, b);\\n}\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nvec4 tex1Dlod_lerp(highp sampler2D tex, vec2 tc) {\\n\\treturn mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );\\n}\\nvec4 tex1Dlod_lerp(highp sampler2D tex, vec2 tc, out vec3 w) {\\n\\tvec4 a = texture2D(tex,tc);\\n\\tvec4 b = texture2D(tex,tc + graphSampleSize);\\n\\tfloat c = fract(tc.x*graphNumSamples);\\n\\tvec3 unpackedA = unpack3NFloats(a.w);\\n\\tvec3 unpackedB = unpack3NFloats(b.w);\\n\\tw = mix(unpackedA, unpackedB, c);\\n\\treturn mix(a, b, c);\\n}\\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {\\n\\tfloat c = cos(pRotation);\\n\\tfloat s = sin(pRotation);\\n\\tmat2 m = mat2(c, -s, s, c);\\n\\trotMatrix = m;\\n\\treturn m * quadXY;\\n}\\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY) {\\n\\t#ifdef SCREEN_SPACE\\n\\t\\tvec3 pos = vec3(-1, 0, 0) * quadXY.x + vec3(0, -1, 0) * quadXY.y;\\n\\t#else\\n\\t\\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\\n\\t#endif\\n\\treturn pos;\\n}\\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY) {\\n\\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\\n\\treturn pos;\\n}\\nvec2 safeNormalize(vec2 v) {\\n\\tfloat l = length(v);\\n\\treturn (l > 1e-06) ? v / l : v;\\n}\\nvoid main(void) {\\n\\tvec3 meshLocalPos = particle_vertexData.xyz;\\n\\tfloat id = floor(particle_vertexData.w);\\n\\tfloat rndFactor = fract(sin(id + 1.0 + seed));\\n\\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\\n\\tfloat uv = id / numParticlesPot;\\n\\treadInput(uv);\\n#ifdef LOCAL_SPACE\\n\\tinVel = mat3(matrix_model) * inVel;\\n#endif\\n\\tvec2 velocityV = safeNormalize((mat3(matrix_view) * inVel).xy);\\n\\tfloat particleLifetime = lifetime;\\n\\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow) meshLocalPos = vec3(0.0);\\n\\tvec2 quadXY = meshLocalPos.xy;\\n\\tfloat nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\\n\\tvec3 paramDiv;\\n\\tvec4 params = tex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\\n\\tfloat scale = params.y;\\n\\tfloat scaleDiv = paramDiv.x;\\n\\tfloat alphaDiv = paramDiv.z;\\n\\tscale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);\\n#ifndef USE_MESH\\n\\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\\n#else\\n\\ttexCoordsAlphaLife = vec4(particle_uv, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\\n#endif\\n\\tvec3 particlePos = inPos;\\n\\tvec3 particlePosMoved = vec3(0.0);\\n\\tmat2 rotMatrix;\\n\";\n\n\tvar particleAnimFrameClampVS = \"\\tfloat animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.y) + animTexParams.x, animTexParams.z);\\n\";\n\n\tvar particleAnimFrameLoopVS = \"\\tfloat animFrame = floor(mod(texCoordsAlphaLife.w * animTexParams.y + animTexParams.x, animTexParams.z + 1.0));\\n\";\n\n\tvar particleAnimTexVS = \"\\tfloat animationIndex;\\n\\tif (animTexIndexParams.y == 1.0) {\\n\\t\\tanimationIndex = floor((animTexParams.w + 1.0) * rndFactor3.z) * (animTexParams.z + 1.0);\\n\\t} else {\\n\\t\\tanimationIndex = animTexIndexParams.x * (animTexParams.z + 1.0);\\n\\t}\\n\\tfloat atlasX = (animationIndex + animFrame) * animTexTilesParams.x;\\n\\tfloat atlasY = 1.0 - floor(atlasX + 1.0) * animTexTilesParams.y;\\n\\tatlasX = fract(atlasX);\\n\\ttexCoordsAlphaLife.xy *= animTexTilesParams.xy;\\n\\ttexCoordsAlphaLife.xy += vec2(atlasX, atlasY);\\n\";\n\n\tvar particleInputFloatPS = \"void readInput(float uv) {\\n\\tvec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));\\n\\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));\\n\\tinPos = tex.xyz;\\n\\tinVel = tex2.xyz;\\n\\tinAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;\\n\\tinShow = tex.w >= 0.0;\\n\\tinLife = tex2.w;\\n}\\n\";\n\n\tvar particleInputRgba8PS = \"\\n#define PI2 6.283185307179586\\nuniform vec3 inBoundsSize;\\nuniform vec3 inBoundsCenter;\\nuniform float maxVel;\\nfloat decodeFloatRG(vec2 rg) {\\n\\treturn rg.y*(1.0/255.0) + rg.x;\\n}\\nfloat decodeFloatRGBA( vec4 rgba ) {\\n  return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/160581375.0) );\\n}\\nvoid readInput(float uv) {\\n\\tvec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));\\n\\tvec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));\\n\\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));\\n\\tvec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));\\n\\tinPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\\n\\tinPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;\\n\\tinVel = tex2.xyz;\\n\\tinVel = (inVel - vec3(0.5)) * maxVel;\\n\\tinAngle = decodeFloatRG(tex1.ba) * PI2;\\n\\tinShow = tex2.a > 0.5;\\n\\tinLife = decodeFloatRGBA(tex3);\\n\\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\\n\\tfloat maxPosLife = lifetime+1.0;\\n\\tinLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;\\n}\\n\";\n\n\tvar particleOutputFloatPS = \"void writeOutput() {\\n\\tif (gl_FragCoord.y<1.0) {\\n\\t\\tgl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(outVel, outLife);\\n\\t}\\n}\\n\";\n\n\tvar particleOutputRgba8PS = \"uniform vec3 outBoundsMul;\\nuniform vec3 outBoundsAdd;\\nvec2 encodeFloatRG( float v ) {\\n\\tvec2 enc = vec2(1.0, 255.0) * v;\\n\\tenc = fract(enc);\\n\\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\\n\\treturn enc;\\n}\\nvec4 encodeFloatRGBA( float v ) {\\n\\tvec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\\n\\tenc = fract(enc);\\n\\tenc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\\n\\treturn enc;\\n}\\nvoid writeOutput() {\\n\\toutPos = outPos * outBoundsMul + outBoundsAdd;\\n\\toutAngle = fract(outAngle / PI2);\\n\\toutVel = (outVel / maxVel) + vec3(0.5);\\n\\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\\n\\tfloat maxPosLife = lifetime+1.0;\\n\\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\\n\\tif (gl_FragCoord.y < 1.0) {\\n\\t\\tgl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\\n\\t} else if (gl_FragCoord.y < 2.0) {\\n\\t\\tgl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\\n\\t} else if (gl_FragCoord.y < 3.0) {\\n\\t\\tgl_FragColor = vec4(outVel, visMode*0.5+0.5);\\n\\t} else {\\n\\t\\tgl_FragColor = encodeFloatRGBA(outLife);\\n\\t}\\n}\\n\";\n\n\tvar particleUpdaterAABBPS = \"uniform mat3 spawnBounds;\\nuniform vec3 spawnPosInnerRatio;\\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\\n\\tvec3 pos = inBounds - vec3(0.5);\\n\\tvec3 posAbs = abs(pos);\\n\\tvec3 maxPos = vec3(max(posAbs.x, max(posAbs.y, posAbs.z)));\\n\\tvec3 edge = maxPos + (vec3(0.5) - maxPos) * spawnPosInnerRatio;\\n\\tpos.x = edge.x * (maxPos.x == posAbs.x ? sign(pos.x) : 2.0 * pos.x);\\n\\tpos.y = edge.y * (maxPos.y == posAbs.y ? sign(pos.y) : 2.0 * pos.y);\\n\\tpos.z = edge.z * (maxPos.z == posAbs.z ? sign(pos.z) : 2.0 * pos.z);\\n#ifndef LOCAL_SPACE\\n\\treturn emitterPos + spawnBounds * pos;\\n#else\\n\\treturn spawnBounds * pos;\\n#endif\\n}\\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\\n\\tlocalVelocity -= vec3(0, 0, initialVelocity);\\n}\\n\";\n\n\tvar particleUpdaterEndPS = \"\\twriteOutput();\\n}\\n\";\n\n\tvar particleUpdaterInitPS = \"varying vec2 vUv0;\\nuniform highp sampler2D particleTexIN;\\nuniform highp sampler2D internalTex0;\\nuniform highp sampler2D internalTex1;\\nuniform highp sampler2D internalTex2;\\nuniform highp sampler2D internalTex3;\\nuniform mat3 emitterMatrix, emitterMatrixInv;\\nuniform vec3 emitterScale;\\nuniform vec3 emitterPos, frameRandom, localVelocityDivMult, velocityDivMult;\\nuniform float delta, rate, rateDiv, lifetime, numParticles, rotSpeedDivMult, radialSpeedDivMult, seed;\\nuniform float startAngle, startAngle2;\\nuniform float initialVelocity;\\nuniform float graphSampleSize;\\nuniform float graphNumSamples;\\nvec3 inPos;\\nvec3 inVel;\\nfloat inAngle;\\nbool inShow;\\nfloat inLife;\\nfloat visMode;\\nvec3 outPos;\\nvec3 outVel;\\nfloat outAngle;\\nbool outShow;\\nfloat outLife;\\n\";\n\n\tvar particleUpdaterNoRespawnPS = \"\\tif (outLife >= lifetime) {\\n\\t\\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\\n\\t\\tvisMode = -1.0;\\n\\t}\\n\";\n\n\tvar particleUpdaterOnStopPS = \"\\tvisMode = outLife < 0.0? -1.0: visMode;\\n\";\n\n\tvar particleUpdaterRespawnPS = \"\\tif (outLife >= lifetime) {\\n\\t\\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\\n\\t\\tvisMode = 1.0;\\n\\t}\\n\\tvisMode = outLife < 0.0? 1.0: visMode;\\n\";\n\n\tvar particleUpdaterSpherePS = \"uniform float spawnBoundsSphere;\\nuniform float spawnBoundsSphereInnerRatio;\\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\\n\\tfloat rnd4 = fract(rndFactor * 1000.0);\\n\\tvec3 norm = normalize(inBounds.xyz - vec3(0.5));\\n\\tfloat r = rnd4 * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;\\n#ifndef LOCAL_SPACE\\n\\treturn emitterPos + norm * r * spawnBoundsSphere;\\n#else\\n\\treturn norm * r * spawnBoundsSphere;\\n#endif\\n}\\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\\n\\tlocalVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;\\n}\\n\";\n\n\tvar particleUpdaterStartPS = \"float saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nvec3 unpack3NFloats(float src) {\\n\\tfloat r = fract(src);\\n\\tfloat g = fract(src * 256.0);\\n\\tfloat b = fract(src * 65536.0);\\n\\treturn vec3(r, g, b);\\n}\\nvec3 tex1Dlod_lerp(highp sampler2D tex, vec2 tc, out vec3 w) {\\n\\tvec4 a = texture2D(tex, tc);\\n\\tvec4 b = texture2D(tex, tc + graphSampleSize);\\n\\tfloat c = fract(tc.x * graphNumSamples);\\n\\tvec3 unpackedA = unpack3NFloats(a.w);\\n\\tvec3 unpackedB = unpack3NFloats(b.w);\\n\\tw = mix(unpackedA, unpackedB, c);\\n\\treturn mix(a.xyz, b.xyz, c);\\n}\\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\\nvec4 hash41(float p) {\\n\\tvec4 p4 = fract(vec4(p) * HASHSCALE4);\\n\\tp4 += dot(p4, p4.wzxy+19.19);\\n\\treturn fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\\n}\\nvoid main(void) {\\n\\tif (gl_FragCoord.x > numParticles) discard;\\n\\treadInput(vUv0.x);\\n\\tvisMode = inShow? 1.0 : -1.0;\\n\\tvec4 rndFactor = hash41(gl_FragCoord.x + seed);\\n\\tfloat particleRate = rate + rateDiv * rndFactor.x;\\n\\toutLife = inLife + delta;\\n\\tfloat nlife = clamp(outLife / lifetime, 0.0, 1.0);\\n\\tvec3 localVelocityDiv;\\n\\tvec3 velocityDiv;\\n\\tvec3 paramDiv;\\n\\tvec3 localVelocity = tex1Dlod_lerp(internalTex0, vec2(nlife, 0), localVelocityDiv);\\n\\tvec3 velocity =\\t  tex1Dlod_lerp(internalTex1, vec2(nlife, 0), velocityDiv);\\n\\tvec3 params =\\t\\ttex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\\n\\tfloat rotSpeed = params.x;\\n\\tfloat rotSpeedDiv = paramDiv.y;\\n\\tvec3 radialParams = tex1Dlod_lerp(internalTex3, vec2(nlife, 0), paramDiv);\\n\\tfloat radialSpeed = radialParams.x;\\n\\tfloat radialSpeedDiv = radialParams.y;\\n\\tbool respawn = inLife <= 0.0 || outLife >= lifetime;\\n\\tinPos = respawn ? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : inPos;\\n\\tinAngle = respawn ? mix(startAngle, startAngle2, rndFactor.x) : inAngle;\\n#ifndef LOCAL_SPACE\\n\\tvec3 radialVel = inPos - emitterPos;\\n#else\\n\\tvec3 radialVel = inPos;\\n#endif\\n\\tradialVel = (dot(radialVel, radialVel) > 1.0E-8) ? radialSpeed * normalize(radialVel) : vec3(0.0);\\n\\tradialVel += (radialSpeedDiv * vec3(2.0) - vec3(1.0)) * radialSpeedDivMult * rndFactor.xyz;\\n\\tlocalVelocity +=\\t(localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;\\n\\tvelocity +=\\t\\t (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;\\n\\trotSpeed +=\\t\\t (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;\\n\\taddInitialVelocity(localVelocity, rndFactor.xyz);\\n#ifndef LOCAL_SPACE\\n\\toutVel = emitterMatrix * localVelocity + (radialVel + velocity) * emitterScale;\\n#else\\n\\toutVel = (localVelocity + radialVel) / emitterScale + emitterMatrixInv * velocity;\\n#endif\\n\\toutPos = inPos + outVel * delta;\\n\\toutAngle = inAngle + rotSpeed * delta;\\n\";\n\n\tvar particle_billboardVS = \"\\tquadXY = rotate(quadXY, inAngle, rotMatrix);\\n\\tvec3 localPos = billboard(particlePos, quadXY);\\n\";\n\n\tvar particle_blendAddPS = \"\\tdBlendModeFogFactor = 0.0;\\n\\trgb *= saturate(gammaCorrectInput(max(a, 0.0)));\\n\\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;\\n\";\n\n\tvar particle_blendMultiplyPS = \"\\trgb = mix(vec3(1.0), rgb, vec3(a));\\n\\tif (rgb.r + rgb.g + rgb.b > 2.99) discard;\\n\";\n\n\tvar particle_blendNormalPS = \"\\tif (a < 0.01) discard;\\n\";\n\n\tvar particle_cpuVS = \"attribute vec4 particle_vertexData;\\nattribute vec4 particle_vertexData2;\\nattribute vec4 particle_vertexData3;\\nattribute float particle_vertexData4;\\n#ifndef USE_MESH\\n#define VDATA5TYPE vec2\\n#else\\n#define VDATA5TYPE vec4\\n#endif\\nattribute VDATA5TYPE particle_vertexData5;\\nuniform mat4 matrix_viewProjection;\\nuniform mat4 matrix_model;\\n#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\nuniform mat3 matrix_normal;\\nuniform mat4 matrix_viewInverse;\\nuniform float numParticles;\\nuniform float lifetime;\\nuniform float stretch;\\nuniform float seed;\\nuniform vec3 wrapBounds, emitterScale, faceTangent, faceBinorm;\\nuniform sampler2D texLifeAndSourcePosOUT;\\nuniform highp sampler2D internalTex0;\\nuniform highp sampler2D internalTex1;\\nuniform highp sampler2D internalTex2;\\nuniform vec3 emitterPos;\\nvarying vec4 texCoordsAlphaLife;\\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)\\n{\\n\\tfloat c = cos(pRotation);\\n\\tfloat s = sin(pRotation);\\n\\tmat2 m = mat2(c, -s, s, c);\\n\\trotMatrix = m;\\n\\treturn m * quadXY;\\n}\\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY)\\n{\\n\\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\\n\\treturn pos;\\n}\\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY)\\n{\\n\\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\\n\\treturn pos;\\n}\\nvoid main(void)\\n{\\n\\tvec3 particlePos = particle_vertexData.xyz;\\n\\tvec3 inPos = particlePos;\\n\\tvec3 vertPos = particle_vertexData3.xyz;\\n\\tvec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData5.x);\\n\\tfloat id = floor(particle_vertexData4);\\n\\tfloat rndFactor = fract(sin(id + 1.0 + seed));\\n\\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\\n#ifdef LOCAL_SPACE\\n\\tinVel = mat3(matrix_model) * inVel;\\n#endif\\n\\tvec2 velocityV = normalize((mat3(matrix_view) * inVel).xy);\\n\\tvec2 quadXY = vertPos.xy;\\n#ifndef USE_MESH\\n\\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);\\n#else\\n\\ttexCoordsAlphaLife = vec4(particle_vertexData5.zw, particle_vertexData2.z, particle_vertexData.w);\\n#endif\\n\\tmat2 rotMatrix;\\n\\tfloat inAngle = particle_vertexData2.x;\\n\\tvec3 particlePosMoved = vec3(0.0);\\n\\tvec3 meshLocalPos = particle_vertexData3.xyz;\\n\";\n\n\tvar particle_cpu_endVS = \"\\tlocalPos *= particle_vertexData2.y * emitterScale;\\n\\tlocalPos += particlePos;\\n\\tgl_Position = matrix_viewProjection * vec4(localPos, 1.0);\\n\";\n\n\tvar particle_customFaceVS = \"\\tquadXY = rotate(quadXY, inAngle, rotMatrix);\\n\\tvec3 localPos = customFace(particlePos, quadXY);\\n\";\n\n\tvar particle_endPS = \"\\trgb = addFog(rgb);\\n\\trgb = toneMap(rgb);\\n\\trgb = gammaCorrectOutput(rgb);\\n\\tgl_FragColor = vec4(rgb, a);\\n}\\n\";\n\n\tvar particle_endVS = \"\\tlocalPos *= scale * emitterScale;\\n\\tlocalPos += particlePos;\\n\\t#ifdef SCREEN_SPACE\\n\\tgl_Position = vec4(localPos.x, localPos.y, 0.0, 1.0);\\n\\t#else\\n\\tgl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);\\n\\t#endif\\n\";\n\n\tvar particle_halflambertPS = \"\\tvec3 negNormal = normal*0.5+0.5;\\n\\tvec3 posNormal = -normal*0.5+0.5;\\n\\tnegNormal *= negNormal;\\n\\tposNormal *= posNormal;\\n\";\n\n\tvar particle_initVS = \"attribute vec4 particle_vertexData;\\n#ifdef USE_MESH\\nattribute vec2 particle_uv;\\n#endif\\nuniform mat4 matrix_viewProjection;\\nuniform mat4 matrix_model;\\nuniform mat3 matrix_normal;\\nuniform mat4 matrix_viewInverse;\\n#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\nuniform float numParticles, numParticlesPot;\\nuniform float graphSampleSize;\\nuniform float graphNumSamples;\\nuniform float stretch;\\nuniform vec3 wrapBounds;\\nuniform vec3 emitterScale, emitterPos, faceTangent, faceBinorm;\\nuniform float rate, rateDiv, lifetime, deltaRandomnessStatic, scaleDivMult, alphaDivMult, seed, delta;\\nuniform sampler2D particleTexOUT, particleTexIN;\\nuniform highp sampler2D internalTex0;\\nuniform highp sampler2D internalTex1;\\nuniform highp sampler2D internalTex2;\\n#ifndef CAMERAPLANES\\n#define CAMERAPLANES\\nuniform vec4 camera_params;\\n#endif\\nvarying vec4 texCoordsAlphaLife;\\nvec3 inPos;\\nvec3 inVel;\\nfloat inAngle;\\nbool inShow;\\nfloat inLife;\\n\";\n\n\tvar particle_lambertPS = \"\\tvec3 negNormal = max(normal, vec3(0.0));\\n\\tvec3 posNormal = max(-normal, vec3(0.0));\\n\";\n\n\tvar particle_lightingPS = \"\\tvec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +\\n\\t\\t\\t\\t\\t\\tnegNormal.y*lightCube[2] + posNormal.y*lightCube[3] +\\n\\t\\t\\t\\t\\t\\tnegNormal.z*lightCube[4] + posNormal.z*lightCube[5];\\n\\trgb *= light;\\n\";\n\n\tvar particle_localShiftVS = \"\\tparticlePos = (matrix_model * vec4(particlePos, 1.0)).xyz;\\n\";\n\n\tvar particle_meshVS = \"\\tvec3 localPos = meshLocalPos;\\n\\tlocalPos.xy = rotate(localPos.xy, inAngle, rotMatrix);\\n\\tlocalPos.yz = rotate(localPos.yz, inAngle, rotMatrix);\\n\\tbillboard(particlePos, quadXY);\\n\";\n\n\tvar particle_normalVS = \"\\tNormal = normalize(localPos + matrix_viewInverse[2].xyz);\\n\";\n\n\tvar particle_normalMapPS = \"\\tvec3 normalMap = normalize(texture2D(normalMap, texCoordsAlphaLife.xy).xyz * 2.0 - 1.0);\\n\\tvec3 normal = ParticleMat * normalMap;\\n\";\n\n\tvar particle_pointAlongVS = \"\\tinAngle = atan(velocityV.x, velocityV.y);\\n\";\n\n\tvar particle_softPS = \"\\tfloat depth = getLinearScreenDepth();\\n\\tfloat particleDepth = vDepth;\\n\\tfloat depthDiff = saturate(abs(particleDepth - depth) * softening);\\n\\ta *= depthDiff;\\n\";\n\n\tvar particle_softVS = \"\\tvDepth = getLinearDepth(localPos);\\n\";\n\n\tvar particle_stretchVS = \"\\tvec3 moveDir = inVel * stretch;\\n\\tvec3 posPrev = particlePos - moveDir;\\n\\tposPrev += particlePosMoved;\\n\\tvec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);\\n\\tfloat interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\\n\\tparticlePos = mix(particlePos, posPrev, interpolation);\\n\";\n\n\tvar particle_TBNVS = \"\\tmat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0, rotMatrix[1][0], rotMatrix[1][1], 0.0, 0.0, 0.0, 1.0);\\n\\tParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;\\n\";\n\n\tvar particle_wrapVS = \"\\tvec3 origParticlePos = particlePos;\\n\\tparticlePos -= matrix_model[3].xyz;\\n\\tparticlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;\\n\\tparticlePos += matrix_model[3].xyz;\\n\\tparticlePosMoved = particlePos - origParticlePos;\\n\";\n\n\tvar precisionTestPS = \"void main(void) {\\n\\tgl_FragColor = vec4(2147483648.0);\\n}\\n\";\n\n\tvar precisionTest2PS = \"uniform sampler2D source;\\nvec4 packFloat(float depth) {\\n\\tconst vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\\n\\tconst vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\\n\\tvec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\nvoid main(void) {\\n\\tfloat c = texture2D(source, vec2(0.0)).r;\\n\\tfloat diff = abs(c - 2147483648.0) / 2147483648.0;\\n\\tgl_FragColor = packFloat(diff);\\n}\\n\";\n\n\tvar prefilterCubemapPS = \"varying vec2 vUv0;\\nuniform samplerCube source;\\nuniform vec4 params;\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nfloat rnd(vec2 uv) {\\n\\treturn fract(sin(dot(uv, vec2(12.9898, 78.233) * 2.0)) * 43758.5453);\\n}\\nconst float PI = 3.14159265358979;\\nvec3 hemisphereSample_cos(vec2 uv, mat3 vecSpace, vec3 cubeDir, float gloss) {\\n\\tfloat phi = uv.y * 2.0 * PI;\\n\\tfloat cosTheta = sqrt(1.0 - uv.x);\\n\\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n\\treturn normalize(mix(vecSpace * sampleDir, cubeDir, params.y));\\n}\\nvec3 hemisphereSample_phong(vec2 uv, mat3 vecSpace, vec3 cubeDir, float specPow) {\\n\\tfloat phi = uv.y * 2.0 * PI;\\n\\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\\n\\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n\\treturn vecSpace * sampleDir;\\n}\\nmat3 matrixFromVector(vec3 n) {\\n\\tfloat a = 1.0 / (1.0 + n.z);\\n\\tfloat b = -n.x * n.y * a;\\n\\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\\n\\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\\n\\treturn mat3(b1, b2, n);\\n}\\nvec4 encodeRGBM(vec3 color) {\\n\\tvec4 encoded;\\n\\tencoded.rgb = pow(color.rgb, vec3(0.5));\\n\\tencoded.rgb *= 1.0 / 8.0;\\n\\tencoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );\\n\\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\\n\\tencoded.rgb /= encoded.a;\\n\\treturn encoded;\\n}\\nvoid main(void) {\\n\\tvec2 st = vUv0 * 2.0 - 1.0;\\n\\tif (params.w==1.0 || params.w==3.0) {\\n\\t\\tst = 2.0 * floor(gl_FragCoord.xy) / (params.z - 1.0) - 1.0;\\n\\t}\\n\\tfloat face = params.x;\\n\\tvec3 vec;\\n\\tif (face==0.0) {\\n\\t\\tvec = vec3(1, -st.y, -st.x);\\n\\t} else if (face==1.0) {\\n\\t\\tvec = vec3(-1, -st.y, st.x);\\n\\t} else if (face==2.0) {\\n\\t\\tvec = vec3(st.x, 1, st.y);\\n\\t} else if (face==3.0) {\\n\\t\\tvec = vec3(st.x, -1, -st.y);\\n\\t} else if (face==4.0) {\\n\\t\\tvec = vec3(st.x, -st.y, 1);\\n\\t} else {\\n\\t\\tvec = vec3(-st.x, -st.y, -1);\\n\\t}\\n\\tmat3 vecSpace = matrixFromVector(normalize(vec));\\n\\tvec3 color = vec3(0.0);\\n\\tconst int samples = $NUMSAMPLES;\\n\\tvec3 vect;\\n\\tfor(int i=0; i<samples; i++) {\\n\\t\\tfloat sini = sin(float(i));\\n\\t\\tfloat cosi = cos(float(i));\\n\\t\\tfloat rand = rnd(vec2(sini, cosi));\\n\\t\\tvect = hemisphereSample_$METHOD(vec2(float(i) / float(samples), rand), vecSpace, vec, params.y);\\n\\t\\tcolor += $textureCube(source, vect).rgb;\\n\\t}\\n\\tcolor /= float(samples);\\n\\tgl_FragColor = params.w < 2.0? vec4(color, 1.0) : encodeRGBM(color);\\n}\\n\";\n\n\tvar reflDirPS = \"void getReflDir() {\\n\\tdReflDirW = normalize(-reflect(dViewDirW, dNormalW));\\n}\\n\";\n\n\tvar reflDirAnisoPS = \"void getReflDir() {\\n\\tfloat roughness = sqrt(1.0 - min(dGlossiness, 1.0));\\n\\tfloat anisotropy = material_anisotropy * roughness;\\n\\tvec3 anisotropicDirection = anisotropy >= 0.0 ? dTBN[1] : dTBN[0];\\n\\tvec3 anisotropicTangent = cross(anisotropicDirection, dViewDirW);\\n\\tvec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);\\n\\tvec3 bentNormal = normalize(mix(normalize(dNormalW), normalize(anisotropicNormal), anisotropy));\\n\\tdReflDirW = reflect(-dViewDirW, bentNormal);\\n}\\n\";\n\n\tvar reflectionCCPS = \"#ifdef CLEARCOAT\\nuniform float material_clearCoatReflectivity;\\nvoid addReflectionCC() {\\n\\tccReflection += vec4(calcReflection(ccReflDirW, ccGlossiness), material_clearCoatReflectivity);\\n}\\n#endif\\n\";\n\n\tvar reflectionCubePS = \"uniform samplerCube texture_cubeMap;\\nuniform float material_reflectivity;\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tvec3 lookupVec = fixSeams(cubeMapProject(tReflDirW));\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\tlookupVec.x *= -1.0;\\n#endif\\n\\treturn $textureCubeSAMPLE(texture_cubeMap, lookupVec).rgb;\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar reflectionDpAtlasPS = \"uniform sampler2D texture_sphereMap;\\nuniform float material_reflectivity;\\nvec2 getDpAtlasUv(vec2 uv, float mip) {\\n\\tvec4 rect;\\n\\tfloat sx = saturate(mip - 2.0);\\n\\trect.x = sx * 0.5;\\n\\tfloat t = mip - rect.x * 6.0;\\n\\tfloat i = 1.0 - rect.x;\\n\\trect.y = min(t * 0.5, 0.75) * i + rect.x;\\n\\tfloat st = saturate(t);\\n\\trect.z = (1.0 - st * 0.5) * i;\\n\\trect.w = rect.z * 0.5;\\n\\tfloat rcRectZ = 1.0 / rect.z;\\n\\tfloat scaleFactor = 0.00390625 * rcRectZ;\\n\\tvec2 scale = vec2(scaleFactor, scaleFactor * 2.0);\\n\\tuv = uv * (vec2(1.0) - scale) + scale * 0.5;\\n\\tuv = uv * rect.zw + rect.xy;\\n\\treturn uv;\\n}\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tvec3 reflDir = normalize(cubeMapProject(tReflDirW));\\n\\tbool up = reflDir.y > 0.0;\\n\\tfloat scale = 0.90909090909090909090909090909091;\\n\\tvec3 reflDirWarp = reflDir.xzx * vec3(-0.25, 0.5, 0.25);\\n\\tfloat reflDirVer = abs(reflDir.y) + 1.0;\\n\\treflDirWarp /= reflDirVer;\\n\\treflDirWarp *= scale;\\n\\treflDirWarp = vec3(0.75, 0.5, 0.25) - reflDirWarp;\\n\\tvec2 tc = up? reflDirWarp.xy : reflDirWarp.zy;\\n\\tfloat bias = saturate(1.0 - tGlossiness) * 5.0;\\n\\tfloat mip = floor(bias);\\n\\tvec3 tex1 = $texture2DSAMPLE(texture_sphereMap, getDpAtlasUv(tc, mip)).rgb;\\n\\tmip = min(mip + 1.0, 5.0);\\n\\tvec3 tex2 = $texture2DSAMPLE(texture_sphereMap, getDpAtlasUv(tc, mip)).rgb;\\n\\ttex1 = mix(tex1, tex2, fract(bias));\\n\\ttex1 = processEnvironment(tex1);\\n\\treturn tex1;\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar reflectionPrefilteredCubePS = \"uniform samplerCube texture_prefilteredCubeMap128;\\nuniform samplerCube texture_prefilteredCubeMap64;\\nuniform samplerCube texture_prefilteredCubeMap32;\\nuniform samplerCube texture_prefilteredCubeMap16;\\nuniform samplerCube texture_prefilteredCubeMap8;\\n#ifndef PMREM4\\n#define PMREM4\\nuniform samplerCube texture_prefilteredCubeMap4;\\n#endif\\nuniform float material_reflectivity;\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tvec3 refl = cubeMapProject(tReflDirW);\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\trefl.x *= -1.0;\\n#endif\\n\\tvec3 seam = calcSeam(refl);\\n\\tvec4 c0 = textureCube(texture_prefilteredCubeMap128, applySeam(refl, seam, 1.0 / 128.0));\\n\\tvec4 c1 = textureCube(texture_prefilteredCubeMap64, applySeam(refl, seam, 2.0 / 128.0));\\n\\tvec4 c2 = textureCube(texture_prefilteredCubeMap32, applySeam(refl, seam, 4.0 / 128.0));\\n\\tvec4 c3 = textureCube(texture_prefilteredCubeMap16, applySeam(refl, seam, 8.0 / 128.0));\\n\\tvec4 c4 = textureCube(texture_prefilteredCubeMap8, applySeam(refl, seam, 16.0 / 128.0));\\n\\tvec4 c5 = textureCube(texture_prefilteredCubeMap4, applySeam(refl, seam, 32.0 / 128.0));\\n\\tfloat bias = saturate(1.0 - tGlossiness) * 5.0;\\n\\tvec4 cubes0;\\n\\tvec4 cubes1;\\n\\tif (bias < 1.0) {\\n\\t\\tcubes0 = c0;\\n\\t\\tcubes1 = c1;\\n\\t} else if (bias < 2.0) {\\n\\t\\tcubes0 = c1;\\n\\t\\tcubes1 = c2;\\n\\t} else if (bias < 3.0) {\\n\\t\\tcubes0 = c2;\\n\\t\\tcubes1 = c3;\\n\\t} else if (bias < 4.0) {\\n\\t\\tcubes0 = c3;\\n\\t\\tcubes1 = c4;\\n\\t} else {\\n\\t\\tcubes0 = c4;\\n\\t\\tcubes1 = c5;\\n\\t}\\n\\tvec4 cubeFinal = mix(cubes0, cubes1, fract(bias));\\n\\treturn processEnvironment($DECODE(cubeFinal).rgb);\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar reflectionPrefilteredCubeLodPS = \"#ifndef PMREM4\\n#define PMREM4\\n#extension GL_EXT_shader_texture_lod : enable\\nuniform samplerCube texture_prefilteredCubeMap128;\\n#endif\\nuniform float material_reflectivity;\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tfloat bias = saturate(1.0 - tGlossiness) * 5.0;\\n\\tvec3 fixedReflDir = fixSeams(cubeMapProject(tReflDirW), bias);\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\tfixedReflDir.x *= -1.0;\\n#endif\\n\\tvec3 refl = processEnvironment($DECODE( textureCubeLodEXT(texture_prefilteredCubeMap128, fixedReflDir, bias) ).rgb);\\n\\treturn refl;\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar reflectionSpherePS = \"#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\nuniform sampler2D texture_sphereMap;\\nuniform float material_reflectivity;\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tvec3 reflDirV = (mat3(matrix_view) * tReflDirW).xyz;\\n\\tfloat m = 2.0 * sqrt( dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z+1.0)*(reflDirV.z+1.0) );\\n\\tvec2 sphereMapUv = reflDirV.xy / m + 0.5;\\n\\treturn $texture2DSAMPLE(texture_sphereMap, sphereMapUv).rgb;\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar reflectionSphereLowPS = \"uniform sampler2D texture_sphereMap;\\nuniform float material_reflectivity;\\nvec3 calcReflection(vec3 tReflDirW, float tGlossiness) {\\n\\tvec3 reflDirV = vNormalV;\\n\\tvec2 sphereMapUv = reflDirV.xy * 0.5 + 0.5;\\n\\treturn $texture2DSAMPLE(texture_sphereMap, sphereMapUv).rgb;\\n}\\nvoid addReflection() {\\n\\tdReflection += vec4(calcReflection(dReflDirW, dGlossiness), material_reflectivity);\\n}\\n\";\n\n\tvar refractionPS = \"uniform float material_refraction, material_refractionIndex;\\nvec3 refract2(vec3 viewVec, vec3 Normal, float IOR) {\\n\\tfloat vn = dot(viewVec, Normal);\\n\\tfloat k = 1.0 - IOR * IOR * (1.0 - vn * vn);\\n\\tvec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * Normal;\\n\\treturn refrVec;\\n}\\nvoid addRefraction() {\\n\\tvec3 tmp = dReflDirW;\\n\\tvec4 tmp2 = dReflection;\\n\\tdReflection = vec4(0.0);\\n\\tdReflDirW = refract2(-dViewDirW, dNormalW, material_refractionIndex);\\n\\taddReflection();\\n\\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * dAlbedo, material_refraction);\\n\\tdReflDirW = tmp;\\n\\tdReflection = tmp2;\\n}\\n\";\n\n\tvar reprojectPS = \"\\nvarying vec2 vUv0;\\nuniform sampler2D sourceTex;\\nuniform samplerCube sourceCube;\\nuniform vec4 params;\\nfloat targetFace() { return params.x; }\\nfloat specularPower() { return params.y; }\\nfloat sourceCubeSeamScale() { return params.z; }\\nfloat targetCubeSeamScale() { return params.w; }\\nfloat PI = 3.141592653589793;\\nfloat saturate(float x) {\\n\\treturn clamp(x, 0.0, 1.0);\\n}\\nvec3 decodeLinear(vec4 source) {\\n\\treturn source.rgb;\\n}\\nvec4 encodeLinear(vec3 source) {\\n\\treturn vec4(source, 1.0);\\n}\\nvec3 decodeGamma(vec4 source) {\\n\\treturn pow(source.xyz, vec3(2.2));\\n}\\nvec4 encodeGamma(vec3 source) {\\n\\treturn vec4(pow(source + 0.0000001, vec3(1.0 / 2.2)), 1.0);\\n}\\nvec3 decodeRGBM(vec4 rgbm) {\\n\\tvec3 color = (8.0 * rgbm.a) * rgbm.rgb;\\n\\treturn color * color;\\n}\\nvec4 encodeRGBM(vec3 source) {\\n\\tvec4 result;\\n\\tresult.rgb = pow(source.rgb, vec3(0.5));\\n\\tresult.rgb *= 1.0 / 8.0;\\n\\tresult.a = saturate( max( max( result.r, result.g ), max( result.b, 1.0 / 255.0 ) ) );\\n\\tresult.a = ceil(result.a * 255.0) / 255.0;\\n\\tresult.rgb /= result.a;\\n\\treturn result;\\n}\\nvec3 decodeRGBE(vec4 source) {\\n\\tif (source.a == 0.0) {\\n\\t\\treturn vec3(0.0, 0.0, 0.0);\\n\\t} else {\\n\\t\\treturn source.xyz * pow(2.0, source.w * 255.0 - 128.0);\\n\\t}\\n}\\nvec4 encodeRGBE(vec3 source) {\\n\\tfloat maxVal = max(source.x, max(source.y, source.z));\\n\\tif (maxVal < 1e-32) {\\n\\t\\treturn vec4(0, 0, 0, 0);\\n\\t} else {\\n\\t\\tfloat e = ceil(log2(maxVal));\\n\\t\\treturn vec4(source / pow(2.0, e), (e + 128.0) / 255.0);\\n\\t}\\n}\\nvec3 modifySeams(vec3 dir, float amount) {\\n\\tif (amount != 1.0) {\\n\\t\\tvec3 adir = abs(dir);\\n\\t\\tfloat M = max(max(adir.x, adir.y), adir.z);\\n\\t\\tif (adir.x == M) {\\n\\t\\t\\tdir.y *= amount;\\n\\t\\t\\tdir.z *= amount;\\n\\t\\t}\\n\\t\\telse if (adir.y == M) {\\n\\t\\t\\tdir.x *= amount;\\n\\t\\t\\tdir.z *= amount;\\n\\t\\t} else {\\n\\t\\t\\tdir.x *= amount;\\n\\t\\t\\tdir.y *= amount;\\n\\t\\t}\\n\\t}\\n\\treturn dir;\\n}\\nvec2 toSpherical(vec3 dir) {\\n\\treturn vec2(atan(dir.z, dir.x) * -1.0, asin(dir.y));\\n}\\nvec3 fromSpherical(vec2 uv) {\\n\\treturn vec3(cos(uv.y) * cos(-uv.x),\\n\\t\\t\\t\\tsin(uv.y),\\n\\t\\t\\t\\tcos(uv.y) * sin(-uv.x));\\n}\\nvec4 sampleEquirect(vec2 sph) {\\n\\treturn texture2D(sourceTex, sph / vec2(PI * 2.0, PI) + 0.5);\\n}\\nvec4 sampleEquirect(vec3 dir) {\\n\\treturn sampleEquirect(toSpherical(dir));\\n}\\nvec4 sampleCubemap(vec3 dir) {\\n\\treturn textureCube(sourceCube, modifySeams(dir, sourceCubeSeamScale()));\\n}\\nvec4 sampleCubemap(vec2 sph) {\\n\\treturn sampleCubemap(fromSpherical(sph));\\n}\\nvec3 getDirectionEquirect() {\\n\\treturn fromSpherical((vUv0 * 2.0 - 1.0) * vec2(PI, PI * 0.5));\\n}\\nvec3 getDirectionCubemap() {\\n\\tvec2 st = vUv0 * 2.0 - 1.0;\\n\\tfloat face = targetFace();\\n\\tvec3 vec;\\n\\tif (face == 0.0) {\\n\\t\\tvec = vec3(1, -st.y, -st.x);\\n\\t} else if (face == 1.0) {\\n\\t\\tvec = vec3(-1, -st.y, st.x);\\n\\t} else if (face == 2.0) {\\n\\t\\tvec = vec3(st.x, 1, st.y);\\n\\t} else if (face == 3.0) {\\n\\t\\tvec = vec3(st.x, -1, -st.y);\\n\\t} else if (face == 4.0) {\\n\\t\\tvec = vec3(st.x, -st.y, 1);\\n\\t} else {\\n\\t\\tvec = vec3(-st.x, -st.y, -1);\\n\\t}\\n\\treturn normalize(modifySeams(vec, 1.0 / targetCubeSeamScale()));\\n}\\nmat3 matrixFromVector(vec3 n) {\\n\\tfloat a = 1.0 / (1.0 + n.z);\\n\\tfloat b = -n.x * n.y * a;\\n\\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\\n\\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\\n\\treturn mat3(b1, b2, n);\\n}\\nmat3 matrixFromVectorSlow(vec3 n) {\\n\\tvec3 a = normalize(cross(n, vec3(0, 1, 0)));\\n\\tvec3 b = cross(n, a);\\n\\treturn mat3(a, b, n);\\n}\\nfloat rnd(int i) {\\n\\tfloat sini = sin(float(i));\\n\\tfloat cosi = cos(float(i));\\n\\treturn fract(sin(dot(vec2(sini, cosi), vec2(12.9898, 78.233) * 2.0)) * 43758.5453);\\n}\\nvec3 hemisphereSamplePhong(vec2 uv, float specPow) {\\n\\tfloat phi = uv.y * 2.0 * PI;\\n\\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\\n\\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\treturn vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n}\\nvec4 reproject() {\\n\\tif (NUM_SAMPLES <= 1) {\\n\\t\\treturn ENCODE_FUNC(DECODE_FUNC(SOURCE_FUNC(TARGET_FUNC())));\\n\\t} else {\\n\\t\\tvec2 sph = toSpherical(TARGET_FUNC());\\n\\t\\tvec2 sphu = dFdx(sph);\\n\\t\\tvec2 sphv = dFdy(sph);\\n\\t\\tconst float num = sqrt(float(NUM_SAMPLES));\\n\\t\\tvec3 result = vec3(0.0);\\n\\t\\tfor (float u=0.0; u<num; ++u) {\\n\\t\\t\\tfor (float v=0.0; v<num; ++v) {\\n\\t\\t\\t\\tresult += DECODE_FUNC(SOURCE_FUNC(sph +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  sphu * (u / num - 0.5) +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  sphv * (v / num - 0.5)));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn ENCODE_FUNC(result / (num * num));\\n\\t}\\n}\\nvec4 prefilter() {\\n\\tvec3 vec = TARGET_FUNC();\\n\\tmat3 vecSpace = matrixFromVectorSlow(vec);\\n\\tvec3 result = vec3(0.0);\\n\\tfor (int i=0; i<NUM_SAMPLES; ++i) {\\n\\t\\tvec2 uv = vec2(float(i) / float(NUM_SAMPLES), rnd(i));\\n\\t\\tvec3 dir = vecSpace * hemisphereSamplePhong(uv, specularPower());\\n\\t\\tresult += DECODE_FUNC(SOURCE_FUNC(dir));\\n\\t}\\n\\treturn ENCODE_FUNC(result / float(NUM_SAMPLES));\\n}\\nvoid main(void) {\\n\\tgl_FragColor = PROCESS_FUNC();\\n}\\n\";\n\n\tvar rgbmPS = \"vec3 decodeRGBM(vec4 rgbm) {\\n\\tvec3 color = (8.0 * rgbm.a) * rgbm.rgb;\\n\\treturn color * color;\\n}\\nvec3 texture2DRGBM(sampler2D tex, vec2 uv) {\\n\\treturn decodeRGBM(texture2D(tex, uv));\\n}\\nvec3 textureCubeRGBM(samplerCube tex, vec3 uvw) {\\n\\treturn decodeRGBM(textureCube(tex, uvw));\\n}\\n\";\n\n\tvar screenDepthPS = \"uniform sampler2D uDepthMap;\\n#ifndef SCREENSIZE\\n#define SCREENSIZE\\nuniform vec4 uScreenSize;\\n#endif\\n#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\n#ifndef CAMERAPLANES\\n#define CAMERAPLANES\\nuniform vec4 camera_params;\\n#endif\\n#ifdef GL2\\nfloat linearizeDepth(float z) {\\n\\tz = z * 2.0 - 1.0;\\n\\treturn 1.0 / (camera_params.z * z + camera_params.w);\\n}\\n#else\\n#ifndef UNPACKFLOAT\\n#define UNPACKFLOAT\\nfloat unpackFloat(vec4 rgbaDepth) {\\n\\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\\n\\treturn dot(rgbaDepth, bitShift);\\n}\\n#endif\\n#endif\\nfloat getLinearScreenDepth(vec2 uv) {\\n\\t#ifdef GL2\\n\\treturn linearizeDepth(texture2D(uDepthMap, uv).r) * camera_params.y;\\n\\t#else\\n\\treturn unpackFloat(texture2D(uDepthMap, uv)) * camera_params.y;\\n\\t#endif\\n}\\n#ifndef VERTEXSHADER\\nfloat getLinearScreenDepth() {\\n\\tvec2 uv = gl_FragCoord.xy * uScreenSize.zw;\\n\\treturn getLinearScreenDepth(uv);\\n}\\n#endif\\nfloat getLinearDepth(vec3 pos) {\\n\\treturn -(matrix_view * vec4(pos, 1.0)).z;\\n}\\n\";\n\n\tvar shadowCommonPS = \"void normalOffsetPointShadow(vec4 shadowParams) {\\n\\tfloat distScale = length(dLightDirW);\\n\\tvec3 wPos = vPositionW + dVertexNormalW * shadowParams.y * clamp(1.0 - dot(dVertexNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\\n\\tvec3 dir = wPos - dLightPosW;\\n\\tdLightDirW = dir;\\n}\\n\";\n\n\tvar shadowCoordPS = \"void _getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\\n\\tdShadowCoord = (shadowMatrix * vec4(wPos, 1.0)).xyz;\\n\\tdShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\\n\\t#ifdef SHADOWBIAS\\n\\tdShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\\n\\t#endif\\n}\\nvoid _getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\\n\\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\\n\\tprojPos.xy /= projPos.w;\\n\\tdShadowCoord.xy = projPos.xy;\\n\\tdShadowCoord.z = length(dLightDirW) * shadowParams.w;\\n\\t#ifdef SHADOWBIAS\\n\\tdShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\\n\\t#endif\\n}\\nvoid getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams) {\\n\\t_getShadowCoordOrtho(shadowMatrix, shadowParams, vPositionW);\\n}\\nvoid getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams) {\\n\\t_getShadowCoordPersp(shadowMatrix, shadowParams, vPositionW);\\n}\\nvoid getShadowCoordPerspNormalOffset(mat4 shadowMatrix, vec4 shadowParams) {\\n\\tfloat distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW));\\n\\tvec3 wPos = vPositionW + dVertexNormalW * shadowParams.y * clamp(1.0 - dot(dVertexNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\\n\\t_getShadowCoordPersp(shadowMatrix, shadowParams, wPos);\\n}\\nvoid getShadowCoordOrthoNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\\n\\tvec3 wPos = vPositionW + dVertexNormalW * shadowParams.y * clamp(1.0 - dot(dVertexNormalW, -dLightDirNormW), 0.0, 1.0);\\n\\t_getShadowCoordOrtho(shadowMatrix, shadowParams, wPos);\\n}\\n\";\n\n\tvar shadowCoordVS = \"void getLightDirPoint(vec3 lightPosW) {\\n\\tvec3 lightDirW = vPositionW - lightPosW;\\n\\tdLightDirNormW = normalize(lightDirW);\\n\\tdLightPosW = lightPosW;\\n}\\nvoid _getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\\n\\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\\n\\tvMainShadowUv = projPos;\\n}\\nvoid _getShadowCoordPersp(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\\n\\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\\n\\tvMainShadowUv = projPos;\\n}\\nvoid getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams) {\\n\\t_getShadowCoordOrtho(shadowMatrix, shadowParams, vPositionW);\\n}\\nvoid getShadowCoordPersp(mat4 shadowMatrix, vec3 shadowParams) {\\n\\t_getShadowCoordPersp(shadowMatrix, shadowParams, vPositionW);\\n}\\nvoid getShadowCoordPerspNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\\n\\tfloat distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW));\\n\\tvec3 wPos = vPositionW + dNormalW * shadowParams.y * clamp(1.0 - dot(dNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\\n\\t_getShadowCoordPersp(shadowMatrix, shadowParams, wPos);\\n}\\nvoid getShadowCoordOrthoNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\\n\\tvec3 wPos = vPositionW + dNormalW * shadowParams.y * clamp(1.0 - dot(dNormalW, -dLightDirNormW), 0.0, 1.0);\\n\\t_getShadowCoordOrtho(shadowMatrix, shadowParams, wPos);\\n}\\n\";\n\n\tvar shadowCoordPerspZbufferPS = \"void _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\\n\\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\\n\\tprojPos.xyz /= projPos.w;\\n\\tdShadowCoord = projPos.xyz;\\n}\\nvoid getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams) {\\n\\tfloat distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW));\\n\\tvec3 wPos = vPositionW + dVertexNormalW * shadowParams.y * clamp(1.0 - dot(dVertexNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\\n\\t_getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\\n}\\nvoid getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams) {\\n\\t_getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, vPositionW);\\n}\\n\";\n\n\tvar shadowEVSMPS = \"float VSM$(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\\n\\tvec3 moments = texture2D(tex, texCoords).xyz;\\n\\treturn calculateEVSM(moments, Z, vsmBias, exponent);\\n}\\nfloat getShadowVSM$(sampler2D shadowMap, vec3 shadowParams, float exponent) {\\n\\treturn VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\\n}\\nfloat getShadowSpotVSM$(sampler2D shadowMap, vec4 shadowParams, float exponent) {\\n\\treturn VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\\n}\\n\";\n\n\tvar shadowEVSMnPS = \"float VSM$(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\\n\\tfloat pixelSize = 1.0 / resolution;\\n\\ttexCoords -= vec2(pixelSize);\\n\\tvec3 s00 = texture2D(tex, texCoords).xyz;\\n\\tvec3 s10 = texture2D(tex, texCoords + vec2(pixelSize, 0)).xyz;\\n\\tvec3 s01 = texture2D(tex, texCoords + vec2(0, pixelSize)).xyz;\\n\\tvec3 s11 = texture2D(tex, texCoords + vec2(pixelSize)).xyz;\\n\\tvec2 fr = fract(texCoords * resolution);\\n\\tvec3 h0 = mix(s00, s10, fr.x);\\n\\tvec3 h1 = mix(s01, s11, fr.x);\\n\\tvec3 moments = mix(h0, h1, fr.y);\\n\\treturn calculateEVSM(moments, Z, vsmBias, exponent);\\n}\\nfloat getShadowVSM$(sampler2D shadowMap, vec3 shadowParams, float exponent) {\\n\\treturn VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\\n}\\nfloat getShadowSpotVSM$(sampler2D shadowMap, vec4 shadowParams, float exponent) {\\n\\treturn VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\\n}\\n\";\n\n\tvar shadowStandardPS = \"vec3 lessThan2(vec3 a, vec3 b) {\\n\\treturn clamp((b - a)*1000.0, 0.0, 1.0);\\n}\\n#ifndef UNPACKFLOAT\\n#define UNPACKFLOAT\\nfloat unpackFloat(vec4 rgbaDepth) {\\n\\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\\n\\treturn dot(rgbaDepth, bitShift);\\n}\\n#endif\\n#ifdef GL2\\nfloat _getShadowPCF3x3(sampler2DShadow shadowMap, vec3 shadowParams) {\\n\\tfloat z = dShadowCoord.z;\\n\\tvec2 uv = dShadowCoord.xy * shadowParams.x;\\n\\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\\n\\tvec2 base_uv = floor(uv + 0.5);\\n\\tfloat s = (uv.x + 0.5 - base_uv.x);\\n\\tfloat t = (uv.y + 0.5 - base_uv.y);\\n\\tbase_uv -= vec2(0.5);\\n\\tbase_uv *= shadowMapSizeInv;\\n\\tfloat sum = 0.0;\\n\\tfloat uw0 = (3.0 - 2.0 * s);\\n\\tfloat uw1 = (1.0 + 2.0 * s);\\n\\tfloat u0 = (2.0 - s) / uw0 - 1.0;\\n\\tfloat u1 = s / uw1 + 1.0;\\n\\tfloat vw0 = (3.0 - 2.0 * t);\\n\\tfloat vw1 = (1.0 + 2.0 * t);\\n\\tfloat v0 = (2.0 - t) / vw0 - 1.0;\\n\\tfloat v1 = t / vw1 + 1.0;\\n\\tu0 = u0 * shadowMapSizeInv + base_uv.x;\\n\\tv0 = v0 * shadowMapSizeInv + base_uv.y;\\n\\tu1 = u1 * shadowMapSizeInv + base_uv.x;\\n\\tv1 = v1 * shadowMapSizeInv + base_uv.y;\\n\\tsum += uw0 * vw0 * texture(shadowMap, vec3(u0, v0, z));\\n\\tsum += uw1 * vw0 * texture(shadowMap, vec3(u1, v0, z));\\n\\tsum += uw0 * vw1 * texture(shadowMap, vec3(u0, v1, z));\\n\\tsum += uw1 * vw1 * texture(shadowMap, vec3(u1, v1, z));\\n\\tsum *= 1.0f / 16.0;\\n\\treturn sum;\\n}\\nfloat getShadowPCF3x3(sampler2DShadow shadowMap, vec3 shadowParams) {\\n\\treturn _getShadowPCF3x3(shadowMap, shadowParams);\\n}\\nfloat getShadowSpotPCF3x3(sampler2DShadow shadowMap, vec4 shadowParams) {\\n\\treturn _getShadowPCF3x3(shadowMap, shadowParams.xyz);\\n}\\n#else\\nfloat _xgetShadowPCF3x3(mat3 depthKernel, sampler2D shadowMap, vec3 shadowParams) {\\n\\tmat3 shadowKernel;\\n\\tvec3 shadowCoord = dShadowCoord;\\n\\tvec3 shadowZ = vec3(shadowCoord.z);\\n\\tshadowKernel[0] = vec3(greaterThan(depthKernel[0], shadowZ));\\n\\tshadowKernel[1] = vec3(greaterThan(depthKernel[1], shadowZ));\\n\\tshadowKernel[2] = vec3(greaterThan(depthKernel[2], shadowZ));\\n\\tvec2 fractionalCoord = fract( shadowCoord.xy * shadowParams.x );\\n\\tshadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\\n\\tshadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\\n\\tvec4 shadowValues;\\n\\tshadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\\n\\tshadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\\n\\tshadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\\n\\tshadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\\n\\treturn dot( shadowValues, vec4( 1.0 ) ) * 0.25;\\n}\\nfloat _getShadowPCF3x3(sampler2D shadowMap, vec3 shadowParams) {\\n\\tvec3 shadowCoord = dShadowCoord;\\n\\tfloat xoffset = 1.0 / shadowParams.x;\\n\\tfloat dx0 = -xoffset;\\n\\tfloat dx1 = xoffset;\\n\\tmat3 depthKernel;\\n\\tdepthKernel[0][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, dx0)));\\n\\tdepthKernel[0][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, 0.0)));\\n\\tdepthKernel[0][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, dx1)));\\n\\tdepthKernel[1][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(0.0, dx0)));\\n\\tdepthKernel[1][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy));\\n\\tdepthKernel[1][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(0.0, dx1)));\\n\\tdepthKernel[2][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, dx0)));\\n\\tdepthKernel[2][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, 0.0)));\\n\\tdepthKernel[2][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, dx1)));\\n\\treturn _xgetShadowPCF3x3(depthKernel, shadowMap, shadowParams);\\n}\\nfloat getShadowPCF3x3(sampler2D shadowMap, vec3 shadowParams) {\\n\\treturn _getShadowPCF3x3(shadowMap, shadowParams);\\n}\\nfloat getShadowSpotPCF3x3(sampler2D shadowMap, vec4 shadowParams) {\\n\\treturn _getShadowPCF3x3(shadowMap, shadowParams.xyz);\\n}\\n#endif\\nfloat _getShadowPoint(samplerCube shadowMap, vec4 shadowParams, vec3 dir) {\\n\\tvec3 tc = normalize(dir);\\n\\tvec3 tcAbs = abs(tc);\\n\\tvec4 dirX = vec4(1,0,0, tc.x);\\n\\tvec4 dirY = vec4(0,1,0, tc.y);\\n\\tfloat majorAxisLength = tc.z;\\n\\tif ((tcAbs.x > tcAbs.y) && (tcAbs.x > tcAbs.z)) {\\n\\t\\tdirX = vec4(0,0,1, tc.z);\\n\\t\\tdirY = vec4(0,1,0, tc.y);\\n\\t\\tmajorAxisLength = tc.x;\\n\\t} else if ((tcAbs.y > tcAbs.x) && (tcAbs.y > tcAbs.z)) {\\n\\t\\tdirX = vec4(1,0,0, tc.x);\\n\\t\\tdirY = vec4(0,0,1, tc.z);\\n\\t\\tmajorAxisLength = tc.y;\\n\\t}\\n\\tfloat shadowParamsInFaceSpace = ((1.0/shadowParams.x) * 2.0) * abs(majorAxisLength);\\n\\tvec3 xoffset = (dirX.xyz * shadowParamsInFaceSpace);\\n\\tvec3 yoffset = (dirY.xyz * shadowParamsInFaceSpace);\\n\\tvec3 dx0 = -xoffset;\\n\\tvec3 dy0 = -yoffset;\\n\\tvec3 dx1 = xoffset;\\n\\tvec3 dy1 = yoffset;\\n\\tmat3 shadowKernel;\\n\\tmat3 depthKernel;\\n\\tdepthKernel[0][0] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy0));\\n\\tdepthKernel[0][1] = unpackFloat(textureCube(shadowMap, tc + dx0));\\n\\tdepthKernel[0][2] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy1));\\n\\tdepthKernel[1][0] = unpackFloat(textureCube(shadowMap, tc + dy0));\\n\\tdepthKernel[1][1] = unpackFloat(textureCube(shadowMap, tc));\\n\\tdepthKernel[1][2] = unpackFloat(textureCube(shadowMap, tc + dy1));\\n\\tdepthKernel[2][0] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy0));\\n\\tdepthKernel[2][1] = unpackFloat(textureCube(shadowMap, tc + dx1));\\n\\tdepthKernel[2][2] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy1));\\n\\tvec3 shadowZ = vec3(length(dir) * shadowParams.w + shadowParams.z);\\n\\tshadowKernel[0] = vec3(lessThan2(depthKernel[0], shadowZ));\\n\\tshadowKernel[1] = vec3(lessThan2(depthKernel[1], shadowZ));\\n\\tshadowKernel[2] = vec3(lessThan2(depthKernel[2], shadowZ));\\n\\tvec2 uv = (vec2(dirX.w, dirY.w) / abs(majorAxisLength)) * 0.5;\\n\\tvec2 fractionalCoord = fract( uv * shadowParams.x );\\n\\tshadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\\n\\tshadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\\n\\tvec4 shadowValues;\\n\\tshadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\\n\\tshadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\\n\\tshadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\\n\\tshadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\\n\\treturn 1.0 - dot( shadowValues, vec4( 1.0 ) ) * 0.25;\\n}\\nfloat getShadowPointPCF3x3(samplerCube shadowMap, vec4 shadowParams) {\\n\\treturn _getShadowPoint(shadowMap, shadowParams, dLightDirW);\\n}\\n\";\n\n\tvar shadowStandardGL2PS = \"float _getShadowPCF5x5(sampler2DShadow shadowMap, vec3 shadowParams) {\\n\\tfloat z = dShadowCoord.z;\\n\\tvec2 uv = dShadowCoord.xy * shadowParams.x;\\n\\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\\n\\tvec2 base_uv = floor(uv + 0.5);\\n\\tfloat s = (uv.x + 0.5 - base_uv.x);\\n\\tfloat t = (uv.y + 0.5 - base_uv.y);\\n\\tbase_uv -= vec2(0.5);\\n\\tbase_uv *= shadowMapSizeInv;\\n\\tfloat uw0 = (4.0 - 3.0 * s);\\n\\tfloat uw1 = 7.0;\\n\\tfloat uw2 = (1.0 + 3.0 * s);\\n\\tfloat u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\\n\\tfloat u1 = (3.0 + s) / uw1;\\n\\tfloat u2 = s / uw2 + 2.0;\\n\\tfloat vw0 = (4.0 - 3.0 * t);\\n\\tfloat vw1 = 7.0;\\n\\tfloat vw2 = (1.0 + 3.0 * t);\\n\\tfloat v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\\n\\tfloat v1 = (3.0 + t) / vw1;\\n\\tfloat v2 = t / vw2 + 2.0;\\n\\tfloat sum = 0.0;\\n\\tu0 = u0 * shadowMapSizeInv + base_uv.x;\\n\\tv0 = v0 * shadowMapSizeInv + base_uv.y;\\n\\tu1 = u1 * shadowMapSizeInv + base_uv.x;\\n\\tv1 = v1 * shadowMapSizeInv + base_uv.y;\\n\\tu2 = u2 * shadowMapSizeInv + base_uv.x;\\n\\tv2 = v2 * shadowMapSizeInv + base_uv.y;\\n\\tsum += uw0 * vw0 * texture(shadowMap, vec3(u0, v0, z));\\n\\tsum += uw1 * vw0 * texture(shadowMap, vec3(u1, v0, z));\\n\\tsum += uw2 * vw0 * texture(shadowMap, vec3(u2, v0, z));\\n\\tsum += uw0 * vw1 * texture(shadowMap, vec3(u0, v1, z));\\n\\tsum += uw1 * vw1 * texture(shadowMap, vec3(u1, v1, z));\\n\\tsum += uw2 * vw1 * texture(shadowMap, vec3(u2, v1, z));\\n\\tsum += uw0 * vw2 * texture(shadowMap, vec3(u0, v2, z));\\n\\tsum += uw1 * vw2 * texture(shadowMap, vec3(u1, v2, z));\\n\\tsum += uw2 * vw2 * texture(shadowMap, vec3(u2, v2, z));\\n\\tsum *= 1.0f / 144.0;\\n\\tsum = gammaCorrectInput(sum);\\n\\tsum = saturate(sum);\\n\\treturn sum;\\n}\\nfloat getShadowPCF5x5(sampler2DShadow shadowMap, vec3 shadowParams) {\\n\\treturn _getShadowPCF5x5(shadowMap, shadowParams);\\n}\\nfloat getShadowSpotPCF5x5(sampler2DShadow shadowMap, vec4 shadowParams) {\\n\\treturn _getShadowPCF5x5(shadowMap, shadowParams.xyz);\\n}\\n\";\n\n\tvar shadowStandardGL2VSPS = \"float getShadowPCF5x5VS(sampler2DShadow shadowMap, vec3 shadowParams) {\\n\\tdShadowCoord = vMainShadowUv.xyz;\\n\\tdShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\\n\\treturn _getShadowPCF5x5(shadowMap, shadowParams);\\n}\\n\";\n\n\tvar shadowStandardVSPS = \"#ifdef GL2\\n#define SHADOW_SAMPLERVS sampler2DShadow\\n#else\\n#define SHADOW_SAMPLERVS sampler2D\\n#endif\\nfloat getShadowPCF3x3VS(SHADOW_SAMPLERVS shadowMap, vec3 shadowParams) {\\n\\tdShadowCoord = vMainShadowUv.xyz;\\n\\tdShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\\n\\t#ifdef SHADOWBIAS\\n\\tdShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\\n\\t#endif\\n\\treturn _getShadowPCF3x3(shadowMap, shadowParams);\\n}\\n\";\n\n\tvar shadowVSM8PS = \"float calculateVSM8(vec3 moments, float Z, float vsmBias) {\\n\\tfloat VSMBias = vsmBias;\\n\\tfloat depthScale = VSMBias * Z;\\n\\tfloat minVariance1 = depthScale * depthScale;\\n\\treturn chebyshevUpperBound(moments.xy, Z, minVariance1, 0.1);\\n}\\nfloat decodeFloatRG(vec2 rg) {\\n\\treturn rg.y*(1.0/255.0) + rg.x;\\n}\\nfloat VSM8(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\\n\\tvec4 c = texture2D(tex, texCoords);\\n\\tvec3 moments = vec3(decodeFloatRG(c.xy), decodeFloatRG(c.zw), 0.0);\\n\\treturn calculateVSM8(moments, Z, vsmBias);\\n}\\nfloat getShadowVSM8(sampler2D shadowMap, vec3 shadowParams, float exponent) {\\n\\treturn VSM8(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, 0.0);\\n}\\nfloat getShadowSpotVSM8(sampler2D shadowMap, vec4 shadowParams, float exponent) {\\n\\treturn VSM8(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, 0.0);\\n}\\n\";\n\n\tvar shadowVSMVSPS = \"float getShadowVSM$VS(sampler2D shadowMap, vec3 shadowParams, float exponent) {\\n\\tdShadowCoord = vMainShadowUv.xyz;\\n\\tdShadowCoord.z += shadowParams.z;\\n\\tdShadowCoord.xyz /= vMainShadowUv.w;\\n\\tdShadowCoord.z = min(dShadowCoord.z, 1.0);\\n\\treturn $VSM(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\\n}\\n\";\n\n\tvar shadowVSM_commonPS = \"float linstep(float a, float b, float v) {\\n\\treturn saturate((v - a) / (b - a));\\n}\\nfloat reduceLightBleeding(float pMax, float amount) {\\n   return linstep(amount, 1.0, pMax);\\n}\\nfloat chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {\\n\\tfloat variance = moments.y - (moments.x * moments.x);\\n\\tvariance = max(variance, minVariance);\\n\\tfloat d = mean - moments.x;\\n\\tfloat pMax = variance / (variance + (d * d));\\n\\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\\n\\treturn (mean <= moments.x ? 1.0 : pMax);\\n}\\nfloat calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {\\n\\tZ = 2.0 * Z - 1.0;\\n\\tfloat warpedDepth = exp(exponent * Z);\\n\\tmoments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);\\n\\tfloat VSMBias = vsmBias;\\n\\tfloat depthScale = VSMBias * exponent * warpedDepth;\\n\\tfloat minVariance1 = depthScale * depthScale;\\n\\treturn chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);\\n}\\n\";\n\n\tvar skinBatchConstVS = \"attribute float vertex_boneIndices;\\nuniform vec4 matrix_pose[BONE_LIMIT * 3];\\nmat4 getBoneMatrix(const in float i) {\\n\\tvec4 v1 = matrix_pose[int(3.0 * i)];\\n\\tvec4 v2 = matrix_pose[int(3.0 * i + 1.0)];\\n\\tvec4 v3 = matrix_pose[int(3.0 * i + 2.0)];\\n\\treturn mat4(\\n\\t\\tv1.x, v2.x, v3.x, 0,\\n\\t\\tv1.y, v2.y, v3.y, 0,\\n\\t\\tv1.z, v2.z, v3.z, 0,\\n\\t\\tv1.w, v2.w, v3.w, 1\\n\\t);\\n}\\n\";\n\n\tvar skinBatchTexVS = \"attribute float vertex_boneIndices;\\nuniform highp sampler2D texture_poseMap;\\nuniform vec4 texture_poseMapSize;\\nmat4 getBoneMatrix(const in float i) {\\n\\tfloat j = i * 3.0;\\n\\tfloat dx = texture_poseMapSize.z;\\n\\tfloat dy = texture_poseMapSize.w;\\n\\tfloat y = floor(j * dx);\\n\\tfloat x = j - (y * texture_poseMapSize.x);\\n\\ty = dy * (y + 0.5);\\n\\tvec4 v1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));\\n\\tvec4 v2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));\\n\\tvec4 v3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));\\n\\treturn mat4(\\n\\t\\tv1.x, v2.x, v3.x, 0,\\n\\t\\tv1.y, v2.y, v3.y, 0,\\n\\t\\tv1.z, v2.z, v3.z, 0,\\n\\t\\tv1.w, v2.w, v3.w, 1\\n\\t);\\n}\\n\";\n\n\tvar skinConstVS = \"attribute vec4 vertex_boneWeights;\\nattribute vec4 vertex_boneIndices;\\nuniform vec4 matrix_pose[BONE_LIMIT * 3];\\nvoid getBoneMatrix(const in float i, out vec4 v1, out vec4 v2, out vec4 v3) {\\n\\tv1 = matrix_pose[int(3.0 * i)];\\n\\tv2 = matrix_pose[int(3.0 * i + 1.0)];\\n\\tv3 = matrix_pose[int(3.0 * i + 2.0)];\\n}\\nmat4 getSkinMatrix(const in vec4 indices, const in vec4 weights) {\\n\\tvec4 a1, a2, a3;\\n\\tgetBoneMatrix(indices.x, a1, a2, a3);\\n\\tvec4 b1, b2, b3;\\n\\tgetBoneMatrix(indices.y, b1, b2, b3);\\n\\tvec4 c1, c2, c3;\\n\\tgetBoneMatrix(indices.z, c1, c2, c3);\\n\\tvec4 d1, d2, d3;\\n\\tgetBoneMatrix(indices.w, d1, d2, d3);\\n\\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\\n\\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\\n\\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\\n\\tfloat one = dot(weights, vec4(1.0));\\n\\treturn mat4(\\n\\t\\tv1.x, v2.x, v3.x, 0,\\n\\t\\tv1.y, v2.y, v3.y, 0,\\n\\t\\tv1.z, v2.z, v3.z, 0,\\n\\t\\tv1.w, v2.w, v3.w, one\\n\\t);\\n}\\n\";\n\n\tvar skinTexVS = \"attribute vec4 vertex_boneWeights;\\nattribute vec4 vertex_boneIndices;\\nuniform highp sampler2D texture_poseMap;\\nuniform vec4 texture_poseMapSize;\\nvoid getBoneMatrix(const in float i, out vec4 v1, out vec4 v2, out vec4 v3) {\\n\\tfloat j = i * 3.0;\\n\\tfloat dx = texture_poseMapSize.z;\\n\\tfloat dy = texture_poseMapSize.w;\\n\\tfloat y = floor(j * dx);\\n\\tfloat x = j - (y * texture_poseMapSize.x);\\n\\ty = dy * (y + 0.5);\\n\\tv1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));\\n\\tv2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));\\n\\tv3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));\\n}\\nmat4 getSkinMatrix(const in vec4 indices, const in vec4 weights) {\\n\\tvec4 a1, a2, a3;\\n\\tgetBoneMatrix(indices.x, a1, a2, a3);\\n\\tvec4 b1, b2, b3;\\n\\tgetBoneMatrix(indices.y, b1, b2, b3);\\n\\tvec4 c1, c2, c3;\\n\\tgetBoneMatrix(indices.z, c1, c2, c3);\\n\\tvec4 d1, d2, d3;\\n\\tgetBoneMatrix(indices.w, d1, d2, d3);\\n\\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\\n\\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\\n\\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\\n\\tfloat one = dot(weights, vec4(1.0));\\n\\treturn mat4(\\n\\t\\tv1.x, v2.x, v3.x, 0,\\n\\t\\tv1.y, v2.y, v3.y, 0,\\n\\t\\tv1.z, v2.z, v3.z, 0,\\n\\t\\tv1.w, v2.w, v3.w, one\\n\\t);\\n}\\n\";\n\n\tvar skyboxPS = \"varying vec3 vViewDir;\\nuniform samplerCube texture_cubeMap;\\nvoid main(void) {\\n\\tgl_FragColor = textureCube(texture_cubeMap, fixSeams(vViewDir));\\n}\\n\";\n\n\tvar skyboxVS = \"attribute vec3 aPosition;\\n#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\nuniform mat4 matrix_projectionSkybox;\\nvarying vec3 vViewDir;\\nvoid main(void) {\\n\\tmat4 view = matrix_view;\\n\\tview[3][0] = view[3][1] = view[3][2] = 0.0;\\n\\tgl_Position = matrix_projectionSkybox * view * vec4(aPosition, 1.0);\\n\\tgl_Position.z = gl_Position.w - 0.00001;\\n\\tvViewDir = aPosition;\\n}\\n\";\n\n\tvar skyboxHDRPS = \"varying vec3 vViewDir;\\nuniform samplerCube texture_cubeMap;\\n#ifdef CUBEMAP_ROTATION\\nuniform mat3 cubeMapRotationMatrix;\\n#endif\\nvoid main(void) {\\n#ifdef CUBEMAP_ROTATION\\n\\tvec3 dir=vViewDir * cubeMapRotationMatrix;\\n#else\\n\\tvec3 dir=vViewDir;\\n#endif\\n#ifndef RIGHT_HANDED_CUBEMAP\\n\\tdir.x *= -1.0;\\n#endif\\n\\tvec3 color = processEnvironment($textureCubeSAMPLE(texture_cubeMap, fixSeamsStatic(dir, $FIXCONST)).rgb);\\n\\tcolor = toneMap(color);\\n\\tcolor = gammaCorrectOutput(color);\\n\\tgl_FragColor = vec4(color, 1.0);\\n}\\n\";\n\n\tvar skyboxPrefilteredCubePS = \"varying vec3 vViewDir;\\nuniform samplerCube texture_cubeMap;\\nvec3 fixSeamsStretch(vec3 vec, float mipmapIndex, float cubemapSize) {\\n\\tfloat scale = 1.0 - exp2(mipmapIndex) / cubemapSize;\\n\\tfloat M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\\n\\tif (abs(vec.x) != M) vec.x *= scale;\\n\\tif (abs(vec.y) != M) vec.y *= scale;\\n\\tif (abs(vec.z) != M) vec.z *= scale;\\n\\treturn vec;\\n}\\nvoid main(void) {\\n\\tvec3 color = textureCubeRGBM(texture_cubeMap, fixSeamsStretch(vViewDir, 0.0, 128.0));\\n\\tcolor = toneMap(color);\\n\\tcolor = gammaCorrectOutput(color);\\n\\tgl_FragColor = vec4(color, 1.0);\\n}\\n\";\n\n\tvar specularPS = \"#ifdef MAPCOLOR\\nuniform vec3 material_specular;\\n#endif\\n#ifdef MAPTEXTURE\\nuniform sampler2D texture_specularMap;\\n#endif\\nvoid getSpecularity() {\\n\\tdSpecularity = vec3(1.0);\\n\\t#ifdef MAPCOLOR\\n\\tdSpecularity *= material_specular;\\n\\t#endif\\n\\t#ifdef MAPTEXTURE\\n\\tdSpecularity *= texture2D(texture_specularMap, $UV).$CH;\\n\\t#endif\\n\\t#ifdef MAPVERTEX\\n\\tdSpecularity *= saturate(vVertexColor.$VC);\\n\\t#endif\\n}\\n\";\n\n\tvar specularAaNonePS = \"float antiAliasGlossiness(float power) {\\n\\treturn power;\\n}\\n\";\n\n\tvar specularAaToksvigPS = \"float antiAliasGlossiness(float power) {\\n\\tfloat rlen = 1.0 / saturate(length(dNormalMap));\\n\\tfloat toksvig = 1.0 / (1.0 + power * (rlen - 1.0));\\n\\treturn power * mix(1.0, toksvig, material_bumpiness);\\n}\\n\";\n\n\tvar specularAaToksvigFastPS = \"float antiAliasGlossiness(float power) {\\n\\tfloat rlen = 1.0 / saturate(length(dNormalMap));\\n\\tfloat toksvig = 1.0 / (1.0 + power * (rlen - 1.0));\\n\\treturn power * toksvig;\\n}\\n\";\n\n\tvar spotPS = \"float getSpotEffect(vec3 lightSpotDirW, float lightInnerConeAngle, float lightOuterConeAngle) {\\n\\tfloat cosAngle = dot(dLightDirNormW, lightSpotDirW);\\n\\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\\n}\\n\";\n\n\tvar startPS = \"void main(void) {\\n\\tdDiffuseLight = vec3(0);\\n\\tdSpecularLight = vec3(0);\\n\\tdReflection = vec4(0);\\n\\tdSpecularity = vec3(0);\\n\\t#ifdef CLEARCOAT\\n\\tccSpecularLight = vec3(0);\\n\\tccReflection = vec4(0);\\n\\t#endif\\n\";\n\n\tvar startVS = \"void main(void) {\\n\\tgl_Position = getPosition();\\n\";\n\n\tvar startNineSlicedPS = \"\\tnineSlicedUv = vUv0;\\n\";\n\n\tvar startNineSlicedTiledPS = \"\\tvec2 tileMask = step(vMask, vec2(0.99999));\\n\\tvec2 clampedUv = mix(innerOffset.xy*0.5, vec2(1.0) - innerOffset.zw*0.5, fract(vTiledUv));\\n\\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\\n\\tnineSlicedUv = vUv0 * tileMask + clampedUv * (vec2(1.0) - tileMask);\\n\";\n\n\tvar storeEVSMPS = \"float exponent = VSM_EXPONENT;\\ndepth = 2.0 * depth - 1.0;\\ndepth =  exp(exponent * depth);\\ngl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);\\n\";\n\n\tvar tangentBinormalVS = \"vec3 getTangent() {\\n\\treturn normalize(dNormalMatrix * vertex_tangent.xyz);\\n}\\nvec3 getBinormal() {\\n\\treturn cross(vNormalW, vTangentW) * vertex_tangent.w;\\n}\\nvec3 getObjectSpaceUp() {\\n\\treturn normalize(dNormalMatrix * vec3(0, 1, 0));\\n}\\n\";\n\n\tvar TBNPS = \"void getTBN() {\\n\\tdTBN = mat3(normalize(dTangentW), normalize(dBinormalW), normalize(dVertexNormalW));\\n}\\n\";\n\n\tvar TBNderivativePS = \"\\nvoid getTBN() {\\n\\tvec2 uv = $UV;\\n\\tvec3 dp1 = dFdx( vPositionW );\\n\\tvec3 dp2 = dFdy( vPositionW );\\n\\tvec2 duv1 = dFdx( uv );\\n\\tvec2 duv2 = dFdy( uv );\\n\\tvec3 dp2perp = cross( dp2, dVertexNormalW );\\n\\tvec3 dp1perp = cross( dVertexNormalW, dp1 );\\n\\tvec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\\n\\tvec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\\n\\tfloat invmax = 1.0 / sqrt( max( dot(T,T), dot(B,B) ) );\\n\\tdTBN = mat3( T * invmax, B * invmax, dVertexNormalW );\\n}\\n\";\n\n\tvar TBNfastPS = \"void getTBN() {\\n\\tdTBN = mat3(dTangentW, dBinormalW, dVertexNormalW);\\n}\\n\";\n\n\tvar TBNObjectSpacePS = \"void getTBN() {\\n\\tvec3 B = cross(dVertexNormalW, vObjectSpaceUpW);\\n\\tvec3 T = cross(dVertexNormalW, B);\\n\\tif (dot(B,B)==0.0)\\n\\t{\\n\\t\\tfloat major=max(max(dVertexNormalW.x, dVertexNormalW.y),dVertexNormalW.z);\\n\\t\\tif (dVertexNormalW.x==major)\\n\\t\\t{\\n\\t\\t\\tB=cross(dVertexNormalW, vec3(0,1,0));\\n\\t\\t\\tT=cross(dVertexNormalW, B);\\n\\t\\t}\\n\\t\\telse if (dVertexNormalW.y==major)\\n\\t\\t{\\n\\t\\t\\tB=cross(dVertexNormalW, vec3(0,0,1));\\n\\t\\t\\tT=cross(dVertexNormalW, B);\\n\\t\\t}\\n\\t\\telse if (dVertexNormalW.z==major)\\n\\t\\t{\\n\\t\\t\\tB=cross(dVertexNormalW, vec3(1,0,0));\\n\\t\\t\\tT=cross(dVertexNormalW, B);\\n\\t\\t}\\n\\t}\\n\\tdTBN = mat3(normalize(T), normalize(B), normalize(dVertexNormalW));\\n}\\n\";\n\n\tvar tonemappingAcesPS = \"uniform float exposure;\\nvec3 toneMap(vec3 color) {\\n\\tfloat tA = 2.51;\\n\\tfloat tB = 0.03;\\n\\tfloat tC = 2.43;\\n\\tfloat tD = 0.59;\\n\\tfloat tE = 0.14;\\n\\tvec3 x = color * exposure;\\n\\treturn (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\\n}\\n\";\n\n\tvar tonemappingAces2PS = \"uniform float exposure;\\nconst mat3 ACESInputMat = mat3(\\n\\t0.59719, 0.35458, 0.04823,\\n\\t0.07600, 0.90834, 0.01566,\\n\\t0.02840, 0.13383, 0.83777\\n);\\nconst mat3 ACESOutputMat = mat3(\\n\\t 1.60475, -0.53108, -0.07367,\\n\\t-0.10208,  1.10813, -0.00605,\\n\\t-0.00327, -0.07276,  1.07602\\n);\\nvec3 RRTAndODTFit(vec3 v) {\\n\\tvec3 a = v * (v + 0.0245786) - 0.000090537;\\n\\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 toneMap(vec3 color) {\\n\\tcolor *= exposure;\\n\\tcolor = color * ACESInputMat;\\n\\tcolor = RRTAndODTFit(color);\\n\\tcolor = color * ACESOutputMat;\\n\\tcolor = clamp(color, 0.0, 1.0);\\n\\treturn color;\\n}\\n\";\n\n\tvar tonemappingFilmicPS = \"const float A =  0.15;\\nconst float B =  0.50;\\nconst float C =  0.10;\\nconst float D =  0.20;\\nconst float E =  0.02;\\nconst float F =  0.30;\\nconst float W =  11.2;\\nuniform float exposure;\\nvec3 uncharted2Tonemap(vec3 x) {\\n   return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\\n}\\nvec3 toneMap(vec3 color) {\\n\\tcolor = uncharted2Tonemap(color * exposure);\\n\\tvec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\\n\\tcolor = color * whiteScale;\\n\\treturn color;\\n}\\n\";\n\n\tvar tonemappingHejlPS = \"uniform float exposure;\\nvec3 toneMap(vec3 color) {\\n\\tcolor *= exposure;\\n\\tconst float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\\n\\tconst float Scl = 1.25;\\n\\tvec3 h = max( vec3(0.0), color - vec3(0.004) );\\n\\treturn (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\\n}\\n\";\n\n\tvar tonemappingLinearPS = \"uniform float exposure;\\nvec3 toneMap(vec3 color) {\\n\\treturn color * exposure;\\n}\\n\";\n\n\tvar tonemappingNonePS = \"vec3 toneMap(vec3 color) {\\n\\treturn color;\\n}\\n\";\n\n\tvar transformVS = \"#ifdef PIXELSNAP\\nuniform vec4 uScreenSize;\\n#endif\\n#ifdef MORPHING\\nuniform vec4 morph_weights_a;\\nuniform vec4 morph_weights_b;\\n#endif\\n#ifdef MORPHING_TEXTURE_BASED\\nuniform vec4 morph_tex_params;\\nvec2 getTextureMorphCoords() {\\n\\tfloat vertexId = morph_vertex_id;\\n\\tvec2 textureSize = morph_tex_params.xy;\\n\\tvec2 invTextureSize = morph_tex_params.zw;\\n\\tfloat morphGridV = floor(vertexId * invTextureSize.x);\\n\\tfloat morphGridU = vertexId - (morphGridV * textureSize.x);\\n\\treturn (vec2(morphGridU, morphGridV) * invTextureSize) + (0.5 * invTextureSize);\\n}\\n#endif\\n#ifdef MORPHING_TEXTURE_BASED_POSITION\\nuniform highp sampler2D morphPositionTex;\\n#endif\\nmat4 getModelMatrix() {\\n\\t#ifdef DYNAMICBATCH\\n\\treturn getBoneMatrix(vertex_boneIndices);\\n\\t#elif defined(SKIN)\\n\\treturn matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\\n\\t#elif defined(INSTANCING)\\n\\treturn mat4(instance_line1, instance_line2, instance_line3, instance_line4);\\n\\t#else\\n\\treturn matrix_model;\\n\\t#endif\\n}\\nvec4 getPosition() {\\n\\tdModelMatrix = getModelMatrix();\\n\\tvec3 localPos = vertex_position;\\n\\t#ifdef NINESLICED\\n\\tlocalPos.xz *= outerScale;\\n\\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\\n\\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\\n\\tlocalPos.xz += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\\n\\tvTiledUv = (localPos.xz - outerScale + innerOffset.xy) * -0.5 + 1.0;\\n\\tlocalPos.xz *= -0.5;\\n\\tlocalPos = localPos.xzy;\\n\\t#endif\\n\\t#ifdef MORPHING\\n\\t#ifdef MORPHING_POS03\\n\\tlocalPos.xyz += morph_weights_a[0] * morph_pos0;\\n\\tlocalPos.xyz += morph_weights_a[1] * morph_pos1;\\n\\tlocalPos.xyz += morph_weights_a[2] * morph_pos2;\\n\\tlocalPos.xyz += morph_weights_a[3] * morph_pos3;\\n\\t#endif\\n\\t#ifdef MORPHING_POS47\\n\\tlocalPos.xyz += morph_weights_b[0] * morph_pos4;\\n\\tlocalPos.xyz += morph_weights_b[1] * morph_pos5;\\n\\tlocalPos.xyz += morph_weights_b[2] * morph_pos6;\\n\\tlocalPos.xyz += morph_weights_b[3] * morph_pos7;\\n\\t#endif\\n\\t#endif\\n\\t#ifdef MORPHING_TEXTURE_BASED_POSITION\\n\\tvec2 morphUV = getTextureMorphCoords();\\n\\tvec3 morphPos = texture2D(morphPositionTex, morphUV).xyz;\\n\\tlocalPos += morphPos;\\n\\t#endif\\n\\tvec4 posW = dModelMatrix * vec4(localPos, 1.0);\\n\\t#ifdef SCREENSPACE\\n\\tposW.zw = vec2(0.0, 1.0);\\n\\t#endif\\n\\tdPositionW = posW.xyz;\\n\\tvec4 screenPos;\\n\\t#ifdef UV1LAYOUT\\n\\tscreenPos = vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);\\n\\t#else\\n\\t#ifdef SCREENSPACE\\n\\tscreenPos = posW;\\n\\t#else\\n\\tscreenPos = matrix_viewProjection * posW;\\n\\t#endif\\n\\t#ifdef PIXELSNAP\\n\\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\\n\\tscreenPos.xy *= uScreenSize.xy;\\n\\tscreenPos.xy = floor(screenPos.xy);\\n\\tscreenPos.xy *= uScreenSize.zw;\\n\\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\\n\\t#endif\\n\\t#endif\\n\\treturn screenPos;\\n}\\nvec3 getWorldPosition() {\\n\\treturn dPositionW;\\n}\\n\";\n\n\tvar transformDeclVS = \"attribute vec3 vertex_position;\\nuniform mat4 matrix_model;\\nuniform mat4 matrix_viewProjection;\\nvec3 dPositionW;\\nmat4 dModelMatrix;\\n\";\n\n\tvar uv0VS = \"#ifdef NINESLICED\\nvec2 getUv0() {\\n\\tvec2 uv = vertex_position.xz;\\n\\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\\n\\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\\n\\tuv += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\\n\\tuv = uv * -0.5 + 0.5;\\n\\tuv = uv * atlasRect.zw + atlasRect.xy;\\n\\tvMask = vertex_texCoord0.xy;\\n\\treturn uv;\\n}\\n#else\\nvec2 getUv0() {\\n\\treturn vertex_texCoord0;\\n}\\n#endif\\n\";\n\n\tvar uv1VS = \"vec2 getUv1() {\\n\\treturn vertex_texCoord1;\\n}\\n\";\n\n\tvar viewDirPS = \"void getViewDir() {\\n\\tdViewDirW = normalize(view_position - vPositionW);\\n}\\n\";\n\n\tvar viewNormalVS = \"#ifndef VIEWMATRIX\\n#define VIEWMATRIX\\nuniform mat4 matrix_view;\\n#endif\\nvec3 getViewNormal() {\\n\\treturn mat3(matrix_view) * vNormalW;\\n}\\n\";\n\n\tvar shaderChunks = {\n\t\talphaTestPS: alphaTestPS,\n\t\tambientConstantPS: ambientConstantPS,\n\t\tambientPrefilteredCubePS: ambientPrefilteredCubePS,\n\t\tambientPrefilteredCubeLodPS: ambientPrefilteredCubeLodPS,\n\t\tambientSHPS: ambientSHPS,\n\t\taoPS: aoPS,\n\t\taoSpecOccPS: aoSpecOccPS,\n\t\taoSpecOccConstPS: aoSpecOccConstPS,\n\t\taoSpecOccConstSimplePS: aoSpecOccConstSimplePS,\n\t\taoSpecOccSimplePS: aoSpecOccSimplePS,\n\t\tbakeDirLmEndPS: bakeDirLmEndPS,\n\t\tbakeLmEndPS: bakeLmEndPS,\n\t\tbasePS: basePS,\n\t\tbaseVS: baseVS,\n\t\tbaseNineSlicedPS: baseNineSlicedPS,\n\t\tbaseNineSlicedVS: baseNineSlicedVS,\n\t\tbaseNineSlicedTiledPS: baseNineSlicedTiledPS,\n\t\tbiasConstPS: biasConstPS,\n\t\tblurVSMPS: blurVSMPS,\n\t\tclearCoatPS: clearCoatPS,\n\t\tclearCoatGlossPS: clearCoatGlossPS,\n\t\tclearCoatNormalPS: clearCoatNormalPS,\n\t\tcombineClearCoatPS: combineClearCoatPS,\n\t\tcombineDiffusePS: combineDiffusePS,\n\t\tcombineDiffuseSpecularPS: combineDiffuseSpecularPS,\n\t\tcombineDiffuseSpecularNoConservePS: combineDiffuseSpecularNoConservePS,\n\t\tcombineDiffuseSpecularNoReflPS: combineDiffuseSpecularNoReflPS,\n\t\tcombineDiffuseSpecularNoReflSeparateAmbientPS: combineDiffuseSpecularNoReflSeparateAmbientPS,\n\t\tcombineDiffuseSpecularOldPS: combineDiffuseSpecularOldPS,\n\t\tcookiePS: cookiePS,\n\t\tcubeMapProjectBoxPS: cubeMapProjectBoxPS,\n\t\tcubeMapProjectNonePS: cubeMapProjectNonePS,\n\t\tcubeMapRotatePS: cubeMapRotatePS,\n\t\tdetailModesPS: detailModesPS,\n\t\tdiffusePS: diffusePS,\n\t\tdiffuseDetailMapPS: diffuseDetailMapPS,\n\t\tdilatePS: dilatePS,\n\t\tdpAtlasQuadPS: dpAtlasQuadPS,\n\t\temissivePS: emissivePS,\n\t\tendPS: endPS,\n\t\tenvConstPS: envConstPS,\n\t\tenvMultiplyPS: envMultiplyPS,\n\t\textensionPS: extensionPS,\n\t\textensionVS: extensionVS,\n\t\tfalloffInvSquaredPS: falloffInvSquaredPS,\n\t\tfalloffLinearPS: falloffLinearPS,\n\t\tfixCubemapSeamsNonePS: fixCubemapSeamsNonePS,\n\t\tfixCubemapSeamsStretchPS: fixCubemapSeamsStretchPS,\n\t\tfogExpPS: fogExpPS,\n\t\tfogExp2PS: fogExp2PS,\n\t\tfogLinearPS: fogLinearPS,\n\t\tfogNonePS: fogNonePS,\n\t\tfresnelSchlickPS: fresnelSchlickPS,\n\t\tfullscreenQuadPS: fullscreenQuadPS,\n\t\tfullscreenQuadVS: fullscreenQuadVS,\n\t\tgamma1_0PS: gamma1_0PS,\n\t\tgamma2_2PS: gamma2_2PS,\n\t\tgenParaboloidPS: genParaboloidPS,\n\t\tgles3PS: gles3PS,\n\t\tgles3VS: gles3VS,\n\t\tglossPS: glossPS,\n\t\tinstancingVS: instancingVS,\n\t\tlightDiffuseLambertPS: lightDiffuseLambertPS,\n\t\tlightDirPointPS: lightDirPointPS,\n\t\tlightmapDirPS: lightmapDirPS,\n\t\tlightmapSinglePS: lightmapSinglePS,\n\t\tlightmapSingleVertPS: lightmapSingleVertPS,\n\t\tlightSpecularAnisoGGXPS: lightSpecularAnisoGGXPS,\n\t\tlightSpecularBlinnPS: lightSpecularBlinnPS,\n\t\tlightSpecularPhongPS: lightSpecularPhongPS,\n\t\tltc: ltc,\n\t\tmetalnessPS: metalnessPS,\n\t\tmsdfPS: msdfPS,\n\t\tnormalVS: normalVS,\n\t\tnormalDetailMapPS: normalDetailMapPS,\n\t\tnormalInstancedVS: normalInstancedVS,\n\t\tnormalMapPS: normalMapPS,\n\t\tnormalMapFastPS: normalMapFastPS,\n\t\tnormalSkinnedVS: normalSkinnedVS,\n\t\tnormalVertexPS: normalVertexPS,\n\t\tnormalXYPS: normalXYPS,\n\t\tnormalXYZPS: normalXYZPS,\n\t\topacityPS: opacityPS,\n\t\toutputAlphaPS: outputAlphaPS,\n\t\toutputAlphaOpaquePS: outputAlphaOpaquePS,\n\t\toutputAlphaPremulPS: outputAlphaPremulPS,\n\t\toutputCubemapPS: outputCubemapPS,\n\t\toutputTex2DPS: outputTex2DPS,\n\t\tpackDepthPS: packDepthPS,\n\t\tpackDepthMaskPS: packDepthMaskPS,\n\t\tparallaxPS: parallaxPS,\n\t\tparticlePS: particlePS,\n\t\tparticleVS: particleVS,\n\t\tparticleAnimFrameClampVS: particleAnimFrameClampVS,\n\t\tparticleAnimFrameLoopVS: particleAnimFrameLoopVS,\n\t\tparticleAnimTexVS: particleAnimTexVS,\n\t\tparticleInputFloatPS: particleInputFloatPS,\n\t\tparticleInputRgba8PS: particleInputRgba8PS,\n\t\tparticleOutputFloatPS: particleOutputFloatPS,\n\t\tparticleOutputRgba8PS: particleOutputRgba8PS,\n\t\tparticleUpdaterAABBPS: particleUpdaterAABBPS,\n\t\tparticleUpdaterEndPS: particleUpdaterEndPS,\n\t\tparticleUpdaterInitPS: particleUpdaterInitPS,\n\t\tparticleUpdaterNoRespawnPS: particleUpdaterNoRespawnPS,\n\t\tparticleUpdaterOnStopPS: particleUpdaterOnStopPS,\n\t\tparticleUpdaterRespawnPS: particleUpdaterRespawnPS,\n\t\tparticleUpdaterSpherePS: particleUpdaterSpherePS,\n\t\tparticleUpdaterStartPS: particleUpdaterStartPS,\n\t\tparticle_billboardVS: particle_billboardVS,\n\t\tparticle_blendAddPS: particle_blendAddPS,\n\t\tparticle_blendMultiplyPS: particle_blendMultiplyPS,\n\t\tparticle_blendNormalPS: particle_blendNormalPS,\n\t\tparticle_cpuVS: particle_cpuVS,\n\t\tparticle_cpu_endVS: particle_cpu_endVS,\n\t\tparticle_customFaceVS: particle_customFaceVS,\n\t\tparticle_endPS: particle_endPS,\n\t\tparticle_endVS: particle_endVS,\n\t\tparticle_halflambertPS: particle_halflambertPS,\n\t\tparticle_initVS: particle_initVS,\n\t\tparticle_lambertPS: particle_lambertPS,\n\t\tparticle_lightingPS: particle_lightingPS,\n\t\tparticle_localShiftVS: particle_localShiftVS,\n\t\tparticle_meshVS: particle_meshVS,\n\t\tparticle_normalVS: particle_normalVS,\n\t\tparticle_normalMapPS: particle_normalMapPS,\n\t\tparticle_pointAlongVS: particle_pointAlongVS,\n\t\tparticle_softPS: particle_softPS,\n\t\tparticle_softVS: particle_softVS,\n\t\tparticle_stretchVS: particle_stretchVS,\n\t\tparticle_TBNVS: particle_TBNVS,\n\t\tparticle_wrapVS: particle_wrapVS,\n\t\tprecisionTestPS: precisionTestPS,\n\t\tprecisionTest2PS: precisionTest2PS,\n\t\tprefilterCubemapPS: prefilterCubemapPS,\n\t\treflDirPS: reflDirPS,\n\t\treflDirAnisoPS: reflDirAnisoPS,\n\t\treflectionCCPS: reflectionCCPS,\n\t\treflectionCubePS: reflectionCubePS,\n\t\treflectionDpAtlasPS: reflectionDpAtlasPS,\n\t\treflectionPrefilteredCubePS: reflectionPrefilteredCubePS,\n\t\treflectionPrefilteredCubeLodPS: reflectionPrefilteredCubeLodPS,\n\t\treflectionSpherePS: reflectionSpherePS,\n\t\treflectionSphereLowPS: reflectionSphereLowPS,\n\t\trefractionPS: refractionPS,\n\t\treprojectPS: reprojectPS,\n\t\trgbmPS: rgbmPS,\n\t\tscreenDepthPS: screenDepthPS,\n\t\tshadowCommonPS: shadowCommonPS,\n\t\tshadowCoordPS: shadowCoordPS,\n\t\tshadowCoordVS: shadowCoordVS,\n\t\tshadowCoordPerspZbufferPS: shadowCoordPerspZbufferPS,\n\t\tshadowEVSMPS: shadowEVSMPS,\n\t\tshadowEVSMnPS: shadowEVSMnPS,\n\t\tshadowStandardPS: shadowStandardPS,\n\t\tshadowStandardGL2PS: shadowStandardGL2PS,\n\t\tshadowStandardGL2VSPS: shadowStandardGL2VSPS,\n\t\tshadowStandardVSPS: shadowStandardVSPS,\n\t\tshadowVSM8PS: shadowVSM8PS,\n\t\tshadowVSMVSPS: shadowVSMVSPS,\n\t\tshadowVSM_commonPS: shadowVSM_commonPS,\n\t\tskinBatchConstVS: skinBatchConstVS,\n\t\tskinBatchTexVS: skinBatchTexVS,\n\t\tskinConstVS: skinConstVS,\n\t\tskinTexVS: skinTexVS,\n\t\tskyboxPS: skyboxPS,\n\t\tskyboxVS: skyboxVS,\n\t\tskyboxHDRPS: skyboxHDRPS,\n\t\tskyboxPrefilteredCubePS: skyboxPrefilteredCubePS,\n\t\tspecularPS: specularPS,\n\t\tspecularAaNonePS: specularAaNonePS,\n\t\tspecularAaToksvigPS: specularAaToksvigPS,\n\t\tspecularAaToksvigFastPS: specularAaToksvigFastPS,\n\t\tspotPS: spotPS,\n\t\tstartPS: startPS,\n\t\tstartVS: startVS,\n\t\tstartNineSlicedPS: startNineSlicedPS,\n\t\tstartNineSlicedTiledPS: startNineSlicedTiledPS,\n\t\tstoreEVSMPS: storeEVSMPS,\n\t\ttangentBinormalVS: tangentBinormalVS,\n\t\tTBNPS: TBNPS,\n\t\tTBNderivativePS: TBNderivativePS,\n\t\tTBNfastPS: TBNfastPS,\n\t\tTBNObjectSpacePS: TBNObjectSpacePS,\n\t\ttonemappingAcesPS: tonemappingAcesPS,\n\t\ttonemappingAces2PS: tonemappingAces2PS,\n\t\ttonemappingFilmicPS: tonemappingFilmicPS,\n\t\ttonemappingHejlPS: tonemappingHejlPS,\n\t\ttonemappingLinearPS: tonemappingLinearPS,\n\t\ttonemappingNonePS: tonemappingNonePS,\n\t\ttransformVS: transformVS,\n\t\ttransformDeclVS: transformDeclVS,\n\t\tuv0VS: uv0VS,\n\t\tuv1VS: uv1VS,\n\t\tviewDirPS: viewDirPS,\n\t\tviewNormalVS: viewNormalVS\n\t};\n\n\tvar BLEND_SUBTRACTIVE = 0;\n\tvar BLEND_ADDITIVE = 1;\n\tvar BLEND_NORMAL = 2;\n\tvar BLEND_NONE = 3;\n\tvar BLEND_PREMULTIPLIED = 4;\n\tvar BLEND_MULTIPLICATIVE = 5;\n\tvar BLEND_ADDITIVEALPHA = 6;\n\tvar BLEND_MULTIPLICATIVE2X = 7;\n\tvar BLEND_SCREEN = 8;\n\tvar BLEND_MIN = 9;\n\tvar BLEND_MAX = 10;\n\tvar FOG_NONE = 'none';\n\tvar FOG_LINEAR = 'linear';\n\tvar FOG_EXP = 'exp';\n\tvar FOG_EXP2 = 'exp2';\n\tvar FRESNEL_NONE = 0;\n\tvar FRESNEL_SCHLICK = 2;\n\tvar LAYER_HUD = 0;\n\tvar LAYER_GIZMO = 1;\n\tvar LAYER_FX = 2;\n\tvar LAYER_WORLD = 15;\n\tvar LAYERID_WORLD = 0;\n\tvar LAYERID_DEPTH = 1;\n\tvar LAYERID_SKYBOX = 2;\n\tvar LAYERID_IMMEDIATE = 3;\n\tvar LAYERID_UI = 4;\n\tvar LIGHTTYPE_DIRECTIONAL = 0;\n\tvar LIGHTTYPE_OMNI = 1;\n\tvar LIGHTTYPE_POINT = LIGHTTYPE_OMNI;\n\tvar LIGHTTYPE_SPOT = 2;\n\tvar LIGHTSHAPE_PUNCTUAL = 0;\n\tvar LIGHTSHAPE_RECT = 1;\n\tvar LIGHTSHAPE_DISK = 2;\n\tvar LIGHTSHAPE_SPHERE = 3;\n\tvar LIGHTFALLOFF_LINEAR = 0;\n\tvar LIGHTFALLOFF_INVERSESQUARED = 1;\n\tvar SHADOW_PCF3 = 0;\n\tvar SHADOW_DEPTH = 0;\n\tvar SHADOW_VSM8 = 1;\n\tvar SHADOW_VSM16 = 2;\n\tvar SHADOW_VSM32 = 3;\n\tvar SHADOW_PCF5 = 4;\n\tvar BLUR_BOX = 0;\n\tvar BLUR_GAUSSIAN = 1;\n\tvar PARTICLESORT_NONE = 0;\n\tvar PARTICLESORT_DISTANCE = 1;\n\tvar PARTICLESORT_NEWER_FIRST = 2;\n\tvar PARTICLESORT_OLDER_FIRST = 3;\n\tvar PARTICLEMODE_GPU = 0;\n\tvar PARTICLEMODE_CPU = 1;\n\tvar EMITTERSHAPE_BOX = 0;\n\tvar EMITTERSHAPE_SPHERE = 1;\n\tvar PARTICLEORIENTATION_SCREEN = 0;\n\tvar PARTICLEORIENTATION_WORLD = 1;\n\tvar PARTICLEORIENTATION_EMITTER = 2;\n\tvar PROJECTION_PERSPECTIVE = 0;\n\tvar PROJECTION_ORTHOGRAPHIC = 1;\n\tvar RENDERSTYLE_SOLID = 0;\n\tvar RENDERSTYLE_WIREFRAME = 1;\n\tvar RENDERSTYLE_POINTS = 2;\n\tvar CUBEPROJ_NONE = 0;\n\tvar CUBEPROJ_BOX = 1;\n\tvar SPECULAR_PHONG = 0;\n\tvar SPECULAR_BLINN = 1;\n\tvar DETAILMODE_MUL = 'mul';\n\tvar DETAILMODE_ADD = 'add';\n\tvar DETAILMODE_SCREEN = 'screen';\n\tvar DETAILMODE_OVERLAY = 'overlay';\n\tvar DETAILMODE_MIN = 'min';\n\tvar DETAILMODE_MAX = 'max';\n\tvar GAMMA_NONE = 0;\n\tvar GAMMA_SRGB = 1;\n\tvar GAMMA_SRGBFAST = 2;\n\tvar GAMMA_SRGBHDR = 3;\n\tvar TONEMAP_LINEAR = 0;\n\tvar TONEMAP_FILMIC = 1;\n\tvar TONEMAP_HEJL = 2;\n\tvar TONEMAP_ACES = 3;\n\tvar TONEMAP_ACES2 = 4;\n\tvar SPECOCC_NONE = 0;\n\tvar SPECOCC_AO = 1;\n\tvar SPECOCC_GLOSSDEPENDENT = 2;\n\tvar SHADERDEF_NOSHADOW = 1;\n\tvar SHADERDEF_SKIN = 2;\n\tvar SHADERDEF_UV0 = 4;\n\tvar SHADERDEF_UV1 = 8;\n\tvar SHADERDEF_VCOLOR = 16;\n\tvar SHADERDEF_INSTANCING = 32;\n\tvar SHADERDEF_LM = 64;\n\tvar SHADERDEF_DIRLM = 128;\n\tvar SHADERDEF_SCREENSPACE = 256;\n\tvar SHADERDEF_TANGENTS = 512;\n\tvar SHADERDEF_MORPH_POSITION = 1024;\n\tvar SHADERDEF_MORPH_NORMAL = 2048;\n\tvar SHADERDEF_MORPH_TEXTURE_BASED = 4096;\n\tvar LINEBATCH_WORLD = 0;\n\tvar LINEBATCH_OVERLAY = 1;\n\tvar LINEBATCH_GIZMO = 2;\n\tvar SHADOWUPDATE_NONE = 0;\n\tvar SHADOWUPDATE_THISFRAME = 1;\n\tvar SHADOWUPDATE_REALTIME = 2;\n\tvar SORTKEY_FORWARD = 0;\n\tvar SORTKEY_DEPTH = 1;\n\tvar MASK_DYNAMIC = 1;\n\tvar MASK_BAKED = 2;\n\tvar MASK_LIGHTMAP = 4;\n\tvar SHADER_FORWARD = 0;\n\tvar SHADER_FORWARDHDR = 1;\n\tvar SHADER_DEPTH = 2;\n\tvar SHADER_SHADOW = 3;\n\tvar SHADER_PICK = 18;\n\tvar SPRITE_RENDERMODE_SIMPLE = 0;\n\tvar SPRITE_RENDERMODE_SLICED = 1;\n\tvar SPRITE_RENDERMODE_TILED = 2;\n\tvar BAKE_COLOR = 0;\n\tvar BAKE_COLORDIR = 1;\n\tvar VIEW_CENTER = 0;\n\tvar VIEW_LEFT = 1;\n\tvar VIEW_RIGHT = 2;\n\tvar SORTMODE_NONE = 0;\n\tvar SORTMODE_MANUAL = 1;\n\tvar SORTMODE_MATERIALMESH = 2;\n\tvar SORTMODE_BACK2FRONT = 3;\n\tvar SORTMODE_FRONT2BACK = 4;\n\tvar SORTMODE_CUSTOM = 5;\n\tvar COMPUPDATED_INSTANCES = 1;\n\tvar COMPUPDATED_LIGHTS = 2;\n\tvar COMPUPDATED_CAMERAS = 4;\n\tvar COMPUPDATED_BLEND = 8;\n\tvar ASPECT_AUTO = 0;\n\tvar ASPECT_MANUAL = 1;\n\tvar ORIENTATION_HORIZONTAL = 0;\n\tvar ORIENTATION_VERTICAL = 1;\n\n\tfunction gammaCode(value, chunks) {\n\t\tif (!chunks) chunks = shaderChunks;\n\n\t\tif (value === GAMMA_SRGB || value === GAMMA_SRGBFAST) {\n\t\t\treturn chunks.gamma2_2PS ? chunks.gamma2_2PS : shaderChunks.gamma2_2PS;\n\t\t} else if (value === GAMMA_SRGBHDR) {\n\t\t\treturn \"#define HDR\\n\" + (chunks.gamma2_2PS ? chunks.gamma2_2PS : shaderChunks.gamma2_2PS);\n\t\t}\n\n\t\treturn chunks.gamma1_0PS ? chunks.gamma1_0PS : shaderChunks.gamma1_0PS;\n\t}\n\n\tfunction tonemapCode(value, chunks) {\n\t\tif (!chunks) chunks = shaderChunks;\n\n\t\tif (value === TONEMAP_FILMIC) {\n\t\t\treturn chunks.tonemappingFilmicPS ? chunks.tonemappingFilmicPS : shaderChunks.tonemappingFilmicPS;\n\t\t} else if (value === TONEMAP_LINEAR) {\n\t\t\treturn chunks.tonemappingLinearPS ? chunks.tonemappingLinearPS : shaderChunks.tonemappingLinearPS;\n\t\t} else if (value === TONEMAP_HEJL) {\n\t\t\treturn chunks.tonemappingHejlPS ? chunks.tonemappingHejlPS : shaderChunks.tonemappingHejlPS;\n\t\t} else if (value === TONEMAP_ACES) {\n\t\t\treturn chunks.tonemappingAcesPS ? chunks.tonemappingAcesPS : shaderChunks.tonemappingAcesPS;\n\t\t} else if (value === TONEMAP_ACES2) {\n\t\t\treturn chunks.tonemappingAces2PS ? chunks.tonemappingAces2PS : shaderChunks.tonemappingAces2PS;\n\t\t}\n\n\t\treturn chunks.tonemapingNonePS ? chunks.tonemapingNonePS : shaderChunks.tonemappingNonePS;\n\t}\n\n\tfunction fogCode(value, chunks) {\n\t\tif (!chunks) chunks = shaderChunks;\n\n\t\tif (value === 'linear') {\n\t\t\treturn chunks.fogLinearPS ? chunks.fogLinearPS : shaderChunks.fogLinearPS;\n\t\t} else if (value === 'exp') {\n\t\t\treturn chunks.fogExpPS ? chunks.fogExpPS : shaderChunks.fogExpPS;\n\t\t} else if (value === 'exp2') {\n\t\t\treturn chunks.fogExp2PS ? chunks.fogExp2PS : shaderChunks.fogExp2PS;\n\t\t}\n\n\t\treturn chunks.fogNonePS ? chunks.fogNonePS : shaderChunks.fogNonePS;\n\t}\n\n\tfunction skinCode(device, chunks) {\n\t\tif (!chunks) chunks = shaderChunks;\n\n\t\tif (device.supportsBoneTextures) {\n\t\t\treturn chunks.skinTexVS;\n\t\t}\n\n\t\treturn \"#define BONE_LIMIT \" + device.getBoneLimit() + \"\\n\" + chunks.skinConstVS;\n\t}\n\n\tfunction precisionCode(device) {\n\t\tvar pcode = 'precision ' + device.precision + ' float;\\n';\n\n\t\tif (device.webgl2) {\n\t\t\tpcode += '#ifdef GL2\\nprecision ' + device.precision + ' sampler2DShadow;\\n#endif\\n';\n\t\t}\n\n\t\treturn pcode;\n\t}\n\n\tfunction versionCode(device) {\n\t\treturn device.webgl2 ? \"#version 300 es\\n\" : \"\";\n\t}\n\n\tfunction dummyFragmentCode() {\n\t\treturn \"void main(void) {gl_FragColor = vec4(0.0);}\";\n\t}\n\n\tfunction begin() {\n\t\treturn 'void main(void)\\n{\\n';\n\t}\n\n\tfunction end() {\n\t\treturn '}\\n';\n\t}\n\n\tvar attrib2Semantic = {\n\t\tvertex_position: SEMANTIC_POSITION,\n\t\tvertex_normal: SEMANTIC_NORMAL,\n\t\tvertex_tangent: SEMANTIC_TANGENT,\n\t\tvertex_texCoord0: SEMANTIC_TEXCOORD0,\n\t\tvertex_texCoord1: SEMANTIC_TEXCOORD1,\n\t\tvertex_texCoord2: SEMANTIC_TEXCOORD2,\n\t\tvertex_texCoord3: SEMANTIC_TEXCOORD3,\n\t\tvertex_texCoord4: SEMANTIC_TEXCOORD4,\n\t\tvertex_texCoord5: SEMANTIC_TEXCOORD5,\n\t\tvertex_texCoord6: SEMANTIC_TEXCOORD6,\n\t\tvertex_texCoord7: SEMANTIC_TEXCOORD7,\n\t\tvertex_color: SEMANTIC_COLOR,\n\t\tvertex_boneIndices: SEMANTIC_BLENDINDICES,\n\t\tvertex_boneWeights: SEMANTIC_BLENDWEIGHT\n\t};\n\n\tfunction collectAttribs(vsCode) {\n\t\tvar attribs = {};\n\t\tvar attrs = 0;\n\t\tvar found = vsCode.indexOf(\"attribute\");\n\n\t\twhile (found >= 0) {\n\t\t\tif (found > 0 && vsCode[found - 1] === \"/\") break;\n\t\t\tvar endOfLine = vsCode.indexOf(';', found);\n\t\t\tvar startOfAttribName = vsCode.lastIndexOf(' ', endOfLine);\n\t\t\tvar attribName = vsCode.substr(startOfAttribName + 1, endOfLine - (startOfAttribName + 1));\n\t\t\tvar semantic = attrib2Semantic[attribName];\n\n\t\t\tif (semantic !== undefined) {\n\t\t\t\tattribs[attribName] = semantic;\n\t\t\t} else {\n\t\t\t\tattribs[attribName] = \"ATTR\" + attrs;\n\t\t\t\tattrs++;\n\t\t\t}\n\n\t\t\tfound = vsCode.indexOf(\"attribute\", found + 1);\n\t\t}\n\n\t\treturn attribs;\n\t}\n\n\tfunction createShader(device, vsName, psName, useTransformFeedback) {\n\t\tvar vsCode = shaderChunks[vsName];\n\t\tvar psCode = precisionCode(device) + \"\\n\" + shaderChunks[psName];\n\t\tvar attribs = collectAttribs(vsCode);\n\n\t\tif (device.webgl2) {\n\t\t\tvsCode = versionCode(device) + shaderChunks.gles3VS + vsCode;\n\t\t\tpsCode = versionCode(device) + shaderChunks.gles3PS + psCode;\n\t\t}\n\n\t\treturn new Shader(device, {\n\t\t\tattributes: attribs,\n\t\t\tvshader: vsCode,\n\t\t\tfshader: psCode,\n\t\t\tuseTransformFeedback: useTransformFeedback\n\t\t});\n\t}\n\n\tfunction createShaderFromCode(device, vsCode, psCode, uName, useTransformFeedback, psPreamble) {\n\t\tvar shaderCache = device.programLib._cache;\n\t\tvar cached = shaderCache[uName];\n\t\tif (cached !== undefined) return cached;\n\t\tpsCode = precisionCode(device) + \"\\n\" + (psCode || dummyFragmentCode());\n\t\tvar attribs = collectAttribs(vsCode);\n\n\t\tif (device.webgl2) {\n\t\t\tvsCode = versionCode(device) + shaderChunks.gles3VS + vsCode;\n\t\t\tpsCode = versionCode(device) + shaderChunks.gles3PS + psCode;\n\t\t}\n\n\t\tshaderCache[uName] = new Shader(device, {\n\t\t\tattributes: attribs,\n\t\t\tvshader: vsCode,\n\t\t\tfshader: (psPreamble ? psPreamble : \"\") + psCode,\n\t\t\tuseTransformFeedback: useTransformFeedback\n\t\t});\n\t\treturn shaderCache[uName];\n\t}\n\n\tshaderChunks.collectAttribs = collectAttribs;\n\tshaderChunks.createShader = createShader;\n\tshaderChunks.createShaderFromCode = createShaderFromCode;\n\n\tvar basic = {\n\t\tgenerateKey: function generateKey(options) {\n\t\t\tvar key = 'basic';\n\t\t\tif (options.fog) key += '_fog';\n\t\t\tif (options.alphaTest) key += '_atst';\n\t\t\tif (options.vertexColors) key += '_vcol';\n\t\t\tif (options.diffuseMap) key += '_diff';\n\t\t\tkey += '_' + options.pass;\n\t\t\treturn key;\n\t\t},\n\t\tcreateShaderDefinition: function createShaderDefinition(device, options) {\n\t\t\tvar attributes = {\n\t\t\t\tvertex_position: SEMANTIC_POSITION\n\t\t\t};\n\n\t\t\tif (options.skin) {\n\t\t\t\tattributes.vertex_boneWeights = SEMANTIC_BLENDWEIGHT;\n\t\t\t\tattributes.vertex_boneIndices = SEMANTIC_BLENDINDICES;\n\t\t\t}\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tattributes.vertex_color = SEMANTIC_COLOR;\n\t\t\t}\n\n\t\t\tif (options.diffuseMap) {\n\t\t\t\tattributes.vertex_texCoord0 = SEMANTIC_TEXCOORD0;\n\t\t\t}\n\n\t\t\tvar code = '';\n\t\t\tcode += shaderChunks.transformDeclVS;\n\n\t\t\tif (options.skin) {\n\t\t\t\tcode += skinCode(device);\n\t\t\t\tcode += shaderChunks.transformSkinnedVS;\n\t\t\t} else {\n\t\t\t\tcode += shaderChunks.transformVS;\n\t\t\t}\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tcode += 'attribute vec4 vertex_color;\\n';\n\t\t\t\tcode += 'varying vec4 vColor;\\n';\n\t\t\t}\n\n\t\t\tif (options.diffuseMap) {\n\t\t\t\tcode += 'attribute vec2 vertex_texCoord0;\\n';\n\t\t\t\tcode += 'varying vec2 vUv0;\\n';\n\t\t\t}\n\n\t\t\tif (options.pass === SHADER_DEPTH) {\n\t\t\t\tcode += 'varying float vDepth;\\n';\n\t\t\t\tcode += '#ifndef VIEWMATRIX\\n';\n\t\t\t\tcode += '#define VIEWMATRIX\\n';\n\t\t\t\tcode += 'uniform mat4 matrix_view;\\n';\n\t\t\t\tcode += '#endif\\n';\n\t\t\t\tcode += '#ifndef CAMERAPLANES\\n';\n\t\t\t\tcode += '#define CAMERAPLANES\\n';\n\t\t\t\tcode += 'uniform vec4 camera_params;\\n\\n';\n\t\t\t\tcode += '#endif\\n';\n\t\t\t}\n\n\t\t\tcode += begin();\n\t\t\tcode += \"\t gl_Position = getPosition();\\n\";\n\n\t\t\tif (options.pass === SHADER_DEPTH) {\n\t\t\t\tcode += \"\t\tvDepth = -(matrix_view * vec4(getWorldPosition(),1.0)).z * camera_params.x;\\n\";\n\t\t\t}\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tcode += '\t\tvColor = vertex_color;\\n';\n\t\t\t}\n\n\t\t\tif (options.diffuseMap) {\n\t\t\t\tcode += '\t\tvUv0 = vertex_texCoord0;\\n';\n\t\t\t}\n\n\t\t\tcode += end();\n\t\t\tvar vshader = code;\n\t\t\tcode = precisionCode(device);\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tcode += 'varying vec4 vColor;\\n';\n\t\t\t} else {\n\t\t\t\tcode += 'uniform vec4 uColor;\\n';\n\t\t\t}\n\n\t\t\tif (options.diffuseMap) {\n\t\t\t\tcode += 'varying vec2 vUv0;\\n';\n\t\t\t\tcode += 'uniform sampler2D texture_diffuseMap;\\n';\n\t\t\t}\n\n\t\t\tif (options.fog) {\n\t\t\t\tcode += fogCode(options.fog);\n\t\t\t}\n\n\t\t\tif (options.alphatest) {\n\t\t\t\tcode += shaderChunks.alphaTestPS;\n\t\t\t}\n\n\t\t\tif (options.pass === SHADER_DEPTH) {\n\t\t\t\tcode += 'varying float vDepth;\\n';\n\t\t\t\tcode += shaderChunks.packDepthPS;\n\t\t\t}\n\n\t\t\tcode += begin();\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tcode += '\t\tgl_FragColor = vColor;\\n';\n\t\t\t} else {\n\t\t\t\tcode += '\t\tgl_FragColor = uColor;\\n';\n\t\t\t}\n\n\t\t\tif (options.diffuseMap) {\n\t\t\t\tcode += '\t\tgl_FragColor *= texture2D(texture_diffuseMap, vUv0);\\n';\n\t\t\t}\n\n\t\t\tif (options.alphatest) {\n\t\t\t\tcode += \"\t alphaTest(gl_FragColor.a);\\n\";\n\t\t\t}\n\n\t\t\tif (options.pass !== SHADER_PICK) {\n\t\t\t\tif (options.pass === SHADER_DEPTH) {\n\t\t\t\t\tcode += \"\t\tgl_FragColor = packFloat(vDepth);\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tif (options.fog) {\n\t\t\t\t\t\tcode += \"\t glFragColor.rgb = addFog(gl_FragColor.rgb);\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode += end();\n\t\t\tvar fshader = code;\n\t\t\treturn {\n\t\t\t\tattributes: attributes,\n\t\t\t\tvshader: vshader,\n\t\t\t\tfshader: fshader\n\t\t\t};\n\t\t}\n\t};\n\n\tvar particle = {\n\t\tgenerateKey: function generateKey(options) {\n\t\t\tvar key = \"particle\";\n\n\t\t\tfor (var prop in options) {\n\t\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\t\tkey += options[prop];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn key;\n\t\t},\n\t\t_animTex: function _animTex(options) {\n\t\t\tvar vshader = \"\";\n\t\t\tvshader += options.animTexLoop ? shaderChunks.particleAnimFrameLoopVS : shaderChunks.particleAnimFrameClampVS;\n\t\t\tvshader += shaderChunks.particleAnimTexVS;\n\t\t\treturn vshader;\n\t\t},\n\t\tcreateShaderDefinition: function createShaderDefinition(device, options) {\n\t\t\tvar vshader = \"\";\n\t\t\tvar fshader = precisionCode(device) + \"\\n\";\n\t\t\tfshader += '#define PARTICLE\\n';\n\n\t\t\tif (device.webgl2) {\n\t\t\t\tvshader += \"#define GL2\\n\";\n\t\t\t\tfshader += \"#define GL2\\n\";\n\t\t\t}\n\n\t\t\tvshader += \"#define VERTEXSHADER\\n\";\n\t\t\tif (options.mesh) vshader += \"#define USE_MESH\\n\";\n\t\t\tif (options.localSpace) vshader += \"#define LOCAL_SPACE\\n\";\n\t\t\tif (options.screenSpace) vshader += \"#define SCREEN_SPACE\\n\";\n\t\t\tif (options.animTex) vshader += \"\\nuniform vec2 animTexTilesParams;\\n\";\n\t\t\tif (options.animTex) vshader += \"\\nuniform vec4 animTexParams;\\n\";\n\t\t\tif (options.animTex) vshader += \"\\nuniform vec2 animTexIndexParams;\\n\";\n\t\t\tif (options.normal == 2) vshader += \"\\nvarying mat3 ParticleMat;\\n\";\n\t\t\tif (options.normal == 1) vshader += \"\\nvarying vec3 Normal;\\n\";\n\t\t\tif (options.soft) vshader += \"\\nvarying float vDepth;\\n\";\n\t\t\tvar faceVS = options.customFace ? shaderChunks.particle_customFaceVS : shaderChunks.particle_billboardVS;\n\n\t\t\tif (!options.useCpu) {\n\t\t\t\tvshader += shaderChunks.particle_initVS;\n\t\t\t\tvshader += options.pack8 ? shaderChunks.particleInputRgba8PS : shaderChunks.particleInputFloatPS;\n\t\t\t\tif (options.soft > 0) vshader += shaderChunks.screenDepthPS;\n\t\t\t\tvshader += shaderChunks.particleVS;\n\t\t\t\tif (options.localSpace) vshader += shaderChunks.particle_localShiftVS;\n\t\t\t\tif (options.animTex) vshader += this._animTex(options);\n\t\t\t\tif (options.wrap) vshader += shaderChunks.particle_wrapVS;\n\t\t\t\tif (options.alignToMotion) vshader += shaderChunks.particle_pointAlongVS;\n\t\t\t\tvshader += options.mesh ? shaderChunks.particle_meshVS : faceVS;\n\t\t\t\tif (options.normal == 1) vshader += shaderChunks.particle_normalVS;\n\t\t\t\tif (options.normal == 2) vshader += shaderChunks.particle_TBNVS;\n\t\t\t\tif (options.stretch > 0.0) vshader += shaderChunks.particle_stretchVS;\n\t\t\t\tvshader += shaderChunks.particle_endVS;\n\t\t\t\tif (options.soft > 0) vshader += shaderChunks.particle_softVS;\n\t\t\t} else {\n\t\t\t\tif (options.soft > 0) vshader += shaderChunks.screenDepthPS;\n\t\t\t\tvshader += shaderChunks.particle_cpuVS;\n\t\t\t\tif (options.localSpace) vshader += shaderChunks.particle_localShiftVS;\n\t\t\t\tif (options.animTex) vshader += this._animTex(options);\n\t\t\t\tif (options.alignToMotion) vshader += shaderChunks.particle_pointAlongVS;\n\t\t\t\tvshader += options.mesh ? shaderChunks.particle_meshVS : faceVS;\n\t\t\t\tif (options.normal == 1) vshader += shaderChunks.particle_normalVS;\n\t\t\t\tif (options.normal == 2) vshader += shaderChunks.particle_TBNVS;\n\t\t\t\tif (options.stretch > 0.0) vshader += shaderChunks.particle_stretchVS;\n\t\t\t\tvshader += shaderChunks.particle_cpu_endVS;\n\t\t\t\tif (options.soft > 0) vshader += shaderChunks.particle_softVS;\n\t\t\t}\n\n\t\t\tvshader += \"}\\n\";\n\n\t\t\tif (options.normal > 0) {\n\t\t\t\tif (options.normal == 1) {\n\t\t\t\t\tfshader += \"\\nvarying vec3 Normal;\\n\";\n\t\t\t\t} else if (options.normal == 2) {\n\t\t\t\t\tfshader += \"\\nvarying mat3 ParticleMat;\\n\";\n\t\t\t\t}\n\n\t\t\t\tfshader += \"\\nuniform vec3 lightCube[6];\\n\";\n\t\t\t}\n\n\t\t\tif (options.soft) fshader += \"\\nvarying float vDepth;\\n\";\n\t\t\tif (options.normal === 0 && options.fog === \"none\") options.srgb = false;\n\t\t\tfshader += gammaCode(options.gamma);\n\t\t\tfshader += tonemapCode(options.toneMap);\n\n\t\t\tif (options.fog === 'linear') {\n\t\t\t\tfshader += shaderChunks.fogLinearPS;\n\t\t\t} else if (options.fog === 'exp') {\n\t\t\t\tfshader += shaderChunks.fogExpPS;\n\t\t\t} else if (options.fog === 'exp2') {\n\t\t\t\tfshader += shaderChunks.fogExp2PS;\n\t\t\t} else {\n\t\t\t\tfshader += shaderChunks.fogNonePS;\n\t\t\t}\n\n\t\t\tif (options.normal == 2) fshader += \"\\nuniform sampler2D normalMap;\\n\";\n\t\t\tif (options.soft > 0) fshader += shaderChunks.screenDepthPS;\n\t\t\tfshader += shaderChunks.particlePS;\n\t\t\tif (options.soft > 0) fshader += shaderChunks.particle_softPS;\n\t\t\tif (options.normal == 1) fshader += \"\\nvec3 normal = Normal;\\n\";\n\t\t\tif (options.normal == 2) fshader += shaderChunks.particle_normalMapPS;\n\t\t\tif (options.normal > 0) fshader += options.halflambert ? shaderChunks.particle_halflambertPS : shaderChunks.particle_lambertPS;\n\t\t\tif (options.normal > 0) fshader += shaderChunks.particle_lightingPS;\n\n\t\t\tif (options.blend == BLEND_NORMAL) {\n\t\t\t\tfshader += shaderChunks.particle_blendNormalPS;\n\t\t\t} else if (options.blend == BLEND_ADDITIVE) {\n\t\t\t\tfshader += shaderChunks.particle_blendAddPS;\n\t\t\t} else if (options.blend == BLEND_MULTIPLICATIVE) {\n\t\t\t\tfshader += shaderChunks.particle_blendMultiplyPS;\n\t\t\t}\n\n\t\t\tfshader += shaderChunks.particle_endPS;\n\t\t\tvar attributes = collectAttribs(vshader);\n\t\t\treturn {\n\t\t\t\tattributes: attributes,\n\t\t\t\tvshader: vshader,\n\t\t\t\tfshader: fshader\n\t\t\t};\n\t\t}\n\t};\n\n\tvar skybox = {\n\t\tgenerateKey: function generateKey(options) {\n\t\t\tvar key = \"skybox\" + options.rgbm + \" \" + options.hdr + \" \" + options.fixSeams + \"\" + options.toneMapping + \"\" + options.gamma + \"\" + options.useIntensity + \"\" + options.useCubeMapRotation + \"\" + options.useRightHandedCubeMap + \"\" + options.mip;\n\t\t\treturn key;\n\t\t},\n\t\tcreateShaderDefinition: function createShaderDefinition(device, options) {\n\t\t\tvar mip2size = [128, 64, 32, 16, 8, 4, 2];\n\t\t\tvar fshader;\n\t\t\tfshader = precisionCode(device);\n\t\t\tfshader += options.useCubeMapRotation ? '#define CUBEMAP_ROTATION\\n' : '';\n\t\t\tfshader += options.useRightHandedCubeMap ? '#define RIGHT_HANDED_CUBEMAP\\n' : '';\n\t\t\tfshader += options.mip ? shaderChunks.fixCubemapSeamsStretchPS : shaderChunks.fixCubemapSeamsNonePS;\n\t\t\tfshader += options.useIntensity ? shaderChunks.envMultiplyPS : shaderChunks.envConstPS;\n\t\t\tfshader += gammaCode(options.gamma);\n\t\t\tfshader += tonemapCode(options.toneMapping);\n\t\t\tfshader += shaderChunks.rgbmPS;\n\t\t\tfshader += shaderChunks.skyboxHDRPS.replace(/\\$textureCubeSAMPLE/g, options.rgbm ? \"textureCubeRGBM\" : options.hdr ? \"textureCube\" : \"textureCubeSRGB\").replace(/\\$FIXCONST/g, 1 - 1 / mip2size[options.mip] + \"\");\n\t\t\treturn {\n\t\t\t\tattributes: {\n\t\t\t\t\taPosition: SEMANTIC_POSITION\n\t\t\t\t},\n\t\t\t\tvshader: shaderChunks.skyboxVS,\n\t\t\t\tfshader: fshader\n\t\t\t};\n\t\t}\n\t};\n\n\tvar _oldChunkFloat = function _oldChunkFloat(s, o, p) {\n\n\t\treturn \"\\n#ifdef MAPFLOAT\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkColor = function _oldChunkColor(s, o, p) {\n\n\t\treturn \"\\n#ifdef MAPCOLOR\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTex = function _oldChunkTex(s, o, p) {\n\n\t\treturn \"\\n#ifdef MAPTEXTURE\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTexColor = function _oldChunkTexColor(s, o, p) {\n\n\t\treturn \"#undef MAPTEXTURECOLOR\\n#ifdef MAPTEXTURE\\n#ifdef MAPCOLOR\\n#define MAPTEXTURECOLOR\\n#endif\\n#endif\\n\" + \"#ifdef MAPTEXTURECOLOR\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTexFloat = function _oldChunkTexFloat(s, o, p) {\n\n\t\treturn \"#undef MAPTEXTUREFLOAT\\n#ifdef MAPTEXTURE\\n#ifdef MAPFLOAT\\n#define MAPTEXTUREFLOAT\\n#endif\\n#endif\\n\" + \"#ifdef MAPTEXTUREFLOAT\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkVert = function _oldChunkVert(s, o, p) {\n\n\t\treturn \"\\n#ifdef MAPVERTEX\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkVertColor = function _oldChunkVertColor(s, o, p) {\n\n\t\treturn \"#undef MAPVERTEXCOLOR\\n#ifdef MAPVERTEX\\n#ifdef MAPCOLOR\\n#define MAPVERTEXCOLOR\\n#endif\\n#endif\\n\" + \"#ifdef MAPVERTEXCOLOR\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkVertFloat = function _oldChunkVertFloat(s, o, p) {\n\n\t\treturn \"#undef MAPVERTEXFLOAT\\n#ifdef MAPVERTEX\\n#ifdef MAPFLOAT\\n#define MAPVERTEXFLOAT\\n#endif\\n#endif\\n\" + \"#ifdef MAPVERTEXFLOAT\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformSkin = function _oldChunkTransformSkin(s, o, p) {\n\n\t\treturn \"\\n#ifdef SKIN\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformDynbatch = function _oldChunkTransformDynbatch(s, o, p) {\n\n\t\treturn \"\\n#ifdef DYNAMICBATCH\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformInstanced = function _oldChunkTransformInstanced(s, o, p) {\n\n\t\treturn \"\\n#ifdef INSTANCING\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformPixelSnap = function _oldChunkTransformPixelSnap(s, o, p) {\n\n\t\treturn \"\\n#ifdef PIXELSNAP\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformScreenSpace = function _oldChunkTransformScreenSpace(s, o, p) {\n\n\t\treturn \"\\n#ifdef SCREENSPACE\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformScreenSpaceBatch = function _oldChunkTransformScreenSpaceBatch(s, o, p) {\n\n\t\treturn \"#undef SCREENSPACEBATCH\\n#ifdef SCREENSPACE\\n#ifdef BATCH\\n#define SCREENSPACEBATCH\\n#endif\\n#endif\\n\" + \"#ifdef SCREENSPACEBATCH\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _oldChunkTransformUv1 = function _oldChunkTransformUv1(s, o, p) {\n\n\t\treturn \"\\n#ifdef UV1LAYOUT\\n\" + s + \"\\n#else\\n\" + shaderChunks[o] + \"\\n#endif\\n\";\n\t};\n\n\tvar _matTex2D = [];\n\tvar standard = {\n\t\t_oldChunkToNew: {\n\t\t\taoTexPS: {\n\t\t\t\tn: \"aoPS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\taoVertPS: {\n\t\t\t\tn: \"aoPS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\tdiffuseConstPS: {\n\t\t\t\tn: \"diffusePS\",\n\t\t\t\tf: _oldChunkColor\n\t\t\t},\n\t\t\tdiffuseTexPS: {\n\t\t\t\tn: \"diffusePS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\tdiffuseTexConstPS: {\n\t\t\t\tn: \"diffusePS\",\n\t\t\t\tf: _oldChunkTexColor\n\t\t\t},\n\t\t\tdiffuseVertPS: {\n\t\t\t\tn: \"diffusePS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\tdiffuseVertConstPS: {\n\t\t\t\tn: \"diffusePS\",\n\t\t\t\tf: _oldChunkVertColor\n\t\t\t},\n\t\t\temissiveConstPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkColor\n\t\t\t},\n\t\t\temissiveTexPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\temissiveTexConstPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkTexColor\n\t\t\t},\n\t\t\temissiveTexConstFloatPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkTexFloat\n\t\t\t},\n\t\t\temissiveVertPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\temissiveVertConstPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkVertColor\n\t\t\t},\n\t\t\temissiveVertConstFloatPS: {\n\t\t\t\tn: \"emissivePS\",\n\t\t\t\tf: _oldChunkVertFloat\n\t\t\t},\n\t\t\tglossConstPS: {\n\t\t\t\tn: \"glossPS\",\n\t\t\t\tf: _oldChunkFloat\n\t\t\t},\n\t\t\tglossTexPS: {\n\t\t\t\tn: \"glossPS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\tglossTexConstPS: {\n\t\t\t\tn: \"glossPS\",\n\t\t\t\tf: _oldChunkTexFloat\n\t\t\t},\n\t\t\tglossVertPS: {\n\t\t\t\tn: \"glossPS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\tglossVertConstPS: {\n\t\t\t\tn: \"glossPS\",\n\t\t\t\tf: _oldChunkVertFloat\n\t\t\t},\n\t\t\tmetalnessConstPS: {\n\t\t\t\tn: \"metalnessPS\",\n\t\t\t\tf: _oldChunkFloat\n\t\t\t},\n\t\t\tmetalnessTexPS: {\n\t\t\t\tn: \"metalnessPS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\tmetalnessTexConstPS: {\n\t\t\t\tn: \"metalnessPS\",\n\t\t\t\tf: _oldChunkTexFloat\n\t\t\t},\n\t\t\tmetalnessVertPS: {\n\t\t\t\tn: \"metalnessPS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\tmetalnessVertConstPS: {\n\t\t\t\tn: \"metalnessPS\",\n\t\t\t\tf: _oldChunkVertFloat\n\t\t\t},\n\t\t\topacityConstPS: {\n\t\t\t\tn: \"opacityPS\",\n\t\t\t\tf: _oldChunkFloat\n\t\t\t},\n\t\t\topacityTexPS: {\n\t\t\t\tn: \"opacityPS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\topacityTexConstPS: {\n\t\t\t\tn: \"opacityPS\",\n\t\t\t\tf: _oldChunkTexFloat\n\t\t\t},\n\t\t\topacityVertPS: {\n\t\t\t\tn: \"opacityPS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\topacityVertConstPS: {\n\t\t\t\tn: \"opacityPS\",\n\t\t\t\tf: _oldChunkVertFloat\n\t\t\t},\n\t\t\tspecularConstPS: {\n\t\t\t\tn: \"specularPS\",\n\t\t\t\tf: _oldChunkColor\n\t\t\t},\n\t\t\tspecularTexPS: {\n\t\t\t\tn: \"specularPS\",\n\t\t\t\tf: _oldChunkTex\n\t\t\t},\n\t\t\tspecularTexConstPS: {\n\t\t\t\tn: \"specularPS\",\n\t\t\t\tf: _oldChunkTexColor\n\t\t\t},\n\t\t\tspecularVertPS: {\n\t\t\t\tn: \"specularPS\",\n\t\t\t\tf: _oldChunkVert\n\t\t\t},\n\t\t\tspecularVertConstPS: {\n\t\t\t\tn: \"specularPS\",\n\t\t\t\tf: _oldChunkVertColor\n\t\t\t},\n\t\t\ttransformBatchSkinnedVS: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformDynbatch\n\t\t\t},\n\t\t\ttransformInstancedVS: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformInstanced\n\t\t\t},\n\t\t\ttransformPixelSnapVS: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformPixelSnap\n\t\t\t},\n\t\t\ttransformScreenSpaceVS: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformScreenSpace\n\t\t\t},\n\t\t\ttransformScreenSpaceBatchSkinned: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformScreenSpaceBatch\n\t\t\t},\n\t\t\ttransformSkinned: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformSkin\n\t\t\t},\n\t\t\ttransformUv1: {\n\t\t\t\tn: \"transformVS\",\n\t\t\t\tf: _oldChunkTransformUv1\n\t\t\t}\n\t\t},\n\t\toptionsContext: {},\n\t\toptionsContextMin: {},\n\t\tgenerateKey: function generateKey(options) {\n\t\t\tvar buildPropertiesList = function buildPropertiesList(options) {\n\t\t\t\tvar props = [];\n\n\t\t\t\tfor (var prop in options) {\n\t\t\t\t\tif (options.hasOwnProperty(prop) && prop !== \"chunks\" && prop !== \"lights\") props.push(prop);\n\t\t\t\t}\n\n\t\t\t\treturn props.sort();\n\t\t\t};\n\n\t\t\tvar props;\n\n\t\t\tif (options === this.optionsContextMin) {\n\t\t\t\tif (!this.propsMin) this.propsMin = buildPropertiesList(options);\n\t\t\t\tprops = this.propsMin;\n\t\t\t} else if (options === this.optionsContext) {\n\t\t\t\tif (!this.props) this.props = buildPropertiesList(options);\n\t\t\t\tprops = this.props;\n\t\t\t} else {\n\t\t\t\tprops = buildPropertiesList(options);\n\t\t\t}\n\n\t\t\tvar key = \"standard\";\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < props.length; i++) {\n\t\t\t\tif (options[props[i]]) key += props[i] + options[props[i]];\n\t\t\t}\n\n\t\t\tif (options.chunks) {\n\t\t\t\tvar chunks = [];\n\n\t\t\t\tfor (var p in options.chunks) {\n\t\t\t\t\tif (options.chunks.hasOwnProperty(p)) {\n\t\t\t\t\t\tchunks.push(p + options.chunks[p]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchunks.sort();\n\t\t\t\tkey += chunks;\n\t\t\t}\n\n\t\t\tif (options.lights) {\n\t\t\t\tfor (i = 0; i < options.lights.length; i++) {\n\t\t\t\t\tkey += options.lights[i].key;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn hashCode(key);\n\t\t},\n\t\t_correctChannel: function _correctChannel(p, chan) {\n\t\t\tif (_matTex2D[p] > 0) {\n\t\t\t\tif (_matTex2D[p] < chan.length) {\n\t\t\t\t\treturn chan.substring(0, _matTex2D[p]);\n\t\t\t\t} else if (_matTex2D[p] > chan.length) {\n\t\t\t\t\tvar str = chan;\n\t\t\t\t\tvar chr = str.charAt(str.length - 1);\n\t\t\t\t\tvar addLen = _matTex2D[p] - str.length;\n\n\t\t\t\t\tfor (var i = 0; i < addLen; i++) {\n\t\t\t\t\t\tstr += chr;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\n\t\t\t\treturn chan;\n\t\t\t}\n\t\t},\n\t\t_setMapTransform: function _setMapTransform(codes, name, id, uv) {\n\t\t\tcodes[0] += \"uniform vec4 texture_\" + name + \"MapTransform;\\n\";\n\t\t\tvar checkId = id + uv * 100;\n\n\t\t\tif (!codes[3][checkId]) {\n\t\t\t\tcodes[1] += \"varying vec2 vUV\" + uv + \"_\" + id + \";\\n\";\n\t\t\t\tcodes[2] += \"\t vUV\" + uv + \"_\" + id + \" = uv\" + uv + \" * texture_\" + name + \"MapTransform.xy + texture_\" + name + \"MapTransform.zw;\\n\";\n\t\t\t\tcodes[3][checkId] = true;\n\t\t\t}\n\n\t\t\treturn codes;\n\t\t},\n\t\t_getUvSourceExpression: function _getUvSourceExpression(transformPropName, uVPropName, options) {\n\t\t\tvar transformId = options[transformPropName];\n\t\t\tvar uvChannel = options[uVPropName];\n\t\t\tvar expression;\n\t\t\tvar isMainPass = options.pass === SHADER_FORWARD || options.pass === SHADER_FORWARDHDR;\n\n\t\t\tif (isMainPass && options.nineSlicedMode === SPRITE_RENDERMODE_SLICED) {\n\t\t\t\texpression = \"nineSlicedUv\";\n\t\t\t} else if (isMainPass && options.nineSlicedMode === SPRITE_RENDERMODE_TILED) {\n\t\t\t\texpression = \"nineSlicedUv, -1000.0\";\n\t\t\t} else {\n\t\t\t\tif (transformId === 0) {\n\t\t\t\t\texpression = \"vUv\" + uvChannel;\n\t\t\t\t} else {\n\t\t\t\t\texpression = \"vUV\" + uvChannel + \"_\" + transformId;\n\t\t\t\t}\n\n\t\t\t\tif (options.heightMap && transformPropName !== \"heightMapTransform\") {\n\t\t\t\t\texpression += \" + dUvOffset\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn expression;\n\t\t},\n\t\t_addMapDef: function _addMapDef(name, enabled) {\n\t\t\tvar s = \"\\n#undef \" + name + \"\\n\";\n\t\t\tif (enabled) s += \" #define \" + name + \"\\n\";\n\t\t\treturn s;\n\t\t},\n\t\t_addMapDefs: function _addMapDefs(float, color, vertex, map) {\n\t\t\tvar s = \"\";\n\t\t\ts += this._addMapDef(\"MAPFLOAT\", float);\n\t\t\ts += this._addMapDef(\"MAPCOLOR\", color);\n\t\t\ts += this._addMapDef(\"MAPVERTEX\", vertex);\n\t\t\ts += this._addMapDef(\"MAPTEXTURE\", map);\n\t\t\treturn s;\n\t\t},\n\t\t_addMap: function _addMap(propName, chunkName, options, chunks, samplerFormat) {\n\t\t\tvar mapPropName = propName + \"Map\";\n\t\t\tvar uVPropName = mapPropName + \"Uv\";\n\t\t\tvar transformPropName = mapPropName + \"Transform\";\n\t\t\tvar channelPropName = mapPropName + \"Channel\";\n\t\t\tvar vertexColorChannelPropName = propName + \"VertexColorChannel\";\n\t\t\tvar tintPropName = propName + \"Tint\";\n\t\t\tvar vertexColorPropName = propName + \"VertexColor\";\n\t\t\tvar detailModePropName = propName + \"Mode\";\n\t\t\tvar tintOption = options[tintPropName];\n\t\t\tvar vertexColorOption = options[vertexColorPropName];\n\t\t\tvar textureOption = options[mapPropName];\n\t\t\tvar detailModeOption = options[detailModePropName];\n\t\t\tvar subCode = chunks[chunkName];\n\n\t\t\tif (textureOption) {\n\t\t\t\tvar uv = this._getUvSourceExpression(transformPropName, uVPropName, options);\n\n\t\t\t\tsubCode = subCode.replace(/\\$UV/g, uv).replace(/\\$CH/g, options[channelPropName]);\n\n\t\t\t\tif (samplerFormat !== undefined) {\n\t\t\t\t\tvar fmt = samplerFormat === 0 ? \"texture2DSRGB\" : samplerFormat === 1 ? \"texture2DRGBM\" : \"texture2D\";\n\t\t\t\t\tsubCode = subCode.replace(/\\$texture2DSAMPLE/g, fmt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (vertexColorOption) {\n\t\t\t\tsubCode = subCode.replace(/\\$VC/g, options[vertexColorChannelPropName]);\n\t\t\t}\n\n\t\t\tif (detailModeOption) {\n\t\t\t\tsubCode = subCode.replace(/\\$DETAILMODE/g, detailModeOption);\n\t\t\t}\n\n\t\t\tvar isFloatTint = tintOption === 1;\n\t\t\tvar isVecTint = tintOption === 3;\n\t\t\tsubCode = this._addMapDefs(isFloatTint, isVecTint, vertexColorOption, textureOption) + subCode;\n\t\t\treturn subCode.replace(/\\$/g, \"\");\n\t\t},\n\t\t_nonPointShadowMapProjection: function _nonPointShadowMapProjection(device, light, shadowCoordArgs) {\n\t\t\tif (!light._normalOffsetBias || light._isVsm) {\n\t\t\t\tif (light._type === LIGHTTYPE_SPOT) {\n\t\t\t\t\tif (light._isPcf && (device.webgl2 || device.extStandardDerivatives)) {\n\t\t\t\t\t\treturn \"\t\t\t getShadowCoordPerspZbuffer\" + shadowCoordArgs;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn \"\t\t\t getShadowCoordPersp\" + shadowCoordArgs;\n\t\t\t\t}\n\n\t\t\t\treturn \"\t\t\t getShadowCoordOrtho\" + shadowCoordArgs;\n\t\t\t}\n\n\t\t\tif (light._type === LIGHTTYPE_SPOT) {\n\t\t\t\tif (light._isPcf && (device.webgl2 || device.extStandardDerivatives)) {\n\t\t\t\t\treturn \"\t\t\t getShadowCoordPerspZbufferNormalOffset\" + shadowCoordArgs;\n\t\t\t\t}\n\n\t\t\t\treturn \"\t\t\t getShadowCoordPerspNormalOffset\" + shadowCoordArgs;\n\t\t\t}\n\n\t\t\treturn \"\t\t\t getShadowCoordOrthoNormalOffset\" + shadowCoordArgs;\n\t\t},\n\t\t_addVaryingIfNeeded: function _addVaryingIfNeeded(code, type, name) {\n\t\t\treturn code.indexOf(name) >= 0 ? \"varying \" + type + \" \" + name + \";\\n\" : \"\";\n\t\t},\n\t\t_getLightSourceShapeString: function _getLightSourceShapeString(shape) {\n\t\t\tswitch (shape) {\n\t\t\t\tcase LIGHTSHAPE_RECT:\n\t\t\t\t\treturn 'Rect';\n\n\t\t\t\tcase LIGHTSHAPE_DISK:\n\t\t\t\t\treturn 'Disk';\n\n\t\t\t\tcase LIGHTSHAPE_SPHERE:\n\t\t\t\t\treturn 'Sphere';\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t_vsAddTransformCode: function _vsAddTransformCode(code, device, chunks, options) {\n\t\t\tcode += chunks.transformVS;\n\t\t\treturn code;\n\t\t},\n\t\t_vsAddBaseCode: function _vsAddBaseCode(code, device, chunks, options) {\n\t\t\tcode += chunks.baseVS;\n\n\t\t\tif (options.nineSlicedMode === SPRITE_RENDERMODE_SLICED || options.nineSlicedMode === SPRITE_RENDERMODE_TILED) {\n\t\t\t\tcode += chunks.baseNineSlicedVS;\n\t\t\t}\n\n\t\t\treturn code;\n\t\t},\n\t\t_fsAddBaseCode: function _fsAddBaseCode(code, device, chunks, options) {\n\t\t\tcode += chunks.basePS;\n\n\t\t\tif (options.nineSlicedMode === SPRITE_RENDERMODE_SLICED) {\n\t\t\t\tcode += chunks.baseNineSlicedPS;\n\t\t\t} else if (options.nineSlicedMode === SPRITE_RENDERMODE_TILED) {\n\t\t\t\tcode += chunks.baseNineSlicedTiledPS;\n\t\t\t}\n\n\t\t\treturn code;\n\t\t},\n\t\t_fsAddStartCode: function _fsAddStartCode(code, device, chunks, options) {\n\t\t\tcode += chunks.startPS;\n\n\t\t\tif (options.nineSlicedMode === SPRITE_RENDERMODE_SLICED) {\n\t\t\t\tcode += chunks.startNineSlicedPS;\n\t\t\t} else if (options.nineSlicedMode === SPRITE_RENDERMODE_TILED) {\n\t\t\t\tcode += chunks.startNineSlicedTiledPS;\n\t\t\t}\n\n\t\t\treturn code;\n\t\t},\n\t\tcreateShaderDefinition: function createShaderDefinition(device, options) {\n\t\t\tvar i, p;\n\t\t\tvar lighting = options.lights.length > 0;\n\n\t\t\tif (options.dirLightMap) {\n\t\t\t\tlighting = true;\n\t\t\t\toptions.useSpecular = true;\n\t\t\t}\n\n\t\t\tif (options.shadingModel === SPECULAR_PHONG) {\n\t\t\t\toptions.fresnelModel = 0;\n\t\t\t\toptions.specularAntialias = false;\n\t\t\t\toptions.prefilteredCubemap = false;\n\t\t\t\toptions.dpAtlas = false;\n\t\t\t\toptions.ambientSH = false;\n\t\t\t} else {\n\t\t\t\toptions.fresnelModel = options.fresnelModel === 0 ? FRESNEL_SCHLICK : options.fresnelModel;\n\t\t\t}\n\n\t\t\tvar cubemapReflection = (options.cubeMap || options.prefilteredCubemap && options.useSpecular) && !options.sphereMap && !options.dpAtlas;\n\t\t\tvar reflections = options.sphereMap || cubemapReflection || options.dpAtlas;\n\t\t\tvar useTexCubeLod = options.useTexCubeLod;\n\t\t\tif (options.cubeMap) options.sphereMap = null;\n\t\t\tif (options.dpAtlas) options.prefilteredCubemap = null;\n\t\t\tif (!options.useSpecular) options.specularMap = options.glossMap = null;\n\t\t\tvar needsNormal = lighting || reflections || options.ambientSH || options.prefilteredCubemap || options.heightMap || options.enableGGXSpecular;\n\t\t\tvar shadowPass = options.pass >= SHADER_SHADOW && options.pass <= 17;\n\t\t\tthis.options = options;\n\t\t\tvar code = '';\n\t\t\tvar codeBody = '';\n\t\t\tvar varyings = \"\";\n\t\t\tvar chunks = shaderChunks;\n\t\t\tvar lightType;\n\t\t\tvar shadowCoordArgs;\n\t\t\tvar chunk;\n\t\t\tvar attributes = {\n\t\t\t\tvertex_position: SEMANTIC_POSITION\n\t\t\t};\n\n\t\t\tif (options.chunks) {\n\t\t\t\tvar customChunks = {};\n\t\t\t\tvar newP;\n\n\t\t\t\tfor (p in chunks) {\n\t\t\t\t\tif (chunks.hasOwnProperty(p)) {\n\t\t\t\t\t\tif (!options.chunks[p]) {\n\t\t\t\t\t\t\tcustomChunks[p] = chunks[p];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunk = options.chunks[p];\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_normal\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_normal = SEMANTIC_NORMAL;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_tangent\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_tangent = SEMANTIC_TANGENT;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_texCoord0\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_texCoord0 = SEMANTIC_TEXCOORD0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_texCoord1\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_texCoord1 = SEMANTIC_TEXCOORD1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_color\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_color = SEMANTIC_COLOR;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_boneWeights\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_boneWeights = SEMANTIC_BLENDWEIGHT;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (chunk.indexOf(\"vertex_boneIndices\") >= 0) {\n\t\t\t\t\t\t\t\tattributes.vertex_boneIndices = SEMANTIC_BLENDINDICES;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcustomChunks[p] = chunk;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (p in options.chunks) {\n\t\t\t\t\tnewP = this._oldChunkToNew[p];\n\n\t\t\t\t\tif (newP) {\n\t\t\t\t\t\tcustomChunks[newP.n] = newP.f(options.chunks[p], newP.n, p);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchunks = customChunks;\n\t\t\t}\n\n\t\t\tcode = this._vsAddBaseCode(code, device, chunks, options);\n\t\t\tvar mainShadowLight = -1;\n\n\t\t\tif (!options.noShadow && !options.twoSidedLighting) {\n\t\t\t\tfor (i = 0; i < options.lights.length; i++) {\n\t\t\t\t\tlightType = options.lights[i]._type;\n\n\t\t\t\t\tif (options.lights[i].castShadows) {\n\t\t\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\t\tcode += \"uniform mat4 light\" + i + \"_shadowMatrixVS;\\n\";\n\t\t\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_shadowParamsVS;\\n\";\n\t\t\t\t\t\t\tcode += \"uniform vec3 light\" + i + (lightType === LIGHTTYPE_DIRECTIONAL ? \"_directionVS\" : \"_positionVS\") + \";\\n\";\n\t\t\t\t\t\t\tmainShadowLight = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (mainShadowLight >= 0) {\n\t\t\t\t\tcode += chunks.shadowCoordVS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcodeBody += \"\t vPositionW\t\t= getWorldPosition();\\n\";\n\n\t\t\tif (options.pass === SHADER_DEPTH) {\n\t\t\t\tcode += 'varying float vDepth;\\n';\n\t\t\t\tcode += '#ifndef VIEWMATRIX\\n';\n\t\t\t\tcode += '#define VIEWMATRIX\\n';\n\t\t\t\tcode += 'uniform mat4 matrix_view;\\n';\n\t\t\t\tcode += '#endif\\n';\n\t\t\t\tcode += '#ifndef CAMERAPLANES\\n';\n\t\t\t\tcode += '#define CAMERAPLANES\\n';\n\t\t\t\tcode += 'uniform vec4 camera_params;\\n\\n';\n\t\t\t\tcode += '#endif\\n';\n\t\t\t\tcodeBody += \"\t\tvDepth = -(matrix_view * vec4(vPositionW,1.0)).z * camera_params.x;\\n\";\n\t\t\t}\n\n\t\t\tif (options.useInstancing) {\n\t\t\t\tattributes.instance_line1 = SEMANTIC_TEXCOORD2;\n\t\t\t\tattributes.instance_line2 = SEMANTIC_TEXCOORD3;\n\t\t\t\tattributes.instance_line3 = SEMANTIC_TEXCOORD4;\n\t\t\t\tattributes.instance_line4 = SEMANTIC_TEXCOORD5;\n\t\t\t\tcode += chunks.instancingVS;\n\t\t\t}\n\n\t\t\tif (needsNormal) {\n\t\t\t\tattributes.vertex_normal = SEMANTIC_NORMAL;\n\t\t\t\tcodeBody += \"\t vNormalW\t\t= dNormalW = getNormal();\\n\";\n\n\t\t\t\tif (options.sphereMap && device.fragmentUniformsCount <= 16) {\n\t\t\t\t\tcode += chunks.viewNormalVS;\n\t\t\t\t\tcodeBody += \"\t vNormalV\t\t= getViewNormal();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif ((options.heightMap || options.normalMap || options.enableGGXSpecular) && options.hasTangents) {\n\t\t\t\t\tattributes.vertex_tangent = SEMANTIC_TANGENT;\n\t\t\t\t\tcode += chunks.tangentBinormalVS;\n\t\t\t\t\tcodeBody += \"\t vTangentW\t = getTangent();\\n\";\n\t\t\t\t\tcodeBody += \"\t vBinormalW\t= getBinormal();\\n\";\n\t\t\t\t} else if (options.enableGGXSpecular) {\n\t\t\t\t\tcode += chunks.tangentBinormalVS;\n\t\t\t\t\tcodeBody += \"\t vObjectSpaceUpW\t= getObjectSpaceUp();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (mainShadowLight >= 0) {\n\t\t\t\t\tlightType = options.lights[mainShadowLight]._type;\n\n\t\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tcodeBody += \"\t dLightDirNormW = light\" + mainShadowLight + \"_directionVS;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBody += \"\t getLightDirPoint(light\" + mainShadowLight + \"_positionVS);\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCoordArgs = \"(light\" + mainShadowLight + \"_shadowMatrixVS, light\" + mainShadowLight + \"_shadowParamsVS);\\n\";\n\t\t\t\t\tcodeBody += this._nonPointShadowMapProjection(device, options.lights[mainShadowLight], shadowCoordArgs);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar useUv = [];\n\t\t\tvar useUnmodifiedUv = [];\n\t\t\tvar maxUvSets = 2;\n\t\t\tvar cname, mname, tname, uname;\n\n\t\t\tfor (p in _matTex2D) {\n\t\t\t\tmname = p + \"Map\";\n\n\t\t\t\tif (options[p + \"VertexColor\"]) {\n\t\t\t\t\tcname = p + \"VertexColorChannel\";\n\t\t\t\t\toptions[cname] = this._correctChannel(p, options[cname]);\n\t\t\t\t}\n\n\t\t\t\tif (options[mname]) {\n\t\t\t\t\tcname = mname + \"Channel\";\n\t\t\t\t\ttname = mname + \"Transform\";\n\t\t\t\t\tuname = mname + \"Uv\";\n\t\t\t\t\toptions[uname] = Math.min(options[uname], maxUvSets - 1);\n\t\t\t\t\toptions[cname] = this._correctChannel(p, options[cname]);\n\t\t\t\t\tvar uvSet = options[uname];\n\t\t\t\t\tuseUv[uvSet] = true;\n\t\t\t\t\tuseUnmodifiedUv[uvSet] = useUnmodifiedUv[uvSet] || options[mname] && !options[tname];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.forceUv1) {\n\t\t\t\tuseUv[1] = true;\n\t\t\t\tuseUnmodifiedUv[1] = useUnmodifiedUv[1] !== undefined ? useUnmodifiedUv[1] : true;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < maxUvSets; i++) {\n\t\t\t\tif (useUv[i]) {\n\t\t\t\t\tattributes[\"vertex_texCoord\" + i] = \"TEXCOORD\" + i;\n\t\t\t\t\tcode += chunks[\"uv\" + i + \"VS\"];\n\t\t\t\t\tcodeBody += \"\t vec2 uv\" + i + \" = getUv\" + i + \"();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (useUnmodifiedUv[i]) {\n\t\t\t\t\tcodeBody += \"\t vUv\" + i + \" = uv\" + i + \";\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar codes = [code, varyings, codeBody, []];\n\n\t\t\tfor (p in _matTex2D) {\n\t\t\t\tmname = p + \"Map\";\n\n\t\t\t\tif (options[mname]) {\n\t\t\t\t\ttname = mname + \"Transform\";\n\n\t\t\t\t\tif (options[tname]) {\n\t\t\t\t\t\tuname = mname + \"Uv\";\n\n\t\t\t\t\t\tthis._setMapTransform(codes, p, options[tname], options[uname]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode = codes[0];\n\t\t\tvaryings = codes[1];\n\t\t\tcodeBody = codes[2];\n\n\t\t\tif (options.vertexColors) {\n\t\t\t\tattributes.vertex_color = SEMANTIC_COLOR;\n\t\t\t\tcodeBody += \"\t vVertexColor = vertex_color;\\n\";\n\t\t\t}\n\n\t\t\tif (options.useMorphPosition || options.useMorphNormal) {\n\t\t\t\tif (options.useMorphTextureBased) {\n\t\t\t\t\tcode += \"#define MORPHING_TEXTURE_BASED\\n\";\n\n\t\t\t\t\tif (options.useMorphPosition) {\n\t\t\t\t\t\tcode += \"#define MORPHING_TEXTURE_BASED_POSITION\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.useMorphNormal) {\n\t\t\t\t\t\tcode += \"#define MORPHING_TEXTURE_BASED_NORMAL\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tattributes.morph_vertex_id = SEMANTIC_ATTR15;\n\t\t\t\t\tcode += \"attribute float morph_vertex_id;\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"#define MORPHING\\n\";\n\n\t\t\t\t\tif (options.useMorphPosition) {\n\t\t\t\t\t\tattributes.morph_pos0 = SEMANTIC_ATTR8;\n\t\t\t\t\t\tattributes.morph_pos1 = SEMANTIC_ATTR9;\n\t\t\t\t\t\tattributes.morph_pos2 = SEMANTIC_ATTR10;\n\t\t\t\t\t\tattributes.morph_pos3 = SEMANTIC_ATTR11;\n\t\t\t\t\t\tcode += \"#define MORPHING_POS03\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos0;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos1;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos2;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos3;\\n\";\n\t\t\t\t\t} else if (options.useMorphNormal) {\n\t\t\t\t\t\tattributes.morph_nrm0 = SEMANTIC_ATTR8;\n\t\t\t\t\t\tattributes.morph_nrm1 = SEMANTIC_ATTR9;\n\t\t\t\t\t\tattributes.morph_nrm2 = SEMANTIC_ATTR10;\n\t\t\t\t\t\tattributes.morph_nrm3 = SEMANTIC_ATTR11;\n\t\t\t\t\t\tcode += \"#define MORPHING_NRM03\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm0;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm1;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm2;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm3;\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!options.useMorphNormal) {\n\t\t\t\t\t\tattributes.morph_pos4 = SEMANTIC_ATTR12;\n\t\t\t\t\t\tattributes.morph_pos5 = SEMANTIC_ATTR13;\n\t\t\t\t\t\tattributes.morph_pos6 = SEMANTIC_ATTR14;\n\t\t\t\t\t\tattributes.morph_pos7 = SEMANTIC_ATTR15;\n\t\t\t\t\t\tcode += \"#define MORPHING_POS47\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos4;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos5;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos6;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_pos7;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattributes.morph_nrm4 = SEMANTIC_ATTR12;\n\t\t\t\t\t\tattributes.morph_nrm5 = SEMANTIC_ATTR13;\n\t\t\t\t\t\tattributes.morph_nrm6 = SEMANTIC_ATTR14;\n\t\t\t\t\t\tattributes.morph_nrm7 = SEMANTIC_ATTR15;\n\t\t\t\t\t\tcode += \"#define MORPHING_NRM47\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm4;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm5;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm6;\\n\";\n\t\t\t\t\t\tcode += \"attribute vec3 morph_nrm7;\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.skin) {\n\t\t\t\tattributes.vertex_boneWeights = SEMANTIC_BLENDWEIGHT;\n\t\t\t\tattributes.vertex_boneIndices = SEMANTIC_BLENDINDICES;\n\t\t\t\tcode += skinCode(device, chunks);\n\t\t\t\tcode += \"#define SKIN\\n\";\n\t\t\t} else if (options.useInstancing) {\n\t\t\t\tcode += \"#define INSTANCING\\n\";\n\t\t\t}\n\n\t\t\tif (options.screenSpace) {\n\t\t\t\tcode += \"#define SCREENSPACE\\n\";\n\t\t\t}\n\n\t\t\tif (options.pixelSnap) {\n\t\t\t\tcode += \"#define PIXELSNAP\\n\";\n\t\t\t}\n\n\t\t\tcode = this._vsAddTransformCode(code, device, chunks, options);\n\t\t\tif (needsNormal) code += chunks.normalVS;\n\t\t\tcode += \"\\n\";\n\t\t\tcode += chunks.startVS;\n\t\t\tcode += codeBody;\n\t\t\tcode += \"}\";\n\t\t\tvar vshader = code;\n\t\t\tvar oldVars = varyings;\n\t\t\tvaryings = \"\";\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec4\", \"vMainShadowUv\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec4\", \"vVertexColor\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vPositionW\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vNormalV\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vNormalW\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vTangentW\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vBinormalW\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec3\", \"vObjectSpaceUpW\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec2\", \"vUv0\");\n\t\t\tvaryings += this._addVaryingIfNeeded(code, \"vec2\", \"vUv1\");\n\t\t\tvaryings += oldVars;\n\t\t\tvshader = varyings + vshader;\n\t\t\tvar startCode = \"\";\n\n\t\t\tif (device.webgl2) {\n\t\t\t\tstartCode = versionCode(device);\n\n\t\t\t\tif (chunks.extensionVS) {\n\t\t\t\t\tstartCode += chunks.extensionVS + \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tvshader = startCode + chunks.gles3VS + vshader;\n\t\t\t} else {\n\t\t\t\tif (chunks.extensionVS) {\n\t\t\t\t\tstartCode = chunks.extensionVS + \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tvshader = startCode + vshader;\n\t\t\t}\n\n\t\t\tif (options.forceFragmentPrecision && options.forceFragmentPrecision != \"highp\" && options.forceFragmentPrecision !== \"mediump\" && options.forceFragmentPrecision !== \"lowp\") options.forceFragmentPrecision = null;\n\n\t\t\tif (options.forceFragmentPrecision) {\n\t\t\t\tif (options.forceFragmentPrecision === \"highp\" && device.maxPrecision !== \"highp\") options.forceFragmentPrecision = \"mediump\";\n\t\t\t\tif (options.forceFragmentPrecision === \"mediump\" && device.maxPrecision === \"lowp\") options.forceFragmentPrecision = \"lowp\";\n\t\t\t}\n\n\t\t\tvar fshader;\n\t\t\tcode = '';\n\n\t\t\tif (device.webgl2) {\n\t\t\t\tcode += versionCode(device);\n\t\t\t}\n\n\t\t\tif (device.extStandardDerivatives && !device.webgl2) {\n\t\t\t\tcode += \"#extension GL_OES_standard_derivatives : enable\\n\\n\";\n\t\t\t}\n\n\t\t\tif (chunks.extensionPS) {\n\t\t\t\tcode += chunks.extensionPS + \"\\n\";\n\t\t\t}\n\n\t\t\tif (device.webgl2) {\n\t\t\t\tcode += chunks.gles3PS;\n\t\t\t}\n\n\t\t\tcode += options.forceFragmentPrecision ? \"precision \" + options.forceFragmentPrecision + \" float;\\n\\n\" : precisionCode(device);\n\n\t\t\tif (options.pass === SHADER_PICK) {\n\t\t\t\tcode += \"uniform vec4 uColor;\\n\";\n\t\t\t\tcode += varyings;\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"float dAlpha;\\n\";\n\t\t\t\t\tcode += this._addMap(\"opacity\", \"opacityPS\", options, chunks);\n\t\t\t\t\tcode += chunks.alphaTestPS;\n\t\t\t\t}\n\n\t\t\t\tcode += begin();\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"\t getOpacity();\\n\";\n\t\t\t\t\tcode += \"\t alphaTest(dAlpha);\\n\";\n\t\t\t\t}\n\n\t\t\t\tcode += \"\t\tgl_FragColor = uColor;\\n\";\n\t\t\t\tcode += end();\n\t\t\t\treturn {\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tvshader: vshader,\n\t\t\t\t\tfshader: code\n\t\t\t\t};\n\t\t\t} else if (options.pass === SHADER_DEPTH) {\n\t\t\t\tcode += 'varying float vDepth;\\n';\n\t\t\t\tcode += varyings;\n\t\t\t\tcode += chunks.packDepthPS;\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"float dAlpha;\\n\";\n\t\t\t\t\tcode += this._addMap(\"opacity\", \"opacityPS\", options, chunks);\n\t\t\t\t\tcode += chunks.alphaTestPS;\n\t\t\t\t}\n\n\t\t\t\tcode += begin();\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"\t getOpacity();\\n\";\n\t\t\t\t\tcode += \"\t alphaTest(dAlpha);\\n\";\n\t\t\t\t}\n\n\t\t\t\tcode += \"\t\tgl_FragColor = packFloat(vDepth);\\n\";\n\t\t\t\tcode += end();\n\t\t\t\treturn {\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tvshader: vshader,\n\t\t\t\t\tfshader: code\n\t\t\t\t};\n\t\t\t} else if (shadowPass) {\n\t\t\t\tvar smode = options.pass - SHADER_SHADOW;\n\t\t\t\tvar numShadowModes = 5;\n\t\t\t\tlightType = Math.floor(smode / numShadowModes);\n\t\t\t\tvar shadowType = smode - lightType * numShadowModes;\n\n\t\t\t\tif (device.extStandardDerivatives && !device.webgl2) {\n\t\t\t\t\tcode += 'uniform vec2 polygonOffset;\\n';\n\t\t\t\t}\n\n\t\t\t\tif (shadowType === SHADOW_VSM32) {\n\t\t\t\t\tif (device.textureFloatHighPrecision) {\n\t\t\t\t\t\tcode += '#define VSM_EXPONENT 15.0\\n\\n';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += '#define VSM_EXPONENT 5.54\\n\\n';\n\t\t\t\t\t}\n\t\t\t\t} else if (shadowType === SHADOW_VSM16) {\n\t\t\t\t\tcode += '#define VSM_EXPONENT 5.54\\n\\n';\n\t\t\t\t}\n\n\t\t\t\tif (lightType !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\tcode += 'uniform vec3 view_position;\\n';\n\t\t\t\t\tcode += 'uniform float light_radius;\\n';\n\t\t\t\t}\n\n\t\t\t\tcode += varyings;\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"float dAlpha;\\n\";\n\t\t\t\t\tcode += this._addMap(\"opacity\", \"opacityPS\", options, chunks);\n\t\t\t\t\tcode += chunks.alphaTestPS;\n\t\t\t\t}\n\n\t\t\t\tif (shadowType === SHADOW_PCF3 && (!device.webgl2 || lightType === LIGHTTYPE_OMNI)) {\n\t\t\t\t\tcode += chunks.packDepthPS;\n\t\t\t\t} else if (shadowType === SHADOW_VSM8) {\n\t\t\t\t\tcode += \"vec2 encodeFloatRG( float v ) {\\n\";\n\t\t\t\t\tcode += \"\t\tvec2 enc = vec2(1.0, 255.0) * v;\\n\";\n\t\t\t\t\tcode += \"\t\tenc = fract(enc);\\n\";\n\t\t\t\t\tcode += \"\t\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\\n\";\n\t\t\t\t\tcode += \"\t\treturn enc;\\n\";\n\t\t\t\t\tcode += \"}\\n\\n\";\n\t\t\t\t}\n\n\t\t\t\tcode += begin();\n\n\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\tcode += \"\t getOpacity();\\n\";\n\t\t\t\t\tcode += \"\t alphaTest(dAlpha);\\n\";\n\t\t\t\t}\n\n\t\t\t\tvar isVsm = shadowType === SHADOW_VSM8 || shadowType === SHADOW_VSM16 || shadowType === SHADOW_VSM32;\n\n\t\t\t\tif (lightType === LIGHTTYPE_OMNI || isVsm && lightType !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\tcode += \"\t float depth = min(distance(view_position, vPositionW) / light_radius, 0.99999);\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"\t float depth = gl_FragCoord.z;\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (shadowType === SHADOW_PCF3 && (!device.webgl2 || lightType === LIGHTTYPE_OMNI)) {\n\t\t\t\t\tif (device.extStandardDerivatives && !device.webgl2) {\n\t\t\t\t\t\tcode += \"\t float minValue = 2.3374370500153186e-10; //(1.0 / 255.0) / (256.0 * 256.0 * 256.0);\\n\";\n\t\t\t\t\t\tcode += \"\t depth += polygonOffset.x * max(abs(dFdx(depth)), abs(dFdy(depth))) + minValue * polygonOffset.y;\\n\";\n\t\t\t\t\t\tcode += \"\t gl_FragColor = packFloat(depth);\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"\t gl_FragColor = packFloat(depth);\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else if (shadowType === SHADOW_PCF3 || shadowType === SHADOW_PCF5) {\n\t\t\t\t\tcode += \"\t gl_FragColor = vec4(1.0);\\n\";\n\t\t\t\t} else if (shadowType === SHADOW_VSM8) {\n\t\t\t\t\tcode += \"\t gl_FragColor = vec4(encodeFloatRG(depth), encodeFloatRG(depth*depth));\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += chunks.storeEVSMPS;\n\t\t\t\t}\n\n\t\t\t\tcode += end();\n\t\t\t\treturn {\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tvshader: vshader,\n\t\t\t\t\tfshader: code\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (options.customFragmentShader) {\n\t\t\t\tfshader = code + options.customFragmentShader;\n\t\t\t\treturn {\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tvshader: vshader,\n\t\t\t\t\tfshader: fshader,\n\t\t\t\t\ttag: SHADERTAG_MATERIAL\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcode += varyings;\n\t\t\tcode = this._fsAddBaseCode(code, device, chunks, options);\n\n\t\t\tif (options.detailModes) {\n\t\t\t\tcode += chunks.detailModesPS;\n\t\t\t}\n\n\t\t\tvar codeBegin = code;\n\t\t\tcode = \"\";\n\n\t\t\tif (options.clearCoat > 0) {\n\t\t\t\tcode += '#define CLEARCOAT\\n';\n\t\t\t}\n\n\t\t\tif (options.opacityFadesSpecular === false) {\n\t\t\t\tcode += 'uniform float material_alphaFade;\\n';\n\t\t\t}\n\n\t\t\tvar numShadowLights = 0;\n\t\t\tvar shadowTypeUsed = [];\n\t\t\tvar useVsm = false;\n\t\t\tvar usePerspZbufferShadow = false;\n\t\t\tvar light;\n\t\t\tvar hasAreaLights = options.lights.some(function (light) {\n\t\t\t\treturn light._shape && light._shape !== LIGHTSHAPE_PUNCTUAL;\n\t\t\t});\n\n\t\t\tif (device._areaLightLutFormat === PIXELFORMAT_R8_G8_B8_A8) {\n\t\t\t\tcode += \"#define AREA_R8_G8_B8_A8_LUTS\\n\";\n\t\t\t}\n\n\t\t\tif (hasAreaLights) {\n\t\t\t\tcode += \"#define AREA_LIGHTS\\n\";\n\t\t\t\tcode += \"uniform sampler2D areaLightsLutTex1;\\n\";\n\t\t\t\tcode += \"uniform sampler2D areaLightsLutTex2;\\n\";\n\t\t\t}\n\n\t\t\tvar lightShape = LIGHTSHAPE_PUNCTUAL;\n\n\t\t\tfor (i = 0; i < options.lights.length; i++) {\n\t\t\t\tlight = options.lights[i];\n\t\t\t\tlightType = light._type;\n\n\t\t\t\tif (hasAreaLights && light._shape) {\n\t\t\t\t\tlightShape = light._shape;\n\t\t\t\t} else {\n\t\t\t\t\tlightShape = LIGHTSHAPE_PUNCTUAL;\n\t\t\t\t}\n\n\t\t\t\tcode += \"uniform vec3 light\" + i + \"_color;\\n\";\n\n\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_direction;\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_position;\\n\";\n\t\t\t\t\tcode += \"uniform float light\" + i + \"_radius;\\n\";\n\n\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_direction;\\n\";\n\t\t\t\t\t\tcode += \"uniform float light\" + i + \"_innerConeAngle;\\n\";\n\t\t\t\t\t\tcode += \"uniform float light\" + i + \"_outerConeAngle;\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (lightShape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_position;\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_halfWidth;\\n\";\n\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_halfHeight;\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (light.castShadows && !options.noShadow) {\n\t\t\t\t\tcode += \"uniform mat4 light\" + i + \"_shadowMatrix;\\n\";\n\n\t\t\t\t\tif (lightType !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tcode += \"uniform vec4 light\" + i + \"_shadowParams;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"uniform vec3 light\" + i + \"_shadowParams;\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightType === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\tcode += \"uniform samplerCube light\" + i + \"_shadowMap;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (light._isPcf && device.webgl2) {\n\t\t\t\t\t\t\tcode += \"uniform sampler2DShadow light\" + i + \"_shadowMap;\\n\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += \"uniform sampler2D light\" + i + \"_shadowMap;\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnumShadowLights++;\n\t\t\t\t\tshadowTypeUsed[light._shadowType] = true;\n\t\t\t\t\tif (light._isVsm) useVsm = true;\n\t\t\t\t\tif (light._isPcf && (device.webgl2 || device.extStandardDerivatives) && lightType === LIGHTTYPE_SPOT) usePerspZbufferShadow = true;\n\t\t\t\t}\n\n\t\t\t\tif (light._cookie) {\n\t\t\t\t\tif (light._cookie._cubemap) {\n\t\t\t\t\t\tif (lightType === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\tcode += \"uniform samplerCube light\" + i + \"_cookie;\\n\";\n\t\t\t\t\t\t\tcode += \"uniform float light\" + i + \"_cookieIntensity;\\n\";\n\t\t\t\t\t\t\tif (!light.castShadows || options.noShadow) code += \"uniform mat4 light\" + i + \"_shadowMatrix;\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\t\tcode += \"uniform sampler2D light\" + i + \"_cookie;\\n\";\n\t\t\t\t\t\t\tcode += \"uniform float light\" + i + \"_cookieIntensity;\\n\";\n\t\t\t\t\t\t\tif (!light.castShadows || options.noShadow) code += \"uniform mat4 light\" + i + \"_shadowMatrix;\\n\";\n\n\t\t\t\t\t\t\tif (light._cookieTransform) {\n\t\t\t\t\t\t\t\tcode += \"uniform vec4 light\" + i + \"_cookieMatrix;\\n\";\n\t\t\t\t\t\t\t\tcode += \"uniform vec2 light\" + i + \"_cookieOffset;\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode += \"\\n\";\n\t\t\tvar tbn;\n\n\t\t\tif (!options.hasTangents && device.extStandardDerivatives) {\n\t\t\t\ttbn = chunks.TBNderivativePS;\n\t\t\t} else if (options.fastTbn) {\n\t\t\t\ttbn = chunks.TBNfastPS;\n\t\t\t} else {\n\t\t\t\ttbn = chunks.TBNPS;\n\t\t\t}\n\n\t\t\tif (needsNormal) {\n\t\t\t\tif (options.normalMap || options.clearCoatNormalMap) {\n\t\t\t\t\tcode += options.packedNormal ? chunks.normalXYPS : chunks.normalXYZPS;\n\n\t\t\t\t\tif (!options.hasTangents) {\n\t\t\t\t\t\tvar normalMapUv = this._getUvSourceExpression(\"normalMapTransform\", \"normalMapUv\", options);\n\n\t\t\t\t\t\ttbn = tbn.replace(/\\$UV/g, normalMapUv);\n\t\t\t\t\t}\n\n\t\t\t\t\tcode += tbn;\n\t\t\t\t} else if (options.enableGGXSpecular && !options.heightMap) {\n\t\t\t\t\tcode += chunks.normalVertexPS;\n\t\t\t\t\tcode += chunks.TBNObjectSpacePS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (needsNormal) {\n\t\t\t\tif (options.normalMap) {\n\t\t\t\t\tif (options.normalDetail) {\n\t\t\t\t\t\tcode += this._addMap(\"normalDetail\", \"normalDetailMapPS\", options, chunks);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar transformedNormalMapUv = this._getUvSourceExpression(\"normalMapTransform\", \"normalMapUv\", options);\n\n\t\t\t\t\tif (options.normalizeNormalMap) {\n\t\t\t\t\t\tcode += chunks.normalMapPS.replace(/\\$UV/g, transformedNormalMapUv);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.normalMapFastPS.replace(/\\$UV/g, transformedNormalMapUv);\n\t\t\t\t\t}\n\t\t\t\t} else if (!(options.enableGGXSpecular && !options.heightMap)) {\n\t\t\t\t\tcode += chunks.normalVertexPS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode += gammaCode(options.gamma, chunks);\n\t\t\tcode += tonemapCode(options.toneMap, chunks);\n\t\t\tcode += fogCode(options.fog, chunks);\n\t\t\tif (options.useRgbm) code += chunks.rgbmPS;\n\n\t\t\tif (cubemapReflection || options.prefilteredCubemap) {\n\t\t\t\tcode += options.fixSeams ? chunks.fixCubemapSeamsStretchPS : chunks.fixCubemapSeamsNonePS;\n\t\t\t}\n\n\t\t\tif (options.useCubeMapRotation) {\n\t\t\t\tcode += \"#define CUBEMAP_ROTATION\\n\";\n\t\t\t}\n\n\t\t\tif (options.useRightHandedCubeMap) {\n\t\t\t\tcode += \"#define RIGHT_HANDED_CUBEMAP\\n\";\n\t\t\t}\n\n\t\t\tif (needsNormal) {\n\t\t\t\tcode += chunks.cubeMapRotatePS;\n\t\t\t\tcode += options.cubeMapProjection > 0 ? chunks.cubeMapProjectBoxPS : chunks.cubeMapProjectNonePS;\n\t\t\t\tcode += options.skyboxIntensity ? chunks.envMultiplyPS : chunks.envConstPS;\n\t\t\t}\n\n\t\t\tif (options.diffuseDetail) {\n\t\t\t\tcode += this._addMap(\"diffuseDetail\", \"diffuseDetailMapPS\", options, chunks);\n\t\t\t}\n\n\t\t\tcode += this._addMap(\"diffuse\", \"diffusePS\", options, chunks);\n\n\t\t\tif (options.blendType !== BLEND_NONE || options.alphaTest || options.alphaToCoverage) {\n\t\t\t\tcode += this._addMap(\"opacity\", \"opacityPS\", options, chunks);\n\t\t\t}\n\n\t\t\tcode += this._addMap(\"emissive\", \"emissivePS\", options, chunks, options.emissiveFormat);\n\n\t\t\tif (lighting && options.useSpecular || reflections) {\n\t\t\t\tif (options.specularAntialias && options.normalMap) {\n\t\t\t\t\tif (options.normalizeNormalMap && needsNormal) {\n\t\t\t\t\t\tcode += chunks.specularAaToksvigPS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.specularAaToksvigFastPS;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcode += chunks.specularAaNonePS;\n\t\t\t\t}\n\n\t\t\t\tvar specularPropName = options.useMetalness ? \"metalness\" : \"specular\";\n\t\t\t\tcode += this._addMap(specularPropName, specularPropName + \"PS\", options, chunks);\n\t\t\t\tcode += this._addMap(\"gloss\", \"glossPS\", options, chunks);\n\n\t\t\t\tif (options.fresnelModel === FRESNEL_SCHLICK) {\n\t\t\t\t\tcode += chunks.fresnelSchlickPS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.clearCoat > 0) {\n\t\t\t\tcode += this._addMap(\"clearCoat\", \"clearCoatPS\", options, chunks);\n\t\t\t\tcode += this._addMap(\"clearCoatGloss\", \"clearCoatGlossPS\", options, chunks);\n\t\t\t\tcode += this._addMap(\"clearCoatNormal\", \"clearCoatNormalPS\", options, chunks);\n\t\t\t}\n\n\t\t\tif (options.heightMap) {\n\t\t\t\tif (!options.normalMap) {\n\t\t\t\t\tvar transformedHeightMapUv = this._getUvSourceExpression(\"heightMapTransform\", \"heightMapUv\", options);\n\n\t\t\t\t\tif (!options.hasTangents) tbn = tbn.replace(/\\$UV/g, transformedHeightMapUv);\n\t\t\t\t\tcode += tbn;\n\t\t\t\t}\n\n\t\t\t\tcode += this._addMap(\"height\", \"parallaxPS\", options, chunks);\n\t\t\t}\n\n\t\t\tvar useAo = options.aoMap || options.aoVertexColor;\n\n\t\t\tif (useAo) {\n\t\t\t\tcode += this._addMap(\"ao\", \"aoPS\", options, chunks);\n\n\t\t\t\tif (options.occludeSpecular) {\n\t\t\t\t\tif (options.occludeSpecular === SPECOCC_AO) {\n\t\t\t\t\t\tcode += options.occludeSpecularFloat ? chunks.aoSpecOccSimplePS : chunks.aoSpecOccConstSimplePS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += options.occludeSpecularFloat ? chunks.aoSpecOccPS : chunks.aoSpecOccConstPS;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar reflectionDecode = options.rgbmReflection ? \"decodeRGBM\" : options.hdrReflection ? \"\" : \"gammaCorrectInput\";\n\n\t\t\tif (options.sphereMap) {\n\t\t\t\tvar scode = device.fragmentUniformsCount > 16 ? chunks.reflectionSpherePS : chunks.reflectionSphereLowPS;\n\t\t\t\tscode = scode.replace(/\\$texture2DSAMPLE/g, options.rgbmReflection ? \"texture2DRGBM\" : options.hdrReflection ? \"texture2D\" : \"texture2DSRGB\");\n\t\t\t\tcode += scode;\n\t\t\t} else if (cubemapReflection) {\n\t\t\t\tif (options.prefilteredCubemap) {\n\t\t\t\t\tif (useTexCubeLod) {\n\t\t\t\t\t\tcode += chunks.reflectionPrefilteredCubeLodPS.replace(/\\$DECODE/g, reflectionDecode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.reflectionPrefilteredCubePS.replace(/\\$DECODE/g, reflectionDecode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcode += chunks.reflectionCubePS.replace(/\\$textureCubeSAMPLE/g, options.rgbmReflection ? \"textureCubeRGBM\" : options.hdrReflection ? \"textureCube\" : \"textureCubeSRGB\");\n\t\t\t\t}\n\t\t\t} else if (options.dpAtlas) {\n\t\t\t\tcode += chunks.reflectionDpAtlasPS.replace(/\\$texture2DSAMPLE/g, options.rgbmReflection ? \"texture2DRGBM\" : options.hdrReflection ? \"texture2D\" : \"texture2DSRGB\");\n\t\t\t}\n\n\t\t\tif (cubemapReflection || options.sphereMap || options.dpAtlas) {\n\t\t\t\tif (options.clearCoat > 0) {\n\t\t\t\t\tcode += chunks.reflectionCCPS;\n\t\t\t\t}\n\n\t\t\t\tif (options.refraction) {\n\t\t\t\t\tcode += chunks.refractionPS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (numShadowLights > 0) {\n\t\t\t\tif (shadowTypeUsed[SHADOW_PCF3]) {\n\t\t\t\t\tcode += chunks.shadowStandardPS;\n\t\t\t\t}\n\n\t\t\t\tif (shadowTypeUsed[SHADOW_PCF5]) {\n\t\t\t\t\tcode += chunks.shadowStandardGL2PS;\n\t\t\t\t}\n\n\t\t\t\tif (useVsm) {\n\t\t\t\t\tcode += chunks.shadowVSM_commonPS;\n\n\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM8]) {\n\t\t\t\t\t\tcode += chunks.shadowVSM8PS;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM16]) {\n\t\t\t\t\t\tcode += device.extTextureHalfFloatLinear ? chunks.shadowEVSMPS.replace(/\\$/g, \"16\") : chunks.shadowEVSMnPS.replace(/\\$/g, \"16\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM32]) {\n\t\t\t\t\t\tcode += device.extTextureFloatLinear ? chunks.shadowEVSMPS.replace(/\\$/g, \"32\") : chunks.shadowEVSMnPS.replace(/\\$/g, \"32\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!(device.webgl2 || device.extStandardDerivatives)) {\n\t\t\t\t\tcode += chunks.biasConstPS;\n\t\t\t\t}\n\n\t\t\t\tcode += chunks.shadowCoordPS + chunks.shadowCommonPS;\n\t\t\t\tif (usePerspZbufferShadow) code += chunks.shadowCoordPerspZbufferPS;\n\n\t\t\t\tif (mainShadowLight >= 0) {\n\t\t\t\t\tif (shadowTypeUsed[SHADOW_PCF3]) {\n\t\t\t\t\t\tcode += chunks.shadowStandardVSPS;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shadowTypeUsed[SHADOW_PCF5]) {\n\t\t\t\t\t\tcode += chunks.shadowStandardGL2VSPS;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (useVsm) {\n\t\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM8]) {\n\t\t\t\t\t\t\tcode += chunks.shadowVSMVSPS.replace(/\\$VSM/g, \"VSM8\").replace(/\\$/g, \"8\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM16]) {\n\t\t\t\t\t\t\tcode += chunks.shadowVSMVSPS.replace(/\\$VSM/g, \"VSM16\").replace(/\\$/g, \"16\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (shadowTypeUsed[SHADOW_VSM32]) {\n\t\t\t\t\t\t\tcode += chunks.shadowVSMVSPS.replace(/\\$VSM/g, \"VSM32\").replace(/\\$/g, \"32\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.enableGGXSpecular) code += \"uniform float material_anisotropy;\\n\";\n\n\t\t\tif (lighting) {\n\t\t\t\tcode += chunks.lightDiffuseLambertPS;\n\t\t\t\tif (hasAreaLights) code += chunks.ltc;\n\t\t\t}\n\n\t\t\tvar useOldAmbient = false;\n\n\t\t\tif (options.useSpecular) {\n\t\t\t\tif (lighting) code += options.shadingModel === SPECULAR_PHONG ? chunks.lightSpecularPhongPS : options.enableGGXSpecular ? chunks.lightSpecularAnisoGGXPS : chunks.lightSpecularBlinnPS;\n\n\t\t\t\tif (options.sphereMap || cubemapReflection || options.dpAtlas || options.fresnelModel > 0) {\n\t\t\t\t\tif (options.fresnelModel > 0) {\n\t\t\t\t\t\tif (options.conserveEnergy && !hasAreaLights) {\n\t\t\t\t\t\t\tcode += chunks.combineDiffuseSpecularPS;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += chunks.combineDiffuseSpecularNoConservePS;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.combineDiffuseSpecularOldPS;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (options.diffuseMap) {\n\t\t\t\t\t\tcode += chunks.combineDiffuseSpecularNoReflPS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.combineDiffuseSpecularNoReflSeparateAmbientPS;\n\t\t\t\t\t\tuseOldAmbient = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcode += chunks.combineDiffusePS;\n\t\t\t}\n\n\t\t\tif (options.clearCoat > 0) {\n\t\t\t\tcode += chunks.combineClearCoatPS;\n\t\t\t}\n\n\t\t\tvar addAmbient = true;\n\n\t\t\tif (options.lightMap || options.lightVertexColor) {\n\t\t\t\tvar lightmapChunkPropName = options.dirLightMap ? 'lightmapDirPS' : 'lightmapSinglePS';\n\t\t\t\tcode += this._addMap(\"light\", lightmapChunkPropName, options, chunks, options.lightMapFormat);\n\t\t\t\taddAmbient = options.lightMapWithoutAmbient;\n\t\t\t}\n\n\t\t\tif (addAmbient) {\n\t\t\t\tvar ambientDecode = options.rgbmAmbient ? \"decodeRGBM\" : options.hdrAmbient ? \"\" : \"gammaCorrectInput\";\n\n\t\t\t\tif (options.ambientSH) {\n\t\t\t\t\tcode += chunks.ambientSHPS;\n\t\t\t\t} else if (options.prefilteredCubemap) {\n\t\t\t\t\tif (useTexCubeLod) {\n\t\t\t\t\t\tcode += chunks.ambientPrefilteredCubeLodPS.replace(/\\$DECODE/g, ambientDecode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += chunks.ambientPrefilteredCubePS.replace(/\\$DECODE/g, ambientDecode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcode += chunks.ambientConstantPS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.ambientTint && !useOldAmbient) {\n\t\t\t\tcode += \"uniform vec3 material_ambient;\\n\";\n\t\t\t}\n\n\t\t\tif (options.alphaTest) {\n\t\t\t\tcode += chunks.alphaTestPS;\n\t\t\t}\n\n\t\t\tif (options.msdf) {\n\t\t\t\tcode += chunks.msdfPS;\n\t\t\t}\n\n\t\t\tif (needsNormal) {\n\t\t\t\tcode += chunks.viewDirPS;\n\n\t\t\t\tif (options.useSpecular) {\n\t\t\t\t\tcode += options.enableGGXSpecular ? chunks.reflDirAnisoPS : chunks.reflDirPS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar hasPointLights = false;\n\t\t\tvar usesLinearFalloff = false;\n\t\t\tvar usesInvSquaredFalloff = false;\n\t\t\tvar usesSpot = false;\n\t\t\tvar usesCookie = false;\n\t\t\tvar usesCookieNow;\n\t\t\tif (options.twoSidedLighting) code += \"uniform float twoSidedLightingNegScaleFactor;\\n\";\n\t\t\tcode = this._fsAddStartCode(code, device, chunks, options);\n\n\t\t\tif (needsNormal) {\n\t\t\t\tif (!options.hasTangents && device.extStandardDerivatives && !options.fastTbn) {\n\t\t\t\t\tif (options.twoSidedLighting) {\n\t\t\t\t\t\tcode += \"\t dVertexNormalW = normalize(gl_FrontFacing ? vNormalW * twoSidedLightingNegScaleFactor : -vNormalW * twoSidedLightingNegScaleFactor);\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"\t dVertexNormalW = normalize(vNormalW);\\n\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (options.twoSidedLighting) {\n\t\t\t\t\t\tcode += \"\t dVertexNormalW = gl_FrontFacing ? vNormalW * twoSidedLightingNegScaleFactor : -vNormalW * twoSidedLightingNegScaleFactor;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"\t dVertexNormalW = vNormalW;\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((options.heightMap || options.normalMap) && options.hasTangents) {\n\t\t\t\t\tif (options.twoSidedLighting) {\n\t\t\t\t\t\tcode += \"\t dTangentW = gl_FrontFacing ? vTangentW * twoSidedLightingNegScaleFactor : -vTangentW * twoSidedLightingNegScaleFactor;\\n\";\n\t\t\t\t\t\tcode += \"\t dBinormalW = gl_FrontFacing ? vBinormalW * twoSidedLightingNegScaleFactor : -vBinormalW * twoSidedLightingNegScaleFactor;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"\t dTangentW = vTangentW;\\n\";\n\t\t\t\t\t\tcode += \"\t dBinormalW = vBinormalW;\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar opacityParallax = false;\n\n\t\t\tif (options.blendType === BLEND_NONE && !options.alphaTest && !options.alphaToCoverage) {\n\t\t\t\tcode += \"\t dAlpha = 1.0;\\n\";\n\t\t\t} else {\n\t\t\t\tif (options.heightMap && options.opacityMap) {\n\t\t\t\t\topacityParallax = true;\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"\t getOpacity();\\n\";\n\n\t\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\t\tcode += \"\t alphaTest(dAlpha);\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar getGlossinessCalled = false;\n\n\t\t\tif (needsNormal) {\n\t\t\t\tcode += \"\t getViewDir();\\n\";\n\n\t\t\t\tif (options.heightMap || options.normalMap || options.clearCoatNormalMap || options.enableGGXSpecular) {\n\t\t\t\t\tcode += \"\t getTBN();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (options.heightMap) {\n\t\t\t\t\tcode += \"\t getParallax();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (opacityParallax) {\n\t\t\t\t\tcode += \"\t getOpacity();\\n\";\n\n\t\t\t\t\tif (options.alphaTest) {\n\t\t\t\t\t\tcode += \"\t alphaTest(dAlpha);\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcode += \"\t getNormal();\\n\";\n\n\t\t\t\tif (options.useSpecular) {\n\t\t\t\t\tif (options.enableGGXSpecular) {\n\t\t\t\t\t\tcode += \"\t getGlossiness();\\n\";\n\t\t\t\t\t\tgetGlossinessCalled = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcode += \"\t getReflDir();\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode += \"\t getAlbedo();\\n\";\n\n\t\t\tif (options.clearCoat > 0) {\n\t\t\t\tcode += \"\t getClearCoat();\\n\";\n\t\t\t\tcode += \"\t getClearCoatGlossiness();\\n\";\n\t\t\t\tcode += \"\t getClearCoatNormal();\\n\";\n\t\t\t}\n\n\t\t\tif (lighting && options.useSpecular || reflections) {\n\t\t\t\tcode += \"\t getSpecularity();\\n\";\n\t\t\t\tif (!getGlossinessCalled) code += \"\t getGlossiness();\\n\";\n\n\t\t\t\tif (hasAreaLights) {\n\t\t\t\t\tcode += \"\t #ifdef AREA_LIGHTS\\n\";\n\t\t\t\t\tcode += \"\t dSpecularityNoFres = dSpecularity;\\n\";\n\t\t\t\t\tcode += \"\t #ifdef CLEARCOAT\\n\";\n\t\t\t\t\tcode += \"\t ccSpecularityNoFres = ccSpecularity;\\n\";\n\t\t\t\t\tcode += \"\t #endif\\n\";\n\t\t\t\t\tcode += \"\t #endif\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (options.fresnelModel > 0) code += \"\t getFresnel();\\n\";\n\t\t\t}\n\n\t\t\tif (addAmbient) {\n\t\t\t\tcode += \"\t addAmbient();\\n\";\n\t\t\t}\n\n\t\t\tif (options.ambientTint && !useOldAmbient) {\n\t\t\t\tcode += \"\t dDiffuseLight *= material_ambient;\\n\";\n\t\t\t}\n\n\t\t\tif (useAo && !options.occludeDirect) {\n\t\t\t\tcode += \"\t\tapplyAO();\\n\";\n\t\t\t}\n\n\t\t\tif (options.lightMap || options.lightVertexColor) {\n\t\t\t\tcode += \"\t addLightMap();\\n\";\n\t\t\t}\n\n\t\t\tif (lighting || reflections) {\n\t\t\t\tif (cubemapReflection || options.sphereMap || options.dpAtlas) {\n\t\t\t\t\tif (options.clearCoat > 0) {\n\t\t\t\t\t\tcode += \"\t addReflectionCC();\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tcode += \"\t addReflection();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (hasAreaLights) {\n\t\t\t\t\tcode += \"\t ccReflection.rgb *= ccSpecularity;\\n\";\n\t\t\t\t\tcode += \"\t dReflection.rgb *= dSpecularity;\\n\";\n\t\t\t\t\tcode += \"\t dSpecularLight *= dSpecularity;\\n\";\n\t\t\t\t\tcode += \"\t float roughness = max((1.0 - dGlossiness) * (1.0 - dGlossiness), 0.001);\\n\";\n\t\t\t\t}\n\n\t\t\t\tvar shapeString = '';\n\n\t\t\t\tfor (i = 0; i < options.lights.length; i++) {\n\t\t\t\t\tlight = options.lights[i];\n\t\t\t\t\tlightType = light._type;\n\t\t\t\t\tusesCookieNow = false;\n\n\t\t\t\t\tif (hasAreaLights && light._shape) {\n\t\t\t\t\t\tlightShape = light._shape;\n\t\t\t\t\t\tshapeString = this._getLightSourceShapeString(lightShape);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlightShape = LIGHTSHAPE_PUNCTUAL;\n\t\t\t\t\t\tshapeString = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightShape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\t\tcode += \"\t calc\" + shapeString + \"LightValues(light\" + i + \"_position, light\" + i + \"_halfWidth, light\" + i + \"_halfHeight);\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tcode += \"\t dLightDirNormW = light\" + i + \"_direction;\\n\";\n\t\t\t\t\t\tcode += \"\t dAtten = 1.0;\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (light._cookie) {\n\t\t\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT && !light._cookie._cubemap) {\n\t\t\t\t\t\t\t\tusesCookie = true;\n\t\t\t\t\t\t\t\tusesCookieNow = true;\n\t\t\t\t\t\t\t} else if (lightType === LIGHTTYPE_OMNI && light._cookie._cubemap) {\n\t\t\t\t\t\t\t\tusesCookie = true;\n\t\t\t\t\t\t\t\tusesCookieNow = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode += \"\t getLightDirPoint(light\" + i + \"_position);\\n\";\n\t\t\t\t\t\thasPointLights = true;\n\n\t\t\t\t\t\tif (usesCookieNow) {\n\t\t\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\t\t\tcode += \"\t dAtten3 = getCookie2D\" + (light._cookieFalloff ? \"\" : \"Clip\") + (light._cookieTransform ? \"Xform\" : \"\") + \"(light\" + i + \"_cookie, light\" + i + \"_shadowMatrix, light\" + i + \"_cookieIntensity\" + (light._cookieTransform ? \", light\" + i + \"_cookieMatrix, light\" + i + \"_cookieOffset\" : \"\") + \").\" + light._cookieChannel + \";\\n\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode += \"\t dAtten3 = getCookieCube(light\" + i + \"_cookie, light\" + i + \"_shadowMatrix, light\" + i + \"_cookieIntensity).\" + light._cookieChannel + \";\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (lightShape === LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\t\t\tif (light._falloffMode === LIGHTFALLOFF_LINEAR) {\n\t\t\t\t\t\t\t\tcode += \"\t dAtten = getFalloffLinear(light\" + i + \"_radius);\\n\";\n\t\t\t\t\t\t\t\tusesLinearFalloff = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode += \"\t dAtten = getFalloffInvSquared(light\" + i + \"_radius);\\n\";\n\t\t\t\t\t\t\t\tusesInvSquaredFalloff = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += \"\t dAtten = getFalloffWindow(light\" + i + \"_radius);\\n\";\n\t\t\t\t\t\t\tusesInvSquaredFalloff = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode += \"\t if (dAtten > 0.00001) {\\n\";\n\n\t\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\t\tif (!(usesCookieNow && !light._cookieFalloff)) {\n\t\t\t\t\t\t\t\tcode += \"\t\t\t dAtten *= getSpotEffect(light\" + i + \"_direction, light\" + i + \"_innerConeAngle, light\" + i + \"_outerConeAngle);\\n\";\n\t\t\t\t\t\t\t\tusesSpot = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightShape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\t\tif (lightType === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\t\tcode += \"\t\t\t dAttenD = getLightDiffuse();\\n\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += \"\t\t\t dAttenD = get\" + shapeString + \"LightDiffuse() * 16.0;\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode += \"\t\t\t dAtten *= getLightDiffuse();\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (light.castShadows && !options.noShadow) {\n\t\t\t\t\t\tvar shadowReadMode = null;\n\t\t\t\t\t\tvar evsmExp;\n\n\t\t\t\t\t\tif (light._shadowType === SHADOW_VSM8) {\n\t\t\t\t\t\t\tshadowReadMode = \"VSM8\";\n\t\t\t\t\t\t\tevsmExp = \"0.0\";\n\t\t\t\t\t\t} else if (light._shadowType === SHADOW_VSM16) {\n\t\t\t\t\t\t\tshadowReadMode = \"VSM16\";\n\t\t\t\t\t\t\tevsmExp = \"5.54\";\n\t\t\t\t\t\t} else if (light._shadowType === SHADOW_VSM32) {\n\t\t\t\t\t\t\tshadowReadMode = \"VSM32\";\n\n\t\t\t\t\t\t\tif (device.textureFloatHighPrecision) {\n\t\t\t\t\t\t\t\tevsmExp = \"15.0\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tevsmExp = \"5.54\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (light._shadowType === SHADOW_PCF5) {\n\t\t\t\t\t\t\tshadowReadMode = \"PCF5x5\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshadowReadMode = \"PCF3x3\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (shadowReadMode !== null) {\n\t\t\t\t\t\t\tif (lightType === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\t\tshadowCoordArgs = \"(light\" + i + \"_shadowMap, light\" + i + \"_shadowParams);\\n\";\n\n\t\t\t\t\t\t\t\tif (light._normalOffsetBias) {\n\t\t\t\t\t\t\t\t\tcode += \"\t\t\t normalOffsetPointShadow(light\" + i + \"_shadowParams);\\n\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcode += \"\t\t\t dAtten *= getShadowPoint\" + shadowReadMode + shadowCoordArgs;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (mainShadowLight === i) {\n\t\t\t\t\t\t\t\t\tshadowReadMode += \"VS\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshadowCoordArgs = \"(light\" + i + \"_shadowMatrix, light\" + i + \"_shadowParams);\\n\";\n\t\t\t\t\t\t\t\t\tcode += this._nonPointShadowMapProjection(device, options.lights[i], shadowCoordArgs);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (lightType === LIGHTTYPE_SPOT) shadowReadMode = \"Spot\" + shadowReadMode;\n\t\t\t\t\t\t\t\tcode += \"\t\t\t dAtten *= getShadow\" + shadowReadMode + \"(light\" + i + \"_shadowMap, light\" + i + \"_shadowParams\" + (light._isVsm ? \", \" + evsmExp : \"\") + \");\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightShape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\t\tif (options.conserveEnergy && options.useSpecular) {\n\t\t\t\t\t\t\tcode += \"\t\t\t dDiffuseLight += mix((dAttenD * dAtten) * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \", vec3(0), dLTCSpecFres);\\n\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += \"\t\t\t dDiffuseLight += (dAttenD * dAtten) * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasAreaLights && options.conserveEnergy && options.useSpecular) {\n\t\t\t\t\t\t\tcode += \"\t\t\t dDiffuseLight += mix(dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \", vec3(0), dSpecularity);\\n\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode += \"\t\t\t dDiffuseLight += dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightShape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\t\tif (options.clearCoat > 0) code += \"\t\t\t ccSpecularLight += ccLTCSpecFres * get\" + shapeString + \"LightSpecularCC() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\tif (options.useSpecular) code += \"\t\t\t dSpecularLight += dLTCSpecFres * get\" + shapeString + \"LightSpecular() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasAreaLights) {\n\t\t\t\t\t\t\tif (options.clearCoat > 0) code += \"\t\t\t ccSpecularLight += ccSpecularity * getLightSpecularCC() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t\tif (options.useSpecular) code += \"\t\t\t dSpecularLight += dSpecularity * getLightSpecular() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (options.clearCoat > 0) code += \"\t\t\t ccSpecularLight += getLightSpecularCC() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t\tif (options.useSpecular) code += \"\t\t\t dSpecularLight += getLightSpecular() * dAtten * light\" + i + \"_color\" + (usesCookieNow ? \" * dAtten3\" : \"\") + \";\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lightType !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tcode += \"\t }\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tcode += \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (hasAreaLights) {\n\t\t\t\t\tif (options.clearCoat > 0) {\n\t\t\t\t\t\tcode += \"\t ccSpecularity = vec3(1);\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.useSpecular) {\n\t\t\t\t\t\tcode += \"\t dSpecularity = vec3(1);\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((cubemapReflection || options.sphereMap || options.dpAtlas) && options.refraction) {\n\t\t\t\t\tcode += \"\t addRefraction();\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcode += \"\\n\";\n\n\t\t\tif (useAo) {\n\t\t\t\tif (options.occludeDirect) {\n\t\t\t\t\tcode += \"\t\tapplyAO();\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (options.occludeSpecular) {\n\t\t\t\t\tcode += \"\t\toccludeSpecular();\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.opacityFadesSpecular === false) {\n\t\t\t\tif (options.blendType === BLEND_NORMAL || options.blendType === BLEND_PREMULTIPLIED) {\n\t\t\t\t\tcode += \"float specLum = dot((dSpecularLight + dReflection.rgb * dReflection.a) * dSpecularity, vec3( 0.2126, 0.7152, 0.0722 ));\\n\";\n\t\t\t\t\tcode += \"#ifdef CLEARCOAT\\n specLum += dot(ccSpecularLight * ccSpecularity + ccReflection.rgb * ccReflection.a * ccSpecularity, vec3( 0.2126, 0.7152, 0.0722 ));\\n#endif\\n\";\n\t\t\t\t\tcode += \"dAlpha = clamp(dAlpha + gammaCorrectInput(specLum), 0.0, 1.0);\\n\";\n\t\t\t\t}\n\n\t\t\t\tcode += \"dAlpha *= material_alphaFade;\\n\";\n\t\t\t}\n\n\t\t\tcode += chunks.endPS;\n\n\t\t\tif (options.blendType === BLEND_NORMAL || options.blendType === BLEND_ADDITIVEALPHA || options.alphaToCoverage) {\n\t\t\t\tcode += chunks.outputAlphaPS;\n\t\t\t} else if (options.blendType === BLEND_PREMULTIPLIED) {\n\t\t\t\tcode += chunks.outputAlphaPremulPS;\n\t\t\t} else {\n\t\t\t\tcode += chunks.outputAlphaOpaquePS;\n\t\t\t}\n\n\t\t\tif (options.msdf) {\n\t\t\t\tcode += \"\t gl_FragColor = applyMsdf(gl_FragColor);\\n\";\n\t\t\t}\n\n\t\t\tcode += \"\\n\";\n\t\t\tcode += end();\n\n\t\t\tif (hasPointLights) {\n\t\t\t\tcode = chunks.lightDirPointPS + code;\n\t\t\t}\n\n\t\t\tif (usesLinearFalloff) {\n\t\t\t\tcode = chunks.falloffLinearPS + code;\n\t\t\t}\n\n\t\t\tif (usesInvSquaredFalloff) {\n\t\t\t\tcode = chunks.falloffInvSquaredPS + code;\n\t\t\t}\n\n\t\t\tif (usesSpot) {\n\t\t\t\tcode = chunks.spotPS + code;\n\t\t\t}\n\n\t\t\tif (usesCookie) {\n\t\t\t\tcode = chunks.cookiePS + code;\n\t\t\t}\n\n\t\t\tvar structCode = \"\";\n\t\t\tif (code.includes(\"dReflection\")) structCode += \"vec4 dReflection;\\n\";\n\t\t\tif (code.includes(\"dTBN\")) structCode += \"mat3 dTBN;\\n\";\n\t\t\tif (code.includes(\"dAlbedo\")) structCode += \"vec3 dAlbedo;\\n\";\n\t\t\tif (code.includes(\"dEmission\")) structCode += \"vec3 dEmission;\\n\";\n\t\t\tif (code.includes(\"dNormalW\")) structCode += \"vec3 dNormalW;\\n\";\n\t\t\tif (code.includes(\"dVertexNormalW\")) structCode += \"vec3 dVertexNormalW;\\n\";\n\t\t\tif (code.includes(\"dTangentW\")) structCode += \"vec3 dTangentW;\\n\";\n\t\t\tif (code.includes(\"dBinormalW\")) structCode += \"vec3 dBinormalW;\\n\";\n\t\t\tif (code.includes(\"dViewDirW\")) structCode += \"vec3 dViewDirW;\\n\";\n\t\t\tif (code.includes(\"dReflDirW\")) structCode += \"vec3 dReflDirW;\\n\";\n\t\t\tif (code.includes(\"dDiffuseLight\")) structCode += \"vec3 dDiffuseLight;\\n\";\n\t\t\tif (code.includes(\"dSpecularLight\")) structCode += \"vec3 dSpecularLight;\\n\";\n\t\t\tif (code.includes(\"dLightDirNormW\")) structCode += \"vec3 dLightDirNormW;\\n\";\n\t\t\tif (code.includes(\"dLightDirW\")) structCode += \"vec3 dLightDirW;\\n\";\n\t\t\tif (code.includes(\"dLightPosW\")) structCode += \"vec3 dLightPosW;\\n\";\n\t\t\tif (code.includes(\"dShadowCoord\")) structCode += \"vec3 dShadowCoord;\\n\";\n\t\t\tif (code.includes(\"dNormalMap\")) structCode += \"vec3 dNormalMap;\\n\";\n\t\t\tif (code.includes(\"dSpecularity\")) structCode += \"vec3 dSpecularity;\\n\";\n\t\t\tif (code.includes(\"dSpecularityNoFres\")) structCode += \"vec3 dSpecularityNoFres;\\n\";\n\t\t\tif (code.includes(\"dUvOffset\")) structCode += \"vec2 dUvOffset;\\n\";\n\t\t\tif (code.includes(\"dGlossiness\")) structCode += \"float dGlossiness;\\n\";\n\t\t\tif (code.includes(\"dAlpha\")) structCode += \"float dAlpha;\\n\";\n\t\t\tif (code.includes(\"dAtten\")) structCode += \"float dAtten;\\n\";\n\t\t\tif (code.includes(\"dAttenD\")) structCode += \"float dAttenD;\\n\";\n\t\t\tif (code.includes(\"dAtten3\")) structCode += \"vec3 dAtten3;\\n\";\n\t\t\tif (code.includes(\"dAo\")) structCode += \"float dAo;\\n\";\n\t\t\tif (code.includes(\"dMsdf\")) structCode += \"vec4 dMsdf;\\n\";\n\t\t\tif (code.includes(\"ccReflection\")) structCode += \"vec4 ccReflection;\\n\";\n\t\t\tif (code.includes(\"ccNormalW\")) structCode += \"vec3 ccNormalW;\\n\";\n\t\t\tif (code.includes(\"ccReflDirW\")) structCode += \"vec3 ccReflDirW;\\n\";\n\t\t\tif (code.includes(\"ccSpecularLight\")) structCode += \"vec3 ccSpecularLight;\\n\";\n\t\t\tif (code.includes(\"ccSpecularity\")) structCode += \"float ccSpecularity;\\n\";\n\t\t\tif (code.includes(\"ccSpecularityNoFres\")) structCode += \"float ccSpecularityNoFres;\\n\";\n\t\t\tif (code.includes(\"ccGlossiness\")) structCode += \"float ccGlossiness;\\n\";\n\t\t\tcode = codeBegin + structCode + code;\n\t\t\tfshader = code;\n\t\t\treturn {\n\t\t\t\tattributes: attributes,\n\t\t\t\tvshader: vshader,\n\t\t\t\tfshader: fshader,\n\t\t\t\ttag: SHADERTAG_MATERIAL\n\t\t\t};\n\t\t}\n\t};\n\n\tvar programlib = {\n\t\tbegin: begin,\n\t\tdummyFragmentCode: dummyFragmentCode,\n\t\tend: end,\n\t\tfogCode: fogCode,\n\t\tgammaCode: gammaCode,\n\t\tprecisionCode: precisionCode,\n\t\tskinCode: skinCode,\n\t\ttonemapCode: tonemapCode,\n\t\tversionCode: versionCode,\n\t\tbasic: basic,\n\t\tparticle: particle,\n\t\tskybox: skybox,\n\t\tstandard: standard\n\t};\n\n\tvar _pixelSizeTable = null;\n\tvar _blockSizeTable = null;\n\n\tvar Texture = function () {\n\t\tfunction Texture(graphicsDevice, options) {\n\t\t\tthis.device = graphicsDevice;\n\t\t\tthis.name = null;\n\t\t\tthis._width = 4;\n\t\t\tthis._height = 4;\n\t\t\tthis._depth = 1;\n\t\t\tthis._format = PIXELFORMAT_R8_G8_B8_A8;\n\t\t\tthis.type = TEXTURETYPE_DEFAULT;\n\t\t\tthis._cubemap = false;\n\t\t\tthis._volume = false;\n\t\t\tthis.fixCubemapSeams = false;\n\t\t\tthis._flipY = true;\n\t\t\tthis._premultiplyAlpha = false;\n\t\t\tthis._isRenderTarget = false;\n\t\t\tthis._mipmaps = true;\n\t\t\tthis._minFilter = FILTER_LINEAR_MIPMAP_LINEAR;\n\t\t\tthis._magFilter = FILTER_LINEAR;\n\t\t\tthis._anisotropy = 1;\n\t\t\tthis._addressU = ADDRESS_REPEAT;\n\t\t\tthis._addressV = ADDRESS_REPEAT;\n\t\t\tthis._addressW = ADDRESS_REPEAT;\n\t\t\tthis._compareOnRead = false;\n\t\t\tthis._compareFunc = FUNC_LESS;\n\n\t\t\tif (options !== undefined) {\n\t\t\t\tif (options.name !== undefined) {\n\t\t\t\t\tthis.name = options.name;\n\t\t\t\t}\n\n\t\t\t\tthis._width = options.width !== undefined ? options.width : this._width;\n\t\t\t\tthis._height = options.height !== undefined ? options.height : this._height;\n\t\t\t\tthis._format = options.format !== undefined ? options.format : this._format;\n\n\t\t\t\tif (options.hasOwnProperty('type')) {\n\t\t\t\t\tthis.type = options.type;\n\t\t\t\t} else if (options.hasOwnProperty('rgbm')) {\n\t\t\t\t\tthis.type = options.rgbm ? TEXTURETYPE_RGBM : TEXTURETYPE_DEFAULT;\n\t\t\t\t} else if (options.hasOwnProperty('swizzleGGGR')) {\n\t\t\t\t\tthis.type = options.swizzleGGGR ? TEXTURETYPE_SWIZZLEGGGR : TEXTURETYPE_DEFAULT;\n\t\t\t\t}\n\n\t\t\t\tif (options.mipmaps !== undefined) {\n\t\t\t\t\tthis._mipmaps = options.mipmaps;\n\t\t\t\t} else {\n\t\t\t\t\tthis._mipmaps = options.autoMipmap !== undefined ? options.autoMipmap : this._mipmaps;\n\t\t\t\t}\n\n\t\t\t\tthis._levels = options.levels;\n\t\t\t\tthis._cubemap = options.cubemap !== undefined ? options.cubemap : this._cubemap;\n\t\t\t\tthis.fixCubemapSeams = options.fixCubemapSeams !== undefined ? options.fixCubemapSeams : this.fixCubemapSeams;\n\t\t\t\tthis._minFilter = options.minFilter !== undefined ? options.minFilter : this._minFilter;\n\t\t\t\tthis._magFilter = options.magFilter !== undefined ? options.magFilter : this._magFilter;\n\t\t\t\tthis._anisotropy = options.anisotropy !== undefined ? options.anisotropy : this._anisotropy;\n\t\t\t\tthis._addressU = options.addressU !== undefined ? options.addressU : this._addressU;\n\t\t\t\tthis._addressV = options.addressV !== undefined ? options.addressV : this._addressV;\n\t\t\t\tthis._compareOnRead = options.compareOnRead !== undefined ? options.compareOnRead : this._compareOnRead;\n\t\t\t\tthis._compareFunc = options._compareFunc !== undefined ? options._compareFunc : this._compareFunc;\n\t\t\t\tthis._flipY = options.flipY !== undefined ? options.flipY : this._flipY;\n\t\t\t\tthis._premultiplyAlpha = options.premultiplyAlpha !== undefined ? options.premultiplyAlpha : this._premultiplyAlpha;\n\n\t\t\t\tif (graphicsDevice.webgl2) {\n\t\t\t\t\tthis._depth = options.depth !== undefined ? options.depth : this._depth;\n\t\t\t\t\tthis._volume = options.volume !== undefined ? options.volume : this._volume;\n\t\t\t\t\tthis._addressW = options.addressW !== undefined ? options.addressW : this._addressW;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._compressed = this._format === PIXELFORMAT_DXT1 || this._format === PIXELFORMAT_DXT3 || this._format === PIXELFORMAT_DXT5 || this._format >= PIXELFORMAT_ETC1;\n\t\t\tthis._invalid = false;\n\t\t\tthis._lockedLevel = -1;\n\n\t\t\tif (!this._levels) {\n\t\t\t\tthis._levels = this._cubemap ? [[null, null, null, null, null, null]] : [null];\n\t\t\t}\n\n\t\t\tthis.dirtyAll();\n\t\t\tthis._gpuSize = 0;\n\t\t}\n\n\t\tTexture.calcGpuSize = function calcGpuSize(width, height, depth, format, mipmaps, cubemap) {\n\t\t\tif (!_pixelSizeTable) {\n\t\t\t\t_pixelSizeTable = [];\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_A8] = 1;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_L8] = 1;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_L8_A8] = 2;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R5_G6_B5] = 2;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R5_G5_B5_A1] = 2;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R4_G4_B4_A4] = 2;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R8_G8_B8] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R8_G8_B8_A8] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_RGB16F] = 8;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_RGBA16F] = 8;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_RGB32F] = 16;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_RGBA32F] = 16;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_R32F] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_DEPTH] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_DEPTHSTENCIL] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_111110F] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_SRGB] = 4;\n\t\t\t\t_pixelSizeTable[PIXELFORMAT_SRGBA] = 4;\n\t\t\t}\n\n\t\t\tif (!_blockSizeTable) {\n\t\t\t\t_blockSizeTable = [];\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ETC1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ETC2_RGB] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_PVRTC_2BPP_RGB_1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_PVRTC_2BPP_RGBA_1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_PVRTC_4BPP_RGB_1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_PVRTC_4BPP_RGBA_1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_DXT1] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ATC_RGB] = 8;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ETC2_RGBA] = 16;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_DXT3] = 16;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_DXT5] = 16;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ASTC_4x4] = 16;\n\t\t\t\t_blockSizeTable[PIXELFORMAT_ATC_RGBA] = 16;\n\t\t\t}\n\n\t\t\tvar pixelSize = _pixelSizeTable.hasOwnProperty(format) ? _pixelSizeTable[format] : 0;\n\t\t\tvar blockSize = _blockSizeTable.hasOwnProperty(format) ? _blockSizeTable[format] : 0;\n\t\t\tvar result = 0;\n\n\t\t\twhile (1) {\n\t\t\t\tif (pixelSize > 0) {\n\t\t\t\t\tresult += width * height * depth * pixelSize;\n\t\t\t\t} else {\n\t\t\t\t\tvar blockWidth = Math.floor((width + 3) / 4);\n\t\t\t\t\tvar blockHeight = Math.floor((height + 3) / 4);\n\t\t\t\t\tvar blockDepth = Math.floor((depth + 3) / 4);\n\n\t\t\t\t\tif (format === PIXELFORMAT_PVRTC_2BPP_RGB_1 || format === PIXELFORMAT_PVRTC_2BPP_RGBA_1) {\n\t\t\t\t\t\tblockWidth = Math.floor(blockWidth / 2, 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult += blockWidth * blockHeight * blockDepth * blockSize;\n\t\t\t\t}\n\n\t\t\t\tif (!mipmaps || width === 1 && height === 1 && depth === 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\twidth = Math.max(Math.floor(width / 2), 1);\n\t\t\t\theight = Math.max(Math.floor(height / 2), 1);\n\t\t\t\tdepth = Math.max(Math.floor(depth / 2), 1);\n\t\t\t}\n\n\t\t\treturn result * (cubemap ? 6 : 1);\n\t\t};\n\n\t\tvar _proto = Texture.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this.device) {\n\t\t\t\tthis.device.destroyTexture(this);\n\t\t\t}\n\n\t\t\tthis.device = null;\n\t\t\tthis._levels = this._cubemap ? [[null, null, null, null, null, null]] : [null];\n\t\t};\n\n\t\t_proto.dirtyAll = function dirtyAll() {\n\t\t\tthis._levelsUpdated = this._cubemap ? [[true, true, true, true, true, true]] : [true];\n\t\t\tthis._needsUpload = true;\n\t\t\tthis._needsMipmapsUpload = this._mipmaps;\n\t\t\tthis._mipmapsUploaded = false;\n\t\t\tthis._parameterFlags = 255;\n\t\t};\n\n\t\t_proto.lock = function lock(options) {\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tif (options.level === undefined) {\n\t\t\t\toptions.level = 0;\n\t\t\t}\n\n\t\t\tif (options.face === undefined) {\n\t\t\t\toptions.face = 0;\n\t\t\t}\n\n\t\t\tif (options.mode === undefined) {\n\t\t\t\toptions.mode = TEXTURELOCK_WRITE;\n\t\t\t}\n\n\t\t\tthis._lockedLevel = options.level;\n\n\t\t\tif (this._levels[options.level] === null) {\n\t\t\t\tswitch (this._format) {\n\t\t\t\t\tcase PIXELFORMAT_A8:\n\t\t\t\t\tcase PIXELFORMAT_L8:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(this._width * this._height * this._depth);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_L8_A8:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(this._width * this._height * this._depth * 2);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_R5_G6_B5:\n\t\t\t\t\tcase PIXELFORMAT_R5_G5_B5_A1:\n\t\t\t\t\tcase PIXELFORMAT_R4_G4_B4_A4:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint16Array(this._width * this._height * this._depth);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_R8_G8_B8:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(this._width * this._height * this._depth * 3);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_R8_G8_B8_A8:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(this._width * this._height * this._depth * 4);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_DXT1:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(Math.floor((this._width + 3) / 4) * Math.floor((this._height + 3) / 4) * 8 * this._depth);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_DXT3:\n\t\t\t\t\tcase PIXELFORMAT_DXT5:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint8Array(Math.floor((this._width + 3) / 4) * Math.floor((this._height + 3) / 4) * 16 * this._depth);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_RGB16F:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint16Array(this._width * this._height * this._depth * 3);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_RGB32F:\n\t\t\t\t\t\tthis._levels[options.level] = new Float32Array(this._width * this._height * this._depth * 3);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_RGBA16F:\n\t\t\t\t\t\tthis._levels[options.level] = new Uint16Array(this._width * this._height * this._depth * 4);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PIXELFORMAT_RGBA32F:\n\t\t\t\t\t\tthis._levels[options.level] = new Float32Array(this._width * this._height * this._depth * 4);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this._levels[options.level];\n\t\t};\n\n\t\t_proto.setSource = function setSource(source, mipLevel) {\n\t\t\tif (mipLevel === void 0) {\n\t\t\t\tmipLevel = 0;\n\t\t\t}\n\n\t\t\tvar i;\n\t\t\tvar invalid = false;\n\t\t\tvar width, height;\n\n\t\t\tif (this._cubemap) {\n\t\t\t\tif (source[0]) {\n\t\t\t\t\twidth = source[0].width || 0;\n\t\t\t\t\theight = source[0].height || 0;\n\n\t\t\t\t\tfor (i = 0; i < 6; i++) {\n\t\t\t\t\t\tvar face = source[i];\n\n\t\t\t\t\t\tif (!face || face.width !== width || face.height !== height || !this.device._isBrowserInterface(face)) {\n\t\t\t\t\t\t\tinvalid = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\n\t\t\t\tif (!invalid) {\n\t\t\t\t\tfor (i = 0; i < 6; i++) {\n\t\t\t\t\t\tif (this._levels[mipLevel][i] !== source[i]) this._levelsUpdated[mipLevel][i] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.device._isBrowserInterface(source)) invalid = true;\n\n\t\t\t\tif (!invalid) {\n\t\t\t\t\tif (source !== this._levels[mipLevel]) this._levelsUpdated[mipLevel] = true;\n\t\t\t\t\twidth = source.width;\n\t\t\t\t\theight = source.height;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invalid) {\n\t\t\t\tthis._width = 4;\n\t\t\t\tthis._height = 4;\n\n\t\t\t\tif (this._cubemap) {\n\t\t\t\t\tfor (i = 0; i < 6; i++) {\n\t\t\t\t\t\tthis._levels[mipLevel][i] = null;\n\t\t\t\t\t\tthis._levelsUpdated[mipLevel][i] = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._levels[mipLevel] = null;\n\t\t\t\t\tthis._levelsUpdated[mipLevel] = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (mipLevel === 0) {\n\t\t\t\t\tthis._width = width;\n\t\t\t\t\tthis._height = height;\n\t\t\t\t}\n\n\t\t\t\tthis._levels[mipLevel] = source;\n\t\t\t}\n\n\t\t\tif (this._invalid !== invalid || !invalid) {\n\t\t\t\tthis._invalid = invalid;\n\t\t\t\tthis.upload();\n\t\t\t}\n\t\t};\n\n\t\t_proto.getSource = function getSource(mipLevel) {\n\t\t\tif (mipLevel === void 0) {\n\t\t\t\tmipLevel = 0;\n\t\t\t}\n\n\t\t\treturn this._levels[mipLevel];\n\t\t};\n\n\t\t_proto.unlock = function unlock() {\n\t\t\tthis.upload();\n\t\t\tthis._lockedLevel = -1;\n\t\t};\n\n\t\t_proto.upload = function upload() {\n\t\t\tthis._needsUpload = true;\n\t\t\tthis._needsMipmapsUpload = this._mipmaps;\n\t\t};\n\n\t\t_proto.getDds = function getDds() {\n\t\t\tvar fsize = 128;\n\t\t\tvar i = 0;\n\t\t\tvar j;\n\t\t\tvar face;\n\n\t\t\twhile (this._levels[i]) {\n\t\t\t\tvar mipSize;\n\n\t\t\t\tif (!this.cubemap) {\n\t\t\t\t\tmipSize = this._levels[i].length;\n\n\t\t\t\t\tif (!mipSize) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tfsize += mipSize;\n\t\t\t\t} else {\n\t\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\t\tif (!this._levels[i][face]) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmipSize = this._levels[i][face].length;\n\n\t\t\t\t\t\tif (!mipSize) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfsize += mipSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfsize += this._levels[i].length;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tvar buff = new ArrayBuffer(fsize);\n\t\t\tvar header = new Uint32Array(buff, 0, 128 / 4);\n\t\t\tvar DDS_MAGIC = 542327876;\n\t\t\tvar DDS_HEADER_SIZE = 124;\n\t\t\tvar DDS_FLAGS_REQUIRED = 0x01 | 0x02 | 0x04 | 0x1000 | 0x80000;\n\t\t\tvar DDS_FLAGS_MIPMAP = 0x20000;\n\t\t\tvar DDS_PIXELFORMAT_SIZE = 32;\n\t\t\tvar DDS_PIXELFLAGS_RGBA8 = 0x01 | 0x40;\n\t\t\tvar DDS_CAPS_REQUIRED = 0x1000;\n\t\t\tvar DDS_CAPS_MIPMAP = 0x400000;\n\t\t\tvar DDS_CAPS_COMPLEX = 0x8;\n\t\t\tvar DDS_CAPS2_CUBEMAP = 0x200 | 0x400 | 0x800 | 0x1000 | 0x2000 | 0x4000 | 0x8000;\n\t\t\tvar flags = DDS_FLAGS_REQUIRED;\n\t\t\tif (this._levels.length > 1) flags |= DDS_FLAGS_MIPMAP;\n\t\t\tvar caps = DDS_CAPS_REQUIRED;\n\t\t\tif (this._levels.length > 1) caps |= DDS_CAPS_MIPMAP;\n\t\t\tif (this._levels.length > 1 || this.cubemap) caps |= DDS_CAPS_COMPLEX;\n\t\t\tvar caps2 = this.cubemap ? DDS_CAPS2_CUBEMAP : 0;\n\t\t\theader[0] = DDS_MAGIC;\n\t\t\theader[1] = DDS_HEADER_SIZE;\n\t\t\theader[2] = flags;\n\t\t\theader[3] = this.height;\n\t\t\theader[4] = this.width;\n\t\t\theader[5] = this.width * this.height * 4;\n\t\t\theader[6] = 0;\n\t\t\theader[7] = this._levels.length;\n\n\t\t\tfor (i = 0; i < 11; i++) {\n\t\t\t\theader[8 + i] = 0;\n\t\t\t}\n\n\t\t\theader[19] = DDS_PIXELFORMAT_SIZE;\n\t\t\theader[20] = DDS_PIXELFLAGS_RGBA8;\n\t\t\theader[21] = 0;\n\t\t\theader[22] = 32;\n\t\t\theader[23] = 0x00FF0000;\n\t\t\theader[24] = 0x0000FF00;\n\t\t\theader[25] = 0x000000FF;\n\t\t\theader[26] = 0xFF000000;\n\t\t\theader[27] = caps;\n\t\t\theader[28] = caps2;\n\t\t\theader[29] = 0;\n\t\t\theader[30] = 0;\n\t\t\theader[31] = 0;\n\t\t\tvar offset = 128;\n\t\t\tvar level, mip;\n\n\t\t\tif (!this.cubemap) {\n\t\t\t\tfor (i = 0; i < this._levels.length; i++) {\n\t\t\t\t\tlevel = this._levels[i];\n\t\t\t\t\tmip = new Uint8Array(buff, offset, level.length);\n\n\t\t\t\t\tfor (j = 0; j < level.length; j++) {\n\t\t\t\t\t\tmip[j] = level[j];\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += level.length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\tfor (i = 0; i < this._levels.length; i++) {\n\t\t\t\t\t\tlevel = this._levels[i][face];\n\t\t\t\t\t\tmip = new Uint8Array(buff, offset, level.length);\n\n\t\t\t\t\t\tfor (j = 0; j < level.length; j++) {\n\t\t\t\t\t\t\tmip[j] = level[j];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += level.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buff;\n\t\t};\n\n\t\t_createClass(Texture, [{\n\t\t\tkey: \"minFilter\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._minFilter;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._minFilter !== v) {\n\t\t\t\t\tthis._minFilter = v;\n\t\t\t\t\tthis._parameterFlags |= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"magFilter\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._magFilter;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._magFilter !== v) {\n\t\t\t\t\tthis._magFilter = v;\n\t\t\t\t\tthis._parameterFlags |= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"addressU\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._addressU;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._addressU !== v) {\n\t\t\t\t\tthis._addressU = v;\n\t\t\t\t\tthis._parameterFlags |= 4;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"addressV\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._addressV;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._addressV !== v) {\n\t\t\t\t\tthis._addressV = v;\n\t\t\t\t\tthis._parameterFlags |= 8;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"addressW\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._addressW;\n\t\t\t},\n\t\t\tset: function set(addressW) {\n\t\t\t\tif (!this.device.webgl2) return;\n\n\t\t\t\tif (!this._volume) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (addressW !== this._addressW) {\n\t\t\t\t\tthis._addressW = addressW;\n\t\t\t\t\tthis._parameterFlags |= 16;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"compareOnRead\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._compareOnRead;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._compareOnRead !== v) {\n\t\t\t\t\tthis._compareOnRead = v;\n\t\t\t\t\tthis._parameterFlags |= 32;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"compareFunc\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._compareFunc;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._compareFunc !== v) {\n\t\t\t\t\tthis._compareFunc = v;\n\t\t\t\t\tthis._parameterFlags |= 64;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"anisotropy\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._anisotropy;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._anisotropy !== v) {\n\t\t\t\t\tthis._anisotropy = v;\n\t\t\t\t\tthis._parameterFlags |= 128;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoMipmap\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._mipmaps;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tthis._mipmaps = v;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"mipmaps\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._mipmaps;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (this._mipmaps !== v) {\n\t\t\t\t\tthis._mipmaps = v;\n\t\t\t\t\tthis._minFilterDirty = true;\n\t\t\t\t\tif (v) this._needsMipmapsUpload = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._width;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._height;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"depth\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._depth;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"format\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._format;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cubemap\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cubemap;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"gpuSize\",\n\t\t\tget: function get() {\n\t\t\t\tvar mips = this.pot && this._mipmaps && !(this._compressed && this._levels.length === 1);\n\t\t\t\treturn Texture.calcGpuSize(this._width, this._height, this._depth, this._format, mips, this._cubemap);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"volume\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._volume;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"flipY\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._flipY;\n\t\t\t},\n\t\t\tset: function set(flipY) {\n\t\t\t\tif (this._flipY !== flipY) {\n\t\t\t\t\tthis._flipY = flipY;\n\t\t\t\t\tthis._needsUpload = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"premultiplyAlpha\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._premultiplyAlpha;\n\t\t\t},\n\t\t\tset: function set(premultiplyAlpha) {\n\t\t\t\tif (this._premultiplyAlpha !== premultiplyAlpha) {\n\t\t\t\t\tthis._premultiplyAlpha = premultiplyAlpha;\n\t\t\t\t\tthis._needsUpload = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pot\",\n\t\t\tget: function get() {\n\t\t\t\treturn math.powerOfTwo(this._width) && math.powerOfTwo(this._height);\n\t\t\t}\n\t\t}]);\n\n\t\treturn Texture;\n\t}();\n\n\tvar dpMult = 2.0;\n\n\tfunction paraboloidFromCubemap(device, sourceCubemap, fixSeamsAmount, dontFlipX) {\n\t\tvar seamsCode = sourceCubemap.fixCubemapSeams ? shaderChunks.fixCubemapSeamsStretchPS : shaderChunks.fixCubemapSeamsNonePS;\n\t\tvar shader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, seamsCode + shaderChunks.genParaboloidPS, \"genParaboloid\");\n\t\tvar constantTexSource = device.scope.resolve(\"source\");\n\t\tvar constantParams = device.scope.resolve(\"params\");\n\t\tvar params = new Vec4();\n\t\tvar size = sourceCubemap.width;\n\t\tvar format = sourceCubemap.format;\n\t\tsize = Math.max(size, 8) * dpMult;\n\t\tvar tex = new Texture(device, {\n\t\t\ttype: sourceCubemap.type,\n\t\t\tformat: format,\n\t\t\twidth: size * 2,\n\t\t\theight: size,\n\t\t\tmipmaps: false\n\t\t});\n\t\ttex.name = 'paraboloid';\n\t\tvar targ = new RenderTarget(device, tex, {\n\t\t\tdepth: false\n\t\t});\n\t\tparams.x = fixSeamsAmount;\n\t\tparams.y = dontFlipX ? -1.0 : 1.0;\n\t\tconstantTexSource.setValue(sourceCubemap);\n\t\tconstantParams.setValue(params.data);\n\t\tdrawQuadWithShader(device, targ, shader);\n\t\treturn tex;\n\t}\n\n\tfunction getDpAtlasRect(rect, mip) {\n\t\trect.x = math.clamp(mip - 2.0, 0, 1) * 0.5;\n\t\tvar t = mip - rect.x * 6.0;\n\t\tvar i = 1.0 - rect.x;\n\t\trect.y = Math.min(t * 0.5, 0.75) * i + rect.x;\n\t\trect.z = (1.0 - math.clamp(t, 0, 1) * 0.5) * i;\n\t\trect.w = rect.z * 0.5;\n\t\treturn 1.0 / rect.z;\n\t}\n\n\tfunction generateDpAtlas(device, sixCubemaps, dontFlipX) {\n\t\tvar dp;\n\t\tvar rect = new Vec4();\n\t\tvar params = new Vec4();\n\t\tvar size = sixCubemaps[0].width * 2 * dpMult;\n\t\tvar shader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.dpAtlasQuadPS, \"dpAtlasQuad\");\n\t\tvar constantTexSource = device.scope.resolve(\"source\");\n\t\tvar constantParams = device.scope.resolve(\"params\");\n\t\tvar tex = new Texture(device, {\n\t\t\ttype: sixCubemaps[0].type,\n\t\t\tformat: sixCubemaps[0].format,\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\tmipmaps: false\n\t\t});\n\t\ttex.name = 'paraboloid';\n\t\tvar targ = new RenderTarget(device, tex, {\n\t\t\tdepth: false\n\t\t});\n\t\tvar borderSize = 2;\n\t\tvar mip0Width = size;\n\t\tvar scaleFactor = (mip0Width + borderSize) / mip0Width - 1;\n\t\tvar scaleAmount;\n\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tdp = paraboloidFromCubemap(device, sixCubemaps[i], i, dontFlipX);\n\t\t\tconstantTexSource.setValue(dp);\n\t\t\tscaleAmount = getDpAtlasRect(rect, i);\n\t\t\tparams.x = scaleAmount * scaleFactor;\n\t\t\tparams.y = params.x * 2;\n\t\t\tparams.x += 1;\n\t\t\tparams.y += 1;\n\t\t\tconstantParams.setValue(params.data);\n\t\t\trect.x *= size;\n\t\t\trect.y *= size;\n\t\t\trect.z *= size;\n\t\t\trect.w *= size;\n\t\t\tdrawQuadWithShader(device, targ, shader, rect);\n\t\t}\n\n\t\treturn tex;\n\t}\n\n\tvar id$1 = 0;\n\n\tvar Material = function () {\n\t\tfunction Material() {\n\t\t\tthis.name = \"Untitled\";\n\t\t\tthis.id = id$1++;\n\t\t\tthis._shader = null;\n\t\t\tthis.variants = {};\n\t\t\tthis.parameters = {};\n\t\t\tthis.alphaTest = 0;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.blend = false;\n\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\tthis.blendDst = BLENDMODE_ZERO;\n\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\tthis.separateAlphaBlend = false;\n\t\t\tthis.blendSrcAlpha = BLENDMODE_ONE;\n\t\t\tthis.blendDstAlpha = BLENDMODE_ZERO;\n\t\t\tthis.blendAlphaEquation = BLENDEQUATION_ADD;\n\t\t\tthis.cull = CULLFACE_BACK;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilFront = null;\n\t\t\tthis.stencilBack = null;\n\t\t\tthis.depthBias = 0;\n\t\t\tthis.slopeDepthBias = 0;\n\t\t\tthis.redWrite = true;\n\t\t\tthis.greenWrite = true;\n\t\t\tthis.blueWrite = true;\n\t\t\tthis.alphaWrite = true;\n\t\t\tthis.meshInstances = [];\n\t\t\tthis._shaderVersion = 0;\n\t\t\tthis._scene = null;\n\t\t\tthis._dirtyBlend = false;\n\t\t\tthis.dirty = true;\n\t\t}\n\n\t\tvar _proto = Material.prototype;\n\n\t\t_proto._cloneInternal = function _cloneInternal(clone) {\n\t\t\tclone.name = this.name;\n\t\t\tclone.shader = this.shader;\n\t\t\tclone.alphaTest = this.alphaTest;\n\t\t\tclone.alphaToCoverage = this.alphaToCoverage;\n\t\t\tclone.blend = this.blend;\n\t\t\tclone.blendSrc = this.blendSrc;\n\t\t\tclone.blendDst = this.blendDst;\n\t\t\tclone.blendEquation = this.blendEquation;\n\t\t\tclone.separateAlphaBlend = this.separateAlphaBlend;\n\t\t\tclone.blendSrcAlpha = this.blendSrcAlpha;\n\t\t\tclone.blendDstAlpha = this.blendDstAlpha;\n\t\t\tclone.blendAlphaEquation = this.blendAlphaEquation;\n\t\t\tclone.cull = this.cull;\n\t\t\tclone.depthTest = this.depthTest;\n\t\t\tclone.depthWrite = this.depthWrite;\n\t\t\tclone.depthBias = this.depthBias;\n\t\t\tclone.slopeDepthBias = this.slopeDepthBias;\n\t\t\tif (this.stencilFront) clone.stencilFront = this.stencilFront.clone();\n\n\t\t\tif (this.stencilBack) {\n\t\t\t\tif (this.stencilFront === this.stencilBack) {\n\t\t\t\t\tclone.stencilBack = clone.stencilFront;\n\t\t\t\t} else {\n\t\t\t\t\tclone.stencilBack = this.stencilBack.clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclone.redWrite = this.redWrite;\n\t\t\tclone.greenWrite = this.greenWrite;\n\t\t\tclone.blueWrite = this.blueWrite;\n\t\t\tclone.alphaWrite = this.alphaWrite;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new Material();\n\n\t\t\tthis._cloneInternal(clone);\n\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto._updateMeshInstanceKeys = function _updateMeshInstanceKeys() {\n\t\t\tvar i,\n\t\t\t\t\tmeshInstances = this.meshInstances;\n\n\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\tmeshInstances[i].updateKey();\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateUniforms = function updateUniforms() {};\n\n\t\t_proto.updateShader = function updateShader(device, scene, objDefs) {};\n\n\t\t_proto.update = function update() {\n\t\t\tthis.dirty = true;\n\t\t\tif (this._shader) this._shader.failed = false;\n\t\t};\n\n\t\t_proto.clearParameters = function clearParameters() {\n\t\t\tthis.parameters = {};\n\t\t};\n\n\t\t_proto.getParameters = function getParameters() {\n\t\t\treturn this.parameters;\n\t\t};\n\n\t\t_proto.clearVariants = function clearVariants() {\n\t\t\tvar meshInstance;\n\t\t\tthis.variants = {};\n\t\t\tvar j;\n\n\t\t\tfor (var i = 0; i < this.meshInstances.length; i++) {\n\t\t\t\tmeshInstance = this.meshInstances[i];\n\n\t\t\t\tfor (j = 0; j < meshInstance._shader.length; j++) {\n\t\t\t\t\tmeshInstance._shader[j] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.getParameter = function getParameter(name) {\n\t\t\treturn this.parameters[name];\n\t\t};\n\n\t\t_proto.setParameter = function setParameter(name, data) {\n\t\t\tif (data === undefined && typeof name === 'object') {\n\t\t\t\tvar uniformObject = name;\n\n\t\t\t\tif (uniformObject.length) {\n\t\t\t\t\tfor (var i = 0; i < uniformObject.length; i++) {\n\t\t\t\t\t\tthis.setParameter(uniformObject[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tname = uniformObject.name;\n\t\t\t\tdata = uniformObject.value;\n\t\t\t}\n\n\t\t\tvar param = this.parameters[name];\n\n\t\t\tif (param) {\n\t\t\t\tparam.data = data;\n\t\t\t} else {\n\t\t\t\tthis.parameters[name] = {\n\t\t\t\t\tscopeId: null,\n\t\t\t\t\tdata: data\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t_proto.deleteParameter = function deleteParameter(name) {\n\t\t\tif (this.parameters[name]) {\n\t\t\t\tdelete this.parameters[name];\n\t\t\t}\n\t\t};\n\n\t\t_proto.setParameters = function setParameters(device, names) {\n\t\t\tvar parameter,\n\t\t\t\t\tparameters = this.parameters;\n\t\t\tif (names === undefined) names = parameters;\n\n\t\t\tfor (var paramName in names) {\n\t\t\t\tparameter = parameters[paramName];\n\n\t\t\t\tif (parameter) {\n\t\t\t\t\tif (!parameter.scopeId) {\n\t\t\t\t\t\tparameter.scopeId = device.scope.resolve(paramName);\n\t\t\t\t\t}\n\n\t\t\t\t\tparameter.scopeId.setValue(parameter.data);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.variants = {};\n\t\t\tthis.shader = null;\n\t\t\tvar meshInstance, j;\n\n\t\t\tfor (var i = 0; i < this.meshInstances.length; i++) {\n\t\t\t\tmeshInstance = this.meshInstances[i];\n\n\t\t\t\tfor (j = 0; j < meshInstance._shader.length; j++) {\n\t\t\t\t\tmeshInstance._shader[j] = null;\n\t\t\t\t}\n\n\t\t\t\tmeshInstance._material = null;\n\t\t\t\tvar defaultMaterial = Material.defaultMaterial;\n\n\t\t\t\tif (this !== defaultMaterial) {\n\t\t\t\t\tmeshInstance.material = defaultMaterial;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(Material, [{\n\t\t\tkey: \"shader\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shader;\n\t\t\t},\n\t\t\tset: function set(shader) {\n\t\t\t\tthis._shader = shader;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"blendType\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this.blend && this.blendSrc === BLENDMODE_ONE && this.blendDst === BLENDMODE_ZERO && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_NONE;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_SRC_ALPHA && this.blendDst === BLENDMODE_ONE_MINUS_SRC_ALPHA && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_NORMAL;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_ONE && this.blendDst === BLENDMODE_ONE && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_ADDITIVE;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_SRC_ALPHA && this.blendDst === BLENDMODE_ONE && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_ADDITIVEALPHA;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_DST_COLOR && this.blendDst === BLENDMODE_SRC_COLOR && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_MULTIPLICATIVE2X;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_ONE_MINUS_DST_COLOR && this.blendDst === BLENDMODE_ONE && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_SCREEN;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_ONE && this.blendDst === BLENDMODE_ONE && this.blendEquation === BLENDEQUATION_MIN) {\n\t\t\t\t\treturn BLEND_MIN;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_ONE && this.blendDst === BLENDMODE_ONE && this.blendEquation === BLENDEQUATION_MAX) {\n\t\t\t\t\treturn BLEND_MAX;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_DST_COLOR && this.blendDst === BLENDMODE_ZERO && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_MULTIPLICATIVE;\n\t\t\t\t} else if (this.blend && this.blendSrc === BLENDMODE_ONE && this.blendDst === BLENDMODE_ONE_MINUS_SRC_ALPHA && this.blendEquation === BLENDEQUATION_ADD) {\n\t\t\t\t\treturn BLEND_PREMULTIPLIED;\n\t\t\t\t}\n\n\t\t\t\treturn BLEND_NORMAL;\n\t\t\t},\n\t\t\tset: function set(type) {\n\t\t\t\tvar prevBlend = this.blend;\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase BLEND_NONE:\n\t\t\t\t\t\tthis.blend = false;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ZERO;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_NORMAL:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_SRC_ALPHA;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE_MINUS_SRC_ALPHA;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_PREMULTIPLIED:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE_MINUS_SRC_ALPHA;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_ADDITIVE:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_ADDITIVEALPHA:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_SRC_ALPHA;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_MULTIPLICATIVE2X:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_DST_COLOR;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_SRC_COLOR;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_SCREEN:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE_MINUS_DST_COLOR;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_MULTIPLICATIVE:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_DST_COLOR;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ZERO;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_MIN:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_MIN;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BLEND_MAX:\n\t\t\t\t\t\tthis.blend = true;\n\t\t\t\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendDst = BLENDMODE_ONE;\n\t\t\t\t\t\tthis.blendEquation = BLENDEQUATION_MAX;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevBlend !== this.blend) {\n\t\t\t\t\tif (this._scene) {\n\t\t\t\t\t\tthis._scene.layers._dirtyBlend = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._dirtyBlend = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._updateMeshInstanceKeys();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Material;\n\t}();\n\n\tMaterial.defaultMaterial = null;\n\n\tfunction StandardMaterialOptionsBuilder() {\n\t\tthis._mapXForms = null;\n\t}\n\n\tStandardMaterialOptionsBuilder.prototype.updateMinRef = function (options, device, scene, stdMat, objDefs, staticLightList, pass, sortedLights, prefilteredCubeMap128) {\n\t\tthis._updateSharedOptions(options, stdMat, objDefs, pass);\n\n\t\tthis._updateMinOptions(options, stdMat);\n\n\t\tthis._updateUVOptions(options, stdMat, objDefs, true);\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype.updateRef = function (options, device, scene, stdMat, objDefs, staticLightList, pass, sortedLights, prefilteredCubeMap128) {\n\t\tthis._updateSharedOptions(options, stdMat, objDefs, pass);\n\n\t\toptions.useTexCubeLod = device.useTexCubeLod;\n\n\t\tthis._updateEnvOptions(options, stdMat, scene, prefilteredCubeMap128);\n\n\t\tthis._updateMaterialOptions(options, stdMat);\n\n\t\tif (pass === SHADER_FORWARDHDR) {\n\t\t\tif (options.gamma) options.gamma = GAMMA_SRGBHDR;\n\t\t\toptions.toneMap = TONEMAP_LINEAR;\n\t\t}\n\n\t\toptions.hasTangents = objDefs && stdMat.normalMap && (objDefs & SHADERDEF_TANGENTS) !== 0;\n\n\t\tthis._updateLightOptions(options, stdMat, objDefs, sortedLights, staticLightList);\n\n\t\tthis._updateUVOptions(options, stdMat, objDefs, false);\n\n\t\toptions.clearCoat = stdMat.clearCoat;\n\t\toptions.clearCoatGlossiness = stdMat.clearCoatGlossiness;\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateSharedOptions = function (options, stdMat, objDefs, pass) {\n\t\toptions.pass = pass;\n\t\toptions.alphaTest = stdMat.alphaTest > 0;\n\t\toptions.forceFragmentPrecision = stdMat.forceFragmentPrecision || \"\";\n\t\toptions.chunks = stdMat.chunks || \"\";\n\t\toptions.blendType = stdMat.blendType;\n\t\toptions.forceUv1 = stdMat.forceUv1;\n\t\toptions.screenSpace = objDefs && (objDefs & SHADERDEF_SCREENSPACE) !== 0;\n\t\toptions.skin = objDefs && (objDefs & SHADERDEF_SKIN) !== 0;\n\t\toptions.useInstancing = objDefs && (objDefs & SHADERDEF_INSTANCING) !== 0;\n\t\toptions.useMorphPosition = objDefs && (objDefs & SHADERDEF_MORPH_POSITION) !== 0;\n\t\toptions.useMorphNormal = objDefs && (objDefs & SHADERDEF_MORPH_NORMAL) !== 0;\n\t\toptions.useMorphTextureBased = objDefs && (objDefs & SHADERDEF_MORPH_TEXTURE_BASED) !== 0;\n\t\toptions.nineSlicedMode = stdMat.nineSlicedMode || 0;\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateUVOptions = function (options, stdMat, objDefs, minimalOptions) {\n\t\tvar hasUv0 = false;\n\t\tvar hasUv1 = false;\n\t\tvar hasVcolor = false;\n\n\t\tif (objDefs) {\n\t\t\thasUv0 = (objDefs & SHADERDEF_UV0) !== 0;\n\t\t\thasUv1 = (objDefs & SHADERDEF_UV1) !== 0;\n\t\t\thasVcolor = (objDefs & SHADERDEF_VCOLOR) !== 0;\n\t\t}\n\n\t\toptions.vertexColors = false;\n\t\tthis._mapXForms = [];\n\n\t\tfor (var p in _matTex2D) {\n\t\t\tthis._updateTexOptions(options, stdMat, p, hasUv0, hasUv1, hasVcolor, minimalOptions);\n\t\t}\n\n\t\tthis._mapXForms = null;\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateMinOptions = function (options, stdMat) {\n\t\toptions.opacityTint = stdMat.opacity !== 1 && stdMat.blendType !== BLEND_NONE;\n\t\toptions.lights = [];\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateMaterialOptions = function (options, stdMat) {\n\t\tvar diffuseTint = (stdMat.diffuse.r !== 1 || stdMat.diffuse.g !== 1 || stdMat.diffuse.b !== 1) && (stdMat.diffuseTint || !stdMat.diffuseMap && !stdMat.diffuseVertexColor) ? 3 : 0;\n\t\tvar specularTint = false;\n\t\tvar useSpecular = (stdMat.useMetalness ? true : !!stdMat.specularMap) || !!stdMat.sphereMap || !!stdMat.cubeMap || !!stdMat.dpAtlas;\n\t\tuseSpecular = useSpecular || (stdMat.useMetalness ? true : !(stdMat.specular.r === 0 && stdMat.specular.g === 0 && stdMat.specular.b === 0));\n\t\tuseSpecular = useSpecular || stdMat.enableGGXSpecular;\n\t\tuseSpecular = useSpecular || stdMat.clearCoat > 0;\n\n\t\tif (useSpecular) {\n\t\t\tif ((stdMat.specularTint || !stdMat.specularMap && !stdMat.specularVertexColor) && !stdMat.useMetalness) {\n\t\t\t\tspecularTint = stdMat.specular.r !== 1 || stdMat.specular.g !== 1 || stdMat.specular.b !== 1;\n\t\t\t}\n\t\t}\n\n\t\tvar emissiveTint = stdMat.emissiveMap ? 0 : 3;\n\n\t\tif (!emissiveTint) {\n\t\t\temissiveTint = (stdMat.emissive.r !== 1 || stdMat.emissive.g !== 1 || stdMat.emissive.b !== 1 || stdMat.emissiveIntensity !== 1) && stdMat.emissiveTint;\n\t\t\temissiveTint = emissiveTint ? 3 : stdMat.emissiveIntensity !== 1 ? 1 : 0;\n\t\t}\n\n\t\tvar isPackedNormalMap = stdMat.normalMap ? stdMat.normalMap.format === PIXELFORMAT_DXT5 || stdMat.normalMap.type === TEXTURETYPE_SWIZZLEGGGR : false;\n\t\toptions.opacityTint = stdMat.opacity !== 1 && stdMat.blendType !== BLEND_NONE ? 1 : 0;\n\t\toptions.blendMapsWithColors = true;\n\t\toptions.ambientTint = stdMat.ambientTint;\n\t\toptions.diffuseTint = diffuseTint;\n\t\toptions.specularTint = specularTint ? 3 : 0;\n\t\toptions.metalnessTint = stdMat.useMetalness && stdMat.metalness < 1 ? 1 : 0;\n\t\toptions.glossTint = 1;\n\t\toptions.emissiveTint = emissiveTint;\n\t\toptions.alphaToCoverage = stdMat.alphaToCoverage;\n\t\toptions.normalizeNormalMap = stdMat.normalizeNormalMap;\n\t\toptions.sphereMap = !!stdMat.sphereMap;\n\t\toptions.cubeMap = !!stdMat.cubeMap;\n\t\toptions.dpAtlas = !!stdMat.dpAtlas;\n\t\toptions.ambientSH = !!stdMat.ambientSH;\n\t\toptions.useSpecular = useSpecular;\n\t\toptions.emissiveFormat = stdMat.emissiveMap ? stdMat.emissiveMap.type === TEXTURETYPE_RGBM ? 1 : stdMat.emissiveMap.format === PIXELFORMAT_RGBA32F ? 2 : 0 : null;\n\t\toptions.lightMapFormat = stdMat.lightMap ? stdMat.lightMap.type === TEXTURETYPE_RGBM ? 1 : stdMat.lightMap.format === PIXELFORMAT_RGBA32F ? 2 : 0 : null;\n\t\toptions.specularAntialias = stdMat.specularAntialias && !!stdMat.normalMap && !!stdMat.normalMap.mipmaps && !isPackedNormalMap;\n\t\toptions.conserveEnergy = stdMat.conserveEnergy;\n\t\toptions.opacityFadesSpecular = stdMat.opacityFadesSpecular;\n\t\toptions.alphaFade = stdMat.alphaFade;\n\t\toptions.occludeSpecular = stdMat.occludeSpecular;\n\t\toptions.occludeSpecularFloat = stdMat.occludeSpecularIntensity !== 1.0;\n\t\toptions.occludeDirect = stdMat.occludeDirect;\n\t\toptions.shadingModel = stdMat.shadingModel;\n\t\toptions.fresnelModel = stdMat.fresnelModel;\n\t\toptions.packedNormal = isPackedNormalMap;\n\t\toptions.fastTbn = stdMat.fastTbn;\n\t\toptions.cubeMapProjection = stdMat.cubeMapProjection;\n\t\toptions.customFragmentShader = stdMat.customFragmentShader;\n\t\toptions.refraction = !!stdMat.refraction;\n\t\toptions.useMetalness = stdMat.useMetalness;\n\t\toptions.enableGGXSpecular = stdMat.enableGGXSpecular;\n\t\toptions.msdf = !!stdMat.msdfMap;\n\t\toptions.twoSidedLighting = stdMat.twoSidedLighting;\n\t\toptions.pixelSnap = stdMat.pixelSnap;\n\t\toptions.aoMapUv = stdMat.aoUvSet;\n\t\toptions.diffuseDetail = !!stdMat.diffuseMap;\n\t\toptions.normalDetail = !!stdMat.normalMap;\n\t\toptions.diffuseDetailMode = stdMat.diffuseDetailMode;\n\t\toptions.detailModes = !!options.diffuseDetail;\n\t\toptions.clearCoatTint = stdMat.clearCoat !== 1.0 ? 1 : 0;\n\t\toptions.clearCoatGlossTint = stdMat.clearCoatGlossiness !== 1.0 ? 1 : 0;\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateEnvOptions = function (options, stdMat, scene, prefilteredCubeMap128) {\n\t\tvar rgbmAmbient = prefilteredCubeMap128 && prefilteredCubeMap128.type === TEXTURETYPE_RGBM || stdMat.cubeMap && stdMat.cubeMap.type === TEXTURETYPE_RGBM || stdMat.dpAtlas && stdMat.dpAtlas.type === TEXTURETYPE_RGBM;\n\t\tvar hdrAmbient = prefilteredCubeMap128 && (prefilteredCubeMap128.type === TEXTURETYPE_RGBM || prefilteredCubeMap128.format === PIXELFORMAT_RGBA32F) || stdMat.cubeMap && (stdMat.cubeMap.type === TEXTURETYPE_RGBM || stdMat.cubeMap.format === PIXELFORMAT_RGBA32F) || stdMat.dpAtlas && (stdMat.dpAtlas.type === TEXTURETYPE_RGBM || stdMat.dpAtlas.format === PIXELFORMAT_RGBA32F);\n\t\tvar rgbmReflection = prefilteredCubeMap128 && !stdMat.cubeMap && !stdMat.sphereMap && !stdMat.dpAtlas && prefilteredCubeMap128.type === TEXTURETYPE_RGBM || stdMat.cubeMap && stdMat.cubeMap.type === TEXTURETYPE_RGBM || stdMat.sphereMap && stdMat.sphereMap.type === TEXTURETYPE_RGBM || stdMat.dpAtlas && stdMat.dpAtlas.type === TEXTURETYPE_RGBM;\n\t\tvar hdrReflection = (prefilteredCubeMap128 && !stdMat.cubeMap && !stdMat.sphereMap && !stdMat.dpAtlas ? prefilteredCubeMap128.type === TEXTURETYPE_RGBM || prefilteredCubeMap128.format === PIXELFORMAT_RGBA32F : false) || stdMat.cubeMap && (stdMat.cubeMap.type === TEXTURETYPE_RGBM || stdMat.cubeMap.format === PIXELFORMAT_RGBA32F) || stdMat.sphereMap && (stdMat.sphereMap.type === TEXTURETYPE_RGBM || stdMat.sphereMap.format === PIXELFORMAT_RGBA32F) || stdMat.dpAtlas && (stdMat.dpAtlas.type === TEXTURETYPE_RGBM || stdMat.dpAtlas.format === PIXELFORMAT_RGBA32F);\n\t\tvar globalSky128;\n\t\tif (stdMat.useSkybox && scene._skyboxPrefiltered) globalSky128 = scene._skyboxPrefiltered[0];\n\t\toptions.fog = stdMat.useFog ? scene.fog : \"none\";\n\t\toptions.gamma = stdMat.useGammaTonemap ? scene.gammaCorrection : GAMMA_NONE;\n\t\toptions.toneMap = stdMat.useGammaTonemap ? scene.toneMapping : -1;\n\t\toptions.rgbmAmbient = rgbmAmbient;\n\t\toptions.hdrAmbient = hdrAmbient;\n\t\toptions.rgbmReflection = rgbmReflection;\n\t\toptions.hdrReflection = hdrReflection;\n\t\toptions.useRgbm = rgbmReflection || rgbmAmbient || stdMat.emissiveMap && stdMat.emissiveMap.type === TEXTURETYPE_RGBM || stdMat.lightMap && stdMat.lightMap.type === TEXTURETYPE_RGBM;\n\t\toptions.fixSeams = prefilteredCubeMap128 ? prefilteredCubeMap128.fixCubemapSeams : stdMat.cubeMap ? stdMat.cubeMap.fixCubemapSeams : false;\n\t\toptions.prefilteredCubemap = !!prefilteredCubeMap128;\n\t\toptions.skyboxIntensity = prefilteredCubeMap128 && globalSky128 && prefilteredCubeMap128 === globalSky128 && scene.skyboxIntensity !== 1;\n\t\toptions.useCubeMapRotation = stdMat.useSkybox && scene && scene.skyboxRotation && !scene.skyboxRotation.equals(Quat.IDENTITY);\n\t\toptions.useRightHandedCubeMap = stdMat.cubeMap ? stdMat.cubeMap._isRenderTarget : stdMat.useSkybox && scene && scene._skyboxIsRenderTarget;\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateLightOptions = function (options, stdMat, objDefs, sortedLights, staticLightList) {\n\t\toptions.lightMap = false;\n\t\toptions.lightMapChannel = \"\";\n\t\toptions.lightMapUv = 0;\n\t\toptions.lightMapTransform = 0;\n\t\toptions.lightMapWithoutAmbient = false;\n\t\toptions.dirLightMap = false;\n\n\t\tif (objDefs) {\n\t\t\toptions.noShadow = (objDefs & SHADERDEF_NOSHADOW) !== 0;\n\n\t\t\tif ((objDefs & SHADERDEF_LM) !== 0) {\n\t\t\t\toptions.lightMapFormat = 1;\n\t\t\t\toptions.lightMap = true;\n\t\t\t\toptions.lightMapChannel = \"rgb\";\n\t\t\t\toptions.lightMapUv = 1;\n\t\t\t\toptions.lightMapTransform = 0;\n\t\t\t\toptions.lightMapWithoutAmbient = !stdMat.lightMap;\n\t\t\t\toptions.useRgbm = true;\n\n\t\t\t\tif ((objDefs & SHADERDEF_DIRLM) !== 0) {\n\t\t\t\t\toptions.dirLightMap = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (stdMat.useLighting) {\n\t\t\tvar lightsFiltered = [];\n\t\t\tvar mask = objDefs ? objDefs >> 16 : 1;\n\n\t\t\tif (sortedLights) {\n\t\t\t\tthis._collectLights(LIGHTTYPE_DIRECTIONAL, sortedLights[LIGHTTYPE_DIRECTIONAL], lightsFiltered, mask);\n\n\t\t\t\tthis._collectLights(LIGHTTYPE_OMNI, sortedLights[LIGHTTYPE_OMNI], lightsFiltered, mask, staticLightList);\n\n\t\t\t\tthis._collectLights(LIGHTTYPE_SPOT, sortedLights[LIGHTTYPE_SPOT], lightsFiltered, mask, staticLightList);\n\t\t\t}\n\n\t\t\toptions.lights = lightsFiltered;\n\t\t} else {\n\t\t\toptions.lights = [];\n\t\t}\n\n\t\tif (options.lights.length === 0) {\n\t\t\toptions.noShadow = true;\n\t\t}\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._updateTexOptions = function (options, stdMat, p, hasUv0, hasUv1, hasVcolor, minimalOptions) {\n\t\tvar mname = p + \"Map\";\n\t\tvar vname = p + \"VertexColor\";\n\t\tvar vcname = p + \"VertexColorChannel\";\n\t\tvar cname = mname + \"Channel\";\n\t\tvar tname = mname + \"Transform\";\n\t\tvar uname = mname + \"Uv\";\n\n\t\tif (p !== \"light\") {\n\t\t\toptions[mname] = false;\n\t\t\toptions[cname] = \"\";\n\t\t\toptions[tname] = 0;\n\t\t\toptions[uname] = 0;\n\t\t}\n\n\t\toptions[vname] = false;\n\t\toptions[vcname] = \"\";\n\t\tvar isOpacity = p === \"opacity\";\n\t\tif (isOpacity && stdMat.blendType === BLEND_NONE && stdMat.alphaTest === 0.0 && !stdMat.alphaToCoverage) return options;\n\n\t\tif (!minimalOptions || isOpacity) {\n\t\t\tif (p !== \"height\" && stdMat[vname]) {\n\t\t\t\tif (hasVcolor) {\n\t\t\t\t\toptions[vname] = stdMat[vname];\n\t\t\t\t\toptions[vcname] = stdMat[vcname];\n\t\t\t\t\toptions.vertexColors = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (stdMat[mname]) {\n\t\t\t\tvar allow = true;\n\t\t\t\tif (stdMat[uname] === 0 && !hasUv0) allow = false;\n\t\t\t\tif (stdMat[uname] === 1 && !hasUv1) allow = false;\n\n\t\t\t\tif (allow) {\n\t\t\t\t\toptions[mname] = !!stdMat[mname];\n\t\t\t\t\toptions[tname] = this._getMapTransformID(stdMat[tname], stdMat[uname]);\n\t\t\t\t\toptions[cname] = stdMat[cname];\n\t\t\t\t\toptions[uname] = stdMat[uname];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._collectLights = function (lType, lights, lightsFiltered, mask, staticLightList) {\n\t\tvar light;\n\t\tvar i;\n\n\t\tfor (i = 0; i < lights.length; i++) {\n\t\t\tlight = lights[i];\n\n\t\t\tif (light.enabled) {\n\t\t\t\tif (light.mask & mask) {\n\t\t\t\t\tif (lType !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tif (light.isStatic) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlightsFiltered.push(light);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (staticLightList) {\n\t\t\tfor (i = 0; i < staticLightList.length; i++) {\n\t\t\t\tlight = staticLightList[i];\n\n\t\t\t\tif (light._type === lType) {\n\t\t\t\t\tlightsFiltered.push(light);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tStandardMaterialOptionsBuilder.prototype._getMapTransformID = function (xform, uv) {\n\t\tif (!xform) return 0;\n\t\tif (!this._mapXForms[uv]) this._mapXForms[uv] = [];\n\t\tvar i, same;\n\n\t\tfor (i = 0; i < this._mapXForms[uv].length; i++) {\n\t\t\tsame = true;\n\n\t\t\tif (this._mapXForms[uv][i][0] != xform.x) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this._mapXForms[uv][i][1] != xform.y) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this._mapXForms[uv][i][2] != xform.z) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this._mapXForms[uv][i][3] != xform.w) {\n\t\t\t\tsame = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (same) {\n\t\t\t\treturn i + 1;\n\t\t\t}\n\t\t}\n\n\t\tvar newID = this._mapXForms[uv].length;\n\t\tthis._mapXForms[uv][newID] = [];\n\t\tthis._mapXForms[uv][newID][0] = xform.x;\n\t\tthis._mapXForms[uv][newID][1] = xform.y;\n\t\tthis._mapXForms[uv][newID][2] = xform.z;\n\t\tthis._mapXForms[uv][newID][3] = xform.w;\n\t\treturn newID + 1;\n\t};\n\n\tvar RefCountedObject = function () {\n\t\tfunction RefCountedObject() {\n\t\t\tthis._refCount = 0;\n\t\t}\n\n\t\tvar _proto = RefCountedObject.prototype;\n\n\t\t_proto.incRefCount = function incRefCount() {\n\t\t\tthis._refCount++;\n\t\t};\n\n\t\t_proto.decRefCount = function decRefCount() {\n\t\t\tthis._refCount--;\n\t\t};\n\n\t\t_proto.getRefCount = function getRefCount() {\n\t\t\treturn this._refCount;\n\t\t};\n\n\t\treturn RefCountedObject;\n\t}();\n\n\tvar IndexBuffer = function () {\n\t\tfunction IndexBuffer(graphicsDevice, format, numIndices, usage, initialData) {\n\t\t\tif (usage === void 0) {\n\t\t\t\tusage = BUFFER_STATIC;\n\t\t\t}\n\n\t\t\tthis.device = graphicsDevice;\n\t\t\tthis.format = format;\n\t\t\tthis.numIndices = numIndices;\n\t\t\tthis.usage = usage;\n\t\t\tvar gl = this.device.gl;\n\t\t\tvar bytesPerIndex;\n\n\t\t\tif (format === INDEXFORMAT_UINT8) {\n\t\t\t\tbytesPerIndex = 1;\n\t\t\t\tthis.glFormat = gl.UNSIGNED_BYTE;\n\t\t\t} else if (format === INDEXFORMAT_UINT16) {\n\t\t\t\tbytesPerIndex = 2;\n\t\t\t\tthis.glFormat = gl.UNSIGNED_SHORT;\n\t\t\t} else if (format === INDEXFORMAT_UINT32) {\n\t\t\t\tbytesPerIndex = 4;\n\t\t\t\tthis.glFormat = gl.UNSIGNED_INT;\n\t\t\t}\n\n\t\t\tthis.bytesPerIndex = bytesPerIndex;\n\t\t\tthis.numBytes = this.numIndices * bytesPerIndex;\n\n\t\t\tif (initialData) {\n\t\t\t\tthis.setData(initialData);\n\t\t\t} else {\n\t\t\t\tthis.storage = new ArrayBuffer(this.numBytes);\n\t\t\t}\n\n\t\t\tgraphicsDevice._vram.ib += this.numBytes;\n\t\t\tthis.device.buffers.push(this);\n\t\t}\n\n\t\tvar _proto = IndexBuffer.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar device = this.device;\n\t\t\tvar idx = device.buffers.indexOf(this);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tdevice.buffers.splice(idx, 1);\n\t\t\t}\n\n\t\t\tif (this.bufferId) {\n\t\t\t\tvar gl = this.device.gl;\n\t\t\t\tgl.deleteBuffer(this.bufferId);\n\t\t\t\tthis.device._vram.ib -= this.storage.byteLength;\n\t\t\t\tthis.bufferId = null;\n\n\t\t\t\tif (this.device.indexBuffer === this) {\n\t\t\t\t\tthis.device.indexBuffer = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.loseContext = function loseContext() {\n\t\t\tthis.bufferId = undefined;\n\t\t};\n\n\t\t_proto.getFormat = function getFormat() {\n\t\t\treturn this.format;\n\t\t};\n\n\t\t_proto.getNumIndices = function getNumIndices() {\n\t\t\treturn this.numIndices;\n\t\t};\n\n\t\t_proto.lock = function lock() {\n\t\t\treturn this.storage;\n\t\t};\n\n\t\t_proto.unlock = function unlock() {\n\t\t\tvar gl = this.device.gl;\n\n\t\t\tif (!this.bufferId) {\n\t\t\t\tthis.bufferId = gl.createBuffer();\n\t\t\t}\n\n\t\t\tvar glUsage;\n\n\t\t\tswitch (this.usage) {\n\t\t\t\tcase BUFFER_STATIC:\n\t\t\t\t\tglUsage = gl.STATIC_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_DYNAMIC:\n\t\t\t\t\tglUsage = gl.DYNAMIC_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_STREAM:\n\t\t\t\t\tglUsage = gl.STREAM_DRAW;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase BUFFER_GPUDYNAMIC:\n\t\t\t\t\tif (this.device.webgl2) {\n\t\t\t\t\t\tglUsage = gl.DYNAMIC_COPY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglUsage = gl.STATIC_DRAW;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufferId);\n\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.storage, glUsage);\n\t\t};\n\n\t\t_proto.setData = function setData(data) {\n\t\t\tif (data.byteLength !== this.numBytes) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.storage = data;\n\t\t\tthis.unlock();\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto._lockTypedArray = function _lockTypedArray() {\n\t\t\tvar lock = this.lock();\n\t\t\tvar indices = this.format === INDEXFORMAT_UINT32 ? new Uint32Array(lock) : this.format === INDEXFORMAT_UINT16 ? new Uint16Array(lock) : new Uint8Array(lock);\n\t\t\treturn indices;\n\t\t};\n\n\t\t_proto.writeData = function writeData(data, count) {\n\t\t\tvar indices = this._lockTypedArray();\n\n\t\t\tif (data.length > count) {\n\t\t\t\tif (ArrayBuffer.isView(data)) {\n\t\t\t\t\tdata = data.subarray(0, count);\n\t\t\t\t\tindices.set(data);\n\t\t\t\t} else {\n\t\t\t\t\tvar i;\n\n\t\t\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\t\t\tindices[i] = data[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tindices.set(data);\n\t\t\t}\n\n\t\t\tthis.unlock();\n\t\t};\n\n\t\t_proto.readData = function readData(data) {\n\t\t\tvar indices = this._lockTypedArray();\n\n\t\t\tvar count = this.numIndices;\n\n\t\t\tif (ArrayBuffer.isView(data)) {\n\t\t\t\tdata.set(indices);\n\t\t\t} else {\n\t\t\t\tdata.length = 0;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\t\tdata[i] = indices[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t};\n\n\t\treturn IndexBuffer;\n\t}();\n\n\tvar id$2 = 0;\n\n\tvar GeometryData = function () {\n\t\tfunction GeometryData() {\n\t\t\tthis.initDefaults();\n\t\t}\n\n\t\tvar _proto = GeometryData.prototype;\n\n\t\t_proto.initDefaults = function initDefaults() {\n\t\t\tthis.recreate = false;\n\t\t\tthis.verticesUsage = BUFFER_STATIC;\n\t\t\tthis.indicesUsage = BUFFER_STATIC;\n\t\t\tthis.maxVertices = 0;\n\t\t\tthis.maxIndices = 0;\n\t\t\tthis.vertexCount = 0;\n\t\t\tthis.indexCount = 0;\n\t\t\tthis.vertexStreamsUpdated = false;\n\t\t\tthis.indexStreamUpdated = false;\n\t\t\tthis.vertexStreamDictionary = {};\n\t\t\tthis.indices = null;\n\t\t};\n\n\t\t_proto._validateVertexCount = function _validateVertexCount(count, semantic) {};\n\n\t\t_proto._changeVertexCount = function _changeVertexCount(count, semantic) {\n\t\t\tif (!this.vertexCount) {\n\t\t\t\tthis.vertexCount = count;\n\t\t\t} else {\n\t\t\t\tthis._validateVertexCount(count, semantic);\n\t\t\t}\n\t\t};\n\n\t\treturn GeometryData;\n\t}();\n\n\tGeometryData.DEFAULT_COMPONENTS_POSITION = 3;\n\tGeometryData.DEFAULT_COMPONENTS_NORMAL = 3;\n\tGeometryData.DEFAULT_COMPONENTS_UV = 2;\n\tGeometryData.DEFAULT_COMPONENTS_COLORS = 4;\n\n\tvar GeometryVertexStream = function GeometryVertexStream(data, componentCount, dataType, dataTypeNormalize) {\n\t\tthis.data = data;\n\t\tthis.componentCount = componentCount;\n\t\tthis.dataType = dataType;\n\t\tthis.dataTypeNormalize = dataTypeNormalize;\n\t};\n\n\tvar Mesh = function (_RefCountedObject) {\n\t\t_inheritsLoose(Mesh, _RefCountedObject);\n\n\t\tfunction Mesh(graphicsDevice) {\n\t\t\tvar _this;\n\n\t\t\t_this = _RefCountedObject.call(this) || this;\n\t\t\t_this.id = id$2++;\n\t\t\t_this.device = graphicsDevice || Application.getApplication().graphicsDevice;\n\t\t\t_this.vertexBuffer = null;\n\t\t\t_this.indexBuffer = [null];\n\t\t\t_this.primitive = [{\n\t\t\t\ttype: 0,\n\t\t\t\tbase: 0,\n\t\t\t\tcount: 0\n\t\t\t}];\n\t\t\t_this.skin = null;\n\t\t\t_this.morph = null;\n\t\t\t_this._geometryData = null;\n\t\t\t_this._aabb = new BoundingBox();\n\t\t\t_this.boneAabb = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto2 = Mesh.prototype;\n\n\t\t_proto2.destroy = function destroy() {\n\t\t\tif (this.vertexBuffer) {\n\t\t\t\tthis.vertexBuffer.destroy();\n\t\t\t\tthis.vertexBuffer = null;\n\t\t\t}\n\n\t\t\tvar j, ib;\n\n\t\t\tfor (j = 0; j < this.indexBuffer.length; j++) {\n\t\t\t\tib = this.indexBuffer[j];\n\t\t\t\tif (ib) ib.destroy();\n\t\t\t}\n\n\t\t\tthis.indexBuffer.length = 0;\n\t\t\tthis._geometryData = null;\n\t\t};\n\n\t\t_proto2._initBoneAabbs = function _initBoneAabbs(morphTargets) {\n\t\t\tthis.boneAabb = [];\n\t\t\tthis.boneUsed = [];\n\t\t\tvar numVerts = this.vertexBuffer.numVertices;\n\t\t\tvar i, j, k, l;\n\t\t\tvar x, y, z;\n\t\t\tvar bMax, bMin;\n\t\t\tvar boneMin = [];\n\t\t\tvar boneMax = [];\n\t\t\tvar boneUsed = this.boneUsed;\n\t\t\tvar numBones = this.skin.boneNames.length;\n\t\t\tvar aabb;\n\t\t\tvar boneWeight, boneIndex;\n\t\t\tvar minMorphX, minMorphY, minMorphZ;\n\t\t\tvar maxMorphX, maxMorphY, maxMorphZ;\n\t\t\tvar dx, dy, dz;\n\t\t\tvar target;\n\n\t\t\tfor (i = 0; i < numBones; i++) {\n\t\t\t\tboneMin[i] = new Vec3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n\t\t\t\tboneMax[i] = new Vec3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\t\t\t}\n\n\t\t\tvar iterator = new VertexIterator(this.vertexBuffer);\n\t\t\tvar posElement = iterator.element[SEMANTIC_POSITION];\n\t\t\tvar weightsElement = iterator.element[SEMANTIC_BLENDWEIGHT];\n\t\t\tvar indicesElement = iterator.element[SEMANTIC_BLENDINDICES];\n\n\t\t\tfor (j = 0; j < numVerts; j++) {\n\t\t\t\tfor (k = 0; k < 4; k++) {\n\t\t\t\t\tboneWeight = weightsElement.array[weightsElement.index + k];\n\n\t\t\t\t\tif (boneWeight > 0) {\n\t\t\t\t\t\tboneIndex = indicesElement.array[indicesElement.index + k];\n\t\t\t\t\t\tboneUsed[boneIndex] = true;\n\t\t\t\t\t\tx = posElement.array[posElement.index];\n\t\t\t\t\t\ty = posElement.array[posElement.index + 1];\n\t\t\t\t\t\tz = posElement.array[posElement.index + 2];\n\t\t\t\t\t\tbMax = boneMax[boneIndex];\n\t\t\t\t\t\tbMin = boneMin[boneIndex];\n\t\t\t\t\t\tif (bMin.x > x) bMin.x = x;\n\t\t\t\t\t\tif (bMin.y > y) bMin.y = y;\n\t\t\t\t\t\tif (bMin.z > z) bMin.z = z;\n\t\t\t\t\t\tif (bMax.x < x) bMax.x = x;\n\t\t\t\t\t\tif (bMax.y < y) bMax.y = y;\n\t\t\t\t\t\tif (bMax.z < z) bMax.z = z;\n\n\t\t\t\t\t\tif (morphTargets) {\n\t\t\t\t\t\t\tminMorphX = maxMorphX = x;\n\t\t\t\t\t\t\tminMorphY = maxMorphY = y;\n\t\t\t\t\t\t\tminMorphZ = maxMorphZ = z;\n\n\t\t\t\t\t\t\tfor (l = 0; l < morphTargets.length; l++) {\n\t\t\t\t\t\t\t\ttarget = morphTargets[l];\n\t\t\t\t\t\t\t\tdx = target.deltaPositions[j * 3];\n\t\t\t\t\t\t\t\tdy = target.deltaPositions[j * 3 + 1];\n\t\t\t\t\t\t\t\tdz = target.deltaPositions[j * 3 + 2];\n\n\t\t\t\t\t\t\t\tif (dx < 0) {\n\t\t\t\t\t\t\t\t\tminMorphX += dx;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmaxMorphX += dx;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (dy < 0) {\n\t\t\t\t\t\t\t\t\tminMorphY += dy;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmaxMorphY += dy;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (dz < 0) {\n\t\t\t\t\t\t\t\t\tminMorphZ += dz;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmaxMorphZ += dz;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (bMin.x > minMorphX) bMin.x = minMorphX;\n\t\t\t\t\t\t\tif (bMin.y > minMorphY) bMin.y = minMorphY;\n\t\t\t\t\t\t\tif (bMin.z > minMorphZ) bMin.z = minMorphZ;\n\t\t\t\t\t\t\tif (bMax.x < maxMorphX) bMax.x = maxMorphX;\n\t\t\t\t\t\t\tif (bMax.y < maxMorphY) bMax.y = maxMorphY;\n\t\t\t\t\t\t\tif (bMax.z < maxMorphZ) bMax.z = maxMorphZ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\titerator.next();\n\t\t\t}\n\n\t\t\tfor (i = 0; i < numBones; i++) {\n\t\t\t\taabb = new BoundingBox();\n\t\t\t\taabb.setMinMax(boneMin[i], boneMax[i]);\n\t\t\t\tthis.boneAabb.push(aabb);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._initGeometryData = function _initGeometryData() {\n\t\t\tif (!this._geometryData) {\n\t\t\t\tthis._geometryData = new GeometryData();\n\n\t\t\t\tif (this.vertexBuffer) {\n\t\t\t\t\tthis._geometryData.vertexCount = this.vertexBuffer.numVertices;\n\t\t\t\t\tthis._geometryData.maxVertices = this.vertexBuffer.numVertices;\n\t\t\t\t}\n\n\t\t\t\tif (this.indexBuffer.length > 0 && this.indexBuffer[0]) {\n\t\t\t\t\tthis._geometryData.indexCount = this.indexBuffer[0].numIndices;\n\t\t\t\t\tthis._geometryData.maxIndices = this.indexBuffer[0].numIndices;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.clear = function clear(verticesDynamic, indicesDynamic, maxVertices, maxIndices) {\n\t\t\tif (maxVertices === void 0) {\n\t\t\t\tmaxVertices = 0;\n\t\t\t}\n\n\t\t\tif (maxIndices === void 0) {\n\t\t\t\tmaxIndices = 0;\n\t\t\t}\n\n\t\t\tthis._initGeometryData();\n\n\t\t\tthis._geometryData.initDefaults();\n\n\t\t\tthis._geometryData.recreate = true;\n\t\t\tthis._geometryData.maxVertices = maxVertices;\n\t\t\tthis._geometryData.maxIndices = maxIndices;\n\t\t\tthis._geometryData.verticesUsage = verticesDynamic ? BUFFER_STATIC : BUFFER_DYNAMIC;\n\t\t\tthis._geometryData.indicesUsage = indicesDynamic ? BUFFER_STATIC : BUFFER_DYNAMIC;\n\t\t};\n\n\t\t_proto2.setVertexStream = function setVertexStream(semantic, data, componentCount, numVertices, dataType, dataTypeNormalize) {\n\t\t\tif (dataType === void 0) {\n\t\t\t\tdataType = TYPE_FLOAT32;\n\t\t\t}\n\n\t\t\tif (dataTypeNormalize === void 0) {\n\t\t\t\tdataTypeNormalize = false;\n\t\t\t}\n\n\t\t\tthis._initGeometryData();\n\n\t\t\tvar vertexCount = numVertices || data.length / componentCount;\n\n\t\t\tthis._geometryData._changeVertexCount(vertexCount, semantic);\n\n\t\t\tthis._geometryData.vertexStreamsUpdated = true;\n\t\t\tthis._geometryData.vertexStreamDictionary[semantic] = new GeometryVertexStream(data, componentCount, dataType, dataTypeNormalize);\n\t\t};\n\n\t\t_proto2.getVertexStream = function getVertexStream(semantic, data) {\n\t\t\tvar count = 0;\n\t\t\tvar done = false;\n\n\t\t\tif (this._geometryData) {\n\t\t\t\tvar stream = this._geometryData.vertexStreamDictionary[semantic];\n\n\t\t\t\tif (stream) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tcount = this._geometryData.vertexCount;\n\n\t\t\t\t\tif (ArrayBuffer.isView(data)) {\n\t\t\t\t\t\tdata.set(stream.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.length = 0;\n\t\t\t\t\t\tdata.push(stream.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!done) {\n\t\t\t\tif (this.vertexBuffer) {\n\t\t\t\t\tvar iterator = new VertexIterator(this.vertexBuffer);\n\t\t\t\t\tcount = iterator.readData(semantic, data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t};\n\n\t\t_proto2.setPositions = function setPositions(positions, componentCount, numVertices) {\n\t\t\tif (componentCount === void 0) {\n\t\t\t\tcomponentCount = GeometryData.DEFAULT_COMPONENTS_POSITION;\n\t\t\t}\n\n\t\t\tthis.setVertexStream(SEMANTIC_POSITION, positions, componentCount, numVertices, TYPE_FLOAT32, false);\n\t\t};\n\n\t\t_proto2.setNormals = function setNormals(normals, componentCount, numVertices) {\n\t\t\tif (componentCount === void 0) {\n\t\t\t\tcomponentCount = GeometryData.DEFAULT_COMPONENTS_NORMAL;\n\t\t\t}\n\n\t\t\tthis.setVertexStream(SEMANTIC_NORMAL, normals, componentCount, numVertices, TYPE_FLOAT32, false);\n\t\t};\n\n\t\t_proto2.setUvs = function setUvs(channel, uvs, componentCount, numVertices) {\n\t\t\tif (componentCount === void 0) {\n\t\t\t\tcomponentCount = GeometryData.DEFAULT_COMPONENTS_UV;\n\t\t\t}\n\n\t\t\tthis.setVertexStream(SEMANTIC_TEXCOORD + channel, uvs, componentCount, numVertices, TYPE_FLOAT32, false);\n\t\t};\n\n\t\t_proto2.setColors = function setColors(colors, componentCount, numVertices) {\n\t\t\tif (componentCount === void 0) {\n\t\t\t\tcomponentCount = GeometryData.DEFAULT_COMPONENTS_COLORS;\n\t\t\t}\n\n\t\t\tthis.setVertexStream(SEMANTIC_COLOR, colors, componentCount, numVertices, TYPE_FLOAT32, false);\n\t\t};\n\n\t\t_proto2.setColors32 = function setColors32(colors, numVertices) {\n\t\t\tthis.setVertexStream(SEMANTIC_COLOR, colors, GeometryData.DEFAULT_COMPONENTS_COLORS, numVertices, TYPE_UINT8, true);\n\t\t};\n\n\t\t_proto2.setIndices = function setIndices(indices, numIndices) {\n\t\t\tthis._initGeometryData();\n\n\t\t\tthis._geometryData.indexStreamUpdated = true;\n\t\t\tthis._geometryData.indices = indices;\n\t\t\tthis._geometryData.indexCount = numIndices || indices.length;\n\t\t};\n\n\t\t_proto2.getPositions = function getPositions(positions) {\n\t\t\treturn this.getVertexStream(SEMANTIC_POSITION, positions);\n\t\t};\n\n\t\t_proto2.getNormals = function getNormals(normals) {\n\t\t\treturn this.getVertexStream(SEMANTIC_NORMAL, normals);\n\t\t};\n\n\t\t_proto2.getUvs = function getUvs(channel, uvs) {\n\t\t\treturn this.getVertexStream(SEMANTIC_TEXCOORD + channel, uvs);\n\t\t};\n\n\t\t_proto2.getColors = function getColors(colors) {\n\t\t\treturn this.getVertexStream(SEMANTIC_COLOR, colors);\n\t\t};\n\n\t\t_proto2.getIndices = function getIndices(indices) {\n\t\t\tvar count = 0;\n\n\t\t\tif (this._geometryData && this._geometryData.indices) {\n\t\t\t\tvar streamIndices = this._geometryData.indices;\n\t\t\t\tcount = this._geometryData.indexCount;\n\n\t\t\t\tif (ArrayBuffer.isView(indices)) {\n\t\t\t\t\tindices.set(streamIndices);\n\t\t\t\t} else {\n\t\t\t\t\tindices.length = 0;\n\t\t\t\t\tindices.push(streamIndices);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.indexBuffer.length > 0 && this.indexBuffer[0]) {\n\t\t\t\t\tvar indexBuffer = this.indexBuffer[0];\n\t\t\t\t\tcount = indexBuffer.readData(indices);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t};\n\n\t\t_proto2.update = function update(primitiveType, updateBoundingBox) {\n\t\t\tif (primitiveType === void 0) {\n\t\t\t\tprimitiveType = PRIMITIVE_TRIANGLES;\n\t\t\t}\n\n\t\t\tif (updateBoundingBox === void 0) {\n\t\t\t\tupdateBoundingBox = true;\n\t\t\t}\n\n\t\t\tif (this._geometryData) {\n\t\t\t\tif (updateBoundingBox) {\n\t\t\t\t\tvar stream = this._geometryData.vertexStreamDictionary[SEMANTIC_POSITION];\n\n\t\t\t\t\tif (stream) {\n\t\t\t\t\t\tif (stream.componentCount == 3) {\n\t\t\t\t\t\t\tthis._aabb.compute(stream.data, this._geometryData.vertexCount);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar destroyVB = this._geometryData.recreate;\n\n\t\t\t\tif (this._geometryData.vertexCount > this._geometryData.maxVertices) {\n\t\t\t\t\tdestroyVB = true;\n\t\t\t\t\tthis._geometryData.maxVertices = this._geometryData.vertexCount;\n\t\t\t\t}\n\n\t\t\t\tif (destroyVB) {\n\t\t\t\t\tif (this.vertexBuffer) {\n\t\t\t\t\t\tthis.vertexBuffer.destroy();\n\t\t\t\t\t\tthis.vertexBuffer = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar destroyIB = this._geometryData.recreate;\n\n\t\t\t\tif (this._geometryData.indexCount > this._geometryData.maxIndices) {\n\t\t\t\t\tdestroyIB = true;\n\t\t\t\t\tthis._geometryData.maxIndices = this._geometryData.indexCount;\n\t\t\t\t}\n\n\t\t\t\tif (destroyIB) {\n\t\t\t\t\tif (this.indexBuffer.length > 0 && this.indexBuffer[0]) {\n\t\t\t\t\t\tthis.indexBuffer[0].destroy();\n\t\t\t\t\t\tthis.indexBuffer[0] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._geometryData.vertexStreamsUpdated) {\n\t\t\t\t\tthis._updateVertexBuffer();\n\t\t\t\t}\n\n\t\t\t\tif (this._geometryData.indexStreamUpdated) {\n\t\t\t\t\tthis._updateIndexBuffer();\n\t\t\t\t}\n\n\t\t\t\tthis.primitive[0].type = primitiveType;\n\n\t\t\t\tif (this.indexBuffer.length > 0 && this.indexBuffer[0]) {\n\t\t\t\t\tif (this._geometryData.indexStreamUpdated) {\n\t\t\t\t\t\tthis.primitive[0].count = this._geometryData.indexCount;\n\t\t\t\t\t\tthis.primitive[0].indexed = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this._geometryData.vertexStreamsUpdated) {\n\t\t\t\t\t\tthis.primitive[0].count = this._geometryData.vertexCount;\n\t\t\t\t\t\tthis.primitive[0].indexed = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._geometryData.vertexCount = 0;\n\t\t\t\tthis._geometryData.indexCount = 0;\n\t\t\t\tthis._geometryData.vertexStreamsUpdated = false;\n\t\t\t\tthis._geometryData.indexStreamUpdated = false;\n\t\t\t\tthis._geometryData.recreate = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._buildVertexFormat = function _buildVertexFormat(vertexCount) {\n\t\t\tvar vertexDesc = [];\n\n\t\t\tfor (var semantic in this._geometryData.vertexStreamDictionary) {\n\t\t\t\tvar stream = this._geometryData.vertexStreamDictionary[semantic];\n\t\t\t\tvertexDesc.push({\n\t\t\t\t\tsemantic: semantic,\n\t\t\t\t\tcomponents: stream.componentCount,\n\t\t\t\t\ttype: stream.dataType,\n\t\t\t\t\tnormalize: stream.dataTypeNormalize\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new VertexFormat(this.device, vertexDesc, vertexCount);\n\t\t};\n\n\t\t_proto2._updateVertexBuffer = function _updateVertexBuffer() {\n\t\t\tif (!this.vertexBuffer) {\n\t\t\t\tvar allocateVertexCount = this._geometryData.maxVertices;\n\n\t\t\t\tvar format = this._buildVertexFormat(allocateVertexCount);\n\n\t\t\t\tthis.vertexBuffer = new VertexBuffer(this.device, format, allocateVertexCount, this._geometryData.verticesUsage);\n\t\t\t}\n\n\t\t\tvar iterator = new VertexIterator(this.vertexBuffer);\n\t\t\tvar numVertices = this._geometryData.vertexCount;\n\n\t\t\tfor (var semantic in this._geometryData.vertexStreamDictionary) {\n\t\t\t\tvar stream = this._geometryData.vertexStreamDictionary[semantic];\n\t\t\t\titerator.writeData(semantic, stream.data, numVertices);\n\t\t\t\tdelete this._geometryData.vertexStreamDictionary[semantic];\n\t\t\t}\n\n\t\t\titerator.end();\n\t\t};\n\n\t\t_proto2._updateIndexBuffer = function _updateIndexBuffer() {\n\t\t\tif (this.indexBuffer.length <= 0 || !this.indexBuffer[0]) {\n\t\t\t\tvar createFormat = this._geometryData.maxVertices > 0xffff ? INDEXFORMAT_UINT32 : INDEXFORMAT_UINT16;\n\t\t\t\tthis.indexBuffer[0] = new IndexBuffer(this.device, createFormat, this._geometryData.maxIndices, this._geometryData.indicesUsage);\n\t\t\t}\n\n\t\t\tvar srcIndices = this._geometryData.indices;\n\n\t\t\tif (srcIndices) {\n\t\t\t\tvar indexBuffer = this.indexBuffer[0];\n\t\t\t\tindexBuffer.writeData(srcIndices, this._geometryData.indexCount);\n\t\t\t\tthis._geometryData.indices = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto2.generateWireframe = function generateWireframe() {\n\t\t\tvar typedArray = function typedArray(indexBuffer) {\n\t\t\t\tswitch (indexBuffer.format) {\n\t\t\t\t\tcase INDEXFORMAT_UINT8:\n\t\t\t\t\t\treturn new Uint8Array(indexBuffer.storage);\n\n\t\t\t\t\tcase INDEXFORMAT_UINT16:\n\t\t\t\t\t\treturn new Uint16Array(indexBuffer.storage);\n\n\t\t\t\t\tcase INDEXFORMAT_UINT32:\n\t\t\t\t\t\treturn new Uint32Array(indexBuffer.storage);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar lines = [];\n\t\t\tvar format;\n\n\t\t\tif (this.indexBuffer.length > 0 && this.indexBuffer[0]) {\n\t\t\t\tvar offsets = [[0, 1], [1, 2], [2, 0]];\n\t\t\t\tvar base = this.primitive[RENDERSTYLE_SOLID].base;\n\t\t\t\tvar count = this.primitive[RENDERSTYLE_SOLID].count;\n\t\t\t\tvar indexBuffer = this.indexBuffer[RENDERSTYLE_SOLID];\n\t\t\t\tvar srcIndices = typedArray(indexBuffer);\n\t\t\t\tvar uniqueLineIndices = {};\n\n\t\t\t\tfor (var j = base; j < base + count; j += 3) {\n\t\t\t\t\tfor (var k = 0; k < 3; k++) {\n\t\t\t\t\t\tvar i1 = srcIndices[j + offsets[k][0]];\n\t\t\t\t\t\tvar i2 = srcIndices[j + offsets[k][1]];\n\t\t\t\t\t\tvar line = i1 > i2 ? i2 << 16 | i1 : i1 << 16 | i2;\n\n\t\t\t\t\t\tif (uniqueLineIndices[line] === undefined) {\n\t\t\t\t\t\t\tuniqueLineIndices[line] = 0;\n\t\t\t\t\t\t\tlines.push(i1, i2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tformat = indexBuffer.format;\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < this.vertexBuffer.numVertices; i += 3) {\n\t\t\t\t\tlines.push(i, i + 1, i + 1, i + 2, i + 2, i);\n\t\t\t\t}\n\n\t\t\t\tformat = lines.length > 65535 ? INDEXFORMAT_UINT32 : INDEXFORMAT_UINT16;\n\t\t\t}\n\n\t\t\tvar wireBuffer = new IndexBuffer(this.vertexBuffer.device, format, lines.length);\n\t\t\tvar dstIndices = typedArray(wireBuffer);\n\t\t\tdstIndices.set(lines);\n\t\t\twireBuffer.unlock();\n\t\t\tthis.primitive[RENDERSTYLE_WIREFRAME] = {\n\t\t\t\ttype: PRIMITIVE_LINES,\n\t\t\t\tbase: 0,\n\t\t\t\tcount: lines.length,\n\t\t\t\tindexed: true\n\t\t\t};\n\t\t\tthis.indexBuffer[RENDERSTYLE_WIREFRAME] = wireBuffer;\n\t\t};\n\n\t\t_createClass(Mesh, [{\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._aabb;\n\t\t\t},\n\t\t\tset: function set(aabb) {\n\t\t\t\tthis._aabb = aabb;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Mesh;\n\t}(RefCountedObject);\n\n\tvar _tmpAabb = new BoundingBox();\n\n\tvar _tempBoneAabb = new BoundingBox();\n\n\tvar _tempSphere = new BoundingSphere();\n\n\tvar InstancingData = function InstancingData(numObjects) {\n\t\tthis.count = numObjects;\n\t\tthis.vertexBuffer = null;\n\t};\n\n\tvar Command = function () {\n\t\tfunction Command(layer, blendType, command) {\n\t\t\tthis._key = [];\n\t\t\tthis._key[SORTKEY_FORWARD] = getKey(layer, blendType, true, 0);\n\t\t\tthis.command = command;\n\t\t}\n\n\t\t_createClass(Command, [{\n\t\t\tkey: \"key\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._key[SORTKEY_FORWARD];\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._key[SORTKEY_FORWARD] = val;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Command;\n\t}();\n\n\tvar MeshInstance = function () {\n\t\tfunction MeshInstance(node, mesh, material) {\n\t\t\tthis._key = [0, 0];\n\t\t\tthis._shader = [null, null, null];\n\t\t\tthis.isStatic = false;\n\t\t\tthis._staticLightList = null;\n\t\t\tthis._staticSource = null;\n\t\t\tthis.node = node;\n\t\t\tthis._mesh = mesh;\n\t\t\tmesh.incRefCount();\n\t\t\tthis.material = material;\n\t\t\tthis._shaderDefs = MASK_DYNAMIC << 16;\n\t\t\tthis._shaderDefs |= mesh.vertexBuffer.format.hasUv0 ? SHADERDEF_UV0 : 0;\n\t\t\tthis._shaderDefs |= mesh.vertexBuffer.format.hasUv1 ? SHADERDEF_UV1 : 0;\n\t\t\tthis._shaderDefs |= mesh.vertexBuffer.format.hasColor ? SHADERDEF_VCOLOR : 0;\n\t\t\tthis._shaderDefs |= mesh.vertexBuffer.format.hasTangents ? SHADERDEF_TANGENTS : 0;\n\t\t\tthis._lightHash = 0;\n\t\t\tthis.visible = true;\n\t\t\tthis.layer = LAYER_WORLD;\n\t\t\tthis.renderStyle = RENDERSTYLE_SOLID;\n\t\t\tthis.castShadow = false;\n\t\t\tthis._receiveShadow = true;\n\t\t\tthis._screenSpace = false;\n\t\t\tthis._noDepthDrawGl1 = false;\n\t\t\tthis.cull = true;\n\t\t\tthis.pick = true;\n\t\t\tthis._updateAabb = true;\n\t\t\tthis._updateAabbFunc = null;\n\t\t\tthis._calculateSortDistance = null;\n\t\t\tthis.updateKey();\n\t\t\tthis._skinInstance = null;\n\t\t\tthis._morphInstance = null;\n\t\t\tthis.instancingData = null;\n\t\t\tthis.aabb = new BoundingBox();\n\t\t\tthis._aabbVer = -1;\n\t\t\tthis.drawOrder = 0;\n\t\t\tthis.visibleThisFrame = 0;\n\t\t\tthis.isVisibleFunc = null;\n\t\t\tthis.parameters = {};\n\t\t\tthis.stencilFront = null;\n\t\t\tthis.stencilBack = null;\n\t\t\tthis.flipFaces = false;\n\t\t}\n\n\t\tvar _proto = MeshInstance.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar mesh = this.mesh;\n\n\t\t\tif (mesh) {\n\t\t\t\tthis.mesh = null;\n\n\t\t\t\tif (mesh.getRefCount() < 1) {\n\t\t\t\t\tmesh.destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._skinInstance) {\n\t\t\t\tthis._skinInstance.destroy();\n\n\t\t\t\tthis._skinInstance = null;\n\t\t\t}\n\n\t\t\tif (this.morphInstance) {\n\t\t\t\tthis.morphInstance.destroy();\n\t\t\t\tthis.morphInstance = null;\n\t\t\t}\n\n\t\t\tthis.material = null;\n\t\t};\n\n\t\t_proto.syncAabb = function syncAabb() {};\n\n\t\t_proto._isVisible = function _isVisible(camera) {\n\t\t\tif (this.visible) {\n\t\t\t\tif (this.isVisibleFunc) {\n\t\t\t\t\treturn this.isVisibleFunc(camera);\n\t\t\t\t}\n\n\t\t\t\tvar pos = this.aabb.center;\n\n\t\t\t\tif (this._aabb._radiusVer !== this._aabbVer) {\n\t\t\t\t\tthis._aabb._radius = this._aabb.halfExtents.length();\n\t\t\t\t\tthis._aabb._radiusVer = this._aabbVer;\n\t\t\t\t}\n\n\t\t\t\t_tempSphere.radius = this._aabb._radius;\n\t\t\t\t_tempSphere.center = pos;\n\t\t\t\treturn camera.frustum.containsSphere(_tempSphere);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.updateKey = function updateKey() {\n\t\t\tvar material = this.material;\n\t\t\tthis._key[SORTKEY_FORWARD] = getKey(this.layer, material.alphaToCoverage || material.alphaTest ? BLEND_NORMAL : material.blendType, false, material.id);\n\t\t};\n\n\t\t_proto.setInstancing = function setInstancing(vertexBuffer) {\n\t\t\tif (vertexBuffer) {\n\t\t\t\tthis.instancingData = new InstancingData(vertexBuffer.numVertices);\n\t\t\t\tthis.instancingData.vertexBuffer = vertexBuffer;\n\t\t\t\tvertexBuffer.instancing = true;\n\t\t\t\tthis.cull = false;\n\t\t\t} else {\n\t\t\t\tthis.instancingData = null;\n\t\t\t\tthis.cull = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto.clearParameters = function clearParameters() {\n\t\t\tthis.parameters = {};\n\t\t};\n\n\t\t_proto.getParameters = function getParameters() {\n\t\t\treturn this.parameters;\n\t\t};\n\n\t\t_proto.getParameter = function getParameter(name) {\n\t\t\treturn this.parameters[name];\n\t\t};\n\n\t\t_proto.setParameter = function setParameter(name, data, passFlags) {\n\t\t\tif (passFlags === void 0) {\n\t\t\t\tpassFlags = -524285;\n\t\t\t}\n\n\t\t\tif (data === undefined && typeof name === 'object') {\n\t\t\t\tvar uniformObject = name;\n\n\t\t\t\tif (uniformObject.length) {\n\t\t\t\t\tfor (var i = 0; i < uniformObject.length; i++) {\n\t\t\t\t\t\tthis.setParameter(uniformObject[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tname = uniformObject.name;\n\t\t\t\tdata = uniformObject.value;\n\t\t\t}\n\n\t\t\tvar param = this.parameters[name];\n\n\t\t\tif (param) {\n\t\t\t\tparam.data = data;\n\t\t\t\tparam.passFlags = passFlags;\n\t\t\t} else {\n\t\t\t\tthis.parameters[name] = {\n\t\t\t\t\tscopeId: null,\n\t\t\t\t\tdata: data,\n\t\t\t\t\tpassFlags: passFlags\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t_proto.deleteParameter = function deleteParameter(name) {\n\t\t\tif (this.parameters[name]) {\n\t\t\t\tdelete this.parameters[name];\n\t\t\t}\n\t\t};\n\n\t\t_proto.setParameters = function setParameters(device, passFlag) {\n\t\t\tvar parameter,\n\t\t\t\t\tparameters = this.parameters;\n\n\t\t\tfor (var paramName in parameters) {\n\t\t\t\tparameter = parameters[paramName];\n\n\t\t\t\tif (parameter.passFlags & passFlag) {\n\t\t\t\t\tif (!parameter.scopeId) {\n\t\t\t\t\t\tparameter.scopeId = device.scope.resolve(paramName);\n\t\t\t\t\t}\n\n\t\t\t\t\tparameter.scopeId.setValue(parameter.data);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setLightmapped = function setLightmapped(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.mask = (this.mask | MASK_BAKED) & ~(MASK_DYNAMIC | MASK_LIGHTMAP);\n\t\t\t} else {\n\t\t\t\tthis.deleteParameter(\"texture_lightMap\");\n\t\t\t\tthis.deleteParameter(\"texture_dirLightMap\");\n\t\t\t\tthis._shaderDefs &= ~SHADERDEF_LM;\n\t\t\t\tthis.mask = (this.mask | MASK_DYNAMIC) & ~(MASK_BAKED | MASK_LIGHTMAP);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setOverrideAabb = function setOverrideAabb(aabb) {\n\t\t\tthis._updateAabb = !aabb;\n\n\t\t\tif (aabb) {\n\t\t\t\tthis.aabb.copy(aabb);\n\t\t\t}\n\n\t\t\tthis._setupSkinUpdate();\n\t\t};\n\n\t\t_proto._setupSkinUpdate = function _setupSkinUpdate() {\n\t\t\tif (this._skinInstance) {\n\t\t\t\tthis._skinInstance._updateBeforeCull = this._updateAabb;\n\t\t\t}\n\t\t};\n\n\t\t_createClass(MeshInstance, [{\n\t\t\tkey: \"mesh\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._mesh;\n\t\t\t},\n\t\t\tset: function set(mesh) {\n\t\t\t\tif (mesh === this._mesh) return;\n\n\t\t\t\tif (this._mesh) {\n\t\t\t\t\tthis._mesh.decRefCount();\n\t\t\t\t}\n\n\t\t\t\tthis._mesh = mesh;\n\n\t\t\t\tif (mesh) {\n\t\t\t\t\tmesh.incRefCount();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\tvar i;\n\n\t\t\t\tif (!this._updateAabb) {\n\t\t\t\t\treturn this._aabb;\n\t\t\t\t}\n\n\t\t\t\tif (this._updateAabbFunc) {\n\t\t\t\t\treturn this._updateAabbFunc(this._aabb);\n\t\t\t\t}\n\n\t\t\t\tif (this.skinInstance) {\n\t\t\t\t\tif (!this.mesh.boneAabb) {\n\t\t\t\t\t\tvar morphTargets = this._morphInstance ? this._morphInstance.morph._targets : null;\n\n\t\t\t\t\t\tthis.mesh._initBoneAabbs(morphTargets);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar boneUsed = this.mesh.boneUsed;\n\t\t\t\t\tvar rootNodeTransform = this.node.getWorldTransform();\n\t\t\t\t\tvar first = true;\n\n\t\t\t\t\tfor (i = 0; i < this.mesh.boneAabb.length; i++) {\n\t\t\t\t\t\tif (boneUsed[i]) {\n\t\t\t\t\t\t\t_tempBoneAabb.setFromTransformedAabb(this.mesh.boneAabb[i], this.skinInstance.matrices[i]);\n\n\t\t\t\t\t\t\tif (first) {\n\t\t\t\t\t\t\t\tfirst = false;\n\n\t\t\t\t\t\t\t\t_tmpAabb.center.copy(_tempBoneAabb.center);\n\n\t\t\t\t\t\t\t\t_tmpAabb.halfExtents.copy(_tempBoneAabb.halfExtents);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_tmpAabb.add(_tempBoneAabb);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._aabb.setFromTransformedAabb(_tmpAabb, rootNodeTransform);\n\t\t\t\t} else if (this.node._aabbVer !== this._aabbVer) {\n\t\t\t\t\tif (this.mesh) {\n\t\t\t\t\t\t_tmpAabb.center.copy(this.mesh.aabb.center);\n\n\t\t\t\t\t\t_tmpAabb.halfExtents.copy(this.mesh.aabb.halfExtents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_tmpAabb.center.set(0, 0, 0);\n\n\t\t\t\t\t\t_tmpAabb.halfExtents.set(0, 0, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.mesh && this.mesh.morph) {\n\t\t\t\t\t\t_tmpAabb._expand(this.mesh.morph.aabb.getMin(), this.mesh.morph.aabb.getMax());\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._aabb.setFromTransformedAabb(_tmpAabb, this.node.getWorldTransform());\n\n\t\t\t\t\tthis._aabbVer = this.node._aabbVer;\n\t\t\t\t}\n\n\t\t\t\treturn this._aabb;\n\t\t\t},\n\t\t\tset: function set(aabb) {\n\t\t\t\tthis._aabb = aabb;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"material\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._material;\n\t\t\t},\n\t\t\tset: function set(material) {\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < this._shader.length; i++) {\n\t\t\t\t\tthis._shader[i] = null;\n\t\t\t\t}\n\n\t\t\t\tif (this._material) {\n\t\t\t\t\tvar meshInstances = this._material.meshInstances;\n\t\t\t\t\ti = meshInstances.indexOf(this);\n\n\t\t\t\t\tif (i !== -1) {\n\t\t\t\t\t\tmeshInstances.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar prevMat = this._material;\n\t\t\t\tthis._material = material;\n\n\t\t\t\tif (this._material) {\n\t\t\t\t\tthis._material.meshInstances.push(this);\n\n\t\t\t\t\tthis.updateKey();\n\t\t\t\t\tvar prevBlend = prevMat && prevMat.blendType !== BLEND_NONE;\n\t\t\t\t\tvar thisBlend = this._material.blendType !== BLEND_NONE;\n\n\t\t\t\t\tif (prevBlend !== thisBlend) {\n\t\t\t\t\t\tvar scene = this._material._scene;\n\t\t\t\t\t\tif (!scene && prevMat && prevMat._scene) scene = prevMat._scene;\n\n\t\t\t\t\t\tif (scene) {\n\t\t\t\t\t\t\tscene.layers._dirtyBlend = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._material._dirtyBlend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layer;\n\t\t\t},\n\t\t\tset: function set(layer) {\n\t\t\t\tthis._layer = layer;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"calculateSortDistance\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._calculateSortDistance;\n\t\t\t},\n\t\t\tset: function set(calculateSortDistance) {\n\t\t\t\tthis._calculateSortDistance = calculateSortDistance;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"receiveShadow\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._receiveShadow;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._receiveShadow = val;\n\t\t\t\tthis._shaderDefs = val ? this._shaderDefs & ~SHADERDEF_NOSHADOW : this._shaderDefs | SHADERDEF_NOSHADOW;\n\t\t\t\tthis._shader[SHADER_FORWARD] = null;\n\t\t\t\tthis._shader[SHADER_FORWARDHDR] = null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skinInstance\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skinInstance;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._skinInstance = val;\n\t\t\t\tthis._shaderDefs = val ? this._shaderDefs | SHADERDEF_SKIN : this._shaderDefs & ~SHADERDEF_SKIN;\n\n\t\t\t\tfor (var i = 0; i < this._shader.length; i++) {\n\t\t\t\t\tthis._shader[i] = null;\n\t\t\t\t}\n\n\t\t\t\tthis._setupSkinUpdate();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"morphInstance\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._morphInstance;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._morphInstance = val;\n\n\t\t\t\tif (this._morphInstance) {\n\t\t\t\t\tthis._morphInstance.meshInstance = this;\n\t\t\t\t}\n\n\t\t\t\tthis._shaderDefs = val && val.morph.useTextureMorph ? this._shaderDefs | SHADERDEF_MORPH_TEXTURE_BASED : this._shaderDefs & ~SHADERDEF_MORPH_TEXTURE_BASED;\n\t\t\t\tthis._shaderDefs = val && val.morph.morphPositions ? this._shaderDefs | SHADERDEF_MORPH_POSITION : this._shaderDefs & ~SHADERDEF_MORPH_POSITION;\n\t\t\t\tthis._shaderDefs = val && val.morph.morphNormals ? this._shaderDefs | SHADERDEF_MORPH_NORMAL : this._shaderDefs & ~SHADERDEF_MORPH_NORMAL;\n\n\t\t\t\tfor (var i = 0; i < this._shader.length; i++) {\n\t\t\t\t\tthis._shader[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"screenSpace\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._screenSpace;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._screenSpace = val;\n\t\t\t\tthis._shaderDefs = val ? this._shaderDefs | SHADERDEF_SCREENSPACE : this._shaderDefs & ~SHADERDEF_SCREENSPACE;\n\t\t\t\tthis._shader[SHADER_FORWARD] = null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"key\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._key[SORTKEY_FORWARD];\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._key[SORTKEY_FORWARD] = val;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"mask\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shaderDefs >> 16;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tvar toggles = this._shaderDefs & 0x0000FFFF;\n\t\t\t\tthis._shaderDefs = toggles | val << 16;\n\t\t\t\tthis._shader[SHADER_FORWARD] = null;\n\t\t\t\tthis._shader[SHADER_FORWARDHDR] = null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"instancingCount\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.instancingData ? this.instancingData.count : 0;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this.instancingData) this.instancingData.count = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn MeshInstance;\n\t}();\n\n\tfunction getKey(layer, blendType, isCommand, materialId) {\n\t\treturn (layer & 0x0f) << 27 | (blendType === BLEND_NONE ? 1 : 0) << 26 | (isCommand ? 1 : 0) << 25 | (materialId & 0x1ffffff) << 0;\n\t}\n\n\tvar Morph = function (_RefCountedObject) {\n\t\t_inheritsLoose(Morph, _RefCountedObject);\n\n\t\tfunction Morph(targets, graphicsDevice) {\n\t\t\tvar _this;\n\n\t\t\t_this = _RefCountedObject.call(this) || this;\n\t\t\t_this.device = graphicsDevice || Application.getApplication().graphicsDevice;\n\t\t\t_this._targets = targets;\n\n\t\t\tif (_this.device.supportsMorphTargetTexturesCore) {\n\t\t\t\tif (_this.device.extTextureHalfFloat && _this.device.textureHalfFloatRenderable) {\n\t\t\t\t\t_this._renderTextureFormat = Morph.FORMAT_HALF_FLOAT;\n\t\t\t\t} else if (_this.device.extTextureFloat && _this.device.textureFloatRenderable) {\n\t\t\t\t\t_this._renderTextureFormat = Morph.FORMAT_FLOAT;\n\t\t\t\t}\n\n\t\t\t\tif (_this.device.extTextureHalfFloat && _this.device.textureHalfFloatUpdatable) {\n\t\t\t\t\t_this._textureFormat = Morph.FORMAT_HALF_FLOAT;\n\t\t\t\t} else if (_this.device.extTextureFloat) {\n\t\t\t\t\t_this._textureFormat = Morph.FORMAT_FLOAT;\n\t\t\t\t}\n\n\t\t\t\tif (_this._renderTextureFormat !== undefined && _this._textureFormat !== undefined) {\n\t\t\t\t\t_this._useTextureMorph = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this._init();\n\n\t\t\t_this._updateMorphFlags();\n\n\t\t\t_this._calculateAabb();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Morph.prototype;\n\n\t\t_proto._init = function _init() {\n\t\t\tif (this._useTextureMorph) {\n\t\t\t\tthis._useTextureMorph = this._initTextureBased();\n\t\t\t}\n\n\t\t\tvar i;\n\n\t\t\tif (!this._useTextureMorph) {\n\t\t\t\tfor (i = 0; i < this._targets.length; i++) {\n\t\t\t\t\tthis._targets[i]._initVertexBuffers(this.device);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._targets.length; i++) {\n\t\t\t\tthis._targets[i]._postInit();\n\t\t\t}\n\t\t};\n\n\t\t_proto._initTextureBased = function _initTextureBased() {\n\t\t\tvar target, i, v;\n\t\t\tvar deltaArrays = [],\n\t\t\t\t\tdeltaInfos = [];\n\n\t\t\tfor (i = 0; i < this._targets.length; i++) {\n\t\t\t\ttarget = this._targets[i];\n\n\t\t\t\tif (target.options.deltaPositions) {\n\t\t\t\t\tdeltaArrays.push(target.options.deltaPositions);\n\t\t\t\t\tdeltaInfos.push({\n\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\tname: 'texturePositions'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (target.options.deltaNormals) {\n\t\t\t\t\tdeltaArrays.push(target.options.deltaNormals);\n\t\t\t\t\tdeltaInfos.push({\n\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\tname: 'textureNormals'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ids = [],\n\t\t\t\t\tusedDataIndices = [];\n\t\t\tvar vertexUsed, data;\n\t\t\tvar freeIndex = 1;\n\t\t\tvar dataCount = deltaArrays[0].length;\n\n\t\t\tfor (v = 0; v < dataCount; v += 3) {\n\t\t\t\tvertexUsed = false;\n\n\t\t\t\tfor (i = 0; i < deltaArrays.length; i++) {\n\t\t\t\t\tdata = deltaArrays[i];\n\n\t\t\t\t\tif (data[v] !== 0 || data[v + 1] !== 0 || data[v + 2] !== 0) {\n\t\t\t\t\t\tvertexUsed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (vertexUsed) {\n\t\t\t\t\tids.push(freeIndex);\n\t\t\t\t\tusedDataIndices.push(v / 3);\n\t\t\t\t\tfreeIndex++;\n\t\t\t\t} else {\n\t\t\t\t\tids.push(0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar maxTextureSize = Math.min(this.device.maxTextureSize, 4096);\n\t\t\tvar morphTextureWidth = Math.ceil(Math.sqrt(freeIndex));\n\t\t\tmorphTextureWidth = Math.min(morphTextureWidth, maxTextureSize);\n\t\t\tvar morphTextureHeight = Math.ceil(freeIndex / morphTextureWidth);\n\n\t\t\tif (morphTextureHeight > maxTextureSize) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.morphTextureWidth = morphTextureWidth;\n\t\t\tthis.morphTextureHeight = morphTextureHeight;\n\t\t\tvar halfFloat = false;\n\t\t\tvar numComponents = 3;\n\t\t\tvar float2Half = math.float2Half;\n\n\t\t\tif (this._textureFormat === Morph.FORMAT_HALF_FLOAT) {\n\t\t\t\thalfFloat = true;\n\t\t\t\tnumComponents = 4;\n\t\t\t}\n\n\t\t\tvar arraySize = this.morphTextureWidth * this.morphTextureHeight * numComponents;\n\t\t\tvar packedDeltas = halfFloat ? new Uint16Array(arraySize) : new Float32Array(arraySize);\n\n\t\t\tfor (i = 0; i < deltaArrays.length; i++) {\n\t\t\t\tdata = deltaArrays[i];\n\n\t\t\t\tfor (v = 0; v < usedDataIndices.length; v++) {\n\t\t\t\t\tvar index = usedDataIndices[v];\n\n\t\t\t\t\tif (halfFloat) {\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents] = float2Half(data[index * 3]);\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents + 1] = float2Half(data[index * 3 + 1]);\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents + 2] = float2Half(data[index * 3 + 2]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents] = data[index * 3];\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents + 1] = data[index * 3 + 1];\n\t\t\t\t\t\tpackedDeltas[v * numComponents + numComponents + 2] = data[index * 3 + 2];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttarget = deltaInfos[i].target;\n\t\t\t\tvar format = this._textureFormat === Morph.FORMAT_FLOAT ? PIXELFORMAT_RGB32F : PIXELFORMAT_RGBA16F;\n\n\t\t\t\ttarget._setTexture(deltaInfos[i].name, this._createTexture(\"MorphTarget\", format, packedDeltas));\n\t\t\t}\n\n\t\t\tvar formatDesc = [{\n\t\t\t\tsemantic: SEMANTIC_ATTR15,\n\t\t\t\tcomponents: 1,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}];\n\t\t\tthis.vertexBufferIds = new VertexBuffer(this.device, new VertexFormat(this.device, formatDesc), ids.length, BUFFER_STATIC, new Float32Array(ids));\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this.vertexBufferIds) {\n\t\t\t\tthis.vertexBufferIds.destroy();\n\t\t\t\tthis.vertexBufferIds = null;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this._targets.length; i++) {\n\t\t\t\tthis._targets[i].destroy();\n\t\t\t}\n\n\t\t\tthis._targets.length = 0;\n\t\t};\n\n\t\t_proto.getTarget = function getTarget(index) {\n\t\t\treturn this._targets[index];\n\t\t};\n\n\t\t_proto._updateMorphFlags = function _updateMorphFlags() {\n\t\t\tthis._morphPositions = false;\n\t\t\tthis._morphNormals = false;\n\t\t\tvar target;\n\n\t\t\tfor (var i = 0; i < this._targets.length; i++) {\n\t\t\t\ttarget = this._targets[i];\n\n\t\t\t\tif (target.morphPositions) {\n\t\t\t\t\tthis._morphPositions = true;\n\t\t\t\t}\n\n\t\t\t\tif (target.morphNormals) {\n\t\t\t\t\tthis._morphNormals = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._calculateAabb = function _calculateAabb() {\n\t\t\tthis.aabb = new BoundingBox(new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n\t\t\tvar target;\n\n\t\t\tfor (var i = 0; i < this._targets.length; i++) {\n\t\t\t\ttarget = this._targets[i];\n\n\t\t\t\tthis.aabb._expand(target.aabb.getMin(), target.aabb.getMax());\n\t\t\t}\n\t\t};\n\n\t\t_proto._createTexture = function _createTexture(name, format, pixelData) {\n\t\t\tvar texture = new Texture(this.device, {\n\t\t\t\twidth: this.morphTextureWidth,\n\t\t\t\theight: this.morphTextureHeight,\n\t\t\t\tformat: format,\n\t\t\t\tcubemap: false,\n\t\t\t\tmipmaps: false,\n\t\t\t\tminFilter: FILTER_NEAREST,\n\t\t\t\tmagFilter: FILTER_NEAREST,\n\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t\t});\n\t\t\ttexture.name = name;\n\n\t\t\tif (pixelData) {\n\t\t\t\tvar pixels = texture.lock();\n\t\t\t\tpixels.set(pixelData);\n\t\t\t\ttexture.unlock();\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t};\n\n\t\t_createClass(Morph, [{\n\t\t\tkey: \"morphPositions\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._morphPositions;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"morphNormals\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._morphNormals;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"maxActiveTargets\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._useTextureMorph) return this._targets.length;\n\t\t\t\treturn this._morphPositions && this._morphNormals ? 4 : 8;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"useTextureMorph\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._useTextureMorph;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Morph;\n\t}(RefCountedObject);\n\n\tMorph.FORMAT_FLOAT = 0;\n\tMorph.FORMAT_HALF_FLOAT = 1;\n\n\tvar textureMorphVertexShader = 'attribute vec2 vertex_position;\\n' + 'varying vec2 uv0;\\n' + 'void main(void) {\\n' + '\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\\n' + '\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\\n' + '}\\n';\n\n\tvar MorphInstance = function () {\n\t\tfunction MorphInstance(morph) {\n\t\t\tthis.morph = morph;\n\t\t\tmorph.incRefCount();\n\t\t\tthis.device = morph.device;\n\t\t\tthis.meshInstance = null;\n\t\t\tthis._weights = [];\n\n\t\t\tfor (var v = 0; v < morph._targets.length; v++) {\n\t\t\t\tthis.setWeight(v, morph._targets[v].defaultWeight);\n\t\t\t}\n\n\t\t\tthis._activeTargets = [];\n\n\t\t\tif (morph.useTextureMorph) {\n\t\t\t\tthis.shaderCache = {};\n\t\t\t\tthis.maxSubmitCount = this.device.maxTextures;\n\t\t\t\tthis._shaderMorphWeights = new Float32Array(this.maxSubmitCount);\n\n\t\t\t\tvar createRT = function (name, textureVar) {\n\t\t\t\t\tvar format = morph._renderTextureFormat === Morph.FORMAT_FLOAT ? PIXELFORMAT_RGBA32F : PIXELFORMAT_RGBA16F;\n\t\t\t\t\tthis[textureVar] = morph._createTexture(name, format);\n\t\t\t\t\treturn new RenderTarget({\n\t\t\t\t\t\tcolorBuffer: this[textureVar],\n\t\t\t\t\t\tdepth: false\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\n\t\t\t\tif (morph.morphPositions) {\n\t\t\t\t\tthis.rtPositions = createRT(\"MorphRTPos\", \"texturePositions\");\n\t\t\t\t}\n\n\t\t\t\tif (morph.morphNormals) {\n\t\t\t\t\tthis.rtNormals = createRT(\"MorphRTNrm\", \"textureNormals\");\n\t\t\t\t}\n\n\t\t\t\tthis._textureParams = new Float32Array([morph.morphTextureWidth, morph.morphTextureHeight, 1 / morph.morphTextureWidth, 1 / morph.morphTextureHeight]);\n\n\t\t\t\tfor (var i = 0; i < this.maxSubmitCount; i++) {\n\t\t\t\t\tthis[\"morphBlendTex\" + i] = this.device.scope.resolve(\"morphBlendTex\" + i);\n\t\t\t\t}\n\n\t\t\t\tthis.morphFactor = this.device.scope.resolve(\"morphFactor[0]\");\n\t\t\t\tthis.zeroTextures = false;\n\t\t\t} else {\n\t\t\t\tthis.maxSubmitCount = 8;\n\t\t\t\tthis._shaderMorphWeights = new Float32Array(this.maxSubmitCount);\n\t\t\t\tthis._shaderMorphWeightsA = new Float32Array(this._shaderMorphWeights.buffer, 0, 4);\n\t\t\t\tthis._shaderMorphWeightsB = new Float32Array(this._shaderMorphWeights.buffer, 4 * 4, 4);\n\t\t\t\tthis._activeVertexBuffers = new Array(this.maxSubmitCount);\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = MorphInstance.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.meshInstance = null;\n\t\t\tthis.shader = null;\n\t\t\tvar morph = this.morph;\n\n\t\t\tif (morph) {\n\t\t\t\tthis.morph = null;\n\t\t\t\tmorph.decRefCount();\n\n\t\t\t\tif (morph.getRefCount() < 1) {\n\t\t\t\t\tmorph.destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.rtPositions) {\n\t\t\t\tthis.rtPositions.destroy();\n\t\t\t\tthis.rtPositions = null;\n\t\t\t}\n\n\t\t\tif (this.texturePositions) {\n\t\t\t\tthis.texturePositions.destroy();\n\t\t\t\tthis.texturePositions = null;\n\t\t\t}\n\n\t\t\tif (this.rtNormals) {\n\t\t\t\tthis.rtNormals.destroy();\n\t\t\t\tthis.rtNormals = null;\n\t\t\t}\n\n\t\t\tif (this.textureNormals) {\n\t\t\t\tthis.textureNormals.destroy();\n\t\t\t\tthis.textureNormals = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new MorphInstance(this.morph);\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.getWeight = function getWeight(index) {\n\t\t\treturn this._weights[index];\n\t\t};\n\n\t\t_proto.setWeight = function setWeight(index, weight) {\n\t\t\tthis._weights[index] = weight;\n\t\t\tthis._dirty = true;\n\t\t};\n\n\t\t_proto._getFragmentShader = function _getFragmentShader(numTextures) {\n\t\t\tvar i,\n\t\t\t\t\tfragmentShader = '';\n\n\t\t\tif (numTextures > 0) {\n\t\t\t\tfragmentShader += 'varying vec2 uv0;\\n' + 'uniform highp float morphFactor[' + numTextures + '];\\n';\n\t\t\t}\n\n\t\t\tfor (i = 0; i < numTextures; i++) {\n\t\t\t\tfragmentShader += 'uniform highp sampler2D morphBlendTex' + i + ';\\n';\n\t\t\t}\n\n\t\t\tfragmentShader += 'void main (void) {\\n' + '\t\thighp vec4 color = vec4(0, 0, 0, 1);\\n';\n\n\t\t\tfor (i = 0; i < numTextures; i++) {\n\t\t\t\tfragmentShader += '\t\tcolor.xyz += morphFactor[' + i + '] * texture2D(morphBlendTex' + i + ', uv0).xyz;\\n';\n\t\t\t}\n\n\t\t\tfragmentShader += '\t\tgl_FragColor = color;\\n' + '}\\n';\n\t\t\treturn fragmentShader;\n\t\t};\n\n\t\t_proto._getShader = function _getShader(count) {\n\t\t\tvar shader = this.shaderCache[count];\n\n\t\t\tif (!shader) {\n\t\t\t\tvar fs = this._getFragmentShader(count);\n\n\t\t\t\tshader = createShaderFromCode(this.device, textureMorphVertexShader, fs, \"textureMorph\" + count);\n\t\t\t\tthis.shaderCache[count] = shader;\n\t\t\t}\n\n\t\t\treturn shader;\n\t\t};\n\n\t\t_proto._updateTextureRenderTarget = function _updateTextureRenderTarget(renderTarget, srcTextureName) {\n\t\t\tvar device = this.device;\n\n\t\t\tvar submitBatch = function (usedCount, blending) {\n\t\t\t\tthis.morphFactor.setValue(this._shaderMorphWeights);\n\t\t\t\tdevice.setBlending(blending);\n\n\t\t\t\tif (blending) {\n\t\t\t\t\tdevice.setBlendFunction(BLENDMODE_ONE, BLENDMODE_ONE);\n\t\t\t\t\tdevice.setBlendEquation(BLENDEQUATION_ADD);\n\t\t\t\t}\n\n\t\t\t\tvar shader = this._getShader(usedCount);\n\n\t\t\t\tdrawQuadWithShader(device, renderTarget, shader, undefined, undefined, blending);\n\t\t\t}.bind(this);\n\n\t\t\tvar usedCount = 0;\n\t\t\tvar blending = false;\n\t\t\tvar count = this._activeTargets.length;\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar activeTarget = this._activeTargets[i];\n\t\t\t\tvar tex = activeTarget.target[srcTextureName];\n\n\t\t\t\tif (tex) {\n\t\t\t\t\tthis[\"morphBlendTex\" + usedCount].setValue(tex);\n\t\t\t\t\tthis._shaderMorphWeights[usedCount] = activeTarget.weight;\n\t\t\t\t\tusedCount++;\n\n\t\t\t\t\tif (usedCount >= this.maxSubmitCount) {\n\t\t\t\t\t\tsubmitBatch(usedCount, blending);\n\t\t\t\t\t\tusedCount = 0;\n\t\t\t\t\t\tblending = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (usedCount > 0 || count === 0 && !this.zeroTextures) {\n\t\t\t\tsubmitBatch(usedCount, blending);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateTextureMorph = function _updateTextureMorph() {\n\t\t\tvar device = this.device;\n\n\t\t\tif (this._activeTargets.length > 0 || !this.zeroTextures) {\n\t\t\t\tthis._updateTextureRenderTarget(this.rtPositions, 'texturePositions');\n\n\t\t\t\tthis._updateTextureRenderTarget(this.rtNormals, 'textureNormals');\n\n\t\t\t\tthis.zeroTextures = this._activeTargets.length === 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateVertexMorph = function _updateVertexMorph() {\n\t\t\tvar i,\n\t\t\t\t\tcount = this.maxSubmitCount;\n\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\tthis._shaderMorphWeights[i] = 0;\n\t\t\t\tthis._activeVertexBuffers[i] = null;\n\t\t\t}\n\n\t\t\tvar posIndex = 0;\n\t\t\tvar nrmIndex = this.morph.morphPositions ? 4 : 0;\n\t\t\tvar target;\n\n\t\t\tfor (i = 0; i < this._activeTargets.length; i++) {\n\t\t\t\ttarget = this._activeTargets[i].target;\n\n\t\t\t\tif (target._vertexBufferPositions) {\n\t\t\t\t\tthis._activeVertexBuffers[posIndex] = target._vertexBufferPositions;\n\t\t\t\t\tthis._shaderMorphWeights[posIndex] = this._activeTargets[i].weight;\n\t\t\t\t\tposIndex++;\n\t\t\t\t}\n\n\t\t\t\tif (target._vertexBufferNormals) {\n\t\t\t\t\tthis._activeVertexBuffers[nrmIndex] = target._vertexBufferNormals;\n\t\t\t\t\tthis._shaderMorphWeights[nrmIndex] = this._activeTargets[i].weight;\n\t\t\t\t\tnrmIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tthis._dirty = false;\n\t\t\tvar targets = this.morph._targets;\n\t\t\tvar activeCount = 0,\n\t\t\t\t\tactiveTarget;\n\t\t\tvar i,\n\t\t\t\t\tabsWeight,\n\t\t\t\t\tepsilon = 0.00001;\n\n\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\tabsWeight = Math.abs(this.getWeight(i));\n\n\t\t\t\tif (absWeight > epsilon) {\n\t\t\t\t\tif (this._activeTargets.length <= activeCount) {\n\t\t\t\t\t\tthis._activeTargets[activeCount] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tactiveTarget = this._activeTargets[activeCount++];\n\t\t\t\t\tactiveTarget.absWeight = absWeight;\n\t\t\t\t\tactiveTarget.weight = this.getWeight(i);\n\t\t\t\t\tactiveTarget.target = targets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._activeTargets.length = activeCount;\n\t\t\tvar maxActiveTargets = this.morph.maxActiveTargets;\n\n\t\t\tif (this._activeTargets.length > maxActiveTargets) {\n\t\t\t\tthis._activeTargets.sort(function (l, r) {\n\t\t\t\t\treturn l.absWeight < r.absWeight ? 1 : r.absWeight < l.absWeight ? -1 : 0;\n\t\t\t\t});\n\n\t\t\t\tthis._activeTargets.length = maxActiveTargets;\n\t\t\t}\n\n\t\t\tif (this.morph.useTextureMorph) {\n\t\t\t\tthis._updateTextureMorph();\n\t\t\t} else {\n\t\t\t\tthis._updateVertexMorph();\n\t\t\t}\n\t\t};\n\n\t\treturn MorphInstance;\n\t}();\n\n\tvar _invMatrix = new Mat4();\n\n\tvar SkinInstance = function () {\n\t\tfunction SkinInstance(skin) {\n\t\t\tthis._dirty = true;\n\t\t\tthis._skinUpdateIndex = -1;\n\t\t\tthis._updateBeforeCull = true;\n\n\t\t\tif (skin) {\n\t\t\t\tthis.initSkin(skin);\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = SkinInstance.prototype;\n\n\t\t_proto.init = function init(device, numBones) {\n\t\t\tif (device.supportsBoneTextures) {\n\t\t\t\tvar numPixels = numBones * 3;\n\t\t\t\tvar width = Math.ceil(Math.sqrt(numPixels));\n\t\t\t\twidth = math.roundUp(width, 3);\n\t\t\t\tvar height = Math.ceil(numPixels / width);\n\t\t\t\tthis.boneTexture = new Texture(device, {\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height,\n\t\t\t\t\tformat: PIXELFORMAT_RGBA32F,\n\t\t\t\t\tmipmaps: false,\n\t\t\t\t\tminFilter: FILTER_NEAREST,\n\t\t\t\t\tmagFilter: FILTER_NEAREST\n\t\t\t\t});\n\t\t\t\tthis.boneTexture.name = 'skin';\n\t\t\t\tthis.matrixPalette = this.boneTexture.lock();\n\t\t\t} else {\n\t\t\t\tthis.matrixPalette = new Float32Array(numBones * 12);\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this.boneTexture) {\n\t\t\t\tthis.boneTexture.destroy();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.initSkin = function initSkin(skin) {\n\t\t\tthis.skin = skin;\n\t\t\tthis.bones = [];\n\t\t\tvar numBones = skin.inverseBindPose.length;\n\t\t\tthis.init(skin.device, numBones);\n\t\t\tthis.matrices = [];\n\n\t\t\tfor (var i = 0; i < numBones; i++) {\n\t\t\t\tthis.matrices[i] = new Mat4();\n\t\t\t}\n\t\t};\n\n\t\t_proto.uploadBones = function uploadBones(device) {\n\t\t\tif (device.supportsBoneTextures) {\n\t\t\t\tthis.boneTexture.lock();\n\t\t\t\tthis.boneTexture.unlock();\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateMatrices = function _updateMatrices(rootNode, skinUpdateIndex) {\n\t\t\tif (this._skinUpdateIndex !== skinUpdateIndex) {\n\t\t\t\tthis._skinUpdateIndex = skinUpdateIndex;\n\n\t\t\t\t_invMatrix.copy(rootNode.getWorldTransform()).invert();\n\n\t\t\t\tfor (var i = this.bones.length - 1; i >= 0; i--) {\n\t\t\t\t\tthis.matrices[i].mulAffine2(_invMatrix, this.bones[i].getWorldTransform());\n\t\t\t\t\tthis.matrices[i].mulAffine2(this.matrices[i], this.skin.inverseBindPose[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateMatrices = function updateMatrices(rootNode, skinUpdateIndex) {\n\t\t\tif (this._updateBeforeCull) {\n\t\t\t\tthis._updateMatrices(rootNode, skinUpdateIndex);\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateMatrixPalette = function updateMatrixPalette(rootNode, skinUpdateIndex) {\n\t\t\tthis._updateMatrices(rootNode, skinUpdateIndex);\n\n\t\t\tvar pe;\n\t\t\tvar mp = this.matrixPalette;\n\t\t\tvar base;\n\t\t\tvar count = this.bones.length;\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tpe = this.matrices[i].data;\n\t\t\t\tbase = i * 12;\n\t\t\t\tmp[base] = pe[0];\n\t\t\t\tmp[base + 1] = pe[4];\n\t\t\t\tmp[base + 2] = pe[8];\n\t\t\t\tmp[base + 3] = pe[12];\n\t\t\t\tmp[base + 4] = pe[1];\n\t\t\t\tmp[base + 5] = pe[5];\n\t\t\t\tmp[base + 6] = pe[9];\n\t\t\t\tmp[base + 7] = pe[13];\n\t\t\t\tmp[base + 8] = pe[2];\n\t\t\t\tmp[base + 9] = pe[6];\n\t\t\t\tmp[base + 10] = pe[10];\n\t\t\t\tmp[base + 11] = pe[14];\n\t\t\t}\n\n\t\t\tthis.uploadBones(this.skin.device);\n\t\t};\n\n\t\treturn SkinInstance;\n\t}();\n\n\tvar Model = function () {\n\t\tfunction Model() {\n\t\t\tthis.graph = null;\n\t\t\tthis.meshInstances = [];\n\t\t\tthis.skinInstances = [];\n\t\t\tthis.morphInstances = [];\n\t\t\tthis.cameras = [];\n\t\t\tthis.lights = [];\n\t\t\tthis._shadersVersion = 0;\n\t\t\tthis._immutable = false;\n\t\t}\n\n\t\tvar _proto = Model.prototype;\n\n\t\t_proto.getGraph = function getGraph() {\n\t\t\treturn this.graph;\n\t\t};\n\n\t\t_proto.setGraph = function setGraph(graph) {\n\t\t\tthis.graph = graph;\n\t\t};\n\n\t\t_proto.getCameras = function getCameras() {\n\t\t\treturn this.cameras;\n\t\t};\n\n\t\t_proto.setCameras = function setCameras(cameras) {\n\t\t\tthis.cameras = cameras;\n\t\t};\n\n\t\t_proto.getLights = function getLights() {\n\t\t\treturn this.lights;\n\t\t};\n\n\t\t_proto.setLights = function setLights(lights) {\n\t\t\tthis.lights = lights;\n\t\t};\n\n\t\t_proto.getMaterials = function getMaterials() {\n\t\t\tvar i;\n\t\t\tvar materials = [];\n\n\t\t\tfor (i = 0; i < this.meshInstances.length; i++) {\n\t\t\t\tvar meshInstance = this.meshInstances[i];\n\n\t\t\t\tif (materials.indexOf(meshInstance.material) === -1) {\n\t\t\t\t\tmaterials.push(meshInstance.material);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar i, j;\n\t\t\tvar srcNodes = [];\n\t\t\tvar cloneNodes = [];\n\n\t\t\tvar _duplicate = function _duplicate(node) {\n\t\t\t\tvar newNode = node.clone();\n\t\t\t\tsrcNodes.push(node);\n\t\t\t\tcloneNodes.push(newNode);\n\n\t\t\t\tfor (var idx = 0; idx < node._children.length; idx++) {\n\t\t\t\t\tnewNode.addChild(_duplicate(node._children[idx]));\n\t\t\t\t}\n\n\t\t\t\treturn newNode;\n\t\t\t};\n\n\t\t\tvar cloneGraph = _duplicate(this.graph);\n\n\t\t\tvar cloneMeshInstances = [];\n\t\t\tvar cloneSkinInstances = [];\n\t\t\tvar cloneMorphInstances = [];\n\n\t\t\tfor (i = 0; i < this.skinInstances.length; i++) {\n\t\t\t\tvar skin = this.skinInstances[i].skin;\n\t\t\t\tvar cloneSkinInstance = new SkinInstance(skin);\n\t\t\t\tvar bones = [];\n\n\t\t\t\tfor (j = 0; j < skin.boneNames.length; j++) {\n\t\t\t\t\tvar boneName = skin.boneNames[j];\n\t\t\t\t\tvar bone = cloneGraph.findByName(boneName);\n\t\t\t\t\tbones.push(bone);\n\t\t\t\t}\n\n\t\t\t\tcloneSkinInstance.bones = bones;\n\t\t\t\tcloneSkinInstances.push(cloneSkinInstance);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.morphInstances.length; i++) {\n\t\t\t\tvar morph = this.morphInstances[i].morph;\n\t\t\t\tvar cloneMorphInstance = new MorphInstance(morph);\n\t\t\t\tcloneMorphInstances.push(cloneMorphInstance);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.meshInstances.length; i++) {\n\t\t\t\tvar meshInstance = this.meshInstances[i];\n\t\t\t\tvar nodeIndex = srcNodes.indexOf(meshInstance.node);\n\t\t\t\tvar cloneMeshInstance = new MeshInstance(cloneNodes[nodeIndex], meshInstance.mesh, meshInstance.material);\n\n\t\t\t\tif (meshInstance.skinInstance) {\n\t\t\t\t\tvar skinInstanceIndex = this.skinInstances.indexOf(meshInstance.skinInstance);\n\t\t\t\t\tcloneMeshInstance.skinInstance = cloneSkinInstances[skinInstanceIndex];\n\t\t\t\t}\n\n\t\t\t\tif (meshInstance.morphInstance) {\n\t\t\t\t\tvar morphInstanceIndex = this.morphInstances.indexOf(meshInstance.morphInstance);\n\t\t\t\t\tcloneMeshInstance.morphInstance = cloneMorphInstances[morphInstanceIndex];\n\t\t\t\t}\n\n\t\t\t\tcloneMeshInstances.push(cloneMeshInstance);\n\t\t\t}\n\n\t\t\tvar clone = new Model();\n\t\t\tclone.graph = cloneGraph;\n\t\t\tclone.meshInstances = cloneMeshInstances;\n\t\t\tclone.skinInstances = cloneSkinInstances;\n\t\t\tclone.morphInstances = cloneMorphInstances;\n\t\t\tclone.getGraph().syncHierarchy();\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar meshInstances = this.meshInstances;\n\n\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\tmeshInstances[i].destroy();\n\t\t\t}\n\n\t\t\tthis.meshInstances.length = 0;\n\t\t};\n\n\t\t_proto.generateWireframe = function generateWireframe() {\n\t\t\tvar i;\n\t\t\tvar mesh;\n\t\t\tvar meshes = [];\n\n\t\t\tfor (i = 0; i < this.meshInstances.length; i++) {\n\t\t\t\tmesh = this.meshInstances[i].mesh;\n\n\t\t\t\tif (meshes.indexOf(mesh) === -1) {\n\t\t\t\t\tmeshes.push(mesh);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < meshes.length; ++i) {\n\t\t\t\tmesh = meshes[i];\n\n\t\t\t\tif (!mesh.primitive[RENDERSTYLE_WIREFRAME]) {\n\t\t\t\t\tmesh.generateWireframe();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Model;\n\t}();\n\n\tvar Batch = function Batch(meshInstances, dynamic, batchGroupId) {\n\t\tthis.origMeshInstances = meshInstances;\n\t\tthis._aabb = new BoundingBox();\n\t\tthis.meshInstance = null;\n\t\tthis.model = null;\n\t\tthis.dynamic = dynamic;\n\t\tthis.batchGroupId = batchGroupId;\n\t};\n\n\tvar BatchGroup = function BatchGroup(id, name, dynamic, maxAabbSize, layers) {\n\t\tif (layers === void 0) {\n\t\t\tlayers = [LAYERID_WORLD];\n\t\t}\n\n\t\tthis.dynamic = dynamic;\n\t\tthis.maxAabbSize = maxAabbSize;\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.layers = layers;\n\t\tthis._ui = false;\n\t\tthis._sprite = false;\n\t\tthis._obj = {\n\t\t\tmodel: [],\n\t\t\telement: [],\n\t\t\tsprite: [],\n\t\t\trender: []\n\t\t};\n\t};\n\n\tBatchGroup.MODEL = 'model';\n\tBatchGroup.ELEMENT = 'element';\n\tBatchGroup.SPRITE = 'sprite';\n\tBatchGroup.RENDER = 'render';\n\n\tvar SkinBatchInstance = function (_SkinInstance) {\n\t\t_inheritsLoose(SkinBatchInstance, _SkinInstance);\n\n\t\tfunction SkinBatchInstance(device, nodes, rootNode) {\n\t\t\tvar _this;\n\n\t\t\t_this = _SkinInstance.call(this) || this;\n\t\t\tvar numBones = nodes.length;\n\n\t\t\t_this.init(device, numBones);\n\n\t\t\t_this.device = device;\n\t\t\t_this.rootNode = rootNode;\n\t\t\t_this.bones = nodes;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SkinBatchInstance.prototype;\n\n\t\t_proto.updateMatrices = function updateMatrices(rootNode, skinUpdateIndex) {};\n\n\t\t_proto.updateMatrixPalette = function updateMatrixPalette(rootNode, skinUpdateIndex) {\n\t\t\tvar pe;\n\t\t\tvar mp = this.matrixPalette;\n\t\t\tvar base;\n\t\t\tvar count = this.bones.length;\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tpe = this.bones[i].getWorldTransform().data;\n\t\t\t\tbase = i * 12;\n\t\t\t\tmp[base] = pe[0];\n\t\t\t\tmp[base + 1] = pe[4];\n\t\t\t\tmp[base + 2] = pe[8];\n\t\t\t\tmp[base + 3] = pe[12];\n\t\t\t\tmp[base + 4] = pe[1];\n\t\t\t\tmp[base + 5] = pe[5];\n\t\t\t\tmp[base + 6] = pe[9];\n\t\t\t\tmp[base + 7] = pe[13];\n\t\t\t\tmp[base + 8] = pe[2];\n\t\t\t\tmp[base + 9] = pe[6];\n\t\t\t\tmp[base + 10] = pe[10];\n\t\t\t\tmp[base + 11] = pe[14];\n\t\t\t}\n\n\t\t\tthis.uploadBones(this.device);\n\t\t};\n\n\t\treturn SkinBatchInstance;\n\t}(SkinInstance);\n\n\tfunction paramsIdentical(a, b) {\n\t\tif (a && !b) return false;\n\t\tif (!a && b) return false;\n\t\ta = a.data;\n\t\tb = b.data;\n\t\tif (a === b) return true;\n\n\t\tif (a instanceof Float32Array && b instanceof Float32Array) {\n\t\t\tif (a.length !== b.length) return false;\n\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] !== b[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction equalParamSets(params1, params2) {\n\t\tvar param;\n\n\t\tfor (param in params1) {\n\t\t\tif (params1.hasOwnProperty(param) && !paramsIdentical(params1[param], params2[param])) return false;\n\t\t}\n\n\t\tfor (param in params2) {\n\t\t\tif (params2.hasOwnProperty(param) && !paramsIdentical(params2[param], params1[param])) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction equalLightLists(lightList1, lightList2) {\n\t\tvar k;\n\n\t\tfor (k = 0; k < lightList1.length; k++) {\n\t\t\tif (lightList2.indexOf(lightList1[k]) < 0) return false;\n\t\t}\n\n\t\tfor (k = 0; k < lightList2.length; k++) {\n\t\t\tif (lightList1.indexOf(lightList2[k]) < 0) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tvar worldMatX = new Vec3();\n\tvar worldMatY = new Vec3();\n\tvar worldMatZ = new Vec3();\n\n\tfunction getScaleSign(mi) {\n\t\tvar wt = mi.node.worldTransform;\n\t\twt.getX(worldMatX);\n\t\twt.getY(worldMatY);\n\t\twt.getZ(worldMatZ);\n\t\tworldMatX.cross(worldMatX, worldMatY);\n\t\treturn worldMatX.dot(worldMatZ) >= 0 ? 1 : -1;\n\t}\n\n\tvar BatchManager = function () {\n\t\tfunction BatchManager(device, root, scene) {\n\t\t\tthis.device = device;\n\t\t\tthis.rootNode = root;\n\t\t\tthis.scene = scene;\n\t\t\tthis._init = false;\n\t\t\tthis._batchGroups = {};\n\t\t\tthis._batchGroupCounter = 0;\n\t\t\tthis._batchList = [];\n\t\t\tthis._dirtyGroups = [];\n\t\t}\n\n\t\tvar _proto = BatchManager.prototype;\n\n\t\t_proto.destroyManager = function destroyManager() {\n\t\t\tthis.device = null;\n\t\t\tthis.rootNode = null;\n\t\t\tthis.scene = null;\n\t\t\tthis._batchGroups = {};\n\t\t\tthis._batchList = [];\n\t\t\tthis._dirtyGroups = [];\n\t\t};\n\n\t\t_proto.addGroup = function addGroup(name, dynamic, maxAabbSize, id, layers) {\n\t\t\tif (id === undefined) {\n\t\t\t\tid = this._batchGroupCounter;\n\t\t\t\tthis._batchGroupCounter++;\n\t\t\t}\n\n\t\t\tif (this._batchGroups[id]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar group;\n\t\t\tthis._batchGroups[id] = group = new BatchGroup(id, name, dynamic, maxAabbSize, layers);\n\t\t\treturn group;\n\t\t};\n\n\t\t_proto.removeGroup = function removeGroup(id) {\n\t\t\tif (!this._batchGroups[id]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newBatchList = [];\n\n\t\t\tfor (var i = 0; i < this._batchList.length; i++) {\n\t\t\t\tif (this._batchList[i].batchGroupId !== id) {\n\t\t\t\t\tnewBatchList.push(this._batchList[i]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.destroy(this._batchList[i]);\n\t\t\t}\n\n\t\t\tthis._batchList = newBatchList;\n\n\t\t\tthis._removeModelsFromBatchGroup(this.rootNode, id);\n\n\t\t\tdelete this._batchGroups[id];\n\t\t};\n\n\t\t_proto.markGroupDirty = function markGroupDirty(id) {\n\t\t\tif (this._dirtyGroups.indexOf(id) < 0) {\n\t\t\t\tthis._dirtyGroups.push(id);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getGroupByName = function getGroupByName(name) {\n\t\t\tvar groups = this._batchGroups;\n\n\t\t\tfor (var group in groups) {\n\t\t\t\tif (!groups.hasOwnProperty(group)) continue;\n\n\t\t\t\tif (groups[group].name === name) {\n\t\t\t\t\treturn groups[group];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.getBatches = function getBatches(batchGroupId) {\n\t\t\tvar results = [];\n\t\t\tvar len = this._batchList.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar batch = this._batchList[i];\n\n\t\t\t\tif (batch.batchGroupId === batchGroupId) {\n\t\t\t\t\tresults.push(batch);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn results;\n\t\t};\n\n\t\t_proto._removeModelsFromBatchGroup = function _removeModelsFromBatchGroup(node, id) {\n\t\t\tif (!node.enabled) return;\n\n\t\t\tif (node.model && node.model.batchGroupId === id) {\n\t\t\t\tnode.model.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tif (node.render && node.render.batchGroupId === id) {\n\t\t\t\tnode.render.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tif (node.element && node.element.batchGroupId === id) {\n\t\t\t\tnode.element.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tif (node.sprite && node.sprite.batchGroupId === id) {\n\t\t\t\tnode.sprite.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < node._children.length; i++) {\n\t\t\t\tthis._removeModelsFromBatchGroup(node._children[i], id);\n\t\t\t}\n\t\t};\n\n\t\t_proto.insert = function insert(type, groupId, node) {\n\t\t\tvar group = this._batchGroups[groupId];\n\n\t\t\tif (group) {\n\t\t\t\tif (group._obj[type].indexOf(node) < 0) {\n\t\t\t\t\tgroup._obj[type].push(node);\n\n\t\t\t\t\tthis.markGroupDirty(groupId);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.remove = function remove(type, groupId, node) {\n\t\t\tvar group = this._batchGroups[groupId];\n\n\t\t\tif (group) {\n\t\t\t\tvar idx = group._obj[type].indexOf(node);\n\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tgroup._obj[type].splice(idx, 1);\n\n\t\t\t\t\tthis.markGroupDirty(groupId);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._extractRender = function _extractRender(node, arr, group, groupMeshInstances) {\n\t\t\tif (node.render) {\n\t\t\t\tif (node.render.isStatic) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\t\tdrawCalls = this.scene.drawCalls;\n\t\t\t\t\tvar nodeMeshInstances = node.render.meshInstances;\n\n\t\t\t\t\tfor (i = 0; i < drawCalls.length; i++) {\n\t\t\t\t\t\tif (!drawCalls[i]._staticSource) continue;\n\t\t\t\t\t\tif (nodeMeshInstances.indexOf(drawCalls[i]._staticSource) < 0) continue;\n\t\t\t\t\t\tarr.push(drawCalls[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < nodeMeshInstances.length; i++) {\n\t\t\t\t\t\tif (drawCalls.indexOf(nodeMeshInstances[i]) >= 0) {\n\t\t\t\t\t\t\tarr.push(nodeMeshInstances[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tarr = groupMeshInstances[node.render.batchGroupId] = arr.concat(node.render.meshInstances);\n\t\t\t\t}\n\n\t\t\t\tnode.render.removeFromLayers();\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t};\n\n\t\t_proto._extractModel = function _extractModel(node, arr, group, groupMeshInstances) {\n\t\t\tif (node.model && node.model.model) {\n\t\t\t\tvar i;\n\n\t\t\t\tif (node.model.isStatic) {\n\t\t\t\t\tvar drawCalls = this.scene.drawCalls;\n\t\t\t\t\tvar nodeMeshInstances = node.model.meshInstances;\n\n\t\t\t\t\tfor (i = 0; i < drawCalls.length; i++) {\n\t\t\t\t\t\tif (!drawCalls[i]._staticSource) continue;\n\t\t\t\t\t\tif (nodeMeshInstances.indexOf(drawCalls[i]._staticSource) < 0) continue;\n\t\t\t\t\t\tarr.push(drawCalls[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < nodeMeshInstances.length; i++) {\n\t\t\t\t\t\tif (drawCalls.indexOf(nodeMeshInstances[i]) >= 0) {\n\t\t\t\t\t\t\tarr.push(nodeMeshInstances[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tarr = groupMeshInstances[node.model.batchGroupId] = arr.concat(node.model.meshInstances);\n\t\t\t\t}\n\n\t\t\t\tnode.model.removeModelFromLayers();\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t};\n\n\t\t_proto._extractElement = function _extractElement(node, arr, group) {\n\t\t\tif (!node.element) return;\n\t\t\tvar valid = false;\n\n\t\t\tif (node.element._text && node.element._text._model.meshInstances.length > 0) {\n\t\t\t\tarr.push(node.element._text._model.meshInstances[0]);\n\t\t\t\tnode.element.removeModelFromLayers(node.element._text._model);\n\t\t\t\tvalid = true;\n\t\t\t} else if (node.element._image) {\n\t\t\t\tarr.push(node.element._image._renderable.meshInstance);\n\t\t\t\tnode.element.removeModelFromLayers(node.element._image._renderable.model);\n\n\t\t\t\tif (node.element._image._renderable.unmaskMeshInstance) {\n\t\t\t\t\tarr.push(node.element._image._renderable.unmaskMeshInstance);\n\n\t\t\t\t\tif (!node.element._image._renderable.unmaskMeshInstance.stencilFront || !node.element._image._renderable.unmaskMeshInstance.stencilBack) {\n\t\t\t\t\t\tnode.element._dirtifyMask();\n\n\t\t\t\t\t\tnode.element._onPrerender();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalid = true;\n\t\t\t}\n\n\t\t\tif (valid) {\n\t\t\t\tgroup._ui = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto._collectAndRemoveMeshInstances = function _collectAndRemoveMeshInstances(groupMeshInstances, groupIds) {\n\t\t\tvar node, group, arr, id;\n\n\t\t\tfor (var g = 0; g < groupIds.length; g++) {\n\t\t\t\tid = groupIds[g];\n\t\t\t\tgroup = this._batchGroups[id];\n\t\t\t\tif (!group) continue;\n\t\t\t\tarr = groupMeshInstances[id];\n\t\t\t\tif (!arr) arr = groupMeshInstances[id] = [];\n\n\t\t\t\tfor (var m = 0; m < group._obj.model.length; m++) {\n\t\t\t\t\tarr = this._extractModel(group._obj.model[m], arr, group, groupMeshInstances);\n\t\t\t\t}\n\n\t\t\t\tfor (var r = 0; r < group._obj.render.length; r++) {\n\t\t\t\t\tarr = this._extractRender(group._obj.render[r], arr, group, groupMeshInstances);\n\t\t\t\t}\n\n\t\t\t\tfor (var e = 0; e < group._obj.element.length; e++) {\n\t\t\t\t\tthis._extractElement(group._obj.element[e], arr, group);\n\t\t\t\t}\n\n\t\t\t\tfor (var s = 0; s < group._obj.sprite.length; s++) {\n\t\t\t\t\tnode = group._obj.sprite[s];\n\n\t\t\t\t\tif (node.sprite && node.sprite._meshInstance && (group.dynamic || node.sprite.sprite._renderMode === SPRITE_RENDERMODE_SIMPLE)) {\n\t\t\t\t\t\tarr.push(node.sprite._meshInstance);\n\t\t\t\t\t\tnode.sprite.removeModelFromLayers();\n\t\t\t\t\t\tgroup._sprite = true;\n\t\t\t\t\t\tnode.sprite._batchGroup = group;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.generate = function generate(groupIds) {\n\t\t\tvar i, j;\n\t\t\tvar groupMeshInstances = {};\n\n\t\t\tif (!groupIds) {\n\t\t\t\tgroupIds = Object.keys(this._batchGroups);\n\t\t\t}\n\n\t\t\tvar newBatchList = [];\n\n\t\t\tfor (i = 0; i < this._batchList.length; i++) {\n\t\t\t\tif (groupIds.indexOf(this._batchList[i].batchGroupId) < 0) {\n\t\t\t\t\tnewBatchList.push(this._batchList[i]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.destroy(this._batchList[i]);\n\t\t\t}\n\n\t\t\tthis._batchList = newBatchList;\n\n\t\t\tthis._collectAndRemoveMeshInstances(groupMeshInstances, groupIds);\n\n\t\t\tif (groupIds === this._dirtyGroups) {\n\t\t\t\tthis._dirtyGroups.length = 0;\n\t\t\t} else {\n\t\t\t\tvar newDirtyGroups = [];\n\n\t\t\t\tfor (i = 0; i < this._dirtyGroups.length; i++) {\n\t\t\t\t\tif (groupIds.indexOf(this._dirtyGroups[i]) < 0) newDirtyGroups.push(this._dirtyGroups[i]);\n\t\t\t\t}\n\n\t\t\t\tthis._dirtyGroups = newDirtyGroups;\n\t\t\t}\n\n\t\t\tvar group, lists, groupData, batch;\n\n\t\t\tfor (var groupId in groupMeshInstances) {\n\t\t\t\tif (!groupMeshInstances.hasOwnProperty(groupId)) continue;\n\t\t\t\tgroup = groupMeshInstances[groupId];\n\t\t\t\tgroupData = this._batchGroups[groupId];\n\n\t\t\t\tif (!groupData) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlists = this.prepare(group, groupData.dynamic, groupData.maxAabbSize, groupData._ui || groupData._sprite);\n\n\t\t\t\tfor (i = 0; i < lists.length; i++) {\n\t\t\t\t\tbatch = this.create(lists[i], groupData.dynamic, parseInt(groupId, 10));\n\t\t\t\t\tif (!batch) continue;\n\n\t\t\t\t\tfor (j = 0; j < groupData.layers.length; j++) {\n\t\t\t\t\t\tvar layer = this.scene.layers.getLayerById(groupData.layers[j]);\n\t\t\t\t\t\tif (layer) layer.addMeshInstances(batch.model.meshInstances);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.prepare = function prepare(meshInstances, dynamic, maxAabbSize, translucent) {\n\t\t\tif (maxAabbSize === void 0) {\n\t\t\t\tmaxAabbSize = Number.POSITIVE_INFINITY;\n\t\t\t}\n\n\t\t\tif (meshInstances.length === 0) return [];\n\t\t\tvar halfMaxAabbSize = maxAabbSize * 0.5;\n\t\t\tvar maxInstanceCount = this.device.supportsBoneTextures ? 1024 : this.device.boneLimit;\n\t\t\tvar maxNumVertices = this.device.extUintElement ? 0xffffffff : 0xffff;\n\t\t\tvar material, layer, vertCount, params, lightList, defs, stencil, staticLights, scaleSign, drawOrder, indexed, vertexFormatBatchingHash;\n\t\t\tvar aabb = new BoundingBox();\n\t\t\tvar testAabb = new BoundingBox();\n\t\t\tvar skipTranslucentAabb = null;\n\t\t\tvar mi, sf;\n\t\t\tvar lists = [];\n\t\t\tvar i,\n\t\t\t\t\tj = 0;\n\n\t\t\tif (translucent) {\n\t\t\t\tmeshInstances.sort(function (a, b) {\n\t\t\t\t\treturn a.drawOrder - b.drawOrder;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar meshInstancesLeftA = meshInstances;\n\t\t\tvar meshInstancesLeftB;\n\t\t\tvar skipMesh = translucent ? function (mi) {\n\t\t\t\tif (skipTranslucentAabb) {\n\t\t\t\t\tskipTranslucentAabb.add(mi.aabb);\n\t\t\t\t} else {\n\t\t\t\t\tskipTranslucentAabb = mi.aabb.clone();\n\t\t\t\t}\n\n\t\t\t\tmeshInstancesLeftB.push(mi);\n\t\t\t} : function (mi) {\n\t\t\t\tmeshInstancesLeftB.push(mi);\n\t\t\t};\n\n\t\t\twhile (meshInstancesLeftA.length > 0) {\n\t\t\t\tlists[j] = [meshInstancesLeftA[0]];\n\t\t\t\tmeshInstancesLeftB = [];\n\t\t\t\tmaterial = meshInstancesLeftA[0].material;\n\t\t\t\tlayer = meshInstancesLeftA[0].layer;\n\t\t\t\tdefs = meshInstancesLeftA[0]._shaderDefs;\n\t\t\t\tparams = meshInstancesLeftA[0].parameters;\n\t\t\t\tstencil = meshInstancesLeftA[0].stencilFront;\n\t\t\t\tlightList = meshInstancesLeftA[0]._staticLightList;\n\t\t\t\tvertCount = meshInstancesLeftA[0].mesh.vertexBuffer.getNumVertices();\n\t\t\t\tdrawOrder = meshInstancesLeftA[0].drawOrder;\n\t\t\t\taabb.copy(meshInstancesLeftA[0].aabb);\n\t\t\t\tscaleSign = getScaleSign(meshInstancesLeftA[0]);\n\t\t\t\tvertexFormatBatchingHash = meshInstancesLeftA[0].mesh.vertexBuffer.format.batchingHash;\n\t\t\t\tindexed = meshInstancesLeftA[0].mesh.primitive[0].indexed;\n\t\t\t\tskipTranslucentAabb = null;\n\n\t\t\t\tfor (i = 1; i < meshInstancesLeftA.length; i++) {\n\t\t\t\t\tmi = meshInstancesLeftA[i];\n\n\t\t\t\t\tif (dynamic && lists[j].length >= maxInstanceCount) {\n\t\t\t\t\t\tmeshInstancesLeftB = meshInstancesLeftB.concat(meshInstancesLeftA.slice(i));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (material !== mi.material || layer !== mi.layer || vertexFormatBatchingHash !== mi.mesh.vertexBuffer.format.batchingHash || indexed !== mi.mesh.primitive[0].indexed || defs !== mi._shaderDefs || vertCount + mi.mesh.vertexBuffer.getNumVertices() > maxNumVertices) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\ttestAabb.copy(aabb);\n\t\t\t\t\ttestAabb.add(mi.aabb);\n\n\t\t\t\t\tif (testAabb.halfExtents.x > halfMaxAabbSize || testAabb.halfExtents.y > halfMaxAabbSize || testAabb.halfExtents.z > halfMaxAabbSize) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (stencil) {\n\t\t\t\t\t\tif (!(sf = mi.stencilFront) || stencil.func != sf.func || stencil.zpass != sf.zpass) {\n\t\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scaleSign != getScaleSign(mi)) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!equalParamSets(params, mi.parameters)) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tstaticLights = mi._staticLightList;\n\n\t\t\t\t\tif (lightList && staticLights) {\n\t\t\t\t\t\tif (!equalLightLists(lightList, staticLights)) {\n\t\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (lightList || staticLights) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (translucent && skipTranslucentAabb && skipTranslucentAabb.intersects(mi.aabb) && mi.drawOrder !== drawOrder) {\n\t\t\t\t\t\tskipMesh(mi);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\taabb.add(mi.aabb);\n\t\t\t\t\tvertCount += mi.mesh.vertexBuffer.getNumVertices();\n\t\t\t\t\tlists[j].push(mi);\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t\tmeshInstancesLeftA = meshInstancesLeftB;\n\t\t\t}\n\n\t\t\treturn lists;\n\t\t};\n\n\t\t_proto.create = function create(meshInstances, dynamic, batchGroupId) {\n\t\t\tif (!this._init) {\n\t\t\t\tvar boneLimit = \"#define BONE_LIMIT \" + this.device.getBoneLimit() + \"\\n\";\n\t\t\t\tthis.transformVS = boneLimit + \"#define DYNAMICBATCH\\n\" + shaderChunks.transformVS;\n\t\t\t\tthis.skinTexVS = shaderChunks.skinBatchTexVS;\n\t\t\t\tthis.skinConstVS = shaderChunks.skinBatchConstVS;\n\t\t\t\tthis.vertexFormats = {};\n\t\t\t\tthis._init = true;\n\t\t\t}\n\n\t\t\tvar i, j;\n\t\t\tvar streams = null,\n\t\t\t\t\tstream;\n\t\t\tvar semantic;\n\t\t\tvar material = null;\n\t\t\tvar mesh, elems, numVerts;\n\t\t\tvar batchNumVerts = 0;\n\t\t\tvar batchNumIndices = 0;\n\t\t\tvar batch = null;\n\n\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\tif (meshInstances[i].visible) {\n\t\t\t\t\tmesh = meshInstances[i].mesh;\n\t\t\t\t\tnumVerts = mesh.vertexBuffer.numVertices;\n\t\t\t\t\tbatchNumVerts += numVerts;\n\t\t\t\t\tbatchNumIndices += mesh.primitive[0].indexed ? mesh.primitive[0].count : mesh.primitive[0].type == PRIMITIVE_TRIFAN && mesh.primitive[0].count === 4 ? 6 : 0;\n\n\t\t\t\t\tif (!streams) {\n\t\t\t\t\t\tmaterial = meshInstances[i].material;\n\t\t\t\t\t\tstreams = {};\n\t\t\t\t\t\telems = mesh.vertexBuffer.format.elements;\n\n\t\t\t\t\t\tfor (j = 0; j < elems.length; j++) {\n\t\t\t\t\t\t\tsemantic = elems[j].name;\n\t\t\t\t\t\t\tstreams[semantic] = {\n\t\t\t\t\t\t\t\tnumComponents: elems[j].numComponents,\n\t\t\t\t\t\t\t\tdataType: elems[j].dataType,\n\t\t\t\t\t\t\t\tnormalize: elems[j].normalize,\n\t\t\t\t\t\t\t\tcount: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dynamic) {\n\t\t\t\t\t\t\tstreams[SEMANTIC_BLENDINDICES] = {\n\t\t\t\t\t\t\t\tnumComponents: 1,\n\t\t\t\t\t\t\t\tdataType: TYPE_FLOAT32,\n\t\t\t\t\t\t\t\tnormalize: false,\n\t\t\t\t\t\t\t\tcount: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (streams) {\n\t\t\t\tbatch = new Batch(meshInstances, dynamic, batchGroupId);\n\n\t\t\t\tthis._batchList.push(batch);\n\n\t\t\t\tvar indexBase, numIndices, indexData;\n\t\t\t\tvar verticesOffset = 0;\n\t\t\t\tvar indexOffset = 0;\n\t\t\t\tvar transform,\n\t\t\t\t\t\tvec = new Vec3();\n\t\t\t\tvar indexArrayType = batchNumVerts <= 0xffff ? Uint16Array : Uint32Array;\n\t\t\t\tvar indices = new indexArrayType(batchNumIndices);\n\n\t\t\t\tfor (semantic in streams) {\n\t\t\t\t\tstream = streams[semantic];\n\t\t\t\t\tstream.typeArrayType = typedArrayTypes[stream.dataType];\n\t\t\t\t\tstream.elementByteSize = typedArrayTypesByteSize[stream.dataType];\n\t\t\t\t\tstream.buffer = new stream.typeArrayType(batchNumVerts * stream.numComponents);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\tif (!meshInstances[i].visible) continue;\n\t\t\t\t\tmesh = meshInstances[i].mesh;\n\t\t\t\t\tnumVerts = mesh.vertexBuffer.numVertices;\n\n\t\t\t\t\tif (!dynamic) {\n\t\t\t\t\t\ttransform = meshInstances[i].node.getWorldTransform();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (semantic in streams) {\n\t\t\t\t\t\tif (semantic !== SEMANTIC_BLENDINDICES) {\n\t\t\t\t\t\t\tstream = streams[semantic];\n\t\t\t\t\t\t\tvar subarray = new stream.typeArrayType(stream.buffer.buffer, stream.elementByteSize * stream.count);\n\t\t\t\t\t\t\tvar totalComponents = mesh.getVertexStream(semantic, subarray) * stream.numComponents;\n\t\t\t\t\t\t\tstream.count += totalComponents;\n\n\t\t\t\t\t\t\tif (!dynamic && stream.numComponents >= 3) {\n\t\t\t\t\t\t\t\tif (semantic == SEMANTIC_POSITION || semantic == SEMANTIC_NORMAL || semantic == SEMANTIC_TANGENT) {\n\t\t\t\t\t\t\t\t\ttransform.transformFunction = semantic == SEMANTIC_POSITION ? Mat4.prototype.transformPoint : Mat4.prototype.transformVector;\n\n\t\t\t\t\t\t\t\t\tfor (j = 0; j < totalComponents; j += stream.numComponents) {\n\t\t\t\t\t\t\t\t\t\tvec.set(subarray[j], subarray[j + 1], subarray[j + 2]);\n\t\t\t\t\t\t\t\t\t\ttransform.transformFunction(vec, vec);\n\t\t\t\t\t\t\t\t\t\tsubarray[j] = vec.x;\n\t\t\t\t\t\t\t\t\t\tsubarray[j + 1] = vec.y;\n\t\t\t\t\t\t\t\t\t\tsubarray[j + 2] = vec.z;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dynamic) {\n\t\t\t\t\t\tstream = streams[SEMANTIC_BLENDINDICES];\n\n\t\t\t\t\t\tfor (j = 0; j < numVerts; j++) {\n\t\t\t\t\t\t\tstream.buffer[stream.count++] = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mesh.primitive[0].indexed) {\n\t\t\t\t\t\tindexBase = mesh.primitive[0].base;\n\t\t\t\t\t\tnumIndices = mesh.primitive[0].count;\n\t\t\t\t\t\tvar srcFormat = mesh.indexBuffer[0].getFormat();\n\t\t\t\t\t\tindexData = new typedArrayIndexFormats[srcFormat](mesh.indexBuffer[0].storage);\n\t\t\t\t\t} else if (mesh.primitive[0].type == PRIMITIVE_TRIFAN && mesh.primitive[0].count === 4) {\n\t\t\t\t\t\tindexBase = 0;\n\t\t\t\t\t\tnumIndices = 6;\n\t\t\t\t\t\tindexData = [0, 1, 3, 2, 3, 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumIndices = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < numIndices; j++) {\n\t\t\t\t\t\tindices[j + indexOffset] = indexData[indexBase + j] + verticesOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tindexOffset += numIndices;\n\t\t\t\t\tverticesOffset += numVerts;\n\t\t\t\t}\n\n\t\t\t\tmesh = new Mesh(this.device);\n\n\t\t\t\tfor (semantic in streams) {\n\t\t\t\t\tstream = streams[semantic];\n\t\t\t\t\tmesh.setVertexStream(semantic, stream.buffer, stream.numComponents, undefined, stream.dataType, stream.normalize);\n\t\t\t\t}\n\n\t\t\t\tif (indices.length > 0) mesh.setIndices(indices);\n\t\t\t\tmesh.update(PRIMITIVE_TRIANGLES, false);\n\n\t\t\t\tif (dynamic) {\n\t\t\t\t\tmaterial = material.clone();\n\t\t\t\t\tmaterial.chunks.transformVS = this.transformVS;\n\t\t\t\t\tmaterial.chunks.skinTexVS = this.skinTexVS;\n\t\t\t\t\tmaterial.chunks.skinConstVS = this.skinConstVS;\n\t\t\t\t\tmaterial.update();\n\t\t\t\t}\n\n\t\t\t\tvar meshInstance = new MeshInstance(this.rootNode, mesh, material);\n\t\t\t\tmeshInstance.castShadow = batch.origMeshInstances[0].castShadow;\n\t\t\t\tmeshInstance.parameters = batch.origMeshInstances[0].parameters;\n\t\t\t\tmeshInstance.isStatic = batch.origMeshInstances[0].isStatic;\n\t\t\t\tmeshInstance.layer = batch.origMeshInstances[0].layer;\n\t\t\t\tmeshInstance._staticLightList = batch.origMeshInstances[0]._staticLightList;\n\t\t\t\tmeshInstance._shaderDefs = batch.origMeshInstances[0]._shaderDefs;\n\t\t\t\tmeshInstance.cull = batch.origMeshInstances[0].cull;\n\t\t\t\tvar batchGroup = this._batchGroups[batchGroupId];\n\t\t\t\tif (batchGroup && batchGroup._ui) meshInstance.cull = false;\n\n\t\t\t\tif (dynamic) {\n\t\t\t\t\tvar nodes = [];\n\n\t\t\t\t\tfor (i = 0; i < batch.origMeshInstances.length; i++) {\n\t\t\t\t\t\tnodes.push(batch.origMeshInstances[i].node);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshInstance.skinInstance = new SkinBatchInstance(this.device, nodes, this.rootNode);\n\t\t\t\t}\n\n\t\t\t\tmeshInstance._updateAabb = false;\n\t\t\t\tmeshInstance.drawOrder = batch.origMeshInstances[0].drawOrder;\n\t\t\t\tmeshInstance.stencilFront = batch.origMeshInstances[0].stencilFront;\n\t\t\t\tmeshInstance.stencilBack = batch.origMeshInstances[0].stencilBack;\n\t\t\t\tmeshInstance.flipFaces = getScaleSign(batch.origMeshInstances[0]) < 0;\n\t\t\t\tbatch.meshInstance = meshInstance;\n\t\t\t\tthis.update(batch);\n\t\t\t\tvar newModel = new Model();\n\t\t\t\tnewModel.meshInstances = [batch.meshInstance];\n\t\t\t\tnewModel.castShadows = batch.origMeshInstances[0].castShadows;\n\t\t\t\tbatch.model = newModel;\n\t\t\t}\n\n\t\t\treturn batch;\n\t\t};\n\n\t\t_proto.update = function update(batch) {\n\t\t\tbatch._aabb.copy(batch.origMeshInstances[0].aabb);\n\n\t\t\tfor (var i = 1; i < batch.origMeshInstances.length; i++) {\n\t\t\t\tbatch._aabb.add(batch.origMeshInstances[i].aabb);\n\t\t\t}\n\n\t\t\tbatch.meshInstance.aabb = batch._aabb;\n\t\t\tbatch._aabb._radiusVer = -1;\n\t\t\tbatch.meshInstance._aabbVer = 0;\n\t\t};\n\n\t\t_proto.updateAll = function updateAll() {\n\t\t\tif (this._dirtyGroups.length > 0) {\n\t\t\t\tthis.generate(this._dirtyGroups);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this._batchList.length; i++) {\n\t\t\t\tif (!this._batchList[i].dynamic) continue;\n\t\t\t\tthis.update(this._batchList[i]);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone(batch, clonedMeshInstances) {\n\t\t\tvar batch2 = new Batch(clonedMeshInstances, batch.dynamic, batch.batchGroupId);\n\n\t\t\tthis._batchList.push(batch2);\n\n\t\t\tvar nodes = [];\n\n\t\t\tfor (var i = 0; i < clonedMeshInstances.length; i++) {\n\t\t\t\tnodes.push(clonedMeshInstances[i].node);\n\t\t\t}\n\n\t\t\tbatch2.meshInstance = new MeshInstance(batch.meshInstance.node, batch.meshInstance.mesh, batch.meshInstance.material);\n\t\t\tbatch2.meshInstance._updateAabb = false;\n\t\t\tbatch2.meshInstance.parameters = clonedMeshInstances[0].parameters;\n\t\t\tbatch2.meshInstance.isStatic = clonedMeshInstances[0].isStatic;\n\t\t\tbatch2.meshInstance.cull = clonedMeshInstances[0].cull;\n\t\t\tbatch2.meshInstance.layer = clonedMeshInstances[0].layer;\n\t\t\tbatch2.meshInstance._staticLightList = clonedMeshInstances[0]._staticLightList;\n\n\t\t\tif (batch.dynamic) {\n\t\t\t\tbatch2.meshInstance.skinInstance = new SkinBatchInstance(this.device, nodes, this.rootNode);\n\t\t\t}\n\n\t\t\tbatch2.meshInstance.castShadow = batch.meshInstance.castShadow;\n\t\t\tbatch2.meshInstance._shader = batch.meshInstance._shader;\n\t\t\tvar newModel = new Model();\n\t\t\tnewModel.meshInstances = [batch2.meshInstance];\n\t\t\tnewModel.castShadows = batch.origMeshInstances[0].castShadows;\n\t\t\tbatch2.model = newModel;\n\t\t\treturn batch2;\n\t\t};\n\n\t\t_proto.destroy = function destroy(batch) {\n\t\t\tif (!batch.model) return;\n\t\t\tvar layers = this._batchGroups[batch.batchGroupId].layers;\n\n\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\tvar layer = this.scene.layers.getLayerById(layers[i]);\n\t\t\t\tif (layer) layer.removeMeshInstances(batch.model.meshInstances);\n\t\t\t}\n\n\t\t\tbatch.model.destroy();\n\t\t};\n\n\t\treturn BatchManager;\n\t}();\n\n\tvar _deviceCoord = new Vec3();\n\n\tvar _halfSize$1 = new Vec3();\n\n\tvar _point = new Vec3();\n\n\tvar _invViewProjMat = new Mat4();\n\n\tvar Camera = function () {\n\t\tfunction Camera() {\n\t\t\tthis._aspectRatio = 16 / 9;\n\t\t\tthis._aspectRatioMode = ASPECT_AUTO;\n\t\t\tthis._calculateProjection = null;\n\t\t\tthis._calculateTransform = null;\n\t\t\tthis._clearColor = new Color(0.75, 0.75, 0.75, 1);\n\t\t\tthis._clearColorBuffer = true;\n\t\t\tthis._clearDepth = 1;\n\t\t\tthis._clearDepthBuffer = true;\n\t\t\tthis._clearStencil = 0;\n\t\t\tthis._clearStencilBuffer = true;\n\t\t\tthis._cullingMask = 0xFFFFFFFF;\n\t\t\tthis._cullFaces = true;\n\t\t\tthis._farClip = 1000;\n\t\t\tthis._flipFaces = false;\n\t\t\tthis._fov = 45;\n\t\t\tthis._frustumCulling = true;\n\t\t\tthis._horizontalFov = false;\n\t\t\tthis._layers = [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE];\n\t\t\tthis._nearClip = 0.1;\n\t\t\tthis._node = null;\n\t\t\tthis._orthoHeight = 10;\n\t\t\tthis._projection = PROJECTION_PERSPECTIVE;\n\t\t\tthis._rect = new Vec4(0, 0, 1, 1);\n\t\t\tthis._renderTarget = null;\n\t\t\tthis._scissorRect = new Vec4(0, 0, 1, 1);\n\t\t\tthis._vrDisplay = null;\n\t\t\tthis._projMat = new Mat4();\n\t\t\tthis._projMatDirty = true;\n\t\t\tthis._projMatSkybox = new Mat4();\n\t\t\tthis._viewMat = new Mat4();\n\t\t\tthis._viewMatDirty = true;\n\t\t\tthis._viewProjMat = new Mat4();\n\t\t\tthis._viewProjMatDirty = true;\n\t\t\tthis.frustum = new Frustum();\n\t\t}\n\n\t\tvar _proto = Camera.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(other) {\n\t\t\tthis.aspectRatio = other.aspectRatio;\n\t\t\tthis.aspectRatioMode = other.aspectRatioMode;\n\t\t\tthis.calculateProjection = other.calculateProjection;\n\t\t\tthis.calculateTransform = other.calculateTransform;\n\t\t\tthis.clearColor = other.clearColor;\n\t\t\tthis.clearColorBuffer = other.clearColorBuffer;\n\t\t\tthis.clearDepth = other.clearDepth;\n\t\t\tthis.clearDepthBuffer = other.clearDepthBuffer;\n\t\t\tthis.clearStencil = other.clearStencil;\n\t\t\tthis.clearStencilBuffer = other.clearStencilBuffer;\n\t\t\tthis.cullFaces = other.cullFaces;\n\t\t\tthis.cullingMask = other.cullingMask;\n\t\t\tthis.farClip = other.farClip;\n\t\t\tthis.flipFaces = other.flipFaces;\n\t\t\tthis.fov = other.fov;\n\t\t\tthis.frustumCulling = other.frustumCulling;\n\t\t\tthis.horizontalFov = other.horizontalFov;\n\t\t\tthis.layers = other.layers;\n\t\t\tthis.nearClip = other.nearClip;\n\t\t\tthis.orthoHeight = other.orthoHeight;\n\t\t\tthis.projection = other.projection;\n\t\t\tthis.rect = other.rect;\n\t\t\tthis.renderTarget = other.renderTarget;\n\t\t\tthis.scissorRect = other.scissorRect;\n\t\t\tthis.vrDisplay = other.vrDisplay;\n\t\t};\n\n\t\t_proto._updateViewProjMat = function _updateViewProjMat() {\n\t\t\tif (this._projMatDirty || this._viewMatDirty || this._viewProjMatDirty) {\n\t\t\t\tvar projMat = this.projectionMatrix;\n\t\t\t\tvar viewMat = this.viewMatrix;\n\n\t\t\t\tthis._viewProjMat.mul2(projMat, viewMat);\n\n\t\t\t\tthis._viewProjMatDirty = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.worldToScreen = function worldToScreen(worldCoord, cw, ch, screenCoord) {\n\t\t\tif (screenCoord === void 0) {\n\t\t\t\tscreenCoord = new Vec3();\n\t\t\t}\n\n\t\t\tthis._updateViewProjMat();\n\n\t\t\tthis._viewProjMat.transformPoint(worldCoord, screenCoord);\n\n\t\t\tvar vpm = this._viewProjMat.data;\n\t\t\tvar w = worldCoord.x * vpm[3] + worldCoord.y * vpm[7] + worldCoord.z * vpm[11] + 1 * vpm[15];\n\t\t\tscreenCoord.x = (screenCoord.x / w + 1) * 0.5 * cw;\n\t\t\tscreenCoord.y = (1 - screenCoord.y / w) * 0.5 * ch;\n\t\t\treturn screenCoord;\n\t\t};\n\n\t\t_proto.screenToWorld = function screenToWorld(x, y, z, cw, ch, worldCoord) {\n\t\t\tif (worldCoord === void 0) {\n\t\t\t\tworldCoord = new Vec3();\n\t\t\t}\n\n\t\t\tvar range = this._farClip - this._nearClip;\n\n\t\t\t_deviceCoord.set(x / cw, (ch - y) / ch, z / range);\n\n\t\t\t_deviceCoord.scale(2);\n\n\t\t\t_deviceCoord.sub(Vec3.ONE);\n\n\t\t\tif (this._projection === PROJECTION_PERSPECTIVE) {\n\t\t\t\tMat4._getPerspectiveHalfSize(_halfSize$1, this._fov, this._aspectRatio, this._nearClip, this._horizontalFov);\n\n\t\t\t\t_halfSize$1.x *= _deviceCoord.x;\n\t\t\t\t_halfSize$1.y *= _deviceCoord.y;\n\n\t\t\t\tvar invView = this._node.getWorldTransform();\n\n\t\t\t\t_halfSize$1.z = -this._nearClip;\n\t\t\t\tinvView.transformPoint(_halfSize$1, _point);\n\n\t\t\t\tvar cameraPos = this._node.getPosition();\n\n\t\t\t\tworldCoord.sub2(_point, cameraPos);\n\t\t\t\tworldCoord.normalize();\n\t\t\t\tworldCoord.scale(z);\n\t\t\t\tworldCoord.add(cameraPos);\n\t\t\t} else {\n\t\t\t\tthis._updateViewProjMat();\n\n\t\t\t\t_invViewProjMat.copy(this._viewProjMat).invert();\n\n\t\t\t\t_invViewProjMat.transformPoint(_deviceCoord, worldCoord);\n\t\t\t}\n\n\t\t\treturn worldCoord;\n\t\t};\n\n\t\t_proto._evaluateProjectionMatrix = function _evaluateProjectionMatrix() {\n\t\t\tif (this._projMatDirty) {\n\t\t\t\tif (this._projection === PROJECTION_PERSPECTIVE) {\n\t\t\t\t\tthis._projMat.setPerspective(this._fov, this._aspectRatio, this._nearClip, this._farClip, this._horizontalFov);\n\n\t\t\t\t\tthis._projMatSkybox.copy(this._projMat);\n\t\t\t\t} else {\n\t\t\t\t\tvar y = this._orthoHeight;\n\t\t\t\t\tvar x = y * this._aspectRatio;\n\n\t\t\t\t\tthis._projMat.setOrtho(-x, x, -y, y, this._nearClip, this._farClip);\n\n\t\t\t\t\tthis._projMatSkybox.setPerspective(this._fov, this._aspectRatio, this._nearClip, this._farClip);\n\t\t\t\t}\n\n\t\t\t\tthis._projMatDirty = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getProjectionMatrixSkybox = function getProjectionMatrixSkybox() {\n\t\t\tthis._evaluateProjectionMatrix();\n\n\t\t\treturn this._projMatSkybox;\n\t\t};\n\n\t\t_createClass(Camera, [{\n\t\t\tkey: \"aspectRatio\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._aspectRatio;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._aspectRatio !== newValue) {\n\t\t\t\t\tthis._aspectRatio = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aspectRatioMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._aspectRatioMode;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._aspectRatioMode !== newValue) {\n\t\t\t\t\tthis._aspectRatioMode = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"calculateProjection\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._calculateProjection;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._calculateProjection = newValue;\n\t\t\t\tthis._projMatDirty = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"calculateTransform\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._calculateTransform;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._calculateTransform = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearColor\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearColor;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearColor.copy(newValue);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearColorBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearColorBuffer;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearColorBuffer = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearDepth\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearDepth;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearDepth = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearDepthBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearDepthBuffer;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearDepthBuffer = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearStencil\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearStencil;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearStencil = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearStencilBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearStencilBuffer;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._clearStencilBuffer = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cullingMask\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cullingMask;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._cullingMask = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cullFaces\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cullFaces;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._cullFaces = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"farClip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._farClip;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._farClip !== newValue) {\n\t\t\t\t\tthis._farClip = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"flipFaces\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._flipFaces;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._flipFaces = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"fov\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fov;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._fov !== newValue) {\n\t\t\t\t\tthis._fov = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"frustumCulling\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._frustumCulling;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._frustumCulling = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"horizontalFov\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._horizontalFov;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._horizontalFov !== newValue) {\n\t\t\t\t\tthis._horizontalFov = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._layers = newValue.slice(0);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"nearClip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._nearClip;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._nearClip !== newValue) {\n\t\t\t\t\tthis._nearClip = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"node\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._node;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._node = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"orthoHeight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._orthoHeight;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._orthoHeight !== newValue) {\n\t\t\t\t\tthis._orthoHeight = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"projection\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._projection;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tif (this._projection !== newValue) {\n\t\t\t\t\tthis._projection = newValue;\n\t\t\t\t\tthis._projMatDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"projectionMatrix\",\n\t\t\tget: function get() {\n\t\t\t\tthis._evaluateProjectionMatrix();\n\n\t\t\t\treturn this._projMat;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rect\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rect;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._rect.copy(newValue);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"renderTarget\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._renderTarget;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._renderTarget = newValue;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"scissorRect\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._scissorRect;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._scissorRect.copy(newValue);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"viewMatrix\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._viewMatDirty) {\n\t\t\t\t\tvar wtm = this._node.getWorldTransform();\n\n\t\t\t\t\tthis._viewMat.copy(wtm).invert();\n\n\t\t\t\t\tthis._viewMatDirty = false;\n\t\t\t\t}\n\n\t\t\t\treturn this._viewMat;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"vrDisplay\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._vrDisplay;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._vrDisplay = newValue;\n\n\t\t\t\tif (newValue) {\n\t\t\t\t\tnewValue._camera = this;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn Camera;\n\t}();\n\n\tvar scaleCompensatePosTransform = new Mat4();\n\tvar scaleCompensatePos = new Vec3();\n\tvar scaleCompensateRot = new Quat();\n\tvar scaleCompensateRot2 = new Quat();\n\tvar scaleCompensateScale = new Vec3();\n\tvar scaleCompensateScaleForParent = new Vec3();\n\tvar tmpMat4$1 = new Mat4();\n\tvar tmpQuat = new Quat();\n\tvar position = new Vec3();\n\tvar invParentWtm = new Mat4();\n\tvar rotation = new Quat();\n\tvar invParentRot = new Quat();\n\tvar matrix = new Mat4();\n\tvar target = new Vec3();\n\tvar up = new Vec3();\n\n\tvar GraphNode = function (_EventHandler) {\n\t\t_inheritsLoose(GraphNode, _EventHandler);\n\n\t\tfunction GraphNode(name) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.name = typeof name === \"string\" ? name : \"Untitled\";\n\t\t\t_this.tags = new Tags(_assertThisInitialized(_this));\n\t\t\t_this._labels = {};\n\t\t\t_this.localPosition = new Vec3(0, 0, 0);\n\t\t\t_this.localRotation = new Quat(0, 0, 0, 1);\n\t\t\t_this.localScale = new Vec3(1, 1, 1);\n\t\t\t_this.localEulerAngles = new Vec3(0, 0, 0);\n\t\t\t_this.position = new Vec3(0, 0, 0);\n\t\t\t_this.rotation = new Quat(0, 0, 0, 1);\n\t\t\t_this.eulerAngles = new Vec3(0, 0, 0);\n\t\t\t_this._scale = null;\n\t\t\t_this.localTransform = new Mat4();\n\t\t\t_this._dirtyLocal = false;\n\t\t\t_this._aabbVer = 0;\n\t\t\t_this._frozen = false;\n\t\t\t_this.worldTransform = new Mat4();\n\t\t\t_this._dirtyWorld = false;\n\t\t\t_this.normalMatrix = new Mat3();\n\t\t\t_this._dirtyNormal = true;\n\t\t\t_this._right = null;\n\t\t\t_this._up = null;\n\t\t\t_this._forward = null;\n\t\t\t_this._parent = null;\n\t\t\t_this._children = [];\n\t\t\t_this._graphDepth = 0;\n\t\t\t_this._enabled = true;\n\t\t\t_this._enabledInHierarchy = false;\n\t\t\t_this.scaleCompensation = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = GraphNode.prototype;\n\n\t\t_proto._notifyHierarchyStateChanged = function _notifyHierarchyStateChanged(node, enabled) {\n\t\t\tnode._onHierarchyStateChanged(enabled);\n\n\t\t\tvar c = node._children;\n\n\t\t\tfor (var i = 0, len = c.length; i < len; i++) {\n\t\t\t\tif (c[i]._enabled) this._notifyHierarchyStateChanged(c[i], enabled);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onHierarchyStateChanged = function _onHierarchyStateChanged(enabled) {\n\t\t\tthis._enabledInHierarchy = enabled;\n\t\t\tif (enabled && !this._frozen) this._unfreezeParentToRoot();\n\t\t};\n\n\t\t_proto._cloneInternal = function _cloneInternal(clone) {\n\t\t\tclone.name = this.name;\n\t\t\tvar tags = this.tags._list;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tclone.tags.add(tags[i]);\n\t\t\t}\n\n\t\t\tclone._labels = Object.assign({}, this._labels);\n\t\t\tclone.localPosition.copy(this.localPosition);\n\t\t\tclone.localRotation.copy(this.localRotation);\n\t\t\tclone.localScale.copy(this.localScale);\n\t\t\tclone.localEulerAngles.copy(this.localEulerAngles);\n\t\t\tclone.position.copy(this.position);\n\t\t\tclone.rotation.copy(this.rotation);\n\t\t\tclone.eulerAngles.copy(this.eulerAngles);\n\t\t\tclone.localTransform.copy(this.localTransform);\n\t\t\tclone._dirtyLocal = this._dirtyLocal;\n\t\t\tclone.worldTransform.copy(this.worldTransform);\n\t\t\tclone._dirtyWorld = this._dirtyWorld;\n\t\t\tclone._dirtyNormal = this._dirtyNormal;\n\t\t\tclone._aabbVer = this._aabbVer + 1;\n\t\t\tclone._enabled = this._enabled;\n\t\t\tclone.scaleCompensation = this.scaleCompensation;\n\t\t\tclone._enabledInHierarchy = false;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new GraphNode();\n\n\t\t\tthis._cloneInternal(clone);\n\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.find = function find(attr, value) {\n\t\t\tvar result,\n\t\t\t\t\tresults = [];\n\t\t\tvar len = this._children.length;\n\t\t\tvar i, descendants;\n\n\t\t\tif (attr instanceof Function) {\n\t\t\t\tvar fn = attr;\n\t\t\t\tresult = fn(this);\n\t\t\t\tif (result) results.push(this);\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tdescendants = this._children[i].find(fn);\n\t\t\t\t\tif (descendants.length) results = results.concat(descendants);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar testValue;\n\n\t\t\t\tif (this[attr]) {\n\t\t\t\t\tif (this[attr] instanceof Function) {\n\t\t\t\t\t\ttestValue = this[attr]();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttestValue = this[attr];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (testValue === value) results.push(this);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\t\tdescendants = this._children[i].find(attr, value);\n\t\t\t\t\tif (descendants.length) results = results.concat(descendants);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn results;\n\t\t};\n\n\t\t_proto.findOne = function findOne(attr, value) {\n\t\t\tvar i;\n\t\t\tvar len = this._children.length;\n\t\t\tvar result = null;\n\n\t\t\tif (attr instanceof Function) {\n\t\t\t\tvar fn = attr;\n\t\t\t\tresult = fn(this);\n\t\t\t\tif (result) return this;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tresult = this._children[i].findOne(fn);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar testValue;\n\n\t\t\t\tif (this[attr]) {\n\t\t\t\t\tif (this[attr] instanceof Function) {\n\t\t\t\t\t\ttestValue = this[attr]();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttestValue = this[attr];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (testValue === value) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tresult = this._children[i].findOne(attr, value);\n\t\t\t\t\tif (result !== null) return result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.findByTag = function findByTag() {\n\t\t\tvar tags = this.tags._processArguments(arguments);\n\n\t\t\treturn this._findByTag(tags);\n\t\t};\n\n\t\t_proto._findByTag = function _findByTag(tags) {\n\t\t\tvar result = [];\n\t\t\tvar i,\n\t\t\t\t\tlen = this._children.length;\n\t\t\tvar descendants;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._children[i].tags._has(tags)) result.push(this._children[i]);\n\t\t\t\tdescendants = this._children[i]._findByTag(tags);\n\t\t\t\tif (descendants.length) result = result.concat(descendants);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.findByName = function findByName(name) {\n\t\t\tif (this.name === name) return this;\n\n\t\t\tfor (var i = 0; i < this._children.length; i++) {\n\t\t\t\tvar found = this._children[i].findByName(name);\n\n\t\t\t\tif (found !== null) return found;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.findByPath = function findByPath(path) {\n\t\t\tvar parts = path.split('/');\n\t\t\tvar currentParent = this;\n\t\t\tvar result = null;\n\n\t\t\tfor (var i = 0, imax = parts.length; i < imax && currentParent; i++) {\n\t\t\t\tvar part = parts[i];\n\t\t\t\tresult = null;\n\t\t\t\tvar children = currentParent._children;\n\n\t\t\t\tfor (var j = 0, jmax = children.length; j < jmax; j++) {\n\t\t\t\t\tif (children[j].name == part) {\n\t\t\t\t\t\tresult = children[j];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentParent = result;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.forEach = function forEach(callback, thisArg) {\n\t\t\tcallback.call(thisArg, this);\n\t\t\tvar children = this._children;\n\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tchildren[i].forEach(callback, thisArg);\n\t\t\t}\n\t\t};\n\n\t\t_proto.isDescendantOf = function isDescendantOf(node) {\n\t\t\tvar parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent === node) return true;\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.isAncestorOf = function isAncestorOf(node) {\n\t\t\treturn node.isDescendantOf(this);\n\t\t};\n\n\t\t_proto.getEulerAngles = function getEulerAngles() {\n\t\t\tthis.getWorldTransform().getEulerAngles(this.eulerAngles);\n\t\t\treturn this.eulerAngles;\n\t\t};\n\n\t\t_proto.getLocalEulerAngles = function getLocalEulerAngles() {\n\t\t\tthis.localRotation.getEulerAngles(this.localEulerAngles);\n\t\t\treturn this.localEulerAngles;\n\t\t};\n\n\t\t_proto.getLocalPosition = function getLocalPosition() {\n\t\t\treturn this.localPosition;\n\t\t};\n\n\t\t_proto.getLocalRotation = function getLocalRotation() {\n\t\t\treturn this.localRotation;\n\t\t};\n\n\t\t_proto.getLocalScale = function getLocalScale() {\n\t\t\treturn this.localScale;\n\t\t};\n\n\t\t_proto.getLocalTransform = function getLocalTransform() {\n\t\t\tif (this._dirtyLocal) {\n\t\t\t\tthis.localTransform.setTRS(this.localPosition, this.localRotation, this.localScale);\n\t\t\t\tthis._dirtyLocal = false;\n\t\t\t}\n\n\t\t\treturn this.localTransform;\n\t\t};\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\tthis.getWorldTransform().getTranslation(this.position);\n\t\t\treturn this.position;\n\t\t};\n\n\t\t_proto.getRotation = function getRotation() {\n\t\t\tthis.rotation.setFromMat4(this.getWorldTransform());\n\t\t\treturn this.rotation;\n\t\t};\n\n\t\t_proto.getScale = function getScale() {\n\t\t\tif (!this._scale) {\n\t\t\t\tthis._scale = new Vec3();\n\t\t\t}\n\n\t\t\treturn this.getWorldTransform().getScale(this._scale);\n\t\t};\n\n\t\t_proto.getWorldTransform = function getWorldTransform() {\n\t\t\tif (!this._dirtyLocal && !this._dirtyWorld) return this.worldTransform;\n\t\t\tif (this._parent) this._parent.getWorldTransform();\n\n\t\t\tthis._sync();\n\n\t\t\treturn this.worldTransform;\n\t\t};\n\n\t\t_proto.reparent = function reparent(parent, index) {\n\t\t\tvar current = this._parent;\n\t\t\tif (current) current.removeChild(this);\n\n\t\t\tif (parent) {\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tparent.insertChild(this, index);\n\t\t\t\t} else {\n\t\t\t\t\tparent.addChild(this);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setLocalEulerAngles = function setLocalEulerAngles(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tthis.localRotation.setFromEulerAngles(x.x, x.y, x.z);\n\t\t\t} else {\n\t\t\t\tthis.localRotation.setFromEulerAngles(x, y, z);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.setLocalPosition = function setLocalPosition(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tthis.localPosition.copy(x);\n\t\t\t} else {\n\t\t\t\tthis.localPosition.set(x, y, z);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.setLocalRotation = function setLocalRotation(x, y, z, w) {\n\t\t\tif (x instanceof Quat) {\n\t\t\t\tthis.localRotation.copy(x);\n\t\t\t} else {\n\t\t\t\tthis.localRotation.set(x, y, z, w);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.setLocalScale = function setLocalScale(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tthis.localScale.copy(x);\n\t\t\t} else {\n\t\t\t\tthis.localScale.set(x, y, z);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto._dirtifyLocal = function _dirtifyLocal() {\n\t\t\tif (!this._dirtyLocal) {\n\t\t\t\tthis._dirtyLocal = true;\n\t\t\t\tif (!this._dirtyWorld) this._dirtifyWorld();\n\t\t\t}\n\t\t};\n\n\t\t_proto._unfreezeParentToRoot = function _unfreezeParentToRoot() {\n\t\t\tvar p = this._parent;\n\n\t\t\twhile (p) {\n\t\t\t\tp._frozen = false;\n\t\t\t\tp = p._parent;\n\t\t\t}\n\t\t};\n\n\t\t_proto._dirtifyWorld = function _dirtifyWorld() {\n\t\t\tif (!this._dirtyWorld) this._unfreezeParentToRoot();\n\n\t\t\tthis._dirtifyWorldInternal();\n\t\t};\n\n\t\t_proto._dirtifyWorldInternal = function _dirtifyWorldInternal() {\n\t\t\tif (!this._dirtyWorld) {\n\t\t\t\tthis._frozen = false;\n\t\t\t\tthis._dirtyWorld = true;\n\n\t\t\t\tfor (var i = 0; i < this._children.length; i++) {\n\t\t\t\t\tif (!this._children[i]._dirtyWorld) this._children[i]._dirtifyWorldInternal();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._dirtyNormal = true;\n\t\t\tthis._aabbVer++;\n\t\t};\n\n\t\t_proto.setPosition = function setPosition(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tposition.copy(x);\n\t\t\t} else {\n\t\t\t\tposition.set(x, y, z);\n\t\t\t}\n\n\t\t\tif (this._parent === null) {\n\t\t\t\tthis.localPosition.copy(position);\n\t\t\t} else {\n\t\t\t\tinvParentWtm.copy(this._parent.getWorldTransform()).invert();\n\t\t\t\tinvParentWtm.transformPoint(position, this.localPosition);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.setRotation = function setRotation(x, y, z, w) {\n\t\t\tif (x instanceof Quat) {\n\t\t\t\trotation.copy(x);\n\t\t\t} else {\n\t\t\t\trotation.set(x, y, z, w);\n\t\t\t}\n\n\t\t\tif (this._parent === null) {\n\t\t\t\tthis.localRotation.copy(rotation);\n\t\t\t} else {\n\t\t\t\tvar parentRot = this._parent.getRotation();\n\n\t\t\t\tinvParentRot.copy(parentRot).invert();\n\t\t\t\tthis.localRotation.copy(invParentRot).mul(rotation);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.setEulerAngles = function setEulerAngles(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tthis.localRotation.setFromEulerAngles(x.x, x.y, x.z);\n\t\t\t} else {\n\t\t\t\tthis.localRotation.setFromEulerAngles(x, y, z);\n\t\t\t}\n\n\t\t\tif (this._parent !== null) {\n\t\t\t\tvar parentRot = this._parent.getRotation();\n\n\t\t\t\tinvParentRot.copy(parentRot).invert();\n\t\t\t\tthis.localRotation.mul2(invParentRot, this.localRotation);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.addChild = function addChild(node) {\n\t\t\tif (node._parent !== null) throw new Error(\"GraphNode is already parented\");\n\n\t\t\tthis._children.push(node);\n\n\t\t\tthis._onInsertChild(node);\n\t\t};\n\n\t\t_proto.addChildAndSaveTransform = function addChildAndSaveTransform(node) {\n\t\t\tvar wPos = node.getPosition();\n\t\t\tvar wRot = node.getRotation();\n\t\t\tvar current = node._parent;\n\t\t\tif (current) current.removeChild(node);\n\t\t\tnode.setPosition(tmpMat4$1.copy(this.worldTransform).invert().transformPoint(wPos));\n\t\t\tnode.setRotation(tmpQuat.copy(this.getRotation()).invert().mul(wRot));\n\n\t\t\tthis._children.push(node);\n\n\t\t\tthis._onInsertChild(node);\n\t\t};\n\n\t\t_proto.insertChild = function insertChild(node, index) {\n\t\t\tif (node._parent !== null) throw new Error(\"GraphNode is already parented\");\n\n\t\t\tthis._children.splice(index, 0, node);\n\n\t\t\tthis._onInsertChild(node);\n\t\t};\n\n\t\t_proto._onInsertChild = function _onInsertChild(node) {\n\t\t\tnode._parent = this;\n\t\t\tvar enabledInHierarchy = node._enabled && this.enabled;\n\n\t\t\tif (node._enabledInHierarchy !== enabledInHierarchy) {\n\t\t\t\tnode._enabledInHierarchy = enabledInHierarchy;\n\n\t\t\t\tnode._notifyHierarchyStateChanged(node, enabledInHierarchy);\n\t\t\t}\n\n\t\t\tnode._updateGraphDepth();\n\n\t\t\tnode._dirtifyWorld();\n\n\t\t\tif (this._frozen) node._unfreezeParentToRoot();\n\t\t\tif (node.fire) node.fire('insert', this);\n\t\t\tif (this.fire) this.fire('childinsert', node);\n\t\t};\n\n\t\t_proto._updateGraphDepth = function _updateGraphDepth() {\n\t\t\tif (this._parent) {\n\t\t\t\tthis._graphDepth = this._parent._graphDepth + 1;\n\t\t\t} else {\n\t\t\t\tthis._graphDepth = 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0, len = this._children.length; i < len; i++) {\n\t\t\t\tthis._children[i]._updateGraphDepth();\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeChild = function removeChild(child) {\n\t\t\tvar i;\n\t\t\tvar length = this._children.length;\n\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\tif (this._children[i] === child) {\n\t\t\t\t\tthis._children.splice(i, 1);\n\n\t\t\t\t\tchild._parent = null;\n\t\t\t\t\tif (child.fire) child.fire('remove', this);\n\t\t\t\t\tif (this.fire) this.fire('childremove', child);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._sync = function _sync() {\n\t\t\tif (this._dirtyLocal) {\n\t\t\t\tthis.localTransform.setTRS(this.localPosition, this.localRotation, this.localScale);\n\t\t\t\tthis._dirtyLocal = false;\n\t\t\t}\n\n\t\t\tif (this._dirtyWorld) {\n\t\t\t\tif (this._parent === null) {\n\t\t\t\t\tthis.worldTransform.copy(this.localTransform);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.scaleCompensation) {\n\t\t\t\t\t\tvar parentWorldScale;\n\t\t\t\t\t\tvar parent = this._parent;\n\t\t\t\t\t\tvar scale = this.localScale;\n\t\t\t\t\t\tvar parentToUseScaleFrom = parent;\n\n\t\t\t\t\t\tif (parentToUseScaleFrom) {\n\t\t\t\t\t\t\twhile (parentToUseScaleFrom && parentToUseScaleFrom.scaleCompensation) {\n\t\t\t\t\t\t\t\tparentToUseScaleFrom = parentToUseScaleFrom._parent;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (parentToUseScaleFrom) {\n\t\t\t\t\t\t\t\tparentToUseScaleFrom = parentToUseScaleFrom._parent;\n\n\t\t\t\t\t\t\t\tif (parentToUseScaleFrom) {\n\t\t\t\t\t\t\t\t\tparentWorldScale = parentToUseScaleFrom.worldTransform.getScale();\n\t\t\t\t\t\t\t\t\tscaleCompensateScale.mul2(parentWorldScale, this.localScale);\n\t\t\t\t\t\t\t\t\tscale = scaleCompensateScale;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscaleCompensateRot2.setFromMat4(parent.worldTransform);\n\t\t\t\t\t\tscaleCompensateRot.mul2(scaleCompensateRot2, this.localRotation);\n\t\t\t\t\t\tvar tmatrix = parent.worldTransform;\n\n\t\t\t\t\t\tif (parent.scaleCompensation) {\n\t\t\t\t\t\t\tscaleCompensateScaleForParent.mul2(parentWorldScale, parent.getLocalScale());\n\t\t\t\t\t\t\tscaleCompensatePosTransform.setTRS(parent.worldTransform.getTranslation(scaleCompensatePos), scaleCompensateRot2, scaleCompensateScaleForParent);\n\t\t\t\t\t\t\ttmatrix = scaleCompensatePosTransform;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttmatrix.transformPoint(this.localPosition, scaleCompensatePos);\n\t\t\t\t\t\tthis.worldTransform.setTRS(scaleCompensatePos, scaleCompensateRot, scale);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.worldTransform.mulAffine2(this._parent.worldTransform, this.localTransform);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._dirtyWorld = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.syncHierarchy = function syncHierarchy() {\n\t\t\tif (!this._enabled) return;\n\t\t\tif (this._frozen) return;\n\t\t\tthis._frozen = true;\n\n\t\t\tif (this._dirtyLocal || this._dirtyWorld) {\n\t\t\t\tthis._sync();\n\t\t\t}\n\n\t\t\tvar children = this._children;\n\n\t\t\tfor (var i = 0, len = children.length; i < len; i++) {\n\t\t\t\tchildren[i].syncHierarchy();\n\t\t\t}\n\t\t};\n\n\t\t_proto.lookAt = function lookAt(x, y, z, ux, uy, uz) {\n\t\t\tif (ux === void 0) {\n\t\t\t\tux = 0;\n\t\t\t}\n\n\t\t\tif (uy === void 0) {\n\t\t\t\tuy = 1;\n\t\t\t}\n\n\t\t\tif (uz === void 0) {\n\t\t\t\tuz = 0;\n\t\t\t}\n\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\ttarget.copy(x);\n\n\t\t\t\tif (y instanceof Vec3) {\n\t\t\t\t\tup.copy(y);\n\t\t\t\t} else {\n\t\t\t\t\tup.copy(Vec3.UP);\n\t\t\t\t}\n\t\t\t} else if (z === undefined) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\ttarget.set(x, y, z);\n\t\t\t\tup.set(ux, uy, uz);\n\t\t\t}\n\n\t\t\tmatrix.setLookAt(this.getPosition(), target, up);\n\t\t\trotation.setFromMat4(matrix);\n\t\t\tthis.setRotation(rotation);\n\t\t};\n\n\t\t_proto.translate = function translate(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tposition.copy(x);\n\t\t\t} else {\n\t\t\t\tposition.set(x, y, z);\n\t\t\t}\n\n\t\t\tposition.add(this.getPosition());\n\t\t\tthis.setPosition(position);\n\t\t};\n\n\t\t_proto.translateLocal = function translateLocal(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tposition.copy(x);\n\t\t\t} else {\n\t\t\t\tposition.set(x, y, z);\n\t\t\t}\n\n\t\t\tthis.localRotation.transformVector(position, position);\n\t\t\tthis.localPosition.add(position);\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.rotate = function rotate(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\trotation.setFromEulerAngles(x.x, x.y, x.z);\n\t\t\t} else {\n\t\t\t\trotation.setFromEulerAngles(x, y, z);\n\t\t\t}\n\n\t\t\tif (this._parent === null) {\n\t\t\t\tthis.localRotation.mul2(rotation, this.localRotation);\n\t\t\t} else {\n\t\t\t\tvar rot = this.getRotation();\n\n\t\t\t\tvar parentRot = this._parent.getRotation();\n\n\t\t\t\tinvParentRot.copy(parentRot).invert();\n\t\t\t\trotation.mul2(invParentRot, rotation);\n\t\t\t\tthis.localRotation.mul2(rotation, rot);\n\t\t\t}\n\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto.rotateLocal = function rotateLocal(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\trotation.setFromEulerAngles(x.x, x.y, x.z);\n\t\t\t} else {\n\t\t\t\trotation.setFromEulerAngles(x, y, z);\n\t\t\t}\n\n\t\t\tthis.localRotation.mul(rotation);\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_createClass(GraphNode, [{\n\t\t\tkey: \"right\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._right) {\n\t\t\t\t\tthis._right = new Vec3();\n\t\t\t\t}\n\n\t\t\t\treturn this.getWorldTransform().getX(this._right).normalize();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"up\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._up) {\n\t\t\t\t\tthis._up = new Vec3();\n\t\t\t\t}\n\n\t\t\t\treturn this.getWorldTransform().getY(this._up).normalize();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"forward\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._forward) {\n\t\t\t\t\tthis._forward = new Vec3();\n\t\t\t\t}\n\n\t\t\t\treturn this.getWorldTransform().getZ(this._forward).normalize().scale(-1);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled && this._enabledInHierarchy;\n\t\t\t},\n\t\t\tset: function set(enabled) {\n\t\t\t\tif (this._enabled !== enabled) {\n\t\t\t\t\tthis._enabled = enabled;\n\t\t\t\t\tif (!this._parent || this._parent.enabled) this._notifyHierarchyStateChanged(this, enabled);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"parent\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._parent;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"path\",\n\t\t\tget: function get() {\n\t\t\t\tvar parent = this._parent;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tvar path = this.name;\n\n\t\t\t\t\twhile (parent && parent._parent) {\n\t\t\t\t\t\tpath = parent.name + \"/\" + path;\n\t\t\t\t\t\tparent = parent._parent;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn path;\n\t\t\t\t}\n\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"root\",\n\t\t\tget: function get() {\n\t\t\t\tvar parent = this._parent;\n\t\t\t\tif (!parent) return this;\n\n\t\t\t\twhile (parent._parent) {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"children\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._children;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"graphDepth\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._graphDepth;\n\t\t\t}\n\t\t}]);\n\n\t\treturn GraphNode;\n\t}(EventHandler);\n\n\tvar keyA, keyB, sortPos, sortDir;\n\n\tfunction sortManual(drawCallA, drawCallB) {\n\t\treturn drawCallA.drawOrder - drawCallB.drawOrder;\n\t}\n\n\tfunction sortMaterialMesh(drawCallA, drawCallB) {\n\t\tkeyA = drawCallA._key[SORTKEY_FORWARD];\n\t\tkeyB = drawCallB._key[SORTKEY_FORWARD];\n\n\t\tif (keyA === keyB && drawCallA.mesh && drawCallB.mesh) {\n\t\t\treturn drawCallB.mesh.id - drawCallA.mesh.id;\n\t\t}\n\n\t\treturn keyB - keyA;\n\t}\n\n\tfunction sortBackToFront(drawCallA, drawCallB) {\n\t\treturn drawCallB.zdist - drawCallA.zdist;\n\t}\n\n\tfunction sortFrontToBack(drawCallA, drawCallB) {\n\t\treturn drawCallA.zdist - drawCallB.zdist;\n\t}\n\n\tvar sortCallbacks = [null, sortManual, sortMaterialMesh, sortBackToFront, sortFrontToBack];\n\n\tfunction sortCameras(camA, camB) {\n\t\treturn camA.priority - camB.priority;\n\t}\n\n\tfunction sortLights(lightA, lightB) {\n\t\treturn lightB.key - lightA.key;\n\t}\n\n\tvar layerCounter = 0;\n\n\tvar VisibleInstanceList = function VisibleInstanceList() {\n\t\tthis.list = [];\n\t\tthis.length = 0;\n\t\tthis.done = false;\n\t};\n\n\tvar InstanceList = function () {\n\t\tfunction InstanceList() {\n\t\t\tthis.opaqueMeshInstances = [];\n\t\t\tthis.transparentMeshInstances = [];\n\t\t\tthis.shadowCasters = [];\n\t\t\tthis.visibleOpaque = [];\n\t\t\tthis.visibleTransparent = [];\n\t\t}\n\n\t\tvar _proto = InstanceList.prototype;\n\n\t\t_proto.clearVisibleLists = function clearVisibleLists(cameraPass) {\n\t\t\tif (this.visibleOpaque[cameraPass]) {\n\t\t\t\tthis.visibleOpaque[cameraPass].length = 0;\n\t\t\t\tthis.visibleOpaque[cameraPass].list.length = 0;\n\t\t\t}\n\n\t\t\tif (this.visibleTransparent[cameraPass]) {\n\t\t\t\tthis.visibleTransparent[cameraPass].length = 0;\n\t\t\t\tthis.visibleTransparent[cameraPass].list.length = 0;\n\t\t\t}\n\t\t};\n\n\t\treturn InstanceList;\n\t}();\n\n\tvar Layer = function () {\n\t\tfunction Layer(options) {\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tif (options.id !== undefined) {\n\t\t\t\tthis.id = options.id;\n\t\t\t\tlayerCounter = Math.max(this.id + 1, layerCounter);\n\t\t\t} else {\n\t\t\t\tthis.id = layerCounter++;\n\t\t\t}\n\n\t\t\tthis.name = options.name;\n\t\t\tthis._enabled = options.enabled === undefined ? true : options.enabled;\n\t\t\tthis._refCounter = this._enabled ? 1 : 0;\n\t\t\tthis.opaqueSortMode = options.opaqueSortMode === undefined ? SORTMODE_MATERIALMESH : options.opaqueSortMode;\n\t\t\tthis.transparentSortMode = options.transparentSortMode === undefined ? SORTMODE_BACK2FRONT : options.transparentSortMode;\n\t\t\tthis.renderTarget = options.renderTarget;\n\t\t\tthis.shaderPass = options.shaderPass === undefined ? SHADER_FORWARD : options.shaderPass;\n\t\t\tthis.passThrough = options.passThrough === undefined ? false : options.passThrough;\n\t\t\tthis.overrideClear = options.overrideClear === undefined ? false : options.overrideClear;\n\t\t\tthis._clearColor = new Color(0, 0, 0, 1);\n\n\t\t\tif (options.clearColor) {\n\t\t\t\tthis._clearColor.copy(options.clearColor);\n\t\t\t}\n\n\t\t\tthis._clearColorBuffer = options.clearColorBuffer === undefined ? false : options.clearColorBuffer;\n\t\t\tthis._clearDepthBuffer = options.clearDepthBuffer === undefined ? false : options.clearDepthBuffer;\n\t\t\tthis._clearStencilBuffer = options.clearStencilBuffer === undefined ? false : options.clearStencilBuffer;\n\t\t\tthis._clearOptions = {\n\t\t\t\tcolor: [this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a],\n\t\t\t\tdepth: 1,\n\t\t\t\tstencil: 0,\n\t\t\t\tflags: (this._clearColorBuffer ? CLEARFLAG_COLOR : 0) | (this._clearDepthBuffer ? CLEARFLAG_DEPTH : 0) | (this._clearStencilBuffer ? CLEARFLAG_STENCIL : 0)\n\t\t\t};\n\t\t\tthis.onPreCull = options.onPreCull;\n\t\t\tthis.onPreRender = options.onPreRender;\n\t\t\tthis.onPreRenderOpaque = options.onPreRenderOpaque;\n\t\t\tthis.onPreRenderTransparent = options.onPreRenderTransparent;\n\t\t\tthis.onPostCull = options.onPostCull;\n\t\t\tthis.onPostRender = options.onPostRender;\n\t\t\tthis.onPostRenderOpaque = options.onPostRenderOpaque;\n\t\t\tthis.onPostRenderTransparent = options.onPostRenderTransparent;\n\t\t\tthis.onDrawCall = options.onDrawCall;\n\t\t\tthis.onEnable = options.onEnable;\n\t\t\tthis.onDisable = options.onDisable;\n\n\t\t\tif (this._enabled && this.onEnable) {\n\t\t\t\tthis.onEnable();\n\t\t\t}\n\n\t\t\tthis.layerReference = options.layerReference;\n\t\t\tthis.instances = options.layerReference ? options.layerReference.instances : new InstanceList();\n\t\t\tthis.cullingMask = options.cullingMask ? options.cullingMask : 0xFFFFFFFF;\n\t\t\tthis.opaqueMeshInstances = this.instances.opaqueMeshInstances;\n\t\t\tthis.transparentMeshInstances = this.instances.transparentMeshInstances;\n\t\t\tthis.shadowCasters = this.instances.shadowCasters;\n\t\t\tthis.customSortCallback = null;\n\t\t\tthis.customCalculateSortValues = null;\n\t\t\tthis._lightComponents = [];\n\t\t\tthis._lights = [];\n\t\t\tthis._splitLights = [[], [], []];\n\t\t\tthis.cameras = [];\n\t\t\tthis._dirty = false;\n\t\t\tthis._dirtyLights = false;\n\t\t\tthis._dirtyCameras = false;\n\t\t\tthis._cameraHash = 0;\n\t\t\tthis._lightHash = 0;\n\t\t\tthis._staticLightHash = 0;\n\t\t\tthis._needsStaticPrepare = true;\n\t\t\tthis._staticPrepareDone = false;\n\t\t\tthis._shaderVersion = -1;\n\t\t\tthis._version = 0;\n\t\t\tthis._lightCube = null;\n\t\t}\n\n\t\tvar _proto2 = Layer.prototype;\n\n\t\t_proto2._updateClearFlags = function _updateClearFlags() {\n\t\t\tvar flags = 0;\n\t\t\tif (this._clearColorBuffer) flags |= CLEARFLAG_COLOR;\n\t\t\tif (this._clearDepthBuffer) flags |= CLEARFLAG_DEPTH;\n\t\t\tif (this._clearStencilBuffer) flags |= CLEARFLAG_STENCIL;\n\t\t\tthis._clearOptions.flags = flags;\n\t\t};\n\n\t\t_proto2.incrementCounter = function incrementCounter() {\n\t\t\tif (this._refCounter === 0) {\n\t\t\t\tthis._enabled = true;\n\t\t\t\tif (this.onEnable) this.onEnable();\n\t\t\t}\n\n\t\t\tthis._refCounter++;\n\t\t};\n\n\t\t_proto2.decrementCounter = function decrementCounter() {\n\t\t\tif (this._refCounter === 1) {\n\t\t\t\tthis._enabled = false;\n\t\t\t\tif (this.onDisable) this.onDisable();\n\t\t\t} else if (this._refCounter === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._refCounter--;\n\t\t};\n\n\t\t_proto2.addMeshInstances = function addMeshInstances(meshInstances, skipShadowCasters) {\n\t\t\tvar sceneShaderVer = this._shaderVersion;\n\t\t\tvar m, arr, mat;\n\t\t\tvar casters = this.shadowCasters;\n\n\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\tm = meshInstances[i];\n\t\t\t\tmat = m.material;\n\n\t\t\t\tif (mat.blendType === BLEND_NONE) {\n\t\t\t\t\tarr = this.opaqueMeshInstances;\n\t\t\t\t} else {\n\t\t\t\t\tarr = this.transparentMeshInstances;\n\t\t\t\t}\n\n\t\t\t\tif (this.opaqueMeshInstances.indexOf(m) < 0 && this.transparentMeshInstances.indexOf(m) < 0) {\n\t\t\t\t\tarr.push(m);\n\t\t\t\t}\n\n\t\t\t\tif (!skipShadowCasters && m.castShadow && casters.indexOf(m) < 0) casters.push(m);\n\n\t\t\t\tif (!this.passThrough && sceneShaderVer >= 0 && mat._shaderVersion !== sceneShaderVer) {\n\t\t\t\t\tif (mat.updateShader !== Material.prototype.updateShader) {\n\t\t\t\t\t\tmat.clearVariants();\n\t\t\t\t\t\tmat.shader = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tmat._shaderVersion = sceneShaderVer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.passThrough) this._dirty = true;\n\t\t};\n\n\t\t_proto2.removeMeshInstanceFromArray = function removeMeshInstanceFromArray(m, arr) {\n\t\t\tvar drawCall;\n\t\t\tvar spliceOffset = -1;\n\t\t\tvar spliceCount = 0;\n\t\t\tvar len = arr.length;\n\n\t\t\tfor (var j = 0; j < len; j++) {\n\t\t\t\tdrawCall = arr[j];\n\n\t\t\t\tif (drawCall === m) {\n\t\t\t\t\tspliceOffset = j;\n\t\t\t\t\tspliceCount = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (drawCall._staticSource === m) {\n\t\t\t\t\tif (spliceOffset < 0) spliceOffset = j;\n\t\t\t\t\tspliceCount++;\n\t\t\t\t} else if (spliceOffset >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (spliceOffset >= 0) {\n\t\t\t\tarr.splice(spliceOffset, spliceCount);\n\t\t\t}\n\t\t};\n\n\t\t_proto2.removeMeshInstances = function removeMeshInstances(meshInstances, skipShadowCasters) {\n\t\t\tvar j, m;\n\t\t\tvar opaque = this.opaqueMeshInstances;\n\t\t\tvar transparent = this.transparentMeshInstances;\n\t\t\tvar casters = this.shadowCasters;\n\n\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\tm = meshInstances[i];\n\t\t\t\tthis.removeMeshInstanceFromArray(m, opaque);\n\t\t\t\tthis.removeMeshInstanceFromArray(m, transparent);\n\n\t\t\t\tif (!skipShadowCasters) {\n\t\t\t\t\tj = casters.indexOf(m);\n\t\t\t\t\tif (j >= 0) casters.splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._dirty = true;\n\t\t};\n\n\t\t_proto2.clearMeshInstances = function clearMeshInstances(skipShadowCasters) {\n\t\t\tif (this.opaqueMeshInstances.length === 0 && this.transparentMeshInstances.length === 0) {\n\t\t\t\tif (skipShadowCasters || this.shadowCasters.length === 0) return;\n\t\t\t}\n\n\t\t\tthis.opaqueMeshInstances.length = 0;\n\t\t\tthis.transparentMeshInstances.length = 0;\n\t\t\tif (!skipShadowCasters) this.shadowCasters.length = 0;\n\t\t\tif (!this.passThrough) this._dirty = true;\n\t\t};\n\n\t\t_proto2.addLight = function addLight(light) {\n\t\t\tif (this._lightComponents.indexOf(light) >= 0) return;\n\n\t\t\tthis._lightComponents.push(light);\n\n\t\t\tthis._lights.push(light.light);\n\n\t\t\tthis._dirtyLights = true;\n\n\t\t\tthis._generateLightHash();\n\t\t};\n\n\t\t_proto2.removeLight = function removeLight(light) {\n\t\t\tvar id = this._lightComponents.indexOf(light);\n\n\t\t\tif (id < 0) return;\n\n\t\t\tthis._lightComponents.splice(id, 1);\n\n\t\t\tid = this._lights.indexOf(light.light);\n\n\t\t\tthis._lights.splice(id, 1);\n\n\t\t\tthis._dirtyLights = true;\n\n\t\t\tthis._generateLightHash();\n\t\t};\n\n\t\t_proto2.clearLights = function clearLights() {\n\t\t\tthis._lightComponents.length = 0;\n\t\t\tthis._lights.length = 0;\n\t\t\tthis._dirtyLights = true;\n\t\t};\n\n\t\t_proto2.addShadowCasters = function addShadowCasters(meshInstances) {\n\t\t\tvar m;\n\t\t\tvar arr = this.shadowCasters;\n\n\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\tm = meshInstances[i];\n\t\t\t\tif (!m.castShadow) continue;\n\t\t\t\tif (arr.indexOf(m) < 0) arr.push(m);\n\t\t\t}\n\n\t\t\tthis._dirtyLights = true;\n\t\t};\n\n\t\t_proto2.removeShadowCasters = function removeShadowCasters(meshInstances) {\n\t\t\tvar id;\n\t\t\tvar arr = this.shadowCasters;\n\n\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\tid = arr.indexOf(meshInstances[i]);\n\t\t\t\tif (id >= 0) arr.splice(id, 1);\n\t\t\t}\n\n\t\t\tthis._dirtyLights = true;\n\t\t};\n\n\t\t_proto2._generateLightHash = function _generateLightHash() {\n\t\t\tif (this._lights.length > 0) {\n\t\t\t\tthis._lights.sort(sortLights);\n\n\t\t\t\tvar str = \"\";\n\t\t\t\tvar strStatic = \"\";\n\n\t\t\t\tfor (var i = 0; i < this._lights.length; i++) {\n\t\t\t\t\tif (this._lights[i].isStatic) {\n\t\t\t\t\t\tstrStatic += this._lights[i].key;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += this._lights[i].key;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (str.length === 0) {\n\t\t\t\t\tthis._lightHash = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._lightHash = hashCode(str);\n\t\t\t\t}\n\n\t\t\t\tif (strStatic.length === 0) {\n\t\t\t\t\tthis._staticLightHash = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._staticLightHash = hashCode(strStatic);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._lightHash = 0;\n\t\t\t\tthis._staticLightHash = 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._generateCameraHash = function _generateCameraHash() {\n\t\t\tif (this.cameras.length > 1) {\n\t\t\t\tthis.cameras.sort(sortCameras);\n\t\t\t\tvar str = \"\";\n\n\t\t\t\tfor (var i = 0; i < this.cameras.length; i++) {\n\t\t\t\t\tstr += this.cameras[i].entity.getGuid();\n\t\t\t\t}\n\n\t\t\t\tthis._cameraHash = hashCode(str);\n\t\t\t} else {\n\t\t\t\tthis._cameraHash = 0;\n\t\t\t}\n\n\t\t\tthis._dirtyCameras = true;\n\t\t};\n\n\t\t_proto2.addCamera = function addCamera(camera) {\n\t\t\tif (this.cameras.indexOf(camera) >= 0) return;\n\t\t\tthis.cameras.push(camera);\n\n\t\t\tthis._generateCameraHash();\n\t\t};\n\n\t\t_proto2.removeCamera = function removeCamera(camera) {\n\t\t\tvar id = this.cameras.indexOf(camera);\n\t\t\tif (id < 0) return;\n\t\t\tthis.cameras.splice(id, 1);\n\n\t\t\tthis._generateCameraHash();\n\n\t\t\tthis.instances.clearVisibleLists(id);\n\t\t};\n\n\t\t_proto2.clearCameras = function clearCameras() {\n\t\t\tthis.cameras.length = 0;\n\t\t\tthis._cameraHash = 0;\n\t\t\tthis._dirtyCameras = true;\n\t\t};\n\n\t\t_proto2._sortCameras = function _sortCameras() {\n\t\t\tthis._generateCameraHash();\n\t\t};\n\n\t\t_proto2._calculateSortDistances = function _calculateSortDistances(drawCalls, drawCallsCount, camPos, camFwd) {\n\t\t\tvar i, drawCall, meshPos;\n\t\t\tvar tempx, tempy, tempz;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tdrawCall = drawCalls[i];\n\t\t\t\tif (drawCall.command) continue;\n\t\t\t\tif (drawCall.layer <= LAYER_FX) continue;\n\n\t\t\t\tif (drawCall.calculateSortDistance) {\n\t\t\t\t\tdrawCall.zdist = drawCall.calculateSortDistance(drawCall, camPos, camFwd);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tmeshPos = drawCall.aabb.center;\n\t\t\t\ttempx = meshPos.x - camPos.x;\n\t\t\t\ttempy = meshPos.y - camPos.y;\n\t\t\t\ttempz = meshPos.z - camPos.z;\n\t\t\t\tdrawCall.zdist = tempx * camFwd.x + tempy * camFwd.y + tempz * camFwd.z;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._sortVisible = function _sortVisible(transparent, cameraNode, cameraPass) {\n\t\t\tvar objects = this.instances;\n\t\t\tvar sortMode = transparent ? this.transparentSortMode : this.opaqueSortMode;\n\t\t\tif (sortMode === SORTMODE_NONE) return;\n\t\t\tvar visible = transparent ? objects.visibleTransparent[cameraPass] : objects.visibleOpaque[cameraPass];\n\n\t\t\tif (sortMode === SORTMODE_CUSTOM) {\n\t\t\t\tsortPos = cameraNode.getPosition();\n\t\t\t\tsortDir = cameraNode.forward;\n\n\t\t\t\tif (this.customCalculateSortValues) {\n\t\t\t\t\tthis.customCalculateSortValues(visible.list, visible.length, sortPos, sortDir);\n\t\t\t\t}\n\n\t\t\t\tif (visible.list.length !== visible.length) {\n\t\t\t\t\tvisible.list.length = visible.length;\n\t\t\t\t}\n\n\t\t\t\tif (this.customSortCallback) {\n\t\t\t\t\tvisible.list.sort(this.customSortCallback);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (sortMode === SORTMODE_BACK2FRONT || sortMode === SORTMODE_FRONT2BACK) {\n\t\t\t\t\tsortPos = cameraNode.getPosition();\n\t\t\t\t\tsortDir = cameraNode.forward;\n\n\t\t\t\t\tthis._calculateSortDistances(visible.list, visible.length, sortPos, sortDir);\n\t\t\t\t}\n\n\t\t\t\tif (visible.list.length !== visible.length) {\n\t\t\t\t\tvisible.list.length = visible.length;\n\t\t\t\t}\n\n\t\t\t\tvisible.list.sort(sortCallbacks[sortMode]);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(Layer, [{\n\t\t\tkey: \"renderTarget\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._renderTarget;\n\t\t\t},\n\t\t\tset: function set(rt) {\n\t\t\t\tthis._renderTarget = rt;\n\t\t\t\tthis._dirtyCameras = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tif (val !== this._enabled) {\n\t\t\t\t\tthis._enabled = val;\n\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tthis.incrementCounter();\n\t\t\t\t\t\tif (this.onEnable) this.onEnable();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.decrementCounter();\n\t\t\t\t\t\tif (this.onDisable) this.onDisable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearColor\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearColor;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._clearColor.copy(val);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearColorBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearColorBuffer;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._clearColorBuffer = val;\n\n\t\t\t\tthis._updateClearFlags();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearDepthBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearDepthBuffer;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._clearDepthBuffer = val;\n\n\t\t\t\tthis._updateClearFlags();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clearStencilBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clearStencilBuffer;\n\t\t\t},\n\t\t\tset: function set(val) {\n\t\t\t\tthis._clearStencilBuffer = val;\n\n\t\t\t\tthis._updateClearFlags();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Layer;\n\t}();\n\n\tvar scaleShift = new Mat4().mul2(new Mat4().setTranslate(0.5, 0.5, 0.5), new Mat4().setScale(0.5, 0.5, 0.5));\n\tvar opChanId = {\n\t\tr: 1,\n\t\tg: 2,\n\t\tb: 3,\n\t\ta: 4\n\t};\n\tvar pointLightRotations = [new Quat().setFromEulerAngles(0, 90, 180), new Quat().setFromEulerAngles(0, -90, 180), new Quat().setFromEulerAngles(90, 0, 0), new Quat().setFromEulerAngles(-90, 0, 0), new Quat().setFromEulerAngles(0, 180, 180), new Quat().setFromEulerAngles(0, 0, 180)];\n\tvar numShadowModes = 5;\n\tvar shadowMapCache = [{}, {}, {}, {}, {}];\n\tvar directionalShadowEpsilon = 0.01;\n\tvar pixelOffset = new Float32Array(2);\n\tvar blurScissorRect = {\n\t\tx: 1,\n\t\ty: 1,\n\t\tz: 0,\n\t\tw: 0\n\t};\n\tvar shadowCamView = new Mat4();\n\tvar shadowCamViewProj = new Mat4();\n\tvar c2sc = new Mat4();\n\tvar viewInvMat = new Mat4();\n\tvar viewMat = new Mat4();\n\tvar viewMat3 = new Mat3();\n\tvar viewProjMat = new Mat4();\n\tvar projMat;\n\tvar viewInvL = new Mat4();\n\tvar viewInvR = new Mat4();\n\tvar viewL = new Mat4();\n\tvar viewR = new Mat4();\n\tvar viewPosL = new Vec3();\n\tvar viewPosR = new Vec3();\n\tvar projL, projR;\n\tvar viewMat3L = new Mat3();\n\tvar viewMat3R = new Mat3();\n\tvar viewProjMatL = new Mat4();\n\tvar viewProjMatR = new Mat4();\n\tvar worldMatX$1 = new Vec3();\n\tvar worldMatY$1 = new Vec3();\n\tvar worldMatZ$1 = new Vec3();\n\tvar frustumDiagonal = new Vec3();\n\tvar tempSphere = {\n\t\tcenter: null,\n\t\tradius: 0\n\t};\n\tvar visibleSceneAabb = new BoundingBox();\n\tvar boneTextureSize = [0, 0, 0, 0];\n\tvar boneTexture, instancingData, modelMatrix, normalMatrix;\n\tvar shadowMapCubeCache = {};\n\tvar maxBlurSize = 25;\n\tvar keyA$1, keyB$1;\n\tvar _autoInstanceBuffer = null;\n\tvar _skinUpdateIndex = 0;\n\n\tvar _tempMaterialSet = new Set();\n\n\tvar frustumPoints = [];\n\n\tfor (var fp = 0; fp < 8; fp++) {\n\t\tfrustumPoints.push(new Vec3());\n\t}\n\n\tfunction _getFrustumPoints(camera, farClip, points) {\n\t\tvar nearClip = camera._nearClip;\n\t\tvar fov = camera._fov * Math.PI / 180.0;\n\t\tvar aspect = camera._aspectRatio;\n\t\tvar projection = camera._projection;\n\t\tvar x, y;\n\n\t\tif (projection === PROJECTION_PERSPECTIVE) {\n\t\t\ty = Math.tan(fov / 2.0) * nearClip;\n\t\t} else {\n\t\t\ty = camera._orthoHeight;\n\t\t}\n\n\t\tx = y * aspect;\n\t\tpoints[0].x = x;\n\t\tpoints[0].y = -y;\n\t\tpoints[0].z = -nearClip;\n\t\tpoints[1].x = x;\n\t\tpoints[1].y = y;\n\t\tpoints[1].z = -nearClip;\n\t\tpoints[2].x = -x;\n\t\tpoints[2].y = y;\n\t\tpoints[2].z = -nearClip;\n\t\tpoints[3].x = -x;\n\t\tpoints[3].y = -y;\n\t\tpoints[3].z = -nearClip;\n\n\t\tif (projection === PROJECTION_PERSPECTIVE) {\n\t\t\ty = Math.tan(fov / 2.0) * farClip;\n\t\t\tx = y * aspect;\n\t\t}\n\n\t\tpoints[4].x = x;\n\t\tpoints[4].y = -y;\n\t\tpoints[4].z = -farClip;\n\t\tpoints[5].x = x;\n\t\tpoints[5].y = y;\n\t\tpoints[5].z = -farClip;\n\t\tpoints[6].x = -x;\n\t\tpoints[6].y = y;\n\t\tpoints[6].z = -farClip;\n\t\tpoints[7].x = -x;\n\t\tpoints[7].y = -y;\n\t\tpoints[7].z = -farClip;\n\t\treturn points;\n\t}\n\n\tvar _sceneAABB_LS = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n\tfunction _getZFromAABBSimple(w2sc, aabbMin, aabbMax, lcamMinX, lcamMaxX, lcamMinY, lcamMaxY) {\n\t\t_sceneAABB_LS[0].x = _sceneAABB_LS[1].x = _sceneAABB_LS[2].x = _sceneAABB_LS[3].x = aabbMin.x;\n\t\t_sceneAABB_LS[1].y = _sceneAABB_LS[3].y = _sceneAABB_LS[7].y = _sceneAABB_LS[5].y = aabbMin.y;\n\t\t_sceneAABB_LS[2].z = _sceneAABB_LS[3].z = _sceneAABB_LS[6].z = _sceneAABB_LS[7].z = aabbMin.z;\n\t\t_sceneAABB_LS[4].x = _sceneAABB_LS[5].x = _sceneAABB_LS[6].x = _sceneAABB_LS[7].x = aabbMax.x;\n\t\t_sceneAABB_LS[0].y = _sceneAABB_LS[2].y = _sceneAABB_LS[4].y = _sceneAABB_LS[6].y = aabbMax.y;\n\t\t_sceneAABB_LS[0].z = _sceneAABB_LS[1].z = _sceneAABB_LS[4].z = _sceneAABB_LS[5].z = aabbMax.z;\n\t\tvar minz = 9999999999;\n\t\tvar maxz = -9999999999;\n\t\tvar z;\n\n\t\tfor (var i = 0; i < 8; ++i) {\n\t\t\tw2sc.transformPoint(_sceneAABB_LS[i], _sceneAABB_LS[i]);\n\t\t\tz = _sceneAABB_LS[i].z;\n\t\t\tif (z < minz) minz = z;\n\t\t\tif (z > maxz) maxz = z;\n\t\t}\n\n\t\treturn {\n\t\t\tmin: minz,\n\t\t\tmax: maxz\n\t\t};\n\t}\n\n\tfunction getShadowFormat(device, shadowType) {\n\t\tif (shadowType === SHADOW_VSM32) {\n\t\t\treturn PIXELFORMAT_RGBA32F;\n\t\t} else if (shadowType === SHADOW_VSM16) {\n\t\t\treturn PIXELFORMAT_RGBA16F;\n\t\t} else if (shadowType === SHADOW_PCF5) {\n\t\t\treturn PIXELFORMAT_DEPTH;\n\t\t} else if (shadowType === SHADOW_PCF3 && device.webgl2) {\n\t\t\treturn PIXELFORMAT_DEPTH;\n\t\t}\n\n\t\treturn PIXELFORMAT_R8_G8_B8_A8;\n\t}\n\n\tfunction getShadowFiltering(device, shadowType) {\n\t\tif (shadowType === SHADOW_PCF3 && !device.webgl2) {\n\t\t\treturn FILTER_NEAREST;\n\t\t} else if (shadowType === SHADOW_VSM32) {\n\t\t\treturn device.extTextureFloatLinear ? FILTER_LINEAR : FILTER_NEAREST;\n\t\t} else if (shadowType === SHADOW_VSM16) {\n\t\t\treturn device.extTextureHalfFloatLinear ? FILTER_LINEAR : FILTER_NEAREST;\n\t\t}\n\n\t\treturn FILTER_LINEAR;\n\t}\n\n\tfunction createShadowMap(device, width, height, shadowType) {\n\t\tvar format = getShadowFormat(device, shadowType);\n\t\tvar filter = getShadowFiltering(device, shadowType);\n\t\tvar shadowMap = new Texture(device, {\n\t\t\tformat: format,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tmipmaps: false,\n\t\t\tminFilter: filter,\n\t\t\tmagFilter: filter,\n\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t});\n\t\tshadowMap.name = 'shadowmap';\n\n\t\tif (shadowType === SHADOW_PCF5 || shadowType === SHADOW_PCF3 && device.webgl2) {\n\t\t\tshadowMap.compareOnRead = true;\n\t\t\tshadowMap.compareFunc = FUNC_LESS;\n\t\t\treturn new RenderTarget({\n\t\t\t\tdepthBuffer: shadowMap\n\t\t\t});\n\t\t}\n\n\t\treturn new RenderTarget({\n\t\t\tcolorBuffer: shadowMap,\n\t\t\tdepth: true\n\t\t});\n\t}\n\n\tfunction createShadowCubeMap(device, size) {\n\t\tvar cubemap = new Texture(device, {\n\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\tcubemap: true,\n\t\t\tmipmaps: false,\n\t\t\tminFilter: FILTER_NEAREST,\n\t\t\tmagFilter: FILTER_NEAREST,\n\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t});\n\t\tcubemap.name = 'shadowcube';\n\t\tvar targets = [];\n\t\tvar target;\n\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\ttarget = new RenderTarget({\n\t\t\t\tcolorBuffer: cubemap,\n\t\t\t\tface: i,\n\t\t\t\tdepth: true\n\t\t\t});\n\t\t\ttargets.push(target);\n\t\t}\n\n\t\treturn targets;\n\t}\n\n\tfunction gauss(x, sigma) {\n\t\treturn Math.exp(-(x * x) / (2.0 * sigma * sigma));\n\t}\n\n\tfunction gaussWeights(kernelSize) {\n\t\tif (kernelSize > maxBlurSize) kernelSize = maxBlurSize;\n\t\tvar sigma = (kernelSize - 1) / (2 * 3);\n\t\tvar i, values, sum, halfWidth;\n\t\thalfWidth = (kernelSize - 1) * 0.5;\n\t\tvalues = new Array(kernelSize);\n\t\tsum = 0.0;\n\n\t\tfor (i = 0; i < kernelSize; ++i) {\n\t\t\tvalues[i] = gauss(i - halfWidth, sigma);\n\t\t\tsum += values[i];\n\t\t}\n\n\t\tfor (i = 0; i < kernelSize; ++i) {\n\t\t\tvalues[i] /= sum;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfunction createShadowCamera(device, shadowType, type) {\n\t\tvar hwPcf = shadowType === SHADOW_PCF5 || shadowType === SHADOW_PCF3 && device.webgl2;\n\n\t\tif (type === LIGHTTYPE_OMNI) {\n\t\t\thwPcf = false;\n\t\t}\n\n\t\tvar shadowCam = new Camera();\n\n\t\tif (shadowType >= SHADOW_VSM8 && shadowType <= SHADOW_VSM32) {\n\t\t\tshadowCam.clearColor = new Color(0, 0, 0, 0);\n\t\t} else {\n\t\t\tshadowCam.clearColor = new Color(1, 1, 1, 1);\n\t\t}\n\n\t\tshadowCam.clearColorBuffer = !hwPcf;\n\t\tshadowCam.clearDepthBuffer = true;\n\t\tshadowCam.clearStencilBuffer = false;\n\t\tshadowCam.node = new GraphNode();\n\t\treturn shadowCam;\n\t}\n\n\tfunction getShadowMapFromCache(device, res, mode, layer) {\n\t\tif (layer === void 0) {\n\t\t\tlayer = 0;\n\t\t}\n\n\t\tvar id = layer * 10000 + res;\n\t\tvar shadowBuffer = shadowMapCache[mode][id];\n\n\t\tif (!shadowBuffer) {\n\t\t\tshadowBuffer = createShadowMap(device, res, res, mode ? mode : SHADOW_PCF3);\n\t\t\tshadowMapCache[mode][id] = shadowBuffer;\n\t\t}\n\n\t\treturn shadowBuffer;\n\t}\n\n\tfunction createShadowBuffer(device, light) {\n\t\tvar shadowBuffer;\n\n\t\tif (light._type === LIGHTTYPE_OMNI) {\n\t\t\tif (light._shadowType > SHADOW_PCF3) light._shadowType = SHADOW_PCF3;\n\n\t\t\tif (light._cacheShadowMap) {\n\t\t\t\tshadowBuffer = shadowMapCubeCache[light._shadowResolution];\n\n\t\t\t\tif (!shadowBuffer) {\n\t\t\t\t\tshadowBuffer = createShadowCubeMap(device, light._shadowResolution);\n\t\t\t\t\tshadowMapCubeCache[light._shadowResolution] = shadowBuffer;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tshadowBuffer = createShadowCubeMap(device, light._shadowResolution);\n\t\t\t}\n\n\t\t\tlight._shadowCamera.renderTarget = shadowBuffer[0];\n\t\t\tlight._shadowCubeMap = shadowBuffer;\n\t\t} else {\n\t\t\tif (light._cacheShadowMap) {\n\t\t\t\tshadowBuffer = getShadowMapFromCache(device, light._shadowResolution, light._shadowType);\n\t\t\t} else {\n\t\t\t\tshadowBuffer = createShadowMap(device, light._shadowResolution, light._shadowResolution, light._shadowType);\n\t\t\t}\n\n\t\t\tlight._shadowCamera.renderTarget = shadowBuffer;\n\t\t}\n\n\t\tlight._isCachedShadowMap = light._cacheShadowMap;\n\t}\n\n\tfunction getDepthKey(meshInstance) {\n\t\tvar material = meshInstance.material;\n\t\tvar x = meshInstance.skinInstance ? 10 : 0;\n\t\tvar y = 0;\n\n\t\tif (material.opacityMap) {\n\t\t\tvar opChan = material.opacityMapChannel;\n\n\t\t\tif (opChan) {\n\t\t\t\ty = opChanId[opChan];\n\t\t\t}\n\t\t}\n\n\t\treturn x + y;\n\t}\n\n\tvar ForwardRenderer = function () {\n\t\tfunction ForwardRenderer(graphicsDevice) {\n\t\t\tthis.device = graphicsDevice;\n\t\t\tvar device = this.device;\n\t\t\tthis._shadowDrawCalls = 0;\n\t\t\tthis._forwardDrawCalls = 0;\n\t\t\tthis._skinDrawCalls = 0;\n\t\t\tthis._camerasRendered = 0;\n\t\t\tthis._materialSwitches = 0;\n\t\t\tthis._shadowMapUpdates = 0;\n\t\t\tthis._shadowMapTime = 0;\n\t\t\tthis._depthMapTime = 0;\n\t\t\tthis._forwardTime = 0;\n\t\t\tthis._cullTime = 0;\n\t\t\tthis._sortTime = 0;\n\t\t\tthis._skinTime = 0;\n\t\t\tthis._morphTime = 0;\n\t\t\tthis._instancingTime = 0;\n\t\t\tthis._layerCompositionUpdateTime = 0;\n\t\t\tvar library = device.getProgramLibrary();\n\t\t\tthis.library = library;\n\t\t\tvar scope = device.scope;\n\t\t\tthis.projId = scope.resolve('matrix_projection');\n\t\t\tthis.projSkyboxId = scope.resolve('matrix_projectionSkybox');\n\t\t\tthis.viewId = scope.resolve('matrix_view');\n\t\t\tthis.viewId3 = scope.resolve('matrix_view3');\n\t\t\tthis.viewInvId = scope.resolve('matrix_viewInverse');\n\t\t\tthis.viewProjId = scope.resolve('matrix_viewProjection');\n\t\t\tthis.viewPos = new Float32Array(3);\n\t\t\tthis.viewPosId = scope.resolve('view_position');\n\t\t\tthis.nearClipId = scope.resolve('camera_near');\n\t\t\tthis.farClipId = scope.resolve('camera_far');\n\t\t\tthis.cameraParamsId = scope.resolve('camera_params');\n\t\t\tthis.shadowMapLightRadiusId = scope.resolve('light_radius');\n\t\t\tthis.fogColorId = scope.resolve('fog_color');\n\t\t\tthis.fogStartId = scope.resolve('fog_start');\n\t\t\tthis.fogEndId = scope.resolve('fog_end');\n\t\t\tthis.fogDensityId = scope.resolve('fog_density');\n\t\t\tthis.modelMatrixId = scope.resolve('matrix_model');\n\t\t\tthis.normalMatrixId = scope.resolve('matrix_normal');\n\t\t\tthis.poseMatrixId = scope.resolve('matrix_pose[0]');\n\t\t\tthis.boneTextureId = scope.resolve('texture_poseMap');\n\t\t\tthis.boneTextureSizeId = scope.resolve('texture_poseMapSize');\n\t\t\tthis.morphWeightsA = scope.resolve('morph_weights_a');\n\t\t\tthis.morphWeightsB = scope.resolve('morph_weights_b');\n\t\t\tthis.morphPositionTex = scope.resolve('morphPositionTex');\n\t\t\tthis.morphNormalTex = scope.resolve('morphNormalTex');\n\t\t\tthis.morphTexParams = scope.resolve('morph_tex_params');\n\t\t\tthis.alphaTestId = scope.resolve('alpha_ref');\n\t\t\tthis.opacityMapId = scope.resolve('texture_opacityMap');\n\t\t\tthis.ambientId = scope.resolve(\"light_globalAmbient\");\n\t\t\tthis.exposureId = scope.resolve(\"exposure\");\n\t\t\tthis.skyboxIntensityId = scope.resolve(\"skyboxIntensity\");\n\t\t\tthis.lightColorId = [];\n\t\t\tthis.lightDir = [];\n\t\t\tthis.lightDirId = [];\n\t\t\tthis.lightShadowMapId = [];\n\t\t\tthis.lightShadowMatrixId = [];\n\t\t\tthis.lightShadowParamsId = [];\n\t\t\tthis.lightShadowMatrixVsId = [];\n\t\t\tthis.lightShadowParamsVsId = [];\n\t\t\tthis.lightDirVs = [];\n\t\t\tthis.lightDirVsId = [];\n\t\t\tthis.lightRadiusId = [];\n\t\t\tthis.lightPos = [];\n\t\t\tthis.lightPosId = [];\n\t\t\tthis.lightWidth = [];\n\t\t\tthis.lightWidthId = [];\n\t\t\tthis.lightHeight = [];\n\t\t\tthis.lightHeightId = [];\n\t\t\tthis.lightInAngleId = [];\n\t\t\tthis.lightOutAngleId = [];\n\t\t\tthis.lightPosVsId = [];\n\t\t\tthis.lightCookieId = [];\n\t\t\tthis.lightCookieIntId = [];\n\t\t\tthis.lightCookieMatrixId = [];\n\t\t\tthis.lightCookieOffsetId = [];\n\t\t\tthis.depthMapId = scope.resolve('uDepthMap');\n\t\t\tthis.screenSizeId = scope.resolve('uScreenSize');\n\t\t\tthis._screenSize = new Float32Array(4);\n\t\t\tthis.sourceId = scope.resolve(\"source\");\n\t\t\tthis.pixelOffsetId = scope.resolve(\"pixelOffset\");\n\t\t\tthis.weightId = scope.resolve(\"weight[0]\");\n\t\t\tthis.blurVsmShaderCode = [shaderChunks.blurVSMPS, \"#define GAUSS\\n\" + shaderChunks.blurVSMPS];\n\t\t\tvar packed = \"#define PACKED\\n\";\n\t\t\tthis.blurPackedVsmShaderCode = [packed + this.blurVsmShaderCode[0], packed + this.blurVsmShaderCode[1]];\n\t\t\tthis.blurVsmShader = [{}, {}];\n\t\t\tthis.blurPackedVsmShader = [{}, {}];\n\t\t\tthis.blurVsmWeights = {};\n\t\t\tthis.twoSidedLightingNegScaleFactorId = scope.resolve(\"twoSidedLightingNegScaleFactor\");\n\t\t\tthis.polygonOffsetId = scope.resolve(\"polygonOffset\");\n\t\t\tthis.polygonOffset = new Float32Array(2);\n\t\t\tthis.fogColor = new Float32Array(3);\n\t\t\tthis.ambientColor = new Float32Array(3);\n\t\t\tthis.cameraParams = new Float32Array(4);\n\t\t}\n\n\t\tvar _proto = ForwardRenderer.prototype;\n\n\t\t_proto.sortCompare = function sortCompare(drawCallA, drawCallB) {\n\t\t\tif (drawCallA.layer === drawCallB.layer) {\n\t\t\t\tif (drawCallA.drawOrder && drawCallB.drawOrder) {\n\t\t\t\t\treturn drawCallA.drawOrder - drawCallB.drawOrder;\n\t\t\t\t} else if (drawCallA.zdist && drawCallB.zdist) {\n\t\t\t\t\treturn drawCallB.zdist - drawCallA.zdist;\n\t\t\t\t} else if (drawCallA.zdist2 && drawCallB.zdist2) {\n\t\t\t\t\treturn drawCallA.zdist2 - drawCallB.zdist2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn drawCallB._key[SORTKEY_FORWARD] - drawCallA._key[SORTKEY_FORWARD];\n\t\t};\n\n\t\t_proto.sortCompareMesh = function sortCompareMesh(drawCallA, drawCallB) {\n\t\t\tif (drawCallA.layer === drawCallB.layer) {\n\t\t\t\tif (drawCallA.drawOrder && drawCallB.drawOrder) {\n\t\t\t\t\treturn drawCallA.drawOrder - drawCallB.drawOrder;\n\t\t\t\t} else if (drawCallA.zdist && drawCallB.zdist) {\n\t\t\t\t\treturn drawCallB.zdist - drawCallA.zdist;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkeyA$1 = drawCallA._key[SORTKEY_FORWARD];\n\t\t\tkeyB$1 = drawCallB._key[SORTKEY_FORWARD];\n\n\t\t\tif (keyA$1 === keyB$1 && drawCallA.mesh && drawCallB.mesh) {\n\t\t\t\treturn drawCallB.mesh.id - drawCallA.mesh.id;\n\t\t\t}\n\n\t\t\treturn keyB$1 - keyA$1;\n\t\t};\n\n\t\t_proto.depthSortCompare = function depthSortCompare(drawCallA, drawCallB) {\n\t\t\tkeyA$1 = drawCallA._key[SORTKEY_DEPTH];\n\t\t\tkeyB$1 = drawCallB._key[SORTKEY_DEPTH];\n\n\t\t\tif (keyA$1 === keyB$1 && drawCallA.mesh && drawCallB.mesh) {\n\t\t\t\treturn drawCallB.mesh.id - drawCallA.mesh.id;\n\t\t\t}\n\n\t\t\treturn keyB$1 - keyA$1;\n\t\t};\n\n\t\t_proto.lightCompare = function lightCompare(lightA, lightB) {\n\t\t\treturn lightA.key - lightB.key;\n\t\t};\n\n\t\t_proto.getShadowCamera = function getShadowCamera(device, light) {\n\t\t\tvar shadowCam = light._shadowCamera;\n\t\t\tvar shadowBuffer;\n\n\t\t\tif (shadowCam === null) {\n\t\t\t\tshadowCam = light._shadowCamera = createShadowCamera(device, light._shadowType, light._type);\n\t\t\t\tcreateShadowBuffer(device, light);\n\t\t\t} else {\n\t\t\t\tshadowBuffer = shadowCam.renderTarget;\n\n\t\t\t\tif (shadowBuffer.width !== light._shadowResolution || shadowBuffer.height !== light._shadowResolution) {\n\t\t\t\t\tcreateShadowBuffer(device, light);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shadowCam;\n\t\t};\n\n\t\t_proto.updateCameraFrustum = function updateCameraFrustum(camera) {\n\t\t\tif (camera.vrDisplay && camera.vrDisplay.presenting) {\n\t\t\t\tprojMat = camera.vrDisplay.combinedProj;\n\t\t\t\tvar parent = camera._node.parent;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tviewMat.copy(parent.getWorldTransform()).mul(camera.vrDisplay.combinedViewInv).invert();\n\t\t\t\t} else {\n\t\t\t\t\tviewMat.copy(camera.vrDisplay.combinedView);\n\t\t\t\t}\n\n\t\t\t\tviewInvMat.copy(viewMat).invert();\n\t\t\t\tthis.viewInvId.setValue(viewInvMat.data);\n\t\t\t\tviewProjMat.mul2(projMat, viewMat);\n\t\t\t\tcamera.frustum.setFromMat4(viewProjMat);\n\t\t\t} else if (camera.xr && camera.xr.views.length) {\n\t\t\t\tvar view = camera.xr.views[0];\n\t\t\t\tviewProjMat.mul2(view.projMat, view.viewOffMat);\n\t\t\t\tcamera.frustum.setFromMat4(viewProjMat);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tprojMat = camera.projectionMatrix;\n\n\t\t\tif (camera.calculateProjection) {\n\t\t\t\tcamera.calculateProjection(projMat, VIEW_CENTER);\n\t\t\t}\n\n\t\t\tif (camera.calculateTransform) {\n\t\t\t\tcamera.calculateTransform(viewInvMat, VIEW_CENTER);\n\t\t\t} else {\n\t\t\t\tvar pos = camera._node.getPosition();\n\n\t\t\t\tvar rot = camera._node.getRotation();\n\n\t\t\t\tviewInvMat.setTRS(pos, rot, Vec3.ONE);\n\t\t\t\tthis.viewInvId.setValue(viewInvMat.data);\n\t\t\t}\n\n\t\t\tviewMat.copy(viewInvMat).invert();\n\t\t\tviewProjMat.mul2(projMat, viewMat);\n\t\t\tcamera.frustum.setFromMat4(viewProjMat);\n\t\t};\n\n\t\t_proto.setCamera = function setCamera(camera, target, clear, cullBorder) {\n\t\t\tvar vrDisplay = camera.vrDisplay;\n\t\t\tvar parent, transform;\n\n\t\t\tif (vrDisplay && vrDisplay.presenting) {\n\t\t\t\tprojL = vrDisplay.leftProj;\n\t\t\t\tprojR = vrDisplay.rightProj;\n\t\t\t\tprojMat = vrDisplay.combinedProj;\n\n\t\t\t\tif (camera.calculateProjection) {\n\t\t\t\t\tcamera.calculateProjection(projL, VIEW_LEFT);\n\t\t\t\t\tcamera.calculateProjection(projR, VIEW_RIGHT);\n\t\t\t\t\tcamera.calculateProjection(projMat, VIEW_CENTER);\n\t\t\t\t}\n\n\t\t\t\tif (camera.calculateTransform) {\n\t\t\t\t\tcamera.calculateTransform(viewInvL, VIEW_LEFT);\n\t\t\t\t\tcamera.calculateTransform(viewInvR, VIEW_RIGHT);\n\t\t\t\t\tcamera.calculateTransform(viewInvMat, VIEW_CENTER);\n\t\t\t\t\tviewL.copy(viewInvL).invert();\n\t\t\t\t\tviewR.copy(viewInvR).invert();\n\t\t\t\t\tviewMat.copy(viewInvMat).invert();\n\t\t\t\t} else {\n\t\t\t\t\tparent = camera._node.parent;\n\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\ttransform = parent.getWorldTransform();\n\t\t\t\t\t\tviewInvL.mul2(transform, vrDisplay.leftViewInv);\n\t\t\t\t\t\tviewInvR.mul2(transform, vrDisplay.rightViewInv);\n\t\t\t\t\t\tviewL.copy(viewInvL).invert();\n\t\t\t\t\t\tviewR.copy(viewInvR).invert();\n\t\t\t\t\t\tviewMat.copy(parent.getWorldTransform()).mul(vrDisplay.combinedViewInv).invert();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewInvL.copy(vrDisplay.leftViewInv);\n\t\t\t\t\t\tviewInvR.copy(vrDisplay.rightViewInv);\n\t\t\t\t\t\tviewL.copy(vrDisplay.leftView);\n\t\t\t\t\t\tviewR.copy(vrDisplay.rightView);\n\t\t\t\t\t\tviewMat.copy(vrDisplay.combinedView);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tviewMat3L.setFromMat4(viewL);\n\t\t\t\tviewMat3R.setFromMat4(viewR);\n\t\t\t\tviewProjMatL.mul2(projL, viewL);\n\t\t\t\tviewProjMatR.mul2(projR, viewR);\n\t\t\t\tviewPosL.x = viewInvL.data[12];\n\t\t\t\tviewPosL.y = viewInvL.data[13];\n\t\t\t\tviewPosL.z = viewInvL.data[14];\n\t\t\t\tviewPosR.x = viewInvR.data[12];\n\t\t\t\tviewPosR.y = viewInvR.data[13];\n\t\t\t\tviewPosR.z = viewInvR.data[14];\n\t\t\t\tviewProjMat.mul2(projMat, viewMat);\n\t\t\t\tcamera.frustum.setFromMat4(viewProjMat);\n\t\t\t} else if (camera.xr && camera.xr.session) {\n\t\t\t\tparent = camera._node.parent;\n\t\t\t\tif (parent) transform = parent.getWorldTransform();\n\t\t\t\tvar views = camera.xr.views;\n\n\t\t\t\tfor (var v = 0; v < views.length; v++) {\n\t\t\t\t\tvar view = views[v];\n\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tview.viewInvOffMat.mul2(transform, view.viewInvMat);\n\t\t\t\t\t\tview.viewOffMat.copy(view.viewInvOffMat).invert();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.viewInvOffMat.copy(view.viewInvMat);\n\t\t\t\t\t\tview.viewOffMat.copy(view.viewMat);\n\t\t\t\t\t}\n\n\t\t\t\t\tview.viewMat3.setFromMat4(view.viewOffMat);\n\t\t\t\t\tview.projViewOffMat.mul2(view.projMat, view.viewOffMat);\n\t\t\t\t\tview.position[0] = view.viewInvOffMat.data[12];\n\t\t\t\t\tview.position[1] = view.viewInvOffMat.data[13];\n\t\t\t\t\tview.position[2] = view.viewInvOffMat.data[14];\n\t\t\t\t\tcamera.frustum.setFromMat4(view.projViewOffMat);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprojMat = camera.projectionMatrix;\n\n\t\t\t\tif (camera.calculateProjection) {\n\t\t\t\t\tcamera.calculateProjection(projMat, VIEW_CENTER);\n\t\t\t\t}\n\n\t\t\t\tthis.projId.setValue(projMat.data);\n\t\t\t\tthis.projSkyboxId.setValue(camera.getProjectionMatrixSkybox().data);\n\n\t\t\t\tif (camera.calculateTransform) {\n\t\t\t\t\tcamera.calculateTransform(viewInvMat, VIEW_CENTER);\n\t\t\t\t} else {\n\t\t\t\t\tvar pos = camera._node.getPosition();\n\n\t\t\t\t\tvar rot = camera._node.getRotation();\n\n\t\t\t\t\tviewInvMat.setTRS(pos, rot, Vec3.ONE);\n\t\t\t\t}\n\n\t\t\t\tthis.viewInvId.setValue(viewInvMat.data);\n\t\t\t\tviewMat.copy(viewInvMat).invert();\n\t\t\t\tthis.viewId.setValue(viewMat.data);\n\t\t\t\tviewMat3.setFromMat4(viewMat);\n\t\t\t\tthis.viewId3.setValue(viewMat3.data);\n\t\t\t\tviewProjMat.mul2(projMat, viewMat);\n\t\t\t\tthis.viewProjId.setValue(viewProjMat.data);\n\n\t\t\t\tvar cameraPos = camera._node.getPosition();\n\n\t\t\t\tthis.viewPos[0] = cameraPos.x;\n\t\t\t\tthis.viewPos[1] = cameraPos.y;\n\t\t\t\tthis.viewPos[2] = cameraPos.z;\n\t\t\t\tthis.viewPosId.setValue(this.viewPos);\n\t\t\t\tcamera.frustum.setFromMat4(viewProjMat);\n\t\t\t}\n\n\t\t\tthis.nearClipId.setValue(camera._nearClip);\n\t\t\tthis.farClipId.setValue(camera._farClip);\n\t\t\tvar n = camera._nearClip;\n\t\t\tvar f = camera._farClip;\n\t\t\tthis.cameraParams[0] = 1 / f;\n\t\t\tthis.cameraParams[1] = f;\n\t\t\tthis.cameraParams[2] = (1 - f / n) * 0.5;\n\t\t\tthis.cameraParams[3] = (1 + f / n) * 0.5;\n\t\t\tthis.cameraParamsId.setValue(this.cameraParams);\n\t\t\tthis.clearView(camera, target, clear, false);\n\t\t\tvar device = this.device;\n\t\t\tvar pixelWidth = target ? target.width : device.width;\n\t\t\tvar pixelHeight = target ? target.height : device.height;\n\t\t\tvar scissorRect = camera.scissorRect;\n\t\t\tvar x = Math.floor(scissorRect.x * pixelWidth);\n\t\t\tvar y = Math.floor(scissorRect.y * pixelHeight);\n\t\t\tvar w = Math.floor(scissorRect.z * pixelWidth);\n\t\t\tvar h = Math.floor(scissorRect.w * pixelHeight);\n\t\t\tdevice.setScissor(x, y, w, h);\n\t\t\tif (cullBorder) device.setScissor(1, 1, pixelWidth - 2, pixelHeight - 2);\n\t\t};\n\n\t\t_proto.clearView = function clearView(camera, target, clear, forceWrite, options) {\n\t\t\tvar device = this.device;\n\t\t\tdevice.setRenderTarget(target);\n\t\t\tdevice.updateBegin();\n\n\t\t\tif (forceWrite) {\n\t\t\t\tdevice.setColorWrite(true, true, true, true);\n\t\t\t\tdevice.setDepthWrite(true);\n\t\t\t}\n\n\t\t\tvar rect = camera.rect;\n\t\t\tvar pixelWidth = target ? target.width : device.width;\n\t\t\tvar pixelHeight = target ? target.height : device.height;\n\t\t\tvar x = Math.floor(rect.x * pixelWidth);\n\t\t\tvar y = Math.floor(rect.y * pixelHeight);\n\t\t\tvar w = Math.floor(rect.z * pixelWidth);\n\t\t\tvar h = Math.floor(rect.w * pixelHeight);\n\t\t\tdevice.setViewport(x, y, w, h);\n\t\t\tdevice.setScissor(x, y, w, h);\n\n\t\t\tif (clear) {\n\t\t\t\tif (!options) options = camera._clearOptions;\n\t\t\t\tdevice.clear(options ? options : {\n\t\t\t\t\tcolor: [camera._clearColor.r, camera._clearColor.g, camera._clearColor.b, camera._clearColor.a],\n\t\t\t\t\tdepth: camera._clearDepth,\n\t\t\t\t\tflags: (camera._clearColorBuffer ? CLEARFLAG_COLOR : 0) | (camera._clearDepthBuffer ? CLEARFLAG_DEPTH : 0) | (camera._clearStencilBuffer ? CLEARFLAG_STENCIL : 0),\n\t\t\t\t\tstencil: camera._clearStencil\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto.dispatchGlobalLights = function dispatchGlobalLights(scene) {\n\t\t\tvar i;\n\t\t\tthis.mainLight = -1;\n\t\t\tthis.ambientColor[0] = scene.ambientLight.r;\n\t\t\tthis.ambientColor[1] = scene.ambientLight.g;\n\t\t\tthis.ambientColor[2] = scene.ambientLight.b;\n\n\t\t\tif (scene.gammaCorrection) {\n\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\tthis.ambientColor[i] = Math.pow(this.ambientColor[i], 2.2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.ambientId.setValue(this.ambientColor);\n\t\t\tthis.exposureId.setValue(scene.exposure);\n\t\t\tif (scene.skyboxModel) this.skyboxIntensityId.setValue(scene.skyboxIntensity);\n\t\t};\n\n\t\t_proto._resolveLight = function _resolveLight(scope, i) {\n\t\t\tvar light = \"light\" + i;\n\t\t\tthis.lightColorId[i] = scope.resolve(light + \"_color\");\n\t\t\tthis.lightDir[i] = new Float32Array(3);\n\t\t\tthis.lightDirId[i] = scope.resolve(light + \"_direction\");\n\t\t\tthis.lightShadowMapId[i] = scope.resolve(light + \"_shadowMap\");\n\t\t\tthis.lightShadowMatrixId[i] = scope.resolve(light + \"_shadowMatrix\");\n\t\t\tthis.lightShadowParamsId[i] = scope.resolve(light + \"_shadowParams\");\n\t\t\tthis.lightShadowMatrixVsId[i] = scope.resolve(light + \"_shadowMatrixVS\");\n\t\t\tthis.lightShadowParamsVsId[i] = scope.resolve(light + \"_shadowParamsVS\");\n\t\t\tthis.lightDirVs[i] = new Float32Array(3);\n\t\t\tthis.lightDirVsId[i] = scope.resolve(light + \"_directionVS\");\n\t\t\tthis.lightRadiusId[i] = scope.resolve(light + \"_radius\");\n\t\t\tthis.lightPos[i] = new Float32Array(3);\n\t\t\tthis.lightPosId[i] = scope.resolve(light + \"_position\");\n\t\t\tthis.lightWidth[i] = new Float32Array(3);\n\t\t\tthis.lightWidthId[i] = scope.resolve(light + \"_halfWidth\");\n\t\t\tthis.lightHeight[i] = new Float32Array(3);\n\t\t\tthis.lightHeightId[i] = scope.resolve(light + \"_halfHeight\");\n\t\t\tthis.lightInAngleId[i] = scope.resolve(light + \"_innerConeAngle\");\n\t\t\tthis.lightOutAngleId[i] = scope.resolve(light + \"_outerConeAngle\");\n\t\t\tthis.lightPosVsId[i] = scope.resolve(light + \"_positionVS\");\n\t\t\tthis.lightCookieId[i] = scope.resolve(light + \"_cookie\");\n\t\t\tthis.lightCookieIntId[i] = scope.resolve(light + \"_cookieIntensity\");\n\t\t\tthis.lightCookieMatrixId[i] = scope.resolve(light + \"_cookieMatrix\");\n\t\t\tthis.lightCookieOffsetId[i] = scope.resolve(light + \"_cookieOffset\");\n\t\t};\n\n\t\t_proto.setLTCDirectionallLight = function setLTCDirectionallLight(wtm, cnt, dir, campos, far) {\n\t\t\tthis.lightPos[cnt][0] = campos.x - dir.x * far;\n\t\t\tthis.lightPos[cnt][1] = campos.y - dir.y * far;\n\t\t\tthis.lightPos[cnt][2] = campos.z - dir.z * far;\n\t\t\tthis.lightPosId[cnt].setValue(this.lightPos[cnt]);\n\t\t\tvar hWidth = wtm.transformVector(new Vec3(-0.5, 0, 0));\n\t\t\tthis.lightWidth[cnt][0] = hWidth.x * far;\n\t\t\tthis.lightWidth[cnt][1] = hWidth.y * far;\n\t\t\tthis.lightWidth[cnt][2] = hWidth.z * far;\n\t\t\tthis.lightWidthId[cnt].setValue(this.lightWidth[cnt]);\n\t\t\tvar hHeight = wtm.transformVector(new Vec3(0, 0, 0.5));\n\t\t\tthis.lightHeight[cnt][0] = hHeight.x * far;\n\t\t\tthis.lightHeight[cnt][1] = hHeight.y * far;\n\t\t\tthis.lightHeight[cnt][2] = hHeight.z * far;\n\t\t\tthis.lightHeightId[cnt].setValue(this.lightHeight[cnt]);\n\t\t};\n\n\t\t_proto.dispatchDirectLights = function dispatchDirectLights(dirs, scene, mask, camera) {\n\t\t\tvar numDirs = dirs.length;\n\t\t\tvar i;\n\t\t\tvar directional, wtm;\n\t\t\tvar cnt = 0;\n\t\t\tthis.mainLight = -1;\n\t\t\tvar scope = this.device.scope;\n\n\t\t\tfor (i = 0; i < numDirs; i++) {\n\t\t\t\tif (!(dirs[i].mask & mask)) continue;\n\t\t\t\tdirectional = dirs[i];\n\t\t\t\twtm = directional._node.getWorldTransform();\n\n\t\t\t\tif (!this.lightColorId[cnt]) {\n\t\t\t\t\tthis._resolveLight(scope, cnt);\n\t\t\t\t}\n\n\t\t\t\tthis.lightColorId[cnt].setValue(scene.gammaCorrection ? directional._linearFinalColor : directional._finalColor);\n\t\t\t\twtm.getY(directional._direction).scale(-1);\n\n\t\t\t\tdirectional._direction.normalize();\n\n\t\t\t\tthis.lightDir[cnt][0] = directional._direction.x;\n\t\t\t\tthis.lightDir[cnt][1] = directional._direction.y;\n\t\t\t\tthis.lightDir[cnt][2] = directional._direction.z;\n\t\t\t\tthis.lightDirId[cnt].setValue(this.lightDir[cnt]);\n\n\t\t\t\tif (directional.shape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\tthis.setLTCDirectionallLight(wtm, cnt, directional._direction, camera._node.getPosition(), camera.farClip);\n\t\t\t\t}\n\n\t\t\t\tif (directional.castShadows) {\n\t\t\t\t\tvar shadowMap = directional._isPcf && this.device.webgl2 ? directional._shadowCamera.renderTarget.depthBuffer : directional._shadowCamera.renderTarget.colorBuffer;\n\t\t\t\t\tvar bias;\n\n\t\t\t\t\tif (directional._isVsm) {\n\t\t\t\t\t\tbias = -0.00001 * 20;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbias = directional.shadowBias / directional._shadowCamera._farClip * 100;\n\t\t\t\t\t\tif (!this.device.webgl2 && this.device.extStandardDerivatives) bias *= -100;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar normalBias = directional._isVsm ? directional.vsmBias / (directional._shadowCamera._farClip / 7.0) : directional._normalOffsetBias;\n\t\t\t\t\tthis.lightShadowMapId[cnt].setValue(shadowMap);\n\t\t\t\t\tthis.lightShadowMatrixId[cnt].setValue(directional._shadowMatrix.data);\n\t\t\t\t\tvar params = directional._rendererParams;\n\t\t\t\t\tif (params.length !== 3) params.length = 3;\n\t\t\t\t\tparams[0] = directional._shadowResolution;\n\t\t\t\t\tparams[1] = normalBias;\n\t\t\t\t\tparams[2] = bias;\n\t\t\t\t\tthis.lightShadowParamsId[cnt].setValue(params);\n\n\t\t\t\t\tif (this.mainLight < 0) {\n\t\t\t\t\t\tthis.lightShadowMatrixVsId[cnt].setValue(directional._shadowMatrix.data);\n\t\t\t\t\t\tthis.lightShadowParamsVsId[cnt].setValue(params);\n\n\t\t\t\t\t\tdirectional._direction.normalize();\n\n\t\t\t\t\t\tthis.lightDirVs[cnt][0] = directional._direction.x;\n\t\t\t\t\t\tthis.lightDirVs[cnt][1] = directional._direction.y;\n\t\t\t\t\t\tthis.lightDirVs[cnt][2] = directional._direction.z;\n\t\t\t\t\t\tthis.lightDirVsId[cnt].setValue(this.lightDirVs[cnt]);\n\t\t\t\t\t\tthis.mainLight = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcnt++;\n\t\t\t}\n\n\t\t\treturn cnt;\n\t\t};\n\n\t\t_proto.setLTCPositionalLight = function setLTCPositionalLight(wtm, cnt) {\n\t\t\tvar hWidth = wtm.transformVector(new Vec3(-0.5, 0, 0));\n\t\t\tthis.lightWidth[cnt][0] = hWidth.x;\n\t\t\tthis.lightWidth[cnt][1] = hWidth.y;\n\t\t\tthis.lightWidth[cnt][2] = hWidth.z;\n\t\t\tthis.lightWidthId[cnt].setValue(this.lightWidth[cnt]);\n\t\t\tvar hHeight = wtm.transformVector(new Vec3(0, 0, 0.5));\n\t\t\tthis.lightHeight[cnt][0] = hHeight.x;\n\t\t\tthis.lightHeight[cnt][1] = hHeight.y;\n\t\t\tthis.lightHeight[cnt][2] = hHeight.z;\n\t\t\tthis.lightHeightId[cnt].setValue(this.lightHeight[cnt]);\n\t\t};\n\n\t\t_proto.dispatchOmniLight = function dispatchOmniLight(scene, scope, omni, cnt) {\n\t\t\tvar wtm = omni._node.getWorldTransform();\n\n\t\t\tif (!this.lightColorId[cnt]) {\n\t\t\t\tthis._resolveLight(scope, cnt);\n\t\t\t}\n\n\t\t\tthis.lightRadiusId[cnt].setValue(omni.attenuationEnd);\n\t\t\tthis.lightColorId[cnt].setValue(scene.gammaCorrection ? omni._linearFinalColor : omni._finalColor);\n\t\t\twtm.getTranslation(omni._position);\n\t\t\tthis.lightPos[cnt][0] = omni._position.x;\n\t\t\tthis.lightPos[cnt][1] = omni._position.y;\n\t\t\tthis.lightPos[cnt][2] = omni._position.z;\n\t\t\tthis.lightPosId[cnt].setValue(this.lightPos[cnt]);\n\n\t\t\tif (omni.shape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\tthis.setLTCPositionalLight(wtm, cnt);\n\t\t\t}\n\n\t\t\tif (omni.castShadows) {\n\t\t\t\tvar shadowMap = omni._shadowCamera.renderTarget.colorBuffer;\n\t\t\t\tthis.lightShadowMapId[cnt].setValue(shadowMap);\n\t\t\t\tvar params = omni._rendererParams;\n\t\t\t\tif (params.length !== 4) params.length = 4;\n\t\t\t\tparams[0] = omni._shadowResolution;\n\t\t\t\tparams[1] = omni._normalOffsetBias;\n\t\t\t\tparams[2] = omni.shadowBias;\n\t\t\t\tparams[3] = 1.0 / omni.attenuationEnd;\n\t\t\t\tthis.lightShadowParamsId[cnt].setValue(params);\n\t\t\t}\n\n\t\t\tif (omni._cookie) {\n\t\t\t\tthis.lightCookieId[cnt].setValue(omni._cookie);\n\t\t\t\tthis.lightShadowMatrixId[cnt].setValue(wtm.data);\n\t\t\t\tthis.lightCookieIntId[cnt].setValue(omni.cookieIntensity);\n\t\t\t}\n\t\t};\n\n\t\t_proto.dispatchSpotLight = function dispatchSpotLight(scene, scope, spot, cnt) {\n\t\t\tvar wtm = spot._node.getWorldTransform();\n\n\t\t\tif (!this.lightColorId[cnt]) {\n\t\t\t\tthis._resolveLight(scope, cnt);\n\t\t\t}\n\n\t\t\tthis.lightInAngleId[cnt].setValue(spot._innerConeAngleCos);\n\t\t\tthis.lightOutAngleId[cnt].setValue(spot._outerConeAngleCos);\n\t\t\tthis.lightRadiusId[cnt].setValue(spot.attenuationEnd);\n\t\t\tthis.lightColorId[cnt].setValue(scene.gammaCorrection ? spot._linearFinalColor : spot._finalColor);\n\t\t\twtm.getTranslation(spot._position);\n\t\t\tthis.lightPos[cnt][0] = spot._position.x;\n\t\t\tthis.lightPos[cnt][1] = spot._position.y;\n\t\t\tthis.lightPos[cnt][2] = spot._position.z;\n\t\t\tthis.lightPosId[cnt].setValue(this.lightPos[cnt]);\n\n\t\t\tif (spot.shape !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\tthis.setLTCPositionalLight(wtm, cnt);\n\t\t\t}\n\n\t\t\twtm.getY(spot._direction).scale(-1);\n\n\t\t\tspot._direction.normalize();\n\n\t\t\tthis.lightDir[cnt][0] = spot._direction.x;\n\t\t\tthis.lightDir[cnt][1] = spot._direction.y;\n\t\t\tthis.lightDir[cnt][2] = spot._direction.z;\n\t\t\tthis.lightDirId[cnt].setValue(this.lightDir[cnt]);\n\n\t\t\tif (spot.castShadows) {\n\t\t\t\tvar bias;\n\n\t\t\t\tif (spot._isVsm) {\n\t\t\t\t\tbias = -0.00001 * 20;\n\t\t\t\t} else {\n\t\t\t\t\tbias = spot.shadowBias * 20;\n\t\t\t\t\tif (!this.device.webgl2 && this.device.extStandardDerivatives) bias *= -100;\n\t\t\t\t}\n\n\t\t\t\tvar normalBias = spot._isVsm ? spot.vsmBias / (spot.attenuationEnd / 7.0) : spot._normalOffsetBias;\n\t\t\t\tvar shadowMap = spot._isPcf && this.device.webgl2 ? spot._shadowCamera.renderTarget.depthBuffer : spot._shadowCamera.renderTarget.colorBuffer;\n\t\t\t\tthis.lightShadowMapId[cnt].setValue(shadowMap);\n\t\t\t\tthis.lightShadowMatrixId[cnt].setValue(spot._shadowMatrix.data);\n\t\t\t\tvar params = spot._rendererParams;\n\t\t\t\tif (params.length !== 4) params.length = 4;\n\t\t\t\tparams[0] = spot._shadowResolution;\n\t\t\t\tparams[1] = normalBias;\n\t\t\t\tparams[2] = bias;\n\t\t\t\tparams[3] = 1.0 / spot.attenuationEnd;\n\t\t\t\tthis.lightShadowParamsId[cnt].setValue(params);\n\t\t\t}\n\n\t\t\tif (spot._cookie) {\n\t\t\t\tthis.lightCookieId[cnt].setValue(spot._cookie);\n\n\t\t\t\tif (!spot.castShadows) {\n\t\t\t\t\tvar shadowCam = this.getShadowCamera(this.device, spot);\n\t\t\t\t\tvar shadowCamNode = shadowCam._node;\n\t\t\t\t\tshadowCamNode.setPosition(spot._node.getPosition());\n\t\t\t\t\tshadowCamNode.setRotation(spot._node.getRotation());\n\t\t\t\t\tshadowCamNode.rotateLocal(-90, 0, 0);\n\t\t\t\t\tshadowCam.projection = PROJECTION_PERSPECTIVE;\n\t\t\t\t\tshadowCam.aspectRatio = 1;\n\t\t\t\t\tshadowCam.fov = spot._outerConeAngle * 2;\n\t\t\t\t\tshadowCamView.setTRS(shadowCamNode.getPosition(), shadowCamNode.getRotation(), Vec3.ONE).invert();\n\t\t\t\t\tshadowCamViewProj.mul2(shadowCam.projectionMatrix, shadowCamView);\n\n\t\t\t\t\tspot._shadowMatrix.mul2(scaleShift, shadowCamViewProj);\n\t\t\t\t}\n\n\t\t\t\tthis.lightShadowMatrixId[cnt].setValue(spot._shadowMatrix.data);\n\t\t\t\tthis.lightCookieIntId[cnt].setValue(spot.cookieIntensity);\n\n\t\t\t\tif (spot._cookieTransform) {\n\t\t\t\t\tspot._cookieTransformUniform[0] = spot._cookieTransform.x;\n\t\t\t\t\tspot._cookieTransformUniform[1] = spot._cookieTransform.y;\n\t\t\t\t\tspot._cookieTransformUniform[2] = spot._cookieTransform.z;\n\t\t\t\t\tspot._cookieTransformUniform[3] = spot._cookieTransform.w;\n\t\t\t\t\tthis.lightCookieMatrixId[cnt].setValue(spot._cookieTransformUniform);\n\t\t\t\t\tspot._cookieOffsetUniform[0] = spot._cookieOffset.x;\n\t\t\t\t\tspot._cookieOffsetUniform[1] = spot._cookieOffset.y;\n\t\t\t\t\tthis.lightCookieOffsetId[cnt].setValue(spot._cookieOffsetUniform);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.dispatchLocalLights = function dispatchLocalLights(sortedLights, scene, mask, usedDirLights, staticLightList) {\n\t\t\tvar i;\n\t\t\tvar omni, spot;\n\t\t\tvar omnis = sortedLights[LIGHTTYPE_OMNI];\n\t\t\tvar spts = sortedLights[LIGHTTYPE_SPOT];\n\t\t\tvar numDirs = usedDirLights;\n\t\t\tvar numOmnis = omnis.length;\n\t\t\tvar numSpts = spts.length;\n\t\t\tvar cnt = numDirs;\n\t\t\tvar scope = this.device.scope;\n\n\t\t\tfor (i = 0; i < numOmnis; i++) {\n\t\t\t\tomni = omnis[i];\n\t\t\t\tif (!(omni.mask & mask)) continue;\n\t\t\t\tif (omni.isStatic) continue;\n\t\t\t\tthis.dispatchOmniLight(scene, scope, omni, cnt);\n\t\t\t\tcnt++;\n\t\t\t}\n\n\t\t\tvar staticId = 0;\n\n\t\t\tif (staticLightList) {\n\t\t\t\tomni = staticLightList[staticId];\n\n\t\t\t\twhile (omni && omni._type === LIGHTTYPE_OMNI) {\n\t\t\t\t\tthis.dispatchOmniLight(scene, scope, omni, cnt);\n\t\t\t\t\tcnt++;\n\t\t\t\t\tstaticId++;\n\t\t\t\t\tomni = staticLightList[staticId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < numSpts; i++) {\n\t\t\t\tspot = spts[i];\n\t\t\t\tif (!(spot.mask & mask)) continue;\n\t\t\t\tif (spot.isStatic) continue;\n\t\t\t\tthis.dispatchSpotLight(scene, scope, spot, cnt);\n\t\t\t\tcnt++;\n\t\t\t}\n\n\t\t\tif (staticLightList) {\n\t\t\t\tspot = staticLightList[staticId];\n\n\t\t\t\twhile (spot && spot._type === LIGHTTYPE_SPOT) {\n\t\t\t\t\tthis.dispatchSpotLight(scene, scope, spot, cnt);\n\t\t\t\t\tcnt++;\n\t\t\t\t\tstaticId++;\n\t\t\t\t\tspot = staticLightList[staticId];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.cull = function cull(camera, drawCalls, visibleList) {\n\t\t\tvar visibleLength = 0;\n\t\t\tvar i, drawCall, visible;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\t\t\tvar cullingMask = camera.cullingMask || 0xFFFFFFFF;\n\n\t\t\tif (!camera.frustumCulling) {\n\t\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\t\tdrawCall = drawCalls[i];\n\t\t\t\t\tif (!drawCall.visible && !drawCall.command) continue;\n\t\t\t\t\tif (drawCall.mask && (drawCall.mask & cullingMask) === 0) continue;\n\t\t\t\t\tvisibleList[visibleLength] = drawCall;\n\t\t\t\t\tvisibleLength++;\n\t\t\t\t\tdrawCall.visibleThisFrame = true;\n\t\t\t\t}\n\n\t\t\t\treturn visibleLength;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tdrawCall = drawCalls[i];\n\n\t\t\t\tif (!drawCall.command) {\n\t\t\t\t\tif (!drawCall.visible) continue;\n\t\t\t\t\tvisible = true;\n\t\t\t\t\tif (drawCall.mask && (drawCall.mask & cullingMask) === 0) continue;\n\n\t\t\t\t\tif (drawCall.cull) {\n\t\t\t\t\t\tvisible = drawCall._isVisible(camera);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (visible) {\n\t\t\t\t\t\tvisibleList[visibleLength] = drawCall;\n\t\t\t\t\t\tvisibleLength++;\n\t\t\t\t\t\tdrawCall.visibleThisFrame = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvisibleList[visibleLength] = drawCall;\n\t\t\t\t\tvisibleLength++;\n\t\t\t\t\tdrawCall.visibleThisFrame = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visibleLength;\n\t\t};\n\n\t\t_proto.cullLights = function cullLights(camera, lights) {\n\t\t\tvar i, light;\n\n\t\t\tfor (i = 0; i < lights.length; i++) {\n\t\t\t\tlight = lights[i];\n\n\t\t\t\tif (light.castShadows && light.enabled && light.shadowUpdateMode !== SHADOWUPDATE_NONE) {\n\t\t\t\t\tif (light._type !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tlight.getBoundingSphere(tempSphere);\n\n\t\t\t\t\t\tif (camera.frustum.containsSphere(tempSphere)) {\n\t\t\t\t\t\t\tlight.visibleThisFrame = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateCpuSkinMatrices = function updateCpuSkinMatrices(drawCalls) {\n\t\t\t_skinUpdateIndex++;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\t\t\tif (drawCallsCount === 0) return;\n\t\t\tvar i, si;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tsi = drawCalls[i].skinInstance;\n\n\t\t\t\tif (si) {\n\t\t\t\t\tsi.updateMatrices(drawCalls[i].node, _skinUpdateIndex);\n\t\t\t\t\tsi._dirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateGpuSkinMatrices = function updateGpuSkinMatrices(drawCalls) {\n\t\t\tvar i, skin;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tif (!drawCalls[i].visibleThisFrame) continue;\n\t\t\t\tskin = drawCalls[i].skinInstance;\n\n\t\t\t\tif (skin) {\n\t\t\t\t\tif (skin._dirty) {\n\t\t\t\t\t\tskin.updateMatrixPalette(drawCalls[i].node, _skinUpdateIndex);\n\t\t\t\t\t\tskin._dirty = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateMorphing = function updateMorphing(drawCalls) {\n\t\t\tvar i, morphInst;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tmorphInst = drawCalls[i].morphInstance;\n\n\t\t\t\tif (morphInst && morphInst._dirty && drawCalls[i].visibleThisFrame) {\n\t\t\t\t\tmorphInst.update();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setBaseConstants = function setBaseConstants(device, material) {\n\t\t\tdevice.setCullMode(material.cull);\n\n\t\t\tif (material.opacityMap) {\n\t\t\t\tthis.opacityMapId.setValue(material.opacityMap);\n\t\t\t\tthis.alphaTestId.setValue(material.alphaTest);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setSkinning = function setSkinning(device, meshInstance, material) {\n\t\t\tif (meshInstance.skinInstance) {\n\t\t\t\tthis._skinDrawCalls++;\n\n\t\t\t\tif (device.supportsBoneTextures) {\n\t\t\t\t\tboneTexture = meshInstance.skinInstance.boneTexture;\n\t\t\t\t\tthis.boneTextureId.setValue(boneTexture);\n\t\t\t\t\tboneTextureSize[0] = boneTexture.width;\n\t\t\t\t\tboneTextureSize[1] = boneTexture.height;\n\t\t\t\t\tboneTextureSize[2] = 1.0 / boneTexture.width;\n\t\t\t\t\tboneTextureSize[3] = 1.0 / boneTexture.height;\n\t\t\t\t\tthis.boneTextureSizeId.setValue(boneTextureSize);\n\t\t\t\t} else {\n\t\t\t\t\tthis.poseMatrixId.setValue(meshInstance.skinInstance.matrixPalette);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.drawInstance = function drawInstance(device, meshInstance, mesh, style, normal) {\n\t\t\tinstancingData = meshInstance.instancingData;\n\n\t\t\tif (instancingData) {\n\t\t\t\tif (instancingData.count > 0) {\n\t\t\t\t\tthis._instancedDrawCalls++;\n\t\t\t\t\tdevice.setVertexBuffer(instancingData.vertexBuffer);\n\t\t\t\t\tdevice.draw(mesh.primitive[style], instancingData.count);\n\n\t\t\t\t\tif (instancingData.vertexBuffer === _autoInstanceBuffer) {\n\t\t\t\t\t\tthis._removedByInstancing += instancingData.count;\n\t\t\t\t\t\tmeshInstance.instancingData = null;\n\t\t\t\t\t\treturn instancingData.count - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodelMatrix = meshInstance.node.worldTransform;\n\t\t\t\tthis.modelMatrixId.setValue(modelMatrix.data);\n\n\t\t\t\tif (normal) {\n\t\t\t\t\tnormalMatrix = meshInstance.node.normalMatrix;\n\n\t\t\t\t\tif (meshInstance.node._dirtyNormal) {\n\t\t\t\t\t\tmodelMatrix.invertTo3x3(normalMatrix);\n\t\t\t\t\t\tnormalMatrix.transpose();\n\t\t\t\t\t\tmeshInstance.node._dirtyNormal = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.normalMatrixId.setValue(normalMatrix.data);\n\t\t\t\t}\n\n\t\t\t\tdevice.draw(mesh.primitive[style]);\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\n\t\t_proto.drawInstance2 = function drawInstance2(device, meshInstance, mesh, style) {\n\t\t\tinstancingData = meshInstance.instancingData;\n\n\t\t\tif (instancingData) {\n\t\t\t\tif (instancingData.count > 0) {\n\t\t\t\t\tthis._instancedDrawCalls++;\n\t\t\t\t\tdevice.draw(mesh.primitive[style], instancingData.count, true);\n\n\t\t\t\t\tif (instancingData.vertexBuffer === _autoInstanceBuffer) {\n\t\t\t\t\t\tthis._removedByInstancing += instancingData.count;\n\t\t\t\t\t\tmeshInstance.instancingData = null;\n\t\t\t\t\t\treturn instancingData.count - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdevice.draw(mesh.primitive[style], undefined, true);\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\n\t\t_proto.renderShadows = function renderShadows(lights, cameraPass) {\n\t\t\tvar device = this.device;\n\t\t\tdevice.grabPassAvailable = false;\n\t\t\tvar i, j, light, shadowShader, type, shadowCam, shadowCamNode, pass, passes, shadowType, smode;\n\t\t\tvar numInstances;\n\t\t\tvar meshInstance, mesh, material;\n\t\t\tvar style;\n\t\t\tvar settings;\n\t\t\tvar visibleList, visibleLength;\n\t\t\tvar passFlag = 1 << SHADER_SHADOW;\n\n\t\t\tfor (i = 0; i < lights.length; i++) {\n\t\t\t\tlight = lights[i];\n\t\t\t\ttype = light._type;\n\t\t\t\tif (!light.castShadows || !light.enabled) continue;\n\n\t\t\t\tif (!light._shadowCamera) {\n\t\t\t\t\tthis.getShadowCamera(device, light);\n\t\t\t\t}\n\n\t\t\t\tif (light.shadowUpdateMode !== SHADOWUPDATE_NONE && light.visibleThisFrame) {\n\t\t\t\t\tvar cameraPos;\n\t\t\t\t\tshadowCam = this.getShadowCamera(device, light);\n\t\t\t\t\tshadowCamNode = shadowCam._node;\n\t\t\t\t\tpass = 0;\n\t\t\t\t\tpasses = 1;\n\n\t\t\t\t\tif (type === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tif (light._visibleLength[cameraPass] < 0) continue;\n\t\t\t\t\t\tsettings = light._visibleCameraSettings[cameraPass];\n\t\t\t\t\t\tshadowCamNode.setPosition(settings.x, settings.y, settings.z);\n\t\t\t\t\t\tshadowCam.orthoHeight = settings.orthoHeight;\n\t\t\t\t\t\tshadowCam.farClip = settings.farClip;\n\t\t\t\t\t\tpass = cameraPass;\n\t\t\t\t\t} else if (type === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\tcameraPos = shadowCamNode.getPosition();\n\t\t\t\t\t\tthis.viewPos[0] = cameraPos.x;\n\t\t\t\t\t\tthis.viewPos[1] = cameraPos.y;\n\t\t\t\t\t\tthis.viewPos[2] = cameraPos.z;\n\t\t\t\t\t\tthis.viewPosId.setValue(this.viewPos);\n\t\t\t\t\t\tthis.shadowMapLightRadiusId.setValue(light.attenuationEnd);\n\t\t\t\t\t} else if (type === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\tcameraPos = shadowCamNode.getPosition();\n\t\t\t\t\t\tthis.viewPos[0] = cameraPos.x;\n\t\t\t\t\t\tthis.viewPos[1] = cameraPos.y;\n\t\t\t\t\t\tthis.viewPos[2] = cameraPos.z;\n\t\t\t\t\t\tthis.viewPosId.setValue(this.viewPos);\n\t\t\t\t\t\tthis.shadowMapLightRadiusId.setValue(light.attenuationEnd);\n\t\t\t\t\t\tpasses = 6;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type !== LIGHTTYPE_OMNI) {\n\t\t\t\t\t\tshadowCamView.setTRS(shadowCamNode.getPosition(), shadowCamNode.getRotation(), Vec3.ONE).invert();\n\t\t\t\t\t\tshadowCamViewProj.mul2(shadowCam.projectionMatrix, shadowCamView);\n\n\t\t\t\t\t\tlight._shadowMatrix.mul2(scaleShift, shadowCamViewProj);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (device.webgl2) {\n\t\t\t\t\t\tif (type === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\tdevice.setDepthBias(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdevice.setDepthBias(true);\n\t\t\t\t\t\t\tdevice.setDepthBiasValues(light.shadowBias * -1000.0, light.shadowBias * -1000.0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (device.extStandardDerivatives) {\n\t\t\t\t\t\tif (type === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\tthis.polygonOffset[0] = 0;\n\t\t\t\t\t\t\tthis.polygonOffset[1] = 0;\n\t\t\t\t\t\t\tthis.polygonOffsetId.setValue(this.polygonOffset);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.polygonOffset[0] = light.shadowBias * -1000.0;\n\t\t\t\t\t\t\tthis.polygonOffset[1] = light.shadowBias * -1000.0;\n\t\t\t\t\t\t\tthis.polygonOffsetId.setValue(this.polygonOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (light.shadowUpdateMode === SHADOWUPDATE_THISFRAME) light.shadowUpdateMode = SHADOWUPDATE_NONE;\n\t\t\t\t\tthis._shadowMapUpdates += passes;\n\t\t\t\t\tdevice.setBlending(false);\n\t\t\t\t\tdevice.setDepthWrite(true);\n\t\t\t\t\tdevice.setDepthTest(true);\n\n\t\t\t\t\tif (light._isPcf && device.webgl2 && type !== LIGHTTYPE_OMNI) {\n\t\t\t\t\t\tdevice.setColorWrite(false, false, false, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdevice.setColorWrite(true, true, true, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pass) {\n\t\t\t\t\t\tpasses = pass + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpass = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (pass < passes) {\n\t\t\t\t\t\tif (type === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\tshadowCamNode.setRotation(pointLightRotations[pass]);\n\t\t\t\t\t\t\tshadowCam.renderTarget = light._shadowCubeMap[pass];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.setCamera(shadowCam, shadowCam.renderTarget, true, type !== LIGHTTYPE_OMNI);\n\t\t\t\t\t\tvisibleList = light._visibleList[pass];\n\t\t\t\t\t\tvisibleLength = light._visibleLength[pass];\n\t\t\t\t\t\tshadowType = light._shadowType;\n\t\t\t\t\t\tsmode = shadowType + type * numShadowModes;\n\n\t\t\t\t\t\tfor (j = 0, numInstances = visibleLength; j < numInstances; j++) {\n\t\t\t\t\t\t\tmeshInstance = visibleList[j];\n\t\t\t\t\t\t\tmesh = meshInstance.mesh;\n\t\t\t\t\t\t\tmaterial = meshInstance.material;\n\t\t\t\t\t\t\tthis.setBaseConstants(device, material);\n\t\t\t\t\t\t\tthis.setSkinning(device, meshInstance, material);\n\n\t\t\t\t\t\t\tif (material.dirty) {\n\t\t\t\t\t\t\t\tmaterial.updateUniforms();\n\t\t\t\t\t\t\t\tmaterial.dirty = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (material.chunks) {\n\t\t\t\t\t\t\t\tthis.setCullMode(true, false, meshInstance);\n\t\t\t\t\t\t\t\tmaterial.setParameters(device);\n\t\t\t\t\t\t\t\tmeshInstance.setParameters(device, passFlag);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tshadowShader = meshInstance._shader[SHADER_SHADOW + smode];\n\n\t\t\t\t\t\t\tif (!shadowShader) {\n\t\t\t\t\t\t\t\tthis.updateShader(meshInstance, meshInstance._shaderDefs, null, SHADER_SHADOW + smode);\n\t\t\t\t\t\t\t\tshadowShader = meshInstance._shader[SHADER_SHADOW + smode];\n\t\t\t\t\t\t\t\tmeshInstance._key[SORTKEY_DEPTH] = getDepthKey(meshInstance);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdevice.setShader(shadowShader);\n\t\t\t\t\t\t\tstyle = meshInstance.renderStyle;\n\t\t\t\t\t\t\tthis.setVertexBuffers(device, mesh);\n\t\t\t\t\t\t\tthis.setMorphing(device, meshInstance.morphInstance);\n\t\t\t\t\t\t\tdevice.setIndexBuffer(mesh.indexBuffer[style]);\n\t\t\t\t\t\t\tj += this.drawInstance(device, meshInstance, mesh, style);\n\t\t\t\t\t\t\tthis._shadowDrawCalls++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpass++;\n\t\t\t\t\t\tif (type === LIGHTTYPE_DIRECTIONAL) light._visibleLength[cameraPass] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (light._isVsm) {\n\t\t\t\t\t\tvar filterSize = light._vsmBlurSize;\n\n\t\t\t\t\t\tif (filterSize > 1) {\n\t\t\t\t\t\t\tvar origShadowMap = shadowCam.renderTarget;\n\t\t\t\t\t\t\tvar tempRt = getShadowMapFromCache(device, light._shadowResolution, light._shadowType, 1);\n\t\t\t\t\t\t\tvar isVsm8 = light._shadowType === SHADOW_VSM8;\n\t\t\t\t\t\t\tvar blurMode = light.vsmBlurMode;\n\t\t\t\t\t\t\tvar blurShader = (isVsm8 ? this.blurPackedVsmShader : this.blurVsmShader)[blurMode][filterSize];\n\n\t\t\t\t\t\t\tif (!blurShader) {\n\t\t\t\t\t\t\t\tthis.blurVsmWeights[filterSize] = gaussWeights(filterSize);\n\t\t\t\t\t\t\t\tvar blurVS = shaderChunks.fullscreenQuadVS;\n\t\t\t\t\t\t\t\tvar blurFS = \"#define SAMPLES \" + filterSize + \"\\n\";\n\n\t\t\t\t\t\t\t\tif (isVsm8) {\n\t\t\t\t\t\t\t\t\tblurFS += this.blurPackedVsmShaderCode[blurMode];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tblurFS += this.blurVsmShaderCode[blurMode];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar blurShaderName = \"blurVsm\" + blurMode + \"\" + filterSize + \"\" + isVsm8;\n\t\t\t\t\t\t\t\tblurShader = createShaderFromCode(this.device, blurVS, blurFS, blurShaderName);\n\n\t\t\t\t\t\t\t\tif (isVsm8) {\n\t\t\t\t\t\t\t\t\tthis.blurPackedVsmShader[blurMode][filterSize] = blurShader;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.blurVsmShader[blurMode][filterSize] = blurShader;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tblurScissorRect.z = light._shadowResolution - 2;\n\t\t\t\t\t\t\tblurScissorRect.w = blurScissorRect.z;\n\t\t\t\t\t\t\tthis.sourceId.setValue(origShadowMap.colorBuffer);\n\t\t\t\t\t\t\tpixelOffset[0] = 1 / light._shadowResolution;\n\t\t\t\t\t\t\tpixelOffset[1] = 0;\n\t\t\t\t\t\t\tthis.pixelOffsetId.setValue(pixelOffset);\n\t\t\t\t\t\t\tif (blurMode === BLUR_GAUSSIAN) this.weightId.setValue(this.blurVsmWeights[filterSize]);\n\t\t\t\t\t\t\tdrawQuadWithShader(device, tempRt, blurShader, null, blurScissorRect);\n\t\t\t\t\t\t\tthis.sourceId.setValue(tempRt.colorBuffer);\n\t\t\t\t\t\t\tpixelOffset[1] = pixelOffset[0];\n\t\t\t\t\t\t\tpixelOffset[0] = 0;\n\t\t\t\t\t\t\tthis.pixelOffsetId.setValue(pixelOffset);\n\t\t\t\t\t\t\tdrawQuadWithShader(device, origShadowMap, blurShader, null, blurScissorRect);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.webgl2) {\n\t\t\t\tdevice.setDepthBias(false);\n\t\t\t} else if (device.extStandardDerivatives) {\n\t\t\t\tthis.polygonOffset[0] = 0;\n\t\t\t\tthis.polygonOffset[1] = 0;\n\t\t\t\tthis.polygonOffsetId.setValue(this.polygonOffset);\n\t\t\t}\n\n\t\t\tdevice.grabPassAvailable = true;\n\t\t};\n\n\t\t_proto.updateShader = function updateShader(meshInstance, objDefs, staticLightList, pass, sortedLights) {\n\t\t\tmeshInstance.material._scene = this.scene;\n\n\t\t\tif (meshInstance.material._dirtyBlend) {\n\t\t\t\tthis.scene.layers._dirtyBlend = true;\n\t\t\t}\n\n\t\t\tmeshInstance.material.updateShader(this.device, this.scene, objDefs, staticLightList, pass, sortedLights);\n\t\t\tmeshInstance._shader[pass] = meshInstance.material.shader;\n\t\t};\n\n\t\t_proto.setCullMode = function setCullMode(cullFaces, flip, drawCall) {\n\t\t\tvar material = drawCall.material;\n\t\t\tvar mode = CULLFACE_NONE;\n\n\t\t\tif (cullFaces) {\n\t\t\t\tvar flipFaces = 1;\n\n\t\t\t\tif (material.cull > CULLFACE_NONE && material.cull < CULLFACE_FRONTANDBACK) {\n\t\t\t\t\tif (drawCall.flipFaces) flipFaces *= -1;\n\t\t\t\t\tif (flip) flipFaces *= -1;\n\t\t\t\t\tvar wt = drawCall.node.worldTransform;\n\t\t\t\t\twt.getX(worldMatX$1);\n\t\t\t\t\twt.getY(worldMatY$1);\n\t\t\t\t\twt.getZ(worldMatZ$1);\n\t\t\t\t\tworldMatX$1.cross(worldMatX$1, worldMatY$1);\n\n\t\t\t\t\tif (worldMatX$1.dot(worldMatZ$1) < 0) {\n\t\t\t\t\t\tflipFaces *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (flipFaces < 0) {\n\t\t\t\t\tmode = material.cull === CULLFACE_FRONT ? CULLFACE_BACK : CULLFACE_FRONT;\n\t\t\t\t} else {\n\t\t\t\t\tmode = material.cull;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.device.setCullMode(mode);\n\n\t\t\tif (mode === CULLFACE_NONE && material.cull === CULLFACE_NONE) {\n\t\t\t\tvar wt2 = drawCall.node.worldTransform;\n\t\t\t\twt2.getX(worldMatX$1);\n\t\t\t\twt2.getY(worldMatY$1);\n\t\t\t\twt2.getZ(worldMatZ$1);\n\t\t\t\tworldMatX$1.cross(worldMatX$1, worldMatY$1);\n\n\t\t\t\tif (worldMatX$1.dot(worldMatZ$1) < 0) {\n\t\t\t\t\tthis.twoSidedLightingNegScaleFactorId.setValue(-1.0);\n\t\t\t\t} else {\n\t\t\t\t\tthis.twoSidedLightingNegScaleFactorId.setValue(1.0);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setVertexBuffers = function setVertexBuffers(device, mesh) {\n\t\t\tdevice.setVertexBuffer(mesh.vertexBuffer);\n\t\t};\n\n\t\t_proto.setMorphing = function setMorphing(device, morphInstance) {\n\t\t\tif (morphInstance) {\n\t\t\t\tif (morphInstance.morph.useTextureMorph) {\n\t\t\t\t\tdevice.setVertexBuffer(morphInstance.morph.vertexBufferIds);\n\t\t\t\t\tthis.morphPositionTex.setValue(morphInstance.texturePositions);\n\t\t\t\t\tthis.morphNormalTex.setValue(morphInstance.textureNormals);\n\t\t\t\t\tthis.morphTexParams.setValue(morphInstance._textureParams);\n\t\t\t\t} else {\n\t\t\t\t\tvar vb, semantic;\n\n\t\t\t\t\tfor (var t = 0; t < morphInstance._activeVertexBuffers.length; t++) {\n\t\t\t\t\t\tvb = morphInstance._activeVertexBuffers[t];\n\n\t\t\t\t\t\tif (vb) {\n\t\t\t\t\t\t\tsemantic = SEMANTIC_ATTR + (t + 8);\n\t\t\t\t\t\t\tvb.format.elements[0].name = semantic;\n\t\t\t\t\t\t\tvb.format.elements[0].scopeId = device.scope.resolve(semantic);\n\t\t\t\t\t\t\tvb.format.update();\n\t\t\t\t\t\t\tdevice.setVertexBuffer(vb);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.morphWeightsA.setValue(morphInstance._shaderMorphWeightsA);\n\t\t\t\t\tthis.morphWeightsB.setValue(morphInstance._shaderMorphWeightsB);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.renderForward = function renderForward(camera, drawCalls, drawCallsCount, sortedLights, pass, cullingMask, drawCallback, layer) {\n\t\t\tvar device = this.device;\n\t\t\tvar scene = this.scene;\n\t\t\tvar vrDisplay = camera.vrDisplay;\n\t\t\tvar lightHash = layer ? layer._lightHash : 0;\n\t\t\tvar passFlag = 1 << pass;\n\t\t\tvar i, drawCall, mesh, material, objDefs, variantKey, lightMask, style, usedDirLights;\n\t\t\tvar prevMaterial = null,\n\t\t\t\t\tprevObjDefs,\n\t\t\t\t\tprevLightMask,\n\t\t\t\t\tprevStatic;\n\t\t\tvar stencilFront, stencilBack;\n\t\t\tvar halfWidth = device.width * 0.5;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tdrawCall = drawCalls[i];\n\t\t\t\tif (cullingMask && drawCall.mask && !(cullingMask & drawCall.mask)) continue;\n\n\t\t\t\tif (drawCall.command) {\n\t\t\t\t\tdrawCall.command();\n\t\t\t\t} else {\n\t\t\t\t\tmesh = drawCall.mesh;\n\t\t\t\t\tmaterial = drawCall.material;\n\t\t\t\t\tobjDefs = drawCall._shaderDefs;\n\t\t\t\t\tlightMask = drawCall.mask;\n\t\t\t\t\tthis.setSkinning(device, drawCall, material);\n\n\t\t\t\t\tif (material && material === prevMaterial && objDefs !== prevObjDefs) {\n\t\t\t\t\t\tprevMaterial = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawCall.isStatic || prevStatic) {\n\t\t\t\t\t\tprevMaterial = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (material !== prevMaterial) {\n\t\t\t\t\t\tthis._materialSwitches++;\n\n\t\t\t\t\t\tif (material.dirty) {\n\t\t\t\t\t\t\tmaterial.updateUniforms();\n\t\t\t\t\t\t\tmaterial.dirty = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!drawCall._shader[pass] || drawCall._shaderDefs !== objDefs || drawCall._lightHash !== lightHash) {\n\t\t\t\t\t\t\tif (!drawCall.isStatic) {\n\t\t\t\t\t\t\t\tvariantKey = pass + \"_\" + objDefs + \"_\" + lightHash;\n\t\t\t\t\t\t\t\tdrawCall._shader[pass] = material.variants[variantKey];\n\n\t\t\t\t\t\t\t\tif (!drawCall._shader[pass]) {\n\t\t\t\t\t\t\t\t\tthis.updateShader(drawCall, objDefs, null, pass, sortedLights);\n\t\t\t\t\t\t\t\t\tmaterial.variants[variantKey] = drawCall._shader[pass];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.updateShader(drawCall, objDefs, drawCall._staticLightList, pass, sortedLights);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdrawCall._shaderDefs = objDefs;\n\t\t\t\t\t\t\tdrawCall._lightHash = lightHash;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!drawCall._shader[pass].failed && !device.setShader(drawCall._shader[pass])) {\n\t\t\t\t\t\t\tdrawCall._shader[pass].failed = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.setParameters(device);\n\n\t\t\t\t\t\tif (!prevMaterial || lightMask !== prevLightMask) {\n\t\t\t\t\t\t\tusedDirLights = this.dispatchDirectLights(sortedLights[LIGHTTYPE_DIRECTIONAL], scene, lightMask, camera);\n\t\t\t\t\t\t\tthis.dispatchLocalLights(sortedLights, scene, lightMask, usedDirLights, drawCall._staticLightList);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.alphaTestId.setValue(material.alphaTest);\n\t\t\t\t\t\tdevice.setBlending(material.blend);\n\n\t\t\t\t\t\tif (material.blend) {\n\t\t\t\t\t\t\tif (material.separateAlphaBlend) {\n\t\t\t\t\t\t\t\tdevice.setBlendFunctionSeparate(material.blendSrc, material.blendDst, material.blendSrcAlpha, material.blendDstAlpha);\n\t\t\t\t\t\t\t\tdevice.setBlendEquationSeparate(material.blendEquation, material.blendAlphaEquation);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdevice.setBlendFunction(material.blendSrc, material.blendDst);\n\t\t\t\t\t\t\t\tdevice.setBlendEquation(material.blendEquation);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdevice.setColorWrite(material.redWrite, material.greenWrite, material.blueWrite, material.alphaWrite);\n\t\t\t\t\t\tdevice.setDepthWrite(material.depthWrite);\n\n\t\t\t\t\t\tif (material.depthWrite && !material.depthTest) {\n\t\t\t\t\t\t\tdevice.setDepthFunc(FUNC_ALWAYS);\n\t\t\t\t\t\t\tdevice.setDepthTest(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdevice.setDepthFunc(FUNC_LESSEQUAL);\n\t\t\t\t\t\t\tdevice.setDepthTest(material.depthTest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdevice.setAlphaToCoverage(material.alphaToCoverage);\n\n\t\t\t\t\t\tif (material.depthBias || material.slopeDepthBias) {\n\t\t\t\t\t\t\tdevice.setDepthBias(true);\n\t\t\t\t\t\t\tdevice.setDepthBiasValues(material.depthBias, material.slopeDepthBias);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdevice.setDepthBias(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setCullMode(camera._cullFaces, camera._flipFaces, drawCall);\n\t\t\t\t\tstencilFront = drawCall.stencilFront || material.stencilFront;\n\t\t\t\t\tstencilBack = drawCall.stencilBack || material.stencilBack;\n\n\t\t\t\t\tif (stencilFront || stencilBack) {\n\t\t\t\t\t\tdevice.setStencilTest(true);\n\n\t\t\t\t\t\tif (stencilFront === stencilBack) {\n\t\t\t\t\t\t\tdevice.setStencilFunc(stencilFront.func, stencilFront.ref, stencilFront.readMask);\n\t\t\t\t\t\t\tdevice.setStencilOperation(stencilFront.fail, stencilFront.zfail, stencilFront.zpass, stencilFront.writeMask);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (stencilFront) {\n\t\t\t\t\t\t\t\tdevice.setStencilFuncFront(stencilFront.func, stencilFront.ref, stencilFront.readMask);\n\t\t\t\t\t\t\t\tdevice.setStencilOperationFront(stencilFront.fail, stencilFront.zfail, stencilFront.zpass, stencilFront.writeMask);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdevice.setStencilFuncFront(FUNC_ALWAYS, 0, 0xFF);\n\t\t\t\t\t\t\t\tdevice.setStencilOperationFront(STENCILOP_KEEP, STENCILOP_KEEP, STENCILOP_KEEP, 0xFF);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stencilBack) {\n\t\t\t\t\t\t\t\tdevice.setStencilFuncBack(stencilBack.func, stencilBack.ref, stencilBack.readMask);\n\t\t\t\t\t\t\t\tdevice.setStencilOperationBack(stencilBack.fail, stencilBack.zfail, stencilBack.zpass, stencilBack.writeMask);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdevice.setStencilFuncBack(FUNC_ALWAYS, 0, 0xFF);\n\t\t\t\t\t\t\t\tdevice.setStencilOperationBack(STENCILOP_KEEP, STENCILOP_KEEP, STENCILOP_KEEP, 0xFF);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdevice.setStencilTest(false);\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawCall.setParameters(device, passFlag);\n\t\t\t\t\tthis.setVertexBuffers(device, mesh);\n\t\t\t\t\tthis.setMorphing(device, drawCall.morphInstance);\n\t\t\t\t\tstyle = drawCall.renderStyle;\n\t\t\t\t\tdevice.setIndexBuffer(mesh.indexBuffer[style]);\n\n\t\t\t\t\tif (drawCallback) {\n\t\t\t\t\t\tdrawCallback(drawCall, i);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vrDisplay && vrDisplay.presenting) {\n\t\t\t\t\t\tdevice.setViewport(0, 0, halfWidth, device.height);\n\t\t\t\t\t\tthis.projId.setValue(projL.data);\n\t\t\t\t\t\tthis.projSkyboxId.setValue(projL.data);\n\t\t\t\t\t\tthis.viewInvId.setValue(viewInvL.data);\n\t\t\t\t\t\tthis.viewId.setValue(viewL.data);\n\t\t\t\t\t\tthis.viewId3.setValue(viewMat3L.data);\n\t\t\t\t\t\tthis.viewProjId.setValue(viewProjMatL.data);\n\t\t\t\t\t\tthis.viewPos[0] = viewPosL.x;\n\t\t\t\t\t\tthis.viewPos[1] = viewPosL.y;\n\t\t\t\t\t\tthis.viewPos[2] = viewPosL.z;\n\t\t\t\t\t\tthis.viewPosId.setValue(this.viewPos);\n\t\t\t\t\t\ti += this.drawInstance(device, drawCall, mesh, style, true);\n\t\t\t\t\t\tthis._forwardDrawCalls++;\n\t\t\t\t\t\tdevice.setViewport(halfWidth, 0, halfWidth, device.height);\n\t\t\t\t\t\tthis.projId.setValue(projR.data);\n\t\t\t\t\t\tthis.projSkyboxId.setValue(projR.data);\n\t\t\t\t\t\tthis.viewInvId.setValue(viewInvR.data);\n\t\t\t\t\t\tthis.viewId.setValue(viewR.data);\n\t\t\t\t\t\tthis.viewId3.setValue(viewMat3R.data);\n\t\t\t\t\t\tthis.viewProjId.setValue(viewProjMatR.data);\n\t\t\t\t\t\tthis.viewPos[0] = viewPosR.x;\n\t\t\t\t\t\tthis.viewPos[1] = viewPosR.y;\n\t\t\t\t\t\tthis.viewPos[2] = viewPosR.z;\n\t\t\t\t\t\tthis.viewPosId.setValue(this.viewPos);\n\t\t\t\t\t\ti += this.drawInstance2(device, drawCall, mesh, style);\n\t\t\t\t\t\tthis._forwardDrawCalls++;\n\t\t\t\t\t} else if (camera.xr && camera.xr.session && camera.xr.views.length) {\n\t\t\t\t\t\tvar views = camera.xr.views;\n\n\t\t\t\t\t\tfor (var v = 0; v < views.length; v++) {\n\t\t\t\t\t\t\tvar view = views[v];\n\t\t\t\t\t\t\tdevice.setViewport(view.viewport.x, view.viewport.y, view.viewport.z, view.viewport.w);\n\t\t\t\t\t\t\tthis.projId.setValue(view.projMat.data);\n\t\t\t\t\t\t\tthis.projSkyboxId.setValue(view.projMat.data);\n\t\t\t\t\t\t\tthis.viewId.setValue(view.viewOffMat.data);\n\t\t\t\t\t\t\tthis.viewInvId.setValue(view.viewInvOffMat.data);\n\t\t\t\t\t\t\tthis.viewId3.setValue(view.viewMat3.data);\n\t\t\t\t\t\t\tthis.viewProjId.setValue(view.projViewOffMat.data);\n\t\t\t\t\t\t\tthis.viewPosId.setValue(view.position);\n\n\t\t\t\t\t\t\tif (v === 0) {\n\t\t\t\t\t\t\t\ti += this.drawInstance(device, drawCall, mesh, style, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ti += this.drawInstance2(device, drawCall, mesh, style);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._forwardDrawCalls++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti += this.drawInstance(device, drawCall, mesh, style, true);\n\t\t\t\t\t\tthis._forwardDrawCalls++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < drawCallsCount - 1 && drawCalls[i + 1].material === material) {\n\t\t\t\t\t\tmaterial.setParameters(device, drawCall.parameters);\n\t\t\t\t\t}\n\n\t\t\t\t\tprevMaterial = material;\n\t\t\t\t\tprevObjDefs = objDefs;\n\t\t\t\t\tprevLightMask = lightMask;\n\t\t\t\t\tprevStatic = drawCall.isStatic;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdevice.updateEnd();\n\t\t};\n\n\t\t_proto.setupInstancing = function setupInstancing(device) {\n\t\t\tif (device.enableAutoInstancing) {\n\t\t\t\tif (!_autoInstanceBuffer) {\n\t\t\t\t\t_autoInstanceBuffer = new VertexBuffer(device, VertexFormat.defaultInstancingFormat, device.autoInstancingMaxObjects, BUFFER_DYNAMIC);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.revertStaticMeshes = function revertStaticMeshes(meshInstances) {\n\t\t\tvar i;\n\t\t\tvar drawCalls = meshInstances;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\t\t\tvar drawCall;\n\t\t\tvar newDrawCalls = [];\n\t\t\tvar prevStaticSource;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tdrawCall = drawCalls[i];\n\n\t\t\t\tif (drawCall._staticSource) {\n\t\t\t\t\tif (drawCall._staticSource !== prevStaticSource) {\n\t\t\t\t\t\tnewDrawCalls.push(drawCall._staticSource);\n\t\t\t\t\t\tprevStaticSource = drawCall._staticSource;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewDrawCalls.push(drawCall);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeshInstances.length = newDrawCalls.length;\n\n\t\t\tfor (i = 0; i < newDrawCalls.length; i++) {\n\t\t\t\tmeshInstances[i] = newDrawCalls[i];\n\t\t\t}\n\t\t};\n\n\t\t_proto.prepareStaticMeshes = function prepareStaticMeshes(meshInstances, lights) {\n\t\t\tvar i, j, k, v, s, index;\n\t\t\tvar device = this.device;\n\t\t\tvar scene = this.scene;\n\t\t\tvar drawCalls = meshInstances;\n\t\t\tvar drawCallsCount = drawCalls.length;\n\t\t\tvar drawCall, light;\n\t\t\tvar newDrawCalls = [];\n\t\t\tvar mesh;\n\t\t\tvar indices, verts, numTris, elems, vertSize, offsetP, baseIndex;\n\n\t\t\tvar _x, _y, _z;\n\n\t\t\tvar minx, miny, minz, maxx, maxy, maxz;\n\t\t\tvar minv, maxv;\n\t\t\tvar minVec = new Vec3();\n\t\t\tvar maxVec = new Vec3();\n\t\t\tvar localLightBounds = new BoundingBox();\n\t\t\tvar invMatrix = new Mat4();\n\t\t\tvar triLightComb = [];\n\t\t\tvar triLightCombUsed;\n\t\t\tvar indexBuffer, vertexBuffer;\n\t\t\tvar combIndices, combIbName, combIb;\n\t\t\tvar lightTypePass;\n\t\t\tvar lightAabb = [];\n\t\t\tvar aabb;\n\t\t\tvar triBounds = [];\n\t\t\tvar staticLights = [];\n\t\t\tvar bit;\n\t\t\tvar lht;\n\n\t\t\tfor (i = 0; i < drawCallsCount; i++) {\n\t\t\t\tdrawCall = drawCalls[i];\n\n\t\t\t\tif (!drawCall.isStatic) {\n\t\t\t\t\tnewDrawCalls.push(drawCall);\n\t\t\t\t} else {\n\t\t\t\t\taabb = drawCall.aabb;\n\t\t\t\t\tstaticLights.length = 0;\n\n\t\t\t\t\tfor (lightTypePass = LIGHTTYPE_OMNI; lightTypePass <= LIGHTTYPE_SPOT; lightTypePass++) {\n\t\t\t\t\t\tfor (j = 0; j < lights.length; j++) {\n\t\t\t\t\t\t\tlight = lights[j];\n\t\t\t\t\t\t\tif (light._type !== lightTypePass) continue;\n\n\t\t\t\t\t\t\tif (light.enabled) {\n\t\t\t\t\t\t\t\tif (light.mask & drawCall.mask) {\n\t\t\t\t\t\t\t\t\tif (light.isStatic) {\n\t\t\t\t\t\t\t\t\t\tif (!lightAabb[j]) {\n\t\t\t\t\t\t\t\t\t\t\tlightAabb[j] = new BoundingBox();\n\n\t\t\t\t\t\t\t\t\t\t\tlight._node.getWorldTransform();\n\n\t\t\t\t\t\t\t\t\t\t\tlight.getBoundingSphere(tempSphere);\n\t\t\t\t\t\t\t\t\t\t\tlightAabb[j].center.copy(tempSphere.center);\n\t\t\t\t\t\t\t\t\t\t\tlightAabb[j].halfExtents.x = tempSphere.radius;\n\t\t\t\t\t\t\t\t\t\t\tlightAabb[j].halfExtents.y = tempSphere.radius;\n\t\t\t\t\t\t\t\t\t\t\tlightAabb[j].halfExtents.z = tempSphere.radius;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (!lightAabb[j].intersects(aabb)) continue;\n\t\t\t\t\t\t\t\t\t\tstaticLights.push(j);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (staticLights.length === 0) {\n\t\t\t\t\t\tnewDrawCalls.push(drawCall);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh = drawCall.mesh;\n\t\t\t\t\tvertexBuffer = mesh.vertexBuffer;\n\t\t\t\t\tindexBuffer = mesh.indexBuffer[drawCall.renderStyle];\n\t\t\t\t\tindices = indexBuffer.bytesPerIndex === 2 ? new Uint16Array(indexBuffer.lock()) : new Uint32Array(indexBuffer.lock());\n\t\t\t\t\tnumTris = mesh.primitive[drawCall.renderStyle].count / 3;\n\t\t\t\t\tbaseIndex = mesh.primitive[drawCall.renderStyle].base;\n\t\t\t\t\telems = vertexBuffer.format.elements;\n\t\t\t\t\tvertSize = vertexBuffer.format.size / 4;\n\t\t\t\t\tverts = new Float32Array(vertexBuffer.storage);\n\n\t\t\t\t\tfor (k = 0; k < elems.length; k++) {\n\t\t\t\t\t\tif (elems[k].name === SEMANTIC_POSITION) {\n\t\t\t\t\t\t\toffsetP = elems[k].offset / 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttriLightComb.length = numTris;\n\n\t\t\t\t\tfor (k = 0; k < numTris; k++) {\n\t\t\t\t\t\ttriLightComb[k] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\ttriLightCombUsed = false;\n\t\t\t\t\ttriBounds.length = numTris * 6;\n\n\t\t\t\t\tfor (k = 0; k < numTris; k++) {\n\t\t\t\t\t\tminx = Number.MAX_VALUE;\n\t\t\t\t\t\tminy = Number.MAX_VALUE;\n\t\t\t\t\t\tminz = Number.MAX_VALUE;\n\t\t\t\t\t\tmaxx = -Number.MAX_VALUE;\n\t\t\t\t\t\tmaxy = -Number.MAX_VALUE;\n\t\t\t\t\t\tmaxz = -Number.MAX_VALUE;\n\n\t\t\t\t\t\tfor (v = 0; v < 3; v++) {\n\t\t\t\t\t\t\tindex = indices[k * 3 + v + baseIndex];\n\t\t\t\t\t\t\tindex = index * vertSize + offsetP;\n\t\t\t\t\t\t\t_x = verts[index];\n\t\t\t\t\t\t\t_y = verts[index + 1];\n\t\t\t\t\t\t\t_z = verts[index + 2];\n\t\t\t\t\t\t\tif (_x < minx) minx = _x;\n\t\t\t\t\t\t\tif (_y < miny) miny = _y;\n\t\t\t\t\t\t\tif (_z < minz) minz = _z;\n\t\t\t\t\t\t\tif (_x > maxx) maxx = _x;\n\t\t\t\t\t\t\tif (_y > maxy) maxy = _y;\n\t\t\t\t\t\t\tif (_z > maxz) maxz = _z;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex = k * 6;\n\t\t\t\t\t\ttriBounds[index] = minx;\n\t\t\t\t\t\ttriBounds[index + 1] = miny;\n\t\t\t\t\t\ttriBounds[index + 2] = minz;\n\t\t\t\t\t\ttriBounds[index + 3] = maxx;\n\t\t\t\t\t\ttriBounds[index + 4] = maxy;\n\t\t\t\t\t\ttriBounds[index + 5] = maxz;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (s = 0; s < staticLights.length; s++) {\n\t\t\t\t\t\tj = staticLights[s];\n\t\t\t\t\t\tlight = lights[j];\n\t\t\t\t\t\tinvMatrix.copy(drawCall.node.worldTransform).invert();\n\t\t\t\t\t\tlocalLightBounds.setFromTransformedAabb(lightAabb[j], invMatrix);\n\t\t\t\t\t\tminv = localLightBounds.getMin();\n\t\t\t\t\t\tmaxv = localLightBounds.getMax();\n\t\t\t\t\t\tbit = 1 << s;\n\n\t\t\t\t\t\tfor (k = 0; k < numTris; k++) {\n\t\t\t\t\t\t\tindex = k * 6;\n\n\t\t\t\t\t\t\tif (triBounds[index] <= maxv.x && triBounds[index + 3] >= minv.x && triBounds[index + 1] <= maxv.y && triBounds[index + 4] >= minv.y && triBounds[index + 2] <= maxv.z && triBounds[index + 5] >= minv.z) {\n\t\t\t\t\t\t\t\ttriLightComb[k] |= bit;\n\t\t\t\t\t\t\t\ttriLightCombUsed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (triLightCombUsed) {\n\t\t\t\t\t\tcombIndices = {};\n\n\t\t\t\t\t\tfor (k = 0; k < numTris; k++) {\n\t\t\t\t\t\t\tj = k * 3 + baseIndex;\n\t\t\t\t\t\t\tcombIbName = triLightComb[k];\n\t\t\t\t\t\t\tif (!combIndices[combIbName]) combIndices[combIbName] = [];\n\t\t\t\t\t\t\tcombIb = combIndices[combIbName];\n\t\t\t\t\t\t\tcombIb.push(indices[j]);\n\t\t\t\t\t\t\tcombIb.push(indices[j + 1]);\n\t\t\t\t\t\t\tcombIb.push(indices[j + 2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (combIbName in combIndices) {\n\t\t\t\t\t\t\tcombIb = combIndices[combIbName];\n\t\t\t\t\t\t\tvar ib = new IndexBuffer(device, indexBuffer.format, combIb.length, indexBuffer.usage);\n\t\t\t\t\t\t\tvar ib2 = ib.bytesPerIndex === 2 ? new Uint16Array(ib.lock()) : new Uint32Array(ib.lock());\n\t\t\t\t\t\t\tib2.set(combIb);\n\t\t\t\t\t\t\tib.unlock();\n\t\t\t\t\t\t\tminx = Number.MAX_VALUE;\n\t\t\t\t\t\t\tminy = Number.MAX_VALUE;\n\t\t\t\t\t\t\tminz = Number.MAX_VALUE;\n\t\t\t\t\t\t\tmaxx = -Number.MAX_VALUE;\n\t\t\t\t\t\t\tmaxy = -Number.MAX_VALUE;\n\t\t\t\t\t\t\tmaxz = -Number.MAX_VALUE;\n\n\t\t\t\t\t\t\tfor (k = 0; k < combIb.length; k++) {\n\t\t\t\t\t\t\t\tindex = combIb[k];\n\t\t\t\t\t\t\t\t_x = verts[index * vertSize + offsetP];\n\t\t\t\t\t\t\t\t_y = verts[index * vertSize + offsetP + 1];\n\t\t\t\t\t\t\t\t_z = verts[index * vertSize + offsetP + 2];\n\t\t\t\t\t\t\t\tif (_x < minx) minx = _x;\n\t\t\t\t\t\t\t\tif (_y < miny) miny = _y;\n\t\t\t\t\t\t\t\tif (_z < minz) minz = _z;\n\t\t\t\t\t\t\t\tif (_x > maxx) maxx = _x;\n\t\t\t\t\t\t\t\tif (_y > maxy) maxy = _y;\n\t\t\t\t\t\t\t\tif (_z > maxz) maxz = _z;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tminVec.set(minx, miny, minz);\n\t\t\t\t\t\t\tmaxVec.set(maxx, maxy, maxz);\n\t\t\t\t\t\t\tvar chunkAabb = new BoundingBox();\n\t\t\t\t\t\t\tchunkAabb.setMinMax(minVec, maxVec);\n\t\t\t\t\t\t\tvar mesh2 = new Mesh(device);\n\t\t\t\t\t\t\tmesh2.vertexBuffer = vertexBuffer;\n\t\t\t\t\t\t\tmesh2.indexBuffer[0] = ib;\n\t\t\t\t\t\t\tmesh2.primitive[0].type = PRIMITIVE_TRIANGLES;\n\t\t\t\t\t\t\tmesh2.primitive[0].base = 0;\n\t\t\t\t\t\t\tmesh2.primitive[0].count = combIb.length;\n\t\t\t\t\t\t\tmesh2.primitive[0].indexed = true;\n\t\t\t\t\t\t\tmesh2.aabb = chunkAabb;\n\t\t\t\t\t\t\tvar instance = new MeshInstance(drawCall.node, mesh2, drawCall.material);\n\t\t\t\t\t\t\tinstance.isStatic = drawCall.isStatic;\n\t\t\t\t\t\t\tinstance.visible = drawCall.visible;\n\t\t\t\t\t\t\tinstance.layer = drawCall.layer;\n\t\t\t\t\t\t\tinstance.castShadow = drawCall.castShadow;\n\t\t\t\t\t\t\tinstance._receiveShadow = drawCall._receiveShadow;\n\t\t\t\t\t\t\tinstance.cull = drawCall.cull;\n\t\t\t\t\t\t\tinstance.pick = drawCall.pick;\n\t\t\t\t\t\t\tinstance.mask = drawCall.mask;\n\t\t\t\t\t\t\tinstance.parameters = drawCall.parameters;\n\t\t\t\t\t\t\tinstance._shaderDefs = drawCall._shaderDefs;\n\t\t\t\t\t\t\tinstance._staticSource = drawCall;\n\n\t\t\t\t\t\t\tif (drawCall._staticLightList) {\n\t\t\t\t\t\t\t\tinstance._staticLightList = drawCall._staticLightList;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinstance._staticLightList = [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (k = 0; k < staticLights.length; k++) {\n\t\t\t\t\t\t\t\tbit = 1 << k;\n\n\t\t\t\t\t\t\t\tif (combIbName & bit) {\n\t\t\t\t\t\t\t\t\tlht = lights[staticLights[k]];\n\n\t\t\t\t\t\t\t\t\tif (instance._staticLightList.indexOf(lht) < 0) {\n\t\t\t\t\t\t\t\t\t\tinstance._staticLightList.push(lht);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tinstance._staticLightList.sort(this.lightCompare);\n\n\t\t\t\t\t\t\tnewDrawCalls.push(instance);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewDrawCalls.push(drawCall);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeshInstances.length = newDrawCalls.length;\n\n\t\t\tfor (i = 0; i < newDrawCalls.length; i++) {\n\t\t\t\tmeshInstances[i] = newDrawCalls[i];\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateShaders = function updateShaders(drawCalls) {\n\t\t\tvar mat,\n\t\t\t\t\tcount = drawCalls.length;\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tmat = drawCalls[i].material;\n\n\t\t\t\tif (mat) {\n\t\t\t\t\tif (!_tempMaterialSet.has(mat)) {\n\t\t\t\t\t\t_tempMaterialSet.add(mat);\n\n\t\t\t\t\t\tif (mat.updateShader !== Material.prototype.updateShader) {\n\t\t\t\t\t\t\tmat.clearVariants();\n\t\t\t\t\t\t\tmat.shader = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_tempMaterialSet.clear();\n\t\t};\n\n\t\t_proto.updateLitShaders = function updateLitShaders(drawCalls) {\n\t\t\tvar mat,\n\t\t\t\t\tcount = drawCalls.length;\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tmat = drawCalls[i].material;\n\n\t\t\t\tif (mat) {\n\t\t\t\t\tif (!_tempMaterialSet.has(mat)) {\n\t\t\t\t\t\t_tempMaterialSet.add(mat);\n\n\t\t\t\t\t\tif (mat.updateShader !== Material.prototype.updateShader) {\n\t\t\t\t\t\t\tif (mat.useLighting && (!mat.emitter || mat.emitter.lighting)) {\n\t\t\t\t\t\t\t\tmat.clearVariants();\n\t\t\t\t\t\t\t\tmat.shader = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_tempMaterialSet.clear();\n\t\t};\n\n\t\t_proto.beginFrame = function beginFrame(comp) {\n\t\t\tvar scene = this.scene;\n\t\t\tvar meshInstances = comp._meshInstances;\n\t\t\tvar lights = comp._lights;\n\n\t\t\tif (scene.updateShaders) {\n\t\t\t\tthis.updateShaders(meshInstances);\n\t\t\t\tscene.updateShaders = false;\n\t\t\t\tscene.updateLitShaders = false;\n\t\t\t\tscene._shaderVersion++;\n\t\t\t} else if (scene.updateLitShaders) {\n\t\t\t\tthis.updateLitShaders(meshInstances);\n\t\t\t\tscene.updateLitShaders = false;\n\t\t\t\tscene._shaderVersion++;\n\t\t\t}\n\n\t\t\tthis.updateCpuSkinMatrices(meshInstances);\n\t\t\tvar i;\n\t\t\tvar len = meshInstances.length;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tmeshInstances[i].visibleThisFrame = false;\n\t\t\t}\n\n\t\t\tlen = lights.length;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tlights[i].visibleThisFrame = lights[i]._type === LIGHTTYPE_DIRECTIONAL;\n\t\t\t}\n\t\t};\n\n\t\t_proto.beginLayers = function beginLayers(comp) {\n\t\t\tvar scene = this.scene;\n\t\t\tvar len = comp.layerList.length;\n\t\t\tvar layer;\n\t\t\tvar i, j;\n\t\t\tvar shaderVersion = this.scene._shaderVersion;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcomp.layerList[i]._postRenderCounter = 0;\n\t\t\t}\n\n\t\t\tvar transparent;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tlayer = comp.layerList[i];\n\t\t\t\tlayer._shaderVersion = shaderVersion;\n\t\t\t\tlayer._preRenderCalledForCameras = 0;\n\t\t\t\tlayer._postRenderCalledForCameras = 0;\n\t\t\t\ttransparent = comp.subLayerList[i];\n\n\t\t\t\tif (transparent) {\n\t\t\t\t\tlayer._postRenderCounter |= 2;\n\t\t\t\t} else {\n\t\t\t\t\tlayer._postRenderCounter |= 1;\n\t\t\t\t}\n\n\t\t\t\tlayer._postRenderCounterMax = layer._postRenderCounter;\n\n\t\t\t\tfor (j = 0; j < layer.cameras.length; j++) {\n\t\t\t\t\tif (!layer.instances.visibleOpaque[j]) layer.instances.visibleOpaque[j] = new VisibleInstanceList();\n\t\t\t\t\tif (!layer.instances.visibleTransparent[j]) layer.instances.visibleTransparent[j] = new VisibleInstanceList();\n\t\t\t\t\tlayer.instances.visibleOpaque[j].done = false;\n\t\t\t\t\tlayer.instances.visibleTransparent[j].done = false;\n\t\t\t\t}\n\n\t\t\t\tif (layer.cameras.length < layer.instances.visibleOpaque.length) {\n\t\t\t\t\tlayer.instances.visibleOpaque.splice(layer.cameras.length, 1);\n\t\t\t\t}\n\n\t\t\t\tif (layer.cameras.length < layer.instances.visibleTransparent.length) {\n\t\t\t\t\tlayer.instances.visibleTransparent.splice(layer.cameras.length, 1);\n\t\t\t\t}\n\n\t\t\t\tif (layer._needsStaticPrepare && layer._staticLightHash) {\n\t\t\t\t\tif (layer._staticPrepareDone) {\n\t\t\t\t\t\tthis.revertStaticMeshes(layer.opaqueMeshInstances);\n\t\t\t\t\t\tthis.revertStaticMeshes(layer.transparentMeshInstances);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.prepareStaticMeshes(layer.opaqueMeshInstances, layer._lights);\n\t\t\t\t\tthis.prepareStaticMeshes(layer.transparentMeshInstances, layer._lights);\n\t\t\t\t\tcomp._dirty = true;\n\t\t\t\t\tscene.updateShaders = true;\n\t\t\t\t\tlayer._needsStaticPrepare = false;\n\t\t\t\t\tlayer._staticPrepareDone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.cullLocalShadowmap = function cullLocalShadowmap(light, drawCalls) {\n\t\t\tvar i, type, shadowCam, shadowCamNode, passes, pass, numInstances, meshInstance, visibleList, vlen, visible;\n\t\t\tvar lightNode;\n\t\t\ttype = light._type;\n\t\t\tif (type === LIGHTTYPE_DIRECTIONAL) return;\n\t\t\tlight.visibleThisFrame = true;\n\t\t\tshadowCam = this.getShadowCamera(this.device, light);\n\t\t\tshadowCam.projection = PROJECTION_PERSPECTIVE;\n\t\t\tshadowCam.nearClip = light.attenuationEnd / 1000;\n\t\t\tshadowCam.farClip = light.attenuationEnd;\n\t\t\tshadowCam.aspectRatio = 1;\n\n\t\t\tif (type === LIGHTTYPE_SPOT) {\n\t\t\t\tshadowCam.fov = light._outerConeAngle * 2;\n\t\t\t\tpasses = 1;\n\t\t\t} else {\n\t\t\t\tshadowCam.fov = 90;\n\t\t\t\tpasses = 6;\n\t\t\t}\n\n\t\t\tshadowCamNode = shadowCam._node;\n\t\t\tlightNode = light._node;\n\t\t\tshadowCamNode.setPosition(lightNode.getPosition());\n\n\t\t\tif (type === LIGHTTYPE_SPOT) {\n\t\t\t\tshadowCamNode.setRotation(lightNode.getRotation());\n\t\t\t\tshadowCamNode.rotateLocal(-90, 0, 0);\n\t\t\t}\n\n\t\t\tfor (pass = 0; pass < passes; pass++) {\n\t\t\t\tif (type === LIGHTTYPE_OMNI) {\n\t\t\t\t\tshadowCamNode.setRotation(pointLightRotations[pass]);\n\t\t\t\t\tshadowCam.renderTarget = light._shadowCubeMap[pass];\n\t\t\t\t}\n\n\t\t\t\tthis.updateCameraFrustum(shadowCam);\n\t\t\t\tvisibleList = light._visibleList[pass];\n\n\t\t\t\tif (!visibleList) {\n\t\t\t\t\tvisibleList = light._visibleList[pass] = [];\n\t\t\t\t}\n\n\t\t\t\tlight._visibleLength[pass] = 0;\n\t\t\t\tvlen = 0;\n\n\t\t\t\tfor (i = 0, numInstances = drawCalls.length; i < numInstances; i++) {\n\t\t\t\t\tmeshInstance = drawCalls[i];\n\t\t\t\t\tvisible = true;\n\n\t\t\t\t\tif (meshInstance.cull) {\n\t\t\t\t\t\tvisible = meshInstance._isVisible(shadowCam);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (visible) {\n\t\t\t\t\t\tvisibleList[vlen] = meshInstance;\n\t\t\t\t\t\tvlen++;\n\t\t\t\t\t\tmeshInstance.visibleThisFrame = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlight._visibleLength[pass] = vlen;\n\n\t\t\t\tif (visibleList.length !== vlen) {\n\t\t\t\t\tvisibleList.length = vlen;\n\t\t\t\t}\n\n\t\t\t\tvisibleList.sort(this.depthSortCompare);\n\t\t\t}\n\t\t};\n\n\t\t_proto.cullDirectionalShadowmap = function cullDirectionalShadowmap(light, drawCalls, camera, pass) {\n\t\t\tvar i, shadowCam, shadowCamNode, lightNode, frustumSize, vlen, visibleList;\n\t\t\tvar unitPerTexel, delta, p;\n\t\t\tvar minx, miny, minz, maxx, maxy, maxz, centerx, centery;\n\t\t\tvar visible, numInstances;\n\t\t\tvar meshInstance;\n\t\t\tvar emptyAabb;\n\t\t\tvar drawCallAabb;\n\t\t\tvar device = this.device;\n\t\t\tlight.visibleThisFrame = true;\n\t\t\tshadowCam = this.getShadowCamera(device, light);\n\t\t\tshadowCamNode = shadowCam._node;\n\t\t\tlightNode = light._node;\n\t\t\tshadowCamNode.setPosition(lightNode.getPosition());\n\t\t\tshadowCamNode.setRotation(lightNode.getRotation());\n\t\t\tshadowCamNode.rotateLocal(-90, 0, 0);\n\n\t\t\t_getFrustumPoints(camera, light.shadowDistance || camera._farClip, frustumPoints);\n\n\t\t\tfrustumSize = frustumDiagonal.sub2(frustumPoints[0], frustumPoints[6]).length();\n\t\t\tfrustumSize = Math.max(frustumSize, frustumDiagonal.sub2(frustumPoints[4], frustumPoints[6]).length());\n\t\t\tshadowCamView.copy(shadowCamNode.getWorldTransform()).invert();\n\t\t\tc2sc.copy(shadowCamView).mul(camera._node.getWorldTransform());\n\n\t\t\tfor (i = 0; i < 8; i++) {\n\t\t\t\tc2sc.transformPoint(frustumPoints[i], frustumPoints[i]);\n\t\t\t}\n\n\t\t\tminx = miny = minz = 1000000;\n\t\t\tmaxx = maxy = maxz = -1000000;\n\n\t\t\tfor (i = 0; i < 8; i++) {\n\t\t\t\tp = frustumPoints[i];\n\t\t\t\tif (p.x < minx) minx = p.x;\n\t\t\t\tif (p.x > maxx) maxx = p.x;\n\t\t\t\tif (p.y < miny) miny = p.y;\n\t\t\t\tif (p.y > maxy) maxy = p.y;\n\t\t\t\tif (p.z < minz) minz = p.z;\n\t\t\t\tif (p.z > maxz) maxz = p.z;\n\t\t\t}\n\n\t\t\tunitPerTexel = frustumSize / light._shadowResolution;\n\t\t\tdelta = (frustumSize - (maxx - minx)) * 0.5;\n\t\t\tminx = Math.floor((minx - delta) / unitPerTexel) * unitPerTexel;\n\t\t\tdelta = (frustumSize - (maxy - miny)) * 0.5;\n\t\t\tminy = Math.floor((miny - delta) / unitPerTexel) * unitPerTexel;\n\t\t\tmaxx = minx + frustumSize;\n\t\t\tmaxy = miny + frustumSize;\n\t\t\tcenterx = (maxx + minx) * 0.5;\n\t\t\tcentery = (maxy + miny) * 0.5;\n\t\t\tshadowCamNode.translateLocal(centerx, centery, 100000);\n\t\t\tshadowCam.projection = PROJECTION_ORTHOGRAPHIC;\n\t\t\tshadowCam.nearClip = 0;\n\t\t\tshadowCam.farClip = 200000;\n\t\t\tshadowCam.aspectRatio = 1;\n\t\t\tshadowCam.orthoHeight = frustumSize * 0.5;\n\t\t\tthis.updateCameraFrustum(shadowCam);\n\t\t\temptyAabb = true;\n\t\t\tvisibleList = light._visibleList[pass];\n\n\t\t\tif (!visibleList) {\n\t\t\t\tvisibleList = light._visibleList[pass] = [];\n\t\t\t}\n\n\t\t\tvlen = light._visibleLength[pass] = 0;\n\n\t\t\tfor (i = 0, numInstances = drawCalls.length; i < numInstances; i++) {\n\t\t\t\tmeshInstance = drawCalls[i];\n\t\t\t\tvisible = true;\n\n\t\t\t\tif (meshInstance.cull) {\n\t\t\t\t\tvisible = meshInstance._isVisible(shadowCam);\n\t\t\t\t}\n\n\t\t\t\tif (visible) {\n\t\t\t\t\tvisibleList[vlen] = meshInstance;\n\t\t\t\t\tvlen++;\n\t\t\t\t\tmeshInstance.visibleThisFrame = true;\n\t\t\t\t\tdrawCallAabb = meshInstance.aabb;\n\n\t\t\t\t\tif (emptyAabb) {\n\t\t\t\t\t\tvisibleSceneAabb.copy(drawCallAabb);\n\t\t\t\t\t\temptyAabb = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvisibleSceneAabb.add(drawCallAabb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlight._visibleLength[pass] = vlen;\n\n\t\t\tif (visibleList.length !== vlen) {\n\t\t\t\tvisibleList.length = vlen;\n\t\t\t}\n\n\t\t\tvisibleList.sort(this.depthSortCompare);\n\n\t\t\tvar z = _getZFromAABBSimple(shadowCamView, visibleSceneAabb.getMin(), visibleSceneAabb.getMax());\n\n\t\t\tmaxz = z.max;\n\t\t\tif (z.min > minz) minz = z.min;\n\t\t\tshadowCamNode.setPosition(lightNode.getPosition());\n\t\t\tshadowCamNode.translateLocal(centerx, centery, maxz + directionalShadowEpsilon);\n\t\t\tshadowCam.farClip = maxz - minz;\n\t\t\tvar settings = light._visibleCameraSettings[pass];\n\n\t\t\tif (!settings) {\n\t\t\t\tsettings = light._visibleCameraSettings[pass] = {};\n\t\t\t}\n\n\t\t\tvar lpos = shadowCamNode.getPosition();\n\t\t\tsettings.x = lpos.x;\n\t\t\tsettings.y = lpos.y;\n\t\t\tsettings.z = lpos.z;\n\t\t\tsettings.orthoHeight = shadowCam.orthoHeight;\n\t\t\tsettings.farClip = shadowCam.farClip;\n\t\t};\n\n\t\t_proto.gpuUpdate = function gpuUpdate(drawCalls) {\n\t\t\tthis.updateGpuSkinMatrices(drawCalls);\n\t\t\tthis.updateMorphing(drawCalls);\n\t\t};\n\n\t\t_proto.setSceneConstants = function setSceneConstants() {\n\t\t\tvar i;\n\t\t\tvar device = this.device;\n\t\t\tvar scene = this.scene;\n\t\t\tthis.dispatchGlobalLights(scene);\n\n\t\t\tif (scene.fog !== FOG_NONE) {\n\t\t\t\tthis.fogColor[0] = scene.fogColor.r;\n\t\t\t\tthis.fogColor[1] = scene.fogColor.g;\n\t\t\t\tthis.fogColor[2] = scene.fogColor.b;\n\n\t\t\t\tif (scene.gammaCorrection) {\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\tthis.fogColor[i] = Math.pow(this.fogColor[i], 2.2);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fogColorId.setValue(this.fogColor);\n\n\t\t\t\tif (scene.fog === FOG_LINEAR) {\n\t\t\t\t\tthis.fogStartId.setValue(scene.fogStart);\n\t\t\t\t\tthis.fogEndId.setValue(scene.fogEnd);\n\t\t\t\t} else {\n\t\t\t\t\tthis.fogDensityId.setValue(scene.fogDensity);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._screenSize[0] = device.width;\n\t\t\tthis._screenSize[1] = device.height;\n\t\t\tthis._screenSize[2] = 1 / device.width;\n\t\t\tthis._screenSize[3] = 1 / device.height;\n\t\t\tthis.screenSizeId.setValue(this._screenSize);\n\t\t};\n\n\t\t_proto.updateLightStats = function updateLightStats(comp, compUpdatedFlags) {};\n\n\t\t_proto.renderComposition = function renderComposition(comp) {\n\t\t\tvar device = this.device;\n\t\t\tvar camera;\n\t\t\tvar renderedRt = comp._renderedRt;\n\t\t\tvar renderedByCam = comp._renderedByCam;\n\t\t\tvar renderedLayer = comp._renderedLayer;\n\t\t\tvar renderAction,\n\t\t\t\t\trenderActions = comp._renderActions;\n\t\t\tvar i, layer, layerIndex, transparent, cameras, j, rt, k, processedThisCamera, processedThisCameraAndLayer, processedThisCameraAndRt;\n\n\t\t\tif (this.scene.updateSkybox) {\n\t\t\t\tthis.scene._updateSkybox(device);\n\n\t\t\t\tthis.scene.updateSkybox = false;\n\t\t\t}\n\n\t\t\tthis.beginLayers(comp);\n\n\t\t\tvar updated = comp._update();\n\n\t\t\tif (updated & COMPUPDATED_LIGHTS) {\n\t\t\t\tthis.scene.updateLitShaders = true;\n\t\t\t}\n\n\t\t\tthis.updateLightStats(comp, updated);\n\t\t\tthis.beginFrame(comp);\n\t\t\tthis.setSceneConstants();\n\t\t\tvar renderedLength = 0;\n\t\t\tvar cameraPass;\n\t\t\tvar objects, drawCalls, visible;\n\n\t\t\tfor (i = 0; i < renderActions.length; i++) {\n\t\t\t\trenderAction = renderActions[i];\n\t\t\t\tlayerIndex = renderAction.layerIndex;\n\t\t\t\tlayer = comp.layerList[layerIndex];\n\t\t\t\tif (!layer.enabled || !comp.subLayerEnabled[layerIndex]) continue;\n\t\t\t\ttransparent = comp.subLayerList[layerIndex];\n\t\t\t\tcameraPass = renderAction.cameraIndex;\n\t\t\t\tcamera = layer.cameras[cameraPass];\n\t\t\t\tif (!camera) continue;\n\t\t\t\tcamera.frameBegin(renderAction.renderTarget);\n\t\t\t\tprocessedThisCamera = false;\n\t\t\t\tprocessedThisCameraAndLayer = false;\n\n\t\t\t\tfor (k = 0; k < renderedLength; k++) {\n\t\t\t\t\tif (renderedByCam[k] === camera) {\n\t\t\t\t\t\tprocessedThisCamera = true;\n\n\t\t\t\t\t\tif (renderedLayer[k] === layer) {\n\t\t\t\t\t\t\tprocessedThisCameraAndLayer = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!processedThisCamera) {\n\t\t\t\t\tthis.updateCameraFrustum(camera.camera);\n\t\t\t\t\tthis._camerasRendered++;\n\t\t\t\t}\n\n\t\t\t\tif (!processedThisCameraAndLayer) {\n\t\t\t\t\tthis.cullLights(camera.camera, layer._lights);\n\t\t\t\t}\n\n\t\t\t\tif (!processedThisCamera || !processedThisCameraAndLayer) {\n\t\t\t\t\trenderedByCam[renderedLength] = camera;\n\t\t\t\t\trenderedLayer[renderedLength] = layer;\n\t\t\t\t\trenderedLength++;\n\t\t\t\t}\n\n\t\t\t\tobjects = layer.instances;\n\t\t\t\tvisible = transparent ? objects.visibleTransparent[cameraPass] : objects.visibleOpaque[cameraPass];\n\n\t\t\t\tif (!visible.done) {\n\t\t\t\t\tif (layer.onPreCull) {\n\t\t\t\t\t\tlayer.onPreCull(j);\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawCalls = transparent ? layer.transparentMeshInstances : layer.opaqueMeshInstances;\n\t\t\t\t\tvisible.length = this.cull(camera.camera, drawCalls, visible.list);\n\t\t\t\t\tvisible.done = true;\n\n\t\t\t\t\tif (layer.onPostCull) {\n\t\t\t\t\t\tlayer.onPostCull(cameraPass);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcamera.frameEnd();\n\t\t\t}\n\n\t\t\tvar light, casters;\n\n\t\t\tfor (i = 0; i < comp._lights.length; i++) {\n\t\t\t\tlight = comp._lights[i];\n\t\t\t\tif (!light.visibleThisFrame) continue;\n\t\t\t\tif (light._type === LIGHTTYPE_DIRECTIONAL) continue;\n\t\t\t\tif (!light.castShadows || !light.enabled || light.shadowUpdateMode === SHADOWUPDATE_NONE) continue;\n\t\t\t\tcasters = comp._lightShadowCasters[i];\n\t\t\t\tthis.cullLocalShadowmap(light, casters);\n\t\t\t}\n\n\t\t\tvar globalLightCounter = -1;\n\n\t\t\tfor (i = 0; i < comp._lights.length; i++) {\n\t\t\t\tlight = comp._lights[i];\n\t\t\t\tif (light._type !== LIGHTTYPE_DIRECTIONAL) continue;\n\t\t\t\tglobalLightCounter++;\n\t\t\t\tif (!light.castShadows || !light.enabled || light.shadowUpdateMode === SHADOWUPDATE_NONE) continue;\n\t\t\t\tcasters = comp._lightShadowCasters[i];\n\t\t\t\tcameras = comp._globalLightCameras[globalLightCounter];\n\n\t\t\t\tfor (j = 0; j < cameras.length; j++) {\n\t\t\t\t\tthis.cullDirectionalShadowmap(light, casters, cameras[j].camera, comp._globalLightCameraIds[globalLightCounter][j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.gpuUpdate(comp._meshInstances);\n\t\t\tthis.renderShadows(comp._splitLights[LIGHTTYPE_SPOT]);\n\t\t\tthis.renderShadows(comp._splitLights[LIGHTTYPE_OMNI]);\n\t\t\trenderedLength = 0;\n\n\t\t\tfor (i = 0; i < renderActions.length; i++) {\n\t\t\t\trenderAction = renderActions[i];\n\t\t\t\tlayerIndex = renderAction.layerIndex;\n\t\t\t\tlayer = comp.layerList[layerIndex];\n\t\t\t\tif (!layer.enabled || !comp.subLayerEnabled[layerIndex]) continue;\n\t\t\t\ttransparent = comp.subLayerList[layerIndex];\n\t\t\t\tcameraPass = renderAction.cameraIndex;\n\t\t\t\tcamera = layer.cameras[cameraPass];\n\t\t\t\tif (camera) camera.frameBegin(renderAction.renderTarget);\n\n\t\t\t\tif (!transparent && layer.onPreRenderOpaque) {\n\t\t\t\t\tlayer.onPreRenderOpaque(cameraPass);\n\t\t\t\t} else if (transparent && layer.onPreRenderTransparent) {\n\t\t\t\t\tlayer.onPreRenderTransparent(cameraPass);\n\t\t\t\t}\n\n\t\t\t\tif (!(layer._preRenderCalledForCameras & 1 << cameraPass)) {\n\t\t\t\t\tif (layer.onPreRender) layer.onPreRender(cameraPass);\n\t\t\t\t\tlayer._preRenderCalledForCameras |= 1 << cameraPass;\n\n\t\t\t\t\tif (layer.overrideClear) {\n\t\t\t\t\t\tthis.clearView(camera.camera, renderAction.renderTarget, true, true, layer._clearOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (camera) {\n\t\t\t\t\trt = renderAction.renderTarget;\n\t\t\t\t\tprocessedThisCameraAndRt = false;\n\n\t\t\t\t\tfor (k = 0; k < renderedLength; k++) {\n\t\t\t\t\t\tif (renderedRt[k] === rt && renderedByCam[k] === camera) {\n\t\t\t\t\t\t\tprocessedThisCameraAndRt = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!processedThisCameraAndRt) {\n\t\t\t\t\t\tif (!layer.overrideClear) {\n\t\t\t\t\t\t\tthis.clearView(camera.camera, renderAction.renderTarget, true, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderedRt[renderedLength] = rt;\n\t\t\t\t\t\trenderedByCam[renderedLength] = camera;\n\t\t\t\t\t\trenderedLength++;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderShadows(layer._splitLights[LIGHTTYPE_DIRECTIONAL], cameraPass);\n\n\t\t\t\t\tlayer._sortVisible(transparent, camera.camera.node, cameraPass);\n\n\t\t\t\t\tobjects = layer.instances;\n\t\t\t\t\tvisible = transparent ? objects.visibleTransparent[cameraPass] : objects.visibleOpaque[cameraPass];\n\t\t\t\t\tthis.scene._activeCamera = camera.camera;\n\t\t\t\t\tthis.setCamera(camera.camera, renderAction.renderTarget);\n\t\t\t\t\tthis.renderForward(camera.camera, visible.list, visible.length, layer._splitLights, layer.shaderPass, layer.cullingMask, layer.onDrawCall, layer);\n\t\t\t\t\tdevice.setColorWrite(true, true, true, true);\n\t\t\t\t\tdevice.setStencilTest(false);\n\t\t\t\t\tdevice.setAlphaToCoverage(false);\n\t\t\t\t\tdevice.setDepthBias(false);\n\t\t\t\t\tcamera.frameEnd();\n\t\t\t\t}\n\n\t\t\t\tif (!transparent && layer.onPostRenderOpaque) {\n\t\t\t\t\tlayer.onPostRenderOpaque(cameraPass);\n\t\t\t\t} else if (transparent && layer.onPostRenderTransparent) {\n\t\t\t\t\tlayer.onPostRenderTransparent(cameraPass);\n\t\t\t\t}\n\n\t\t\t\tif (layer.onPostRender && !(layer._postRenderCalledForCameras & 1 << cameraPass)) {\n\t\t\t\t\tlayer._postRenderCounter &= ~(transparent ? 2 : 1);\n\n\t\t\t\t\tif (layer._postRenderCounter === 0) {\n\t\t\t\t\t\tlayer.onPostRender(cameraPass);\n\t\t\t\t\t\tlayer._postRenderCalledForCameras |= 1 << cameraPass;\n\t\t\t\t\t\tlayer._postRenderCounter = layer._postRenderCounterMax;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn ForwardRenderer;\n\t}();\n\n\tvar BasicMaterial = function (_Material) {\n\t\t_inheritsLoose(BasicMaterial, _Material);\n\n\t\tfunction BasicMaterial() {\n\t\t\tvar _this;\n\n\t\t\t_this = _Material.call(this) || this;\n\t\t\t_this.color = new Color(1, 1, 1, 1);\n\t\t\t_this.colorUniform = new Float32Array(4);\n\t\t\t_this.colorMap = null;\n\t\t\t_this.vertexColors = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = BasicMaterial.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new BasicMaterial();\n\n\t\t\tMaterial.prototype._cloneInternal.call(this, clone);\n\n\t\t\tclone.color.copy(this.color);\n\t\t\tclone.colorMap = this.colorMap;\n\t\t\tclone.vertexColors = this.vertexColors;\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.updateUniforms = function updateUniforms() {\n\t\t\tthis.clearParameters();\n\t\t\tthis.colorUniform[0] = this.color.r;\n\t\t\tthis.colorUniform[1] = this.color.g;\n\t\t\tthis.colorUniform[2] = this.color.b;\n\t\t\tthis.colorUniform[3] = this.color.a;\n\t\t\tthis.setParameter('uColor', this.colorUniform);\n\n\t\t\tif (this.colorMap) {\n\t\t\t\tthis.setParameter('texture_diffuseMap', this.colorMap);\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateShader = function updateShader(device, scene, objDefs, staticLightList, pass, sortedLights) {\n\t\t\tvar options = {\n\t\t\t\tskin: !!this.meshInstances[0].skinInstance,\n\t\t\t\tvertexColors: this.vertexColors,\n\t\t\t\tdiffuseMap: !!this.colorMap,\n\t\t\t\tpass: pass\n\t\t\t};\n\t\t\tvar library = device.getProgramLibrary();\n\t\t\tthis.shader = library.getProgram('basic', options);\n\t\t};\n\n\t\treturn BasicMaterial;\n\t}(Material);\n\n\tvar identityGraphNode = new GraphNode();\n\n\tvar ImmediateData = function () {\n\t\tfunction ImmediateData(device) {\n\t\t\tthis.lineVertexFormat = new VertexFormat(device, [{\n\t\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\t\tcomponents: 3,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_COLOR,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_UINT8,\n\t\t\t\tnormalize: true\n\t\t\t}]);\n\t\t\tthis.lineBatches = [];\n\t\t\tthis.layers = [];\n\t\t\tthis.layerToBatch = {};\n\t\t\tthis.quadMesh = null;\n\t\t\tthis.cubeLocalPos = null;\n\t\t\tthis.cubeWorldPos = null;\n\t\t}\n\n\t\tvar _proto = ImmediateData.prototype;\n\n\t\t_proto.addLayer = function addLayer(layer) {\n\t\t\tif (this.layers.indexOf(layer) < 0) {\n\t\t\t\tthis.layers.push(layer);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getLayerIdx = function getLayerIdx(layer) {\n\t\t\treturn this.layerToBatch[layer.id];\n\t\t};\n\n\t\t_proto.addLayerIdx = function addLayerIdx(idx, layer) {\n\t\t\tthis.layerToBatch[layer.id] = idx;\n\t\t};\n\n\t\treturn ImmediateData;\n\t}();\n\n\tvar LineBatch = function () {\n\t\tfunction LineBatch() {\n\t\t\tthis.numLinesAllocated = 128;\n\t\t\tthis.vb = null;\n\t\t\tthis.vbRam = null;\n\t\t\tthis.mesh = null;\n\t\t\tthis.linesUsed = 0;\n\t\t\tthis.material = null;\n\t\t\tthis.meshInstance = null;\n\t\t\tthis.layer = null;\n\t\t}\n\n\t\tvar _proto2 = LineBatch.prototype;\n\n\t\t_proto2.init = function init(device, vertexFormat, layer, linesToAdd) {\n\t\t\tif (!this.mesh) {\n\t\t\t\tthis.mesh = new Mesh(device);\n\t\t\t\tthis.mesh.primitive[0].type = PRIMITIVE_LINES;\n\t\t\t\tthis.mesh.primitive[0].base = 0;\n\t\t\t\tthis.mesh.primitive[0].indexed = false;\n\t\t\t\tthis.material = new BasicMaterial();\n\t\t\t\tthis.material.vertexColors = true;\n\t\t\t\tthis.material.blend = true;\n\t\t\t\tthis.material.blendType = BLEND_NORMAL;\n\t\t\t\tthis.material.update();\n\t\t\t}\n\n\t\t\tthis.layer = layer;\n\n\t\t\twhile (this.linesUsed + linesToAdd > this.numLinesAllocated) {\n\t\t\t\tif (this.vb) {\n\t\t\t\t\tthis.vb.destroy();\n\t\t\t\t\tthis.vb = null;\n\t\t\t\t}\n\n\t\t\t\tthis.numLinesAllocated *= 2;\n\t\t\t}\n\n\t\t\tthis.vertexFormat = vertexFormat;\n\n\t\t\tif (!this.vb) {\n\t\t\t\tthis.vb = new VertexBuffer(device, vertexFormat, this.numLinesAllocated * 2, BUFFER_DYNAMIC);\n\t\t\t\tthis.mesh.vertexBuffer = this.vb;\n\t\t\t\tthis.vbRam = new DataView(this.vb.lock());\n\n\t\t\t\tif (!this.meshInstance) {\n\t\t\t\t\tidentityGraphNode.worldTransform = Mat4.IDENTITY;\n\t\t\t\t\tidentityGraphNode._dirtyWorld = identityGraphNode._dirtyNormal = false;\n\t\t\t\t\tthis.meshInstance = new MeshInstance(identityGraphNode, this.mesh, this.material);\n\t\t\t\t\tthis.meshInstance.cull = false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.addLines = function addLines(position, color) {\n\t\t\tvar multiColor = !!color.length;\n\t\t\tvar offset = this.linesUsed * 2 * this.vertexFormat.size;\n\t\t\tvar clr;\n\n\t\t\tfor (var i = 0; i < position.length; i++) {\n\t\t\t\tthis.vbRam.setFloat32(offset, position[i].x, true);\n\t\t\t\toffset += 4;\n\t\t\t\tthis.vbRam.setFloat32(offset, position[i].y, true);\n\t\t\t\toffset += 4;\n\t\t\t\tthis.vbRam.setFloat32(offset, position[i].z, true);\n\t\t\t\toffset += 4;\n\t\t\t\tclr = multiColor ? color[i] : color;\n\t\t\t\tthis.vbRam.setUint8(offset, clr.r * 255);\n\t\t\t\toffset += 1;\n\t\t\t\tthis.vbRam.setUint8(offset, clr.g * 255);\n\t\t\t\toffset += 1;\n\t\t\t\tthis.vbRam.setUint8(offset, clr.b * 255);\n\t\t\t\toffset += 1;\n\t\t\t\tthis.vbRam.setUint8(offset, clr.a * 255);\n\t\t\t\toffset += 1;\n\t\t\t}\n\n\t\t\tthis.linesUsed += position.length / 2;\n\t\t};\n\n\t\t_proto2.finalize = function finalize(meshInstanceArray) {\n\t\t\tif (this.linesUsed > 0) {\n\t\t\t\tthis.vb.setData(this.vbRam.buffer);\n\t\t\t\tthis.mesh.primitive[0].count = this.linesUsed * 2;\n\t\t\t\tmeshInstanceArray[0] = this.meshInstance;\n\t\t\t\tthis.layer.addMeshInstances(meshInstanceArray, true);\n\t\t\t\tthis.linesUsed = 0;\n\t\t\t}\n\t\t};\n\n\t\treturn LineBatch;\n\t}();\n\n\tvar RenderAction = function RenderAction() {\n\t\tthis.layerIndex = 0;\n\t\tthis.cameraIndex = 0;\n\t\tthis.renderTarget = null;\n\t};\n\n\tvar LayerComposition = function (_EventHandler) {\n\t\t_inheritsLoose(LayerComposition, _EventHandler);\n\n\t\tfunction LayerComposition() {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.layerList = [];\n\t\t\t_this.subLayerList = [];\n\t\t\t_this.subLayerEnabled = [];\n\t\t\t_this._opaqueOrder = {};\n\t\t\t_this._transparentOrder = {};\n\t\t\t_this._dirty = false;\n\t\t\t_this._dirtyBlend = false;\n\t\t\t_this._dirtyLights = false;\n\t\t\t_this._dirtyCameras = false;\n\t\t\t_this._meshInstances = [];\n\t\t\t_this._meshInstancesSet = new Set();\n\t\t\t_this._lights = [];\n\t\t\t_this._lightsMap = new Map();\n\t\t\t_this._lightShadowCasters = [];\n\t\t\t_this._lightShadowCastersSets = [];\n\t\t\t_this._splitLights = [[], [], []];\n\t\t\t_this._globalLightCameras = [];\n\t\t\t_this.cameras = [];\n\t\t\t_this._globalLightCameraIds = [];\n\t\t\t_this._renderedRt = [];\n\t\t\t_this._renderedByCam = [];\n\t\t\t_this._renderedLayer = [];\n\t\t\t_this._renderActions = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LayerComposition.prototype;\n\n\t\t_proto._splitLightsArray = function _splitLightsArray(target) {\n\t\t\tvar light;\n\t\t\tvar lights = target._lights;\n\t\t\ttarget._splitLights[LIGHTTYPE_DIRECTIONAL].length = 0;\n\t\t\ttarget._splitLights[LIGHTTYPE_OMNI].length = 0;\n\t\t\ttarget._splitLights[LIGHTTYPE_SPOT].length = 0;\n\n\t\t\tfor (var i = 0; i < lights.length; i++) {\n\t\t\t\tlight = lights[i];\n\n\t\t\t\tif (light.enabled) {\n\t\t\t\t\ttarget._splitLights[light._type].push(light);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._update = function _update() {\n\t\t\tvar i, j, k, l;\n\t\t\tvar layer;\n\t\t\tvar len = this.layerList.length;\n\t\t\tvar result = 0;\n\n\t\t\tif (!this._dirty || !this._dirtyLights || !this._dirtyCameras) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\tif (layer._dirty) {\n\t\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (layer._dirtyLights) {\n\t\t\t\t\t\tthis._dirtyLights = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (layer._dirtyCameras) {\n\t\t\t\t\t\tthis._dirtyCameras = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction addUniqueMeshInstance(destArray, destSet, srcArray) {\n\t\t\t\tvar meshInst,\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tdirtyBlend = false;\n\t\t\t\tvar srcLen = srcArray.length;\n\n\t\t\t\tfor (var s = 0; s < srcLen; s++) {\n\t\t\t\t\tmeshInst = srcArray[s];\n\n\t\t\t\t\tif (!destSet.has(meshInst)) {\n\t\t\t\t\t\tdestSet.add(meshInst);\n\t\t\t\t\t\tdestArray.push(meshInst);\n\t\t\t\t\t\tmaterial = meshInst.material;\n\n\t\t\t\t\t\tif (material && material._dirtyBlend) {\n\t\t\t\t\t\t\tdirtyBlend = true;\n\t\t\t\t\t\t\tmaterial._dirtyBlend = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn dirtyBlend;\n\t\t\t}\n\n\t\t\tif (this._dirty) {\n\t\t\t\tresult |= COMPUPDATED_INSTANCES;\n\t\t\t\tthis._meshInstances.length = 0;\n\n\t\t\t\tthis._meshInstancesSet.clear();\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\tif (!layer.passThrough) {\n\t\t\t\t\t\tthis._dirtyBlend = addUniqueMeshInstance(this._meshInstances, this._meshInstancesSet, layer.opaqueMeshInstances) || this._dirtyBlend;\n\t\t\t\t\t\tthis._dirtyBlend = addUniqueMeshInstance(this._meshInstances, this._meshInstancesSet, layer.transparentMeshInstances) || this._dirtyBlend;\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer._dirty = false;\n\t\t\t\t\tlayer._version++;\n\t\t\t\t}\n\n\t\t\t\tthis._dirty = false;\n\t\t\t}\n\n\t\t\tfunction moveByBlendType(dest, src, moveTransparent) {\n\t\t\t\tvar material, isTransparent;\n\n\t\t\t\tfor (var s = 0; s < src.length;) {\n\t\t\t\t\tmaterial = src[s].material;\n\t\t\t\t\tisTransparent = material && material.blendType !== BLEND_NONE;\n\n\t\t\t\t\tif (isTransparent === moveTransparent) {\n\t\t\t\t\t\tdest.push(src[s]);\n\t\t\t\t\t\tsrc[s] = src[src.length - 1];\n\t\t\t\t\t\tsrc.length--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._dirtyBlend) {\n\t\t\t\tresult |= COMPUPDATED_BLEND;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\tif (!layer.passThrough) {\n\t\t\t\t\t\tmoveByBlendType(layer.opaqueMeshInstances, layer.transparentMeshInstances, false);\n\t\t\t\t\t\tmoveByBlendType(layer.transparentMeshInstances, layer.opaqueMeshInstances, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._dirtyBlend = false;\n\t\t\t}\n\n\t\t\tvar light, lights;\n\n\t\t\tif (this._dirtyLights) {\n\t\t\t\tresult |= COMPUPDATED_LIGHTS;\n\t\t\t\tthis._lights.length = 0;\n\n\t\t\t\tthis._lightsMap.clear();\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\t\t\t\t\tlights = layer._lights;\n\n\t\t\t\t\tfor (j = 0; j < lights.length; j++) {\n\t\t\t\t\t\tlight = lights[j];\n\n\t\t\t\t\t\tif (!this._lightsMap.has(light)) {\n\t\t\t\t\t\t\tthis._lightsMap.set(light, this._lights.length);\n\n\t\t\t\t\t\t\tthis._lights.push(light);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar lightCount = this._lights.length;\n\t\t\t\tthis._lightShadowCasters.length = lightCount;\n\t\t\t\tthis._lightShadowCastersSets.length = lightCount;\n\n\t\t\t\tfor (i = 0; i < lightCount; i++) {\n\t\t\t\t\tif (this._lightShadowCasters[i]) {\n\t\t\t\t\t\tthis._lightShadowCasters[i].length = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._lightShadowCasters[i] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._lightShadowCastersSets[i]) {\n\t\t\t\t\t\tthis._lightShadowCastersSets[i].clear();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._lightShadowCastersSets[i] = new Set();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._splitLightsArray(this);\n\n\t\t\t\tthis._dirtyLights = false;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\tthis._splitLightsArray(layer);\n\n\t\t\t\t\tlayer._dirtyLights = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar casters, castersSet;\n\t\t\tvar meshInstances, meshInstance;\n\t\t\tvar lightIndex;\n\n\t\t\tif (result) {\n\t\t\t\tfor (i = 0; i < this._lightShadowCasters.length; i++) {\n\t\t\t\t\tthis._lightShadowCasters[i].length = 0;\n\n\t\t\t\t\tthis._lightShadowCastersSets[i].clear();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\t\t\t\t\tlights = layer._lights;\n\n\t\t\t\t\tfor (j = 0; j < lights.length; j++) {\n\t\t\t\t\t\tlightIndex = this._lightsMap.get(lights[j]);\n\t\t\t\t\t\tcasters = this._lightShadowCasters[lightIndex];\n\t\t\t\t\t\tcastersSet = this._lightShadowCastersSets[lightIndex];\n\t\t\t\t\t\tmeshInstances = layer.shadowCasters;\n\n\t\t\t\t\t\tfor (k = 0; k < meshInstances.length; k++) {\n\t\t\t\t\t\t\tmeshInstance = meshInstances[k];\n\n\t\t\t\t\t\t\tif (!castersSet.has(meshInstance)) {\n\t\t\t\t\t\t\t\tcastersSet.add(meshInstance);\n\t\t\t\t\t\t\t\tcasters.push(meshInstance);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result & COMPUPDATED_LIGHTS || this._dirtyCameras) {\n\t\t\t\tthis._globalLightCameras.length = 0;\n\t\t\t\tvar globalLights = this._splitLights[LIGHTTYPE_DIRECTIONAL];\n\n\t\t\t\tfor (l = 0; l < globalLights.length; l++) {\n\t\t\t\t\tlight = globalLights[l];\n\t\t\t\t\tthis._globalLightCameras[l] = [];\n\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\t\tif (layer._splitLights[LIGHTTYPE_DIRECTIONAL].indexOf(light) >= 0) {\n\t\t\t\t\t\t\tfor (k = 0; k < layer.cameras.length; k++) {\n\t\t\t\t\t\t\t\tif (this._globalLightCameras[l].indexOf(layer.cameras[k]) < 0) {\n\t\t\t\t\t\t\t\t\tthis._globalLightCameras[l].push(layer.cameras[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar renderActionCount = 0;\n\t\t\tvar renderActions = this._renderActions;\n\n\t\t\tfunction addRenderAction(layer, layerIndex, cameraIndex) {\n\t\t\t\tvar renderAction = renderActions[renderActionCount];\n\n\t\t\t\tif (!renderAction) {\n\t\t\t\t\trenderAction = renderActions[renderActionCount] = new RenderAction();\n\t\t\t\t}\n\n\t\t\t\trenderAction.layerIndex = layerIndex;\n\t\t\t\trenderAction.cameraIndex = cameraIndex;\n\t\t\t\tvar camera = layer.cameras[cameraIndex];\n\t\t\t\tvar cameraTarget = camera ? camera.renderTarget : undefined;\n\t\t\t\trenderAction.renderTarget = cameraTarget ? cameraTarget : layer.renderTarget;\n\t\t\t\trenderActionCount++;\n\t\t\t}\n\n\t\t\tvar camera, index, cameraIndex;\n\n\t\t\tif (this._dirtyCameras) {\n\t\t\t\tthis._dirtyCameras = false;\n\t\t\t\tresult |= COMPUPDATED_CAMERAS;\n\t\t\t\tthis.cameras.length = 0;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tlayer = this.layerList[i];\n\t\t\t\t\tlayer._dirtyCameras = false;\n\n\t\t\t\t\tfor (j = 0; j < layer.cameras.length; j++) {\n\t\t\t\t\t\tcamera = layer.cameras[j];\n\t\t\t\t\t\tindex = this.cameras.indexOf(camera);\n\n\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\tthis.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar hash, groupLength;\n\t\t\t\tvar skipCount = 0;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (skipCount) {\n\t\t\t\t\t\tskipCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = this.layerList[i];\n\n\t\t\t\t\tif (layer.cameras.length === 0 && !layer.isPostEffect) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\thash = layer._cameraHash;\n\n\t\t\t\t\tif (hash === 0) {\n\t\t\t\t\t\taddRenderAction(layer, i, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupLength = 1;\n\n\t\t\t\t\t\tfor (j = i + 1; j < len; j++) {\n\t\t\t\t\t\t\tif (hash !== this.layerList[j]._cameraHash) {\n\t\t\t\t\t\t\t\tgroupLength = j - i - 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (j === len - 1) {\n\t\t\t\t\t\t\t\tgroupLength = j - i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupLength === 1) {\n\t\t\t\t\t\t\tfor (cameraIndex = 0; cameraIndex < layer.cameras.length; cameraIndex++) {\n\t\t\t\t\t\t\t\taddRenderAction(layer, i, cameraIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (cameraIndex = 0; cameraIndex < layer.cameras.length; cameraIndex++) {\n\t\t\t\t\t\t\t\tfor (j = 0; j <= groupLength; j++) {\n\t\t\t\t\t\t\t\t\taddRenderAction(layer, i + j, cameraIndex);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tskipCount = groupLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._renderActions.length = renderActionCount;\n\t\t\t}\n\n\t\t\tvar arr;\n\n\t\t\tif (result & COMPUPDATED_LIGHTS || result & COMPUPDATED_CAMERAS) {\n\t\t\t\tthis._globalLightCameraIds.length = 0;\n\n\t\t\t\tfor (l = 0; l < this._globalLightCameras.length; l++) {\n\t\t\t\t\tarr = [];\n\n\t\t\t\t\tfor (i = 0; i < this._globalLightCameras[l].length; i++) {\n\t\t\t\t\t\tindex = this.cameras.indexOf(this._globalLightCameras[l][i]);\n\n\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarr.push(index);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._globalLightCameraIds.push(arr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._isLayerAdded = function _isLayerAdded(layer) {\n\t\t\tif (this.layerList.indexOf(layer) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto._isSublayerAdded = function _isSublayerAdded(layer, transparent) {\n\t\t\tfor (var i = 0; i < this.layerList.length; i++) {\n\t\t\t\tif (this.layerList[i] === layer && this.subLayerList[i] === transparent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.push = function push(layer) {\n\t\t\tif (this._isLayerAdded(layer)) return;\n\t\t\tthis.layerList.push(layer);\n\t\t\tthis.layerList.push(layer);\n\t\t\tthis._opaqueOrder[layer.id] = this.subLayerList.push(false) - 1;\n\t\t\tthis._transparentOrder[layer.id] = this.subLayerList.push(true) - 1;\n\t\t\tthis.subLayerEnabled.push(true);\n\t\t\tthis.subLayerEnabled.push(true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.insert = function insert(layer, index) {\n\t\t\tif (this._isLayerAdded(layer)) return;\n\t\t\tthis.layerList.splice(index, 0, layer, layer);\n\t\t\tthis.subLayerList.splice(index, 0, false, true);\n\t\t\tvar count = this.layerList.length;\n\n\t\t\tthis._updateOpaqueOrder(index, count - 1);\n\n\t\t\tthis._updateTransparentOrder(index, count - 1);\n\n\t\t\tthis.subLayerEnabled.splice(index, 0, true, true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.remove = function remove(layer) {\n\t\t\tvar id = this.layerList.indexOf(layer);\n\t\t\tdelete this._opaqueOrder[id];\n\t\t\tdelete this._transparentOrder[id];\n\n\t\t\twhile (id >= 0) {\n\t\t\t\tthis.layerList.splice(id, 1);\n\t\t\t\tthis.subLayerList.splice(id, 1);\n\t\t\t\tthis.subLayerEnabled.splice(id, 1);\n\t\t\t\tid = this.layerList.indexOf(layer);\n\t\t\t\tthis._dirty = true;\n\t\t\t\tthis._dirtyLights = true;\n\t\t\t\tthis._dirtyCameras = true;\n\t\t\t\tthis.fire(\"remove\", layer);\n\t\t\t}\n\n\t\t\tvar count = this.layerList.length;\n\n\t\t\tthis._updateOpaqueOrder(0, count - 1);\n\n\t\t\tthis._updateTransparentOrder(0, count - 1);\n\t\t};\n\n\t\t_proto.pushOpaque = function pushOpaque(layer) {\n\t\t\tif (this._isSublayerAdded(layer, false)) return;\n\t\t\tthis.layerList.push(layer);\n\t\t\tthis._opaqueOrder[layer.id] = this.subLayerList.push(false) - 1;\n\t\t\tthis.subLayerEnabled.push(true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.insertOpaque = function insertOpaque(layer, index) {\n\t\t\tif (this._isSublayerAdded(layer, false)) return;\n\t\t\tthis.layerList.splice(index, 0, layer);\n\t\t\tthis.subLayerList.splice(index, 0, false);\n\t\t\tvar count = this.subLayerList.length;\n\n\t\t\tthis._updateOpaqueOrder(index, count - 1);\n\n\t\t\tthis.subLayerEnabled.splice(index, 0, true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.removeOpaque = function removeOpaque(layer) {\n\t\t\tfor (var i = 0, len = this.layerList.length; i < len; i++) {\n\t\t\t\tif (this.layerList[i] === layer && !this.subLayerList[i]) {\n\t\t\t\t\tthis.layerList.splice(i, 1);\n\t\t\t\t\tthis.subLayerList.splice(i, 1);\n\t\t\t\t\tlen--;\n\n\t\t\t\t\tthis._updateOpaqueOrder(i, len - 1);\n\n\t\t\t\t\tthis.subLayerEnabled.splice(i, 1);\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._dirtyLights = true;\n\t\t\t\t\tthis._dirtyCameras = true;\n\n\t\t\t\t\tif (this.layerList.indexOf(layer) < 0) {\n\t\t\t\t\t\tthis.fire(\"remove\", layer);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.pushTransparent = function pushTransparent(layer) {\n\t\t\tif (this._isSublayerAdded(layer, true)) return;\n\t\t\tthis.layerList.push(layer);\n\t\t\tthis._transparentOrder[layer.id] = this.subLayerList.push(true) - 1;\n\t\t\tthis.subLayerEnabled.push(true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.insertTransparent = function insertTransparent(layer, index) {\n\t\t\tif (this._isSublayerAdded(layer, true)) return;\n\t\t\tthis.layerList.splice(index, 0, layer);\n\t\t\tthis.subLayerList.splice(index, 0, true);\n\t\t\tvar count = this.subLayerList.length;\n\n\t\t\tthis._updateTransparentOrder(index, count - 1);\n\n\t\t\tthis.subLayerEnabled.splice(index, 0, true);\n\t\t\tthis._dirty = true;\n\t\t\tthis._dirtyLights = true;\n\t\t\tthis._dirtyCameras = true;\n\t\t\tthis.fire(\"add\", layer);\n\t\t};\n\n\t\t_proto.removeTransparent = function removeTransparent(layer) {\n\t\t\tfor (var i = 0, len = this.layerList.length; i < len; i++) {\n\t\t\t\tif (this.layerList[i] === layer && this.subLayerList[i]) {\n\t\t\t\t\tthis.layerList.splice(i, 1);\n\t\t\t\t\tthis.subLayerList.splice(i, 1);\n\t\t\t\t\tlen--;\n\n\t\t\t\t\tthis._updateTransparentOrder(i, len - 1);\n\n\t\t\t\t\tthis.subLayerEnabled.splice(i, 1);\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._dirtyLights = true;\n\t\t\t\t\tthis._dirtyCameras = true;\n\n\t\t\t\t\tif (this.layerList.indexOf(layer) < 0) {\n\t\t\t\t\t\tthis.fire(\"remove\", layer);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._getSublayerIndex = function _getSublayerIndex(layer, transparent) {\n\t\t\tvar id = this.layerList.indexOf(layer);\n\t\t\tif (id < 0) return -1;\n\n\t\t\tif (this.subLayerList[id] !== transparent) {\n\t\t\t\tid = this.layerList.indexOf(layer, id + 1);\n\t\t\t\tif (id < 0) return -1;\n\n\t\t\t\tif (this.subLayerList[id] !== transparent) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn id;\n\t\t};\n\n\t\t_proto.getOpaqueIndex = function getOpaqueIndex(layer) {\n\t\t\treturn this._getSublayerIndex(layer, false);\n\t\t};\n\n\t\t_proto.getTransparentIndex = function getTransparentIndex(layer) {\n\t\t\treturn this._getSublayerIndex(layer, true);\n\t\t};\n\n\t\t_proto.getLayerById = function getLayerById(id) {\n\t\t\tfor (var i = 0; i < this.layerList.length; i++) {\n\t\t\t\tif (this.layerList[i].id === id) return this.layerList[i];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.getLayerByName = function getLayerByName(name) {\n\t\t\tfor (var i = 0; i < this.layerList.length; i++) {\n\t\t\t\tif (this.layerList[i].name === name) return this.layerList[i];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._updateOpaqueOrder = function _updateOpaqueOrder(startIndex, endIndex) {\n\t\t\tfor (var i = startIndex; i <= endIndex; i++) {\n\t\t\t\tif (this.subLayerList[i] === false) {\n\t\t\t\t\tthis._opaqueOrder[this.layerList[i].id] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateTransparentOrder = function _updateTransparentOrder(startIndex, endIndex) {\n\t\t\tfor (var i = startIndex; i <= endIndex; i++) {\n\t\t\t\tif (this.subLayerList[i] === true) {\n\t\t\t\t\tthis._transparentOrder[this.layerList[i].id] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._sortLayersDescending = function _sortLayersDescending(layersA, layersB, order) {\n\t\t\tvar i = 0;\n\t\t\tvar len = 0;\n\t\t\tvar id = 0;\n\t\t\tvar topLayerA = -1;\n\t\t\tvar topLayerB = -1;\n\n\t\t\tfor (i = 0, len = layersA.length; i < len; i++) {\n\t\t\t\tid = layersA[i];\n\n\t\t\t\tif (order.hasOwnProperty(id)) {\n\t\t\t\t\ttopLayerA = Math.max(topLayerA, order[id]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0, len = layersB.length; i < len; i++) {\n\t\t\t\tid = layersB[i];\n\n\t\t\t\tif (order.hasOwnProperty(id)) {\n\t\t\t\t\ttopLayerB = Math.max(topLayerB, order[id]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (topLayerA === -1 && topLayerB !== -1) {\n\t\t\t\treturn 1;\n\t\t\t} else if (topLayerB === -1 && topLayerA !== -1) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn topLayerB - topLayerA;\n\t\t};\n\n\t\t_proto.sortTransparentLayers = function sortTransparentLayers(layersA, layersB) {\n\t\t\treturn this._sortLayersDescending(layersA, layersB, this._transparentOrder);\n\t\t};\n\n\t\t_proto.sortOpaqueLayers = function sortOpaqueLayers(layersA, layersB) {\n\t\t\treturn this._sortLayersDescending(layersA, layersB, this._opaqueOrder);\n\t\t};\n\n\t\treturn LayerComposition;\n\t}(EventHandler);\n\n\tvar maxSize = 2048;\n\tvar maskBaked = 2;\n\tvar maskLightmap = 4;\n\tvar sceneLightmaps = [];\n\tvar sceneLightmapsNode = [];\n\tvar lmCamera;\n\tvar tempVec = new Vec3();\n\tvar bounds = new BoundingBox();\n\tvar lightBounds = new BoundingBox();\n\tvar tempSphere$1 = {};\n\tvar PASS_COLOR = 0;\n\tvar PASS_DIR = 1;\n\tvar passTexName = [\"texture_lightMap\", \"texture_dirLightMap\"];\n\tvar passMaterial = [];\n\n\tfunction collectModels(node, nodes, nodesMeshInstances, allNodes) {\n\t\tif (!node.enabled) return;\n\t\tvar i, meshInstances;\n\n\t\tif (node.model && node.model.model && node.model.enabled) {\n\t\t\tif (allNodes) allNodes.push(node);\n\n\t\t\tif (node.model.lightmapped) {\n\t\t\t\tif (nodes) {\n\t\t\t\t\tmeshInstances = node.model.model.meshInstances;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (node.render && node.render.enabled) {\n\t\t\tif (allNodes) allNodes.push(node);\n\n\t\t\tif (node.render.lightmapped) {\n\t\t\t\tif (nodes) {\n\t\t\t\t\tmeshInstances = node.render.meshInstances;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (meshInstances) {\n\t\t\tvar hasUv1 = true;\n\n\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\tif (!meshInstances[i].mesh.vertexBuffer.format.hasUv1) {\n\t\t\t\t\thasUv1 = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasUv1) {\n\t\t\t\tvar j;\n\t\t\t\tvar isInstance;\n\t\t\t\tvar notInstancedMeshInstances = [];\n\n\t\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\tisInstance = false;\n\n\t\t\t\t\tfor (j = 0; j < meshInstances.length; j++) {\n\t\t\t\t\t\tif (i !== j) {\n\t\t\t\t\t\t\tif (meshInstances[i].mesh === meshInstances[j].mesh) {\n\t\t\t\t\t\t\t\tisInstance = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isInstance) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t\tnodesMeshInstances.push([meshInstances[i]]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotInstancedMeshInstances.push(meshInstances[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (notInstancedMeshInstances.length > 0) {\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t\tnodesMeshInstances.push(notInstancedMeshInstances);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < node._children.length; i++) {\n\t\t\tcollectModels(node._children[i], nodes, nodesMeshInstances, allNodes);\n\t\t}\n\t}\n\n\tvar Lightmapper = function () {\n\t\tfunction Lightmapper(device, root, scene, renderer, assets) {\n\t\t\tthis.device = device;\n\t\t\tthis.root = root;\n\t\t\tthis.scene = scene;\n\t\t\tthis.renderer = renderer;\n\t\t\tthis.assets = assets;\n\t\t}\n\n\t\tvar _proto = Lightmapper.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.device = null;\n\t\t\tthis.root = null;\n\t\t\tthis.scene = null;\n\t\t\tthis.renderer = null;\n\t\t\tthis.assets = null;\n\t\t};\n\n\t\t_proto.calculateLightmapSize = function calculateLightmapSize(node) {\n\t\t\tvar data, parent;\n\t\t\tvar sizeMult = this.scene.lightmapSizeMultiplier || 16;\n\t\t\tvar scale = tempVec;\n\t\t\tvar srcArea, lightmapSizeMultiplier;\n\n\t\t\tif (node.model) {\n\t\t\t\tlightmapSizeMultiplier = node.model.lightmapSizeMultiplier;\n\n\t\t\t\tif (node.model.asset) {\n\t\t\t\t\tdata = this.assets.get(node.model.asset).data;\n\n\t\t\t\t\tif (data.area) {\n\t\t\t\t\t\tsrcArea = data.area;\n\t\t\t\t\t}\n\t\t\t\t} else if (node.model._area) {\n\t\t\t\t\tdata = node.model;\n\n\t\t\t\t\tif (data._area) {\n\t\t\t\t\t\tsrcArea = data._area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (node.render) {\n\t\t\t\tlightmapSizeMultiplier = node.render.lightmapSizeMultiplier;\n\n\t\t\t\tif (node.render.type !== 'asset') {\n\t\t\t\t\tif (node.render._area) {\n\t\t\t\t\t\tdata = node.render;\n\n\t\t\t\t\t\tif (data._area) {\n\t\t\t\t\t\t\tsrcArea = data._area;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar area = {\n\t\t\t\tx: 1,\n\t\t\t\ty: 1,\n\t\t\t\tz: 1,\n\t\t\t\tuv: 1\n\t\t\t};\n\n\t\t\tif (srcArea) {\n\t\t\t\tarea.x = srcArea.x;\n\t\t\t\tarea.y = srcArea.y;\n\t\t\t\tarea.z = srcArea.z;\n\t\t\t\tarea.uv = srcArea.uv;\n\t\t\t}\n\n\t\t\tvar areaMult = lightmapSizeMultiplier || 1;\n\t\t\tarea.x *= areaMult;\n\t\t\tarea.y *= areaMult;\n\t\t\tarea.z *= areaMult;\n\t\t\tscale.copy(node.localScale);\n\t\t\tparent = node._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tscale.mul(parent.localScale);\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\n\t\t\tscale.x = Math.abs(scale.x);\n\t\t\tscale.y = Math.abs(scale.y);\n\t\t\tscale.z = Math.abs(scale.z);\n\t\t\tvar totalArea = area.x * scale.y * scale.z + area.y * scale.x * scale.z + area.z * scale.x * scale.y;\n\t\t\ttotalArea /= area.uv;\n\t\t\ttotalArea = Math.sqrt(totalArea);\n\t\t\treturn Math.min(math.nextPowerOfTwo(totalArea * sizeMult), this.scene.lightmapMaxResolution || maxSize);\n\t\t};\n\n\t\t_proto.bake = function bake(nodes, mode) {\n\t\t\tvar i, j;\n\t\t\tvar device = this.device;\n\t\t\tvar scene = this.scene;\n\t\t\tvar passCount = 1;\n\t\t\tif (mode === undefined) mode = BAKE_COLORDIR;\n\t\t\tif (mode === BAKE_COLORDIR) passCount = 2;\n\t\t\tvar pass;\n\t\t\tvar allNodes = [];\n\t\t\tvar nodesMeshInstances = [];\n\n\t\t\tif (!nodes) {\n\t\t\t\tfor (i = 0; i < sceneLightmaps.length; i++) {\n\t\t\t\t\tfor (j = 0; j < sceneLightmaps[i].length; j++) {\n\t\t\t\t\t\tsceneLightmaps[i][j].destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsceneLightmaps = [];\n\t\t\t\tsceneLightmapsNode = [];\n\t\t\t\tnodes = [];\n\t\t\t\tcollectModels(this.root, nodes, nodesMeshInstances, allNodes);\n\t\t\t} else {\n\t\t\t\tvar k;\n\n\t\t\t\tfor (i = sceneLightmapsNode.length - 1; i >= 0; i--) {\n\t\t\t\t\tfor (j = 0; j < nodes.length; j++) {\n\t\t\t\t\t\tif (sceneLightmapsNode[i] === nodes[j]) {\n\t\t\t\t\t\t\tfor (k = 0; k < sceneLightmaps[i].length; k++) {\n\t\t\t\t\t\t\t\tsceneLightmaps[i][k].destroy();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsceneLightmaps.splice(i, 1);\n\t\t\t\t\t\t\tsceneLightmapsNode.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar _nodes = [];\n\n\t\t\t\tfor (i = 0; i < nodes.length; i++) {\n\t\t\t\t\tcollectModels(nodes[i], _nodes, nodesMeshInstances);\n\t\t\t\t}\n\n\t\t\t\tnodes = _nodes;\n\t\t\t\tcollectModels(this.root, null, null, allNodes);\n\t\t\t}\n\n\t\t\tif (nodes.length === 0) {\n\t\t\t\tdevice.fire('lightmapper:end', {\n\t\t\t\t\ttimestamp: now(),\n\t\t\t\t\ttarget: this\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar revertStatic = false;\n\n\t\t\tif (scene._needsStaticPrepare) {\n\t\t\t\tscene._needsStaticPrepare = false;\n\t\t\t\trevertStatic = true;\n\t\t\t}\n\t\t\tvar lmaps = [[], []];\n\t\t\tvar texPool = {};\n\t\t\tvar size;\n\t\t\tvar tex;\n\t\t\tvar blackTex = new Texture(this.device, {\n\t\t\t\twidth: 4,\n\t\t\t\theight: 4,\n\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\ttype: TEXTURETYPE_RGBM\n\t\t\t});\n\t\t\tblackTex.name = 'lightmap';\n\n\t\t\tfor (i = 0; i < nodes.length; i++) {\n\t\t\t\tsize = this.calculateLightmapSize(nodes[i]);\n\n\t\t\t\tfor (pass = 0; pass < passCount; pass++) {\n\t\t\t\t\ttex = new Texture(device, {\n\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\theight: size,\n\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\tmipmaps: false,\n\t\t\t\t\t\ttype: pass === PASS_COLOR ? TEXTURETYPE_RGBM : TEXTURETYPE_DEFAULT,\n\t\t\t\t\t\tminFilter: FILTER_NEAREST,\n\t\t\t\t\t\tmagFilter: FILTER_NEAREST\n\t\t\t\t\t});\n\t\t\t\t\ttex.name = 'lightmap';\n\t\t\t\t\tlmaps[pass].push(tex);\n\t\t\t\t}\n\n\t\t\t\tif (!texPool[size]) {\n\t\t\t\t\tvar tex2 = new Texture(device, {\n\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\theight: size,\n\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\tmipmaps: false,\n\t\t\t\t\t\ttype: TEXTURETYPE_RGBM,\n\t\t\t\t\t\tminFilter: FILTER_NEAREST,\n\t\t\t\t\t\tmagFilter: FILTER_NEAREST\n\t\t\t\t\t});\n\t\t\t\t\ttex2.name = 'lightmap';\n\t\t\t\t\tvar targ2 = new RenderTarget(device, tex2, {\n\t\t\t\t\t\tdepth: false\n\t\t\t\t\t});\n\t\t\t\t\ttexPool[size] = targ2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar activeComp = scene.layers;\n\n\t\t\tactiveComp._update();\n\n\t\t\tvar lights = [];\n\t\t\tvar origMask = [];\n\t\t\tvar origShadowMode = [];\n\t\t\tvar origEnabled = [];\n\t\t\tvar sceneLights = activeComp._lights;\n\t\t\tvar mask;\n\n\t\t\tfor (i = 0; i < sceneLights.length; i++) {\n\t\t\t\tif (sceneLights[i].enabled) {\n\t\t\t\t\tmask = sceneLights[i].mask;\n\n\t\t\t\t\tif ((mask & maskLightmap) !== 0) {\n\t\t\t\t\t\torigMask.push(mask);\n\t\t\t\t\t\torigShadowMode.push(sceneLights[i].shadowUpdateMode);\n\t\t\t\t\t\tsceneLights[i].mask = 0xFFFFFFFF;\n\t\t\t\t\t\tsceneLights[i].shadowUpdateMode = sceneLights[i]._type === LIGHTTYPE_DIRECTIONAL ? SHADOWUPDATE_REALTIME : SHADOWUPDATE_THISFRAME;\n\t\t\t\t\t\tlights.push(sceneLights[i]);\n\t\t\t\t\t\tsceneLights[i].isStatic = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\torigEnabled.push(sceneLights[i].enabled);\n\t\t\t\tsceneLights[i].enabled = false;\n\t\t\t}\n\n\t\t\tvar xformUv1 = \"#define UV1LAYOUT\\n\" + shaderChunks.transformVS;\n\t\t\tvar bakeLmEnd = shaderChunks.bakeLmEndPS;\n\t\t\tvar dilate = shaderChunks.dilatePS;\n\t\t\tvar dilateShader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, dilate, \"lmDilate\");\n\t\t\tvar constantTexSource = device.scope.resolve(\"source\");\n\t\t\tvar constantPixelOffset = device.scope.resolve(\"pixelOffset\");\n\t\t\tvar constantBakeDir = device.scope.resolve(\"bakeDir\");\n\t\t\tvar pixelOffset = new Float32Array(2);\n\t\t\tvar drawCalls = activeComp._meshInstances;\n\n\t\t\tfor (i = 0; i < drawCalls.length; i++) {\n\t\t\t\tif (drawCalls[i].node) drawCalls[i].node.getWorldTransform();\n\t\t\t}\n\n\t\t\tvar origFog = scene.fog;\n\t\t\tvar origAmbientR = scene.ambientLight.r;\n\t\t\tvar origAmbientG = scene.ambientLight.g;\n\t\t\tvar origAmbientB = scene.ambientLight.b;\n\t\t\tscene.fog = FOG_NONE;\n\t\t\tscene.ambientLight.set(0, 0, 0);\n\n\t\t\tif (!lmCamera) {\n\t\t\t\tlmCamera = new Camera();\n\t\t\t\tlmCamera.clearColor = new Color(0, 0, 0, 0);\n\t\t\t\tlmCamera.clearColorBuffer = true;\n\t\t\t\tlmCamera.clearDepthBuffer = false;\n\t\t\t\tlmCamera.clearStencilBuffer = false;\n\t\t\t\tlmCamera.frustumCulling = false;\n\t\t\t\tlmCamera.node = new GraphNode();\n\t\t\t}\n\n\t\t\tvar node;\n\t\t\tvar lm, rcv, m;\n\n\t\t\tvar renderOrModel = function renderOrModel(node) {\n\t\t\t\treturn node.render ? node.render : node.model;\n\t\t\t};\n\n\t\t\tvar renderOrModelMeshInstances = function renderOrModelMeshInstances(node) {\n\t\t\t\treturn node.render ? node.render.meshInstances : node.model.model.meshInstances;\n\t\t\t};\n\n\t\t\tvar origShaderDefs = [];\n\t\t\torigShaderDefs.length = sceneLightmapsNode.length;\n\t\t\tvar shaderDefs;\n\n\t\t\tfor (node = 0; node < allNodes.length; node++) {\n\t\t\t\trcv = renderOrModelMeshInstances(allNodes[node]);\n\t\t\t\tshaderDefs = [];\n\n\t\t\t\tfor (i = 0; i < rcv.length; i++) {\n\t\t\t\t\tshaderDefs.push(rcv[i]._shaderDefs);\n\t\t\t\t\trcv[i]._shaderDefs &= ~(SHADERDEF_LM | SHADERDEF_DIRLM);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < sceneLightmapsNode.length; i++) {\n\t\t\t\t\tif (sceneLightmapsNode[i] === allNodes[node]) {\n\t\t\t\t\t\torigShaderDefs[i] = shaderDefs;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar origCastShadows = [];\n\t\t\tvar casters = [];\n\t\t\tvar meshes;\n\t\t\tvar rom;\n\n\t\t\tfor (node = 0; node < allNodes.length; node++) {\n\t\t\t\trom = renderOrModel(allNodes[node]);\n\t\t\t\torigCastShadows[node] = rom.castShadows;\n\t\t\t\trom.castShadows = rom.castShadowsLightmap;\n\n\t\t\t\tif (rom.castShadowsLightmap) {\n\t\t\t\t\tmeshes = renderOrModelMeshInstances(allNodes[node]);\n\n\t\t\t\t\tfor (i = 0; i < meshes.length; i++) {\n\t\t\t\t\t\tmeshes[i].visibleThisFrame = true;\n\t\t\t\t\t\tcasters.push(meshes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.renderer.updateCpuSkinMatrices(casters);\n\t\t\tthis.renderer.gpuUpdate(casters);\n\t\t\tvar origMat = [];\n\t\t\tvar nodeBounds = [];\n\t\t\tvar nodeTarg = [[], []];\n\t\t\tvar targ, targTmp, texTmp;\n\t\t\tvar light, shadowCam;\n\t\t\tvar nodeLightCount = [];\n\t\t\tnodeLightCount.length = nodes.length;\n\t\t\tvar lmMaterial;\n\n\t\t\tfor (pass = 0; pass < passCount; pass++) {\n\t\t\t\tif (!passMaterial[pass]) {\n\t\t\t\t\tlmMaterial = new StandardMaterial();\n\t\t\t\t\tlmMaterial.chunks.transformVS = xformUv1;\n\n\t\t\t\t\tif (pass === PASS_COLOR) {\n\t\t\t\t\t\tlmMaterial.chunks.endPS = bakeLmEnd;\n\t\t\t\t\t\tlmMaterial.ambient = new Color(0, 0, 0);\n\t\t\t\t\t\tlmMaterial.ambientTint = true;\n\t\t\t\t\t\tlmMaterial.lightMap = blackTex;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlmMaterial.chunks.basePS = shaderChunks.basePS + \"\\nuniform sampler2D texture_dirLightMap;\\nuniform float bakeDir;\\n\";\n\t\t\t\t\t\tlmMaterial.chunks.endPS = shaderChunks.bakeDirLmEndPS;\n\t\t\t\t\t}\n\n\t\t\t\t\tlmMaterial.chunks.outputAlphaPS = \"\\n\";\n\t\t\t\t\tlmMaterial.chunks.outputAlphaOpaquePS = \"\\n\";\n\t\t\t\t\tlmMaterial.chunks.outputAlphaPremulPS = \"\\n\";\n\t\t\t\t\tlmMaterial.cull = CULLFACE_NONE;\n\t\t\t\t\tlmMaterial.forceUv1 = true;\n\t\t\t\t\tlmMaterial.update();\n\t\t\t\t\tlmMaterial.updateShader(device, scene);\n\t\t\t\t\tlmMaterial.name = \"lmMaterial\" + pass;\n\t\t\t\t\tpassMaterial[pass] = lmMaterial;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (node = 0; node < nodes.length; node++) {\n\t\t\t\trcv = nodesMeshInstances[node];\n\t\t\t\tnodeLightCount[node] = 0;\n\n\t\t\t\tif (rcv.length > 0) {\n\t\t\t\t\tbounds.copy(rcv[0].aabb);\n\n\t\t\t\t\tfor (i = 0; i < rcv.length; i++) {\n\t\t\t\t\t\trcv[i].node.getWorldTransform();\n\t\t\t\t\t\tbounds.add(rcv[i].aabb);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar nbounds = new BoundingBox();\n\t\t\t\tnbounds.copy(bounds);\n\t\t\t\tnodeBounds.push(nbounds);\n\n\t\t\t\tfor (i = 0; i < rcv.length; i++) {\n\t\t\t\t\tm = rcv[i];\n\t\t\t\t\tm._shaderDefs &= ~(SHADERDEF_LM | SHADERDEF_DIRLM);\n\t\t\t\t\tm.mask = maskLightmap;\n\t\t\t\t\tm.deleteParameter(\"texture_lightMap\");\n\t\t\t\t\tm.deleteParameter(\"texture_dirLightMap\");\n\t\t\t\t\tm.setParameter(\"texture_lightMap\", m.material.lightMap ? m.material.lightMap : blackTex);\n\t\t\t\t\tm.setParameter(\"texture_dirLightMap\", blackTex);\n\t\t\t\t}\n\n\t\t\t\tfor (pass = 0; pass < passCount; pass++) {\n\t\t\t\t\tlm = lmaps[pass][node];\n\t\t\t\t\ttarg = new RenderTarget(device, lm, {\n\t\t\t\t\t\tdepth: false\n\t\t\t\t\t});\n\t\t\t\t\tnodeTarg[pass].push(targ);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < lights.length; j++) {\n\t\t\t\tlights[j].enabled = false;\n\t\t\t}\n\n\t\t\tvar lightArray = [[], [], []];\n\t\t\tvar shadersUpdatedOn1stPass = false;\n\t\t\tvar shadowMapRendered;\n\n\t\t\tfor (i = 0; i < lights.length; i++) {\n\t\t\t\tlights[i].enabled = true;\n\t\t\t\tshadowMapRendered = false;\n\t\t\t\tlights[i]._cacheShadowMap = true;\n\n\t\t\t\tif (lights[i]._type !== LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\tlights[i]._node.getWorldTransform();\n\n\t\t\t\t\tlights[i].getBoundingSphere(tempSphere$1);\n\t\t\t\t\tlightBounds.center = tempSphere$1.center;\n\t\t\t\t\tlightBounds.halfExtents.x = tempSphere$1.radius;\n\t\t\t\t\tlightBounds.halfExtents.y = tempSphere$1.radius;\n\t\t\t\t\tlightBounds.halfExtents.z = tempSphere$1.radius;\n\t\t\t\t}\n\n\t\t\t\tif (lights[i]._type === LIGHTTYPE_SPOT) {\n\t\t\t\t\tlight = lights[i];\n\t\t\t\t\tshadowCam = this.renderer.getShadowCamera(device, light);\n\n\t\t\t\t\tshadowCam._node.setPosition(light._node.getPosition());\n\n\t\t\t\t\tshadowCam._node.setRotation(light._node.getRotation());\n\n\t\t\t\t\tshadowCam._node.rotateLocal(-90, 0, 0);\n\n\t\t\t\t\tshadowCam.projection = PROJECTION_PERSPECTIVE;\n\t\t\t\t\tshadowCam.nearClip = light.attenuationEnd / 1000;\n\t\t\t\t\tshadowCam.farClip = light.attenuationEnd;\n\t\t\t\t\tshadowCam.aspectRatio = 1;\n\t\t\t\t\tshadowCam.fov = light._outerConeAngle * 2;\n\t\t\t\t\tthis.renderer.updateCameraFrustum(shadowCam);\n\t\t\t\t}\n\n\t\t\t\tif (nodesMeshInstances.length > 0) {\n\t\t\t\t\tthis.renderer.updateShaders(nodesMeshInstances[0]);\n\t\t\t\t}\n\n\t\t\t\tfor (node = 0; node < nodes.length; node++) {\n\t\t\t\t\trcv = nodesMeshInstances[node];\n\t\t\t\t\tbounds = nodeBounds[node];\n\n\t\t\t\t\tif (lights[i]._type === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\ttempVec.copy(bounds.center);\n\t\t\t\t\t\ttempVec.y += bounds.halfExtents.y;\n\t\t\t\t\t\tlmCamera.node.setPosition(tempVec);\n\t\t\t\t\t\tlmCamera.node.setEulerAngles(-90, 0, 0);\n\t\t\t\t\t\tvar frustumSize = Math.max(bounds.halfExtents.x, bounds.halfExtents.z);\n\t\t\t\t\t\tlmCamera.projection = PROJECTION_ORTHOGRAPHIC;\n\t\t\t\t\t\tlmCamera.nearClip = 0;\n\t\t\t\t\t\tlmCamera.farClip = bounds.halfExtents.y * 2;\n\t\t\t\t\t\tlmCamera.aspectRatio = 1;\n\t\t\t\t\t\tlmCamera.orthoHeight = frustumSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!lightBounds.intersects(bounds)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lights[i]._type === LIGHTTYPE_SPOT) {\n\t\t\t\t\t\tvar nodeVisible = false;\n\n\t\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\t\tif (rcv[j]._isVisible(shadowCam)) {\n\t\t\t\t\t\t\t\tnodeVisible = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!nodeVisible) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lights[i]._type === LIGHTTYPE_DIRECTIONAL) {\n\t\t\t\t\t\tlightArray[LIGHTTYPE_DIRECTIONAL][0] = lights[i];\n\t\t\t\t\t\tlightArray[LIGHTTYPE_OMNI].length = 0;\n\t\t\t\t\t\tlightArray[LIGHTTYPE_SPOT].length = 0;\n\n\t\t\t\t\t\tif (!shadowMapRendered && lights[i].castShadows) {\n\t\t\t\t\t\t\tthis.renderer.cullDirectionalShadowmap(lights[i], casters, lmCamera, 0);\n\t\t\t\t\t\t\tthis.renderer.renderShadows(lightArray[LIGHTTYPE_DIRECTIONAL], 0);\n\t\t\t\t\t\t\tshadowMapRendered = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlightArray[LIGHTTYPE_DIRECTIONAL].length = 0;\n\n\t\t\t\t\t\tif (lights[i]._type === LIGHTTYPE_OMNI) {\n\t\t\t\t\t\t\tlightArray[LIGHTTYPE_OMNI][0] = lights[i];\n\t\t\t\t\t\t\tlightArray[LIGHTTYPE_SPOT].length = 0;\n\n\t\t\t\t\t\t\tif (!shadowMapRendered && lights[i].castShadows) {\n\t\t\t\t\t\t\t\tthis.renderer.cullLocalShadowmap(lights[i], casters);\n\t\t\t\t\t\t\t\tthis.renderer.renderShadows(lightArray[LIGHTTYPE_OMNI]);\n\t\t\t\t\t\t\t\tshadowMapRendered = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlightArray[LIGHTTYPE_OMNI].length = 0;\n\t\t\t\t\t\t\tlightArray[LIGHTTYPE_SPOT][0] = lights[i];\n\n\t\t\t\t\t\t\tif (!shadowMapRendered && lights[i].castShadows) {\n\t\t\t\t\t\t\t\tthis.renderer.cullLocalShadowmap(lights[i], casters);\n\t\t\t\t\t\t\t\tthis.renderer.renderShadows(lightArray[LIGHTTYPE_SPOT]);\n\t\t\t\t\t\t\t\tshadowMapRendered = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\torigMat[j] = rcv[j].material;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (pass = 0; pass < passCount; pass++) {\n\t\t\t\t\t\tlm = lmaps[pass][node];\n\t\t\t\t\t\ttarg = nodeTarg[pass][node];\n\t\t\t\t\t\ttargTmp = texPool[lm.width];\n\t\t\t\t\t\ttexTmp = targTmp.colorBuffer;\n\n\t\t\t\t\t\tif (pass === 0) {\n\t\t\t\t\t\t\tshadersUpdatedOn1stPass = scene.updateShaders;\n\t\t\t\t\t\t} else if (shadersUpdatedOn1stPass) {\n\t\t\t\t\t\t\tscene.updateShaders = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\t\trcv[j].material = passMaterial[pass];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (passCount > 1) {\n\t\t\t\t\t\t\tthis.renderer.updateShaders(rcv);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.renderer.setCamera(lmCamera, targTmp, true);\n\n\t\t\t\t\t\tif (pass === PASS_DIR) {\n\t\t\t\t\t\t\tconstantBakeDir.setValue(lights[i].bakeDir ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.renderer._forwardTime = 0;\n\t\t\t\t\t\tthis.renderer._shadowMapTime = 0;\n\t\t\t\t\t\tthis.renderer.renderForward(lmCamera, rcv, rcv.length, lightArray, SHADER_FORWARDHDR);\n\t\t\t\t\t\tlmaps[pass][node] = texTmp;\n\t\t\t\t\t\tnodeTarg[pass][node] = targTmp;\n\t\t\t\t\t\ttexPool[lm.width] = targ;\n\n\t\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\t\tm = rcv[j];\n\t\t\t\t\t\t\tm.setParameter(passTexName[pass], texTmp);\n\t\t\t\t\t\t\tm._shaderDefs |= SHADERDEF_LM;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnodeLightCount[node]++;\n\n\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\trcv[j].material = origMat[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlights[i].enabled = false;\n\t\t\t\tlights[i]._cacheShadowMap = false;\n\n\t\t\t\tif (lights[i]._isCachedShadowMap) {\n\t\t\t\t\tlights[i]._destroyShadowMap();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar sceneLmaps;\n\n\t\t\tfor (node = 0; node < nodes.length; node++) {\n\t\t\t\trcv = nodesMeshInstances[node];\n\t\t\t\tsceneLmaps = [];\n\n\t\t\t\tfor (pass = 0; pass < passCount; pass++) {\n\t\t\t\t\tlm = lmaps[pass][node];\n\t\t\t\t\ttarg = nodeTarg[pass][node];\n\t\t\t\t\ttargTmp = texPool[lm.width];\n\t\t\t\t\ttexTmp = targTmp.colorBuffer;\n\t\t\t\t\tvar numDilates2x = 4;\n\t\t\t\t\tpixelOffset[0] = 1 / lm.width;\n\t\t\t\t\tpixelOffset[1] = 1 / lm.height;\n\t\t\t\t\tconstantPixelOffset.setValue(pixelOffset);\n\n\t\t\t\t\tfor (i = 0; i < numDilates2x; i++) {\n\t\t\t\t\t\tconstantTexSource.setValue(lm);\n\t\t\t\t\t\tdrawQuadWithShader(device, targTmp, dilateShader);\n\t\t\t\t\t\tconstantTexSource.setValue(texTmp);\n\t\t\t\t\t\tdrawQuadWithShader(device, targ, dilateShader);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < rcv.length; i++) {\n\t\t\t\t\t\tm = rcv[i];\n\t\t\t\t\t\tm.mask = maskBaked;\n\t\t\t\t\t\trcv[i].setParameter(passTexName[pass], lm);\n\t\t\t\t\t\tif (pass === PASS_DIR) rcv[i]._shaderDefs |= SHADERDEF_DIRLM;\n\t\t\t\t\t}\n\n\t\t\t\t\tsceneLmaps[pass] = lm;\n\t\t\t\t\tif (pass === passCount - 1) targ.destroy();\n\t\t\t\t}\n\n\t\t\t\tsceneLightmaps.push(sceneLmaps);\n\t\t\t\tsceneLightmapsNode.push(nodes[node]);\n\t\t\t}\n\n\t\t\tfor (var key in texPool) {\n\t\t\t\tif (texPool.hasOwnProperty(key)) {\n\t\t\t\t\ttexPool[key].colorBuffer.destroy();\n\t\t\t\t\ttexPool[key].destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < sceneLightmaps.length; i++) {\n\t\t\t\tfor (j = 0; j < sceneLightmaps[i].length; j++) {\n\t\t\t\t\ttex = sceneLightmaps[i][j];\n\t\t\t\t\ttex.minFilter = FILTER_LINEAR;\n\t\t\t\t\ttex.magFilter = FILTER_LINEAR;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (node = 0; node < allNodes.length; node++) {\n\t\t\t\trenderOrModel(allNodes[node]).castShadows = origCastShadows[node];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < origShaderDefs.length; i++) {\n\t\t\t\tif (origShaderDefs[i]) {\n\t\t\t\t\trcv = renderOrModelMeshInstances(sceneLightmapsNode[i]);\n\n\t\t\t\t\tfor (j = 0; j < rcv.length; j++) {\n\t\t\t\t\t\trcv[j]._shaderDefs |= origShaderDefs[i][j] & (SHADERDEF_LM | SHADERDEF_DIRLM);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < lights.length; i++) {\n\t\t\t\tlights[i].mask = origMask[i];\n\t\t\t\tlights[i].shadowUpdateMode = origShadowMode[i];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < sceneLights.length; i++) {\n\t\t\t\tsceneLights[i].enabled = origEnabled[i];\n\t\t\t}\n\n\t\t\tscene.fog = origFog;\n\t\t\tscene.ambientLight.set(origAmbientR, origAmbientG, origAmbientB);\n\n\t\t\tif (revertStatic) {\n\t\t\t\tscene._needsStaticPrepare = true;\n\t\t\t}\n\t\t};\n\n\t\treturn Lightmapper;\n\t}();\n\n\tvar nonUniformScale;\n\tvar uniformScale = 1;\n\tvar particleTexChannels = 4;\n\tvar rotMat = new Mat4();\n\tvar rotMatInv = new Mat4();\n\tvar randomPosTformed = new Vec3();\n\tvar randomPos = new Vec3();\n\tvar rndFactor3Vec = new Vec3();\n\tvar particlePosPrev = new Vec3();\n\tvar velocityVec = new Vec3();\n\tvar localVelocityVec = new Vec3();\n\tvar velocityVec2 = new Vec3();\n\tvar localVelocityVec2 = new Vec3();\n\tvar radialVelocityVec = new Vec3();\n\tvar particlePos = new Vec3();\n\tvar particleFinalPos = new Vec3();\n\tvar moveDirVec = new Vec3();\n\tvar tmpVec3$1 = new Vec3();\n\n\tfunction frac(f) {\n\t\treturn f - Math.floor(f);\n\t}\n\n\tfunction saturate(x) {\n\t\treturn Math.max(Math.min(x, 1), 0);\n\t}\n\n\tfunction glMod(x, y) {\n\t\treturn x - y * Math.floor(x / y);\n\t}\n\n\tfunction encodeFloatRGBA(v) {\n\t\tvar encX = frac(v);\n\t\tvar encY = frac(255.0 * v);\n\t\tvar encZ = frac(65025.0 * v);\n\t\tvar encW = frac(160581375.0 * v);\n\t\tencX -= encY / 255.0;\n\t\tencY -= encZ / 255.0;\n\t\tencZ -= encW / 255.0;\n\t\tencW -= encW / 255.0;\n\t\treturn [encX, encY, encZ, encW];\n\t}\n\n\tfunction encodeFloatRG(v) {\n\t\tvar encX = frac(v);\n\t\tvar encY = frac(255.0 * v);\n\t\tencX -= encY / 255.0;\n\t\tencY -= encY / 255.0;\n\t\treturn [encX, encY];\n\t}\n\n\tvar ParticleCPUUpdater = function () {\n\t\tfunction ParticleCPUUpdater(emitter) {\n\t\t\tthis._emitter = emitter;\n\t\t}\n\n\t\tvar _proto = ParticleCPUUpdater.prototype;\n\n\t\t_proto.calcSpawnPosition = function calcSpawnPosition(particleTex, spawnMatrix, extentsInnerRatioUniform, emitterPos, i) {\n\t\t\tvar emitter = this._emitter;\n\t\t\tvar rX = Math.random();\n\t\t\tvar rY = Math.random();\n\t\t\tvar rZ = Math.random();\n\t\t\tvar rW = Math.random();\n\n\t\t\tif (emitter.useCpu) {\n\t\t\t\tparticleTex[i * particleTexChannels + 0 + emitter.numParticlesPot * 2 * particleTexChannels] = rX;\n\t\t\t\tparticleTex[i * particleTexChannels + 1 + emitter.numParticlesPot * 2 * particleTexChannels] = rY;\n\t\t\t\tparticleTex[i * particleTexChannels + 2 + emitter.numParticlesPot * 2 * particleTexChannels] = rZ;\n\t\t\t}\n\n\t\t\trandomPos.x = rX - 0.5;\n\t\t\trandomPos.y = rY - 0.5;\n\t\t\trandomPos.z = rZ - 0.5;\n\n\t\t\tif (emitter.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\tvar max = Math.max(Math.abs(randomPos.x), Math.max(Math.abs(randomPos.y), Math.abs(randomPos.z)));\n\t\t\t\tvar edgeX = max + (0.5 - max) * extentsInnerRatioUniform[0];\n\t\t\t\tvar edgeY = max + (0.5 - max) * extentsInnerRatioUniform[1];\n\t\t\t\tvar edgeZ = max + (0.5 - max) * extentsInnerRatioUniform[2];\n\t\t\t\trandomPos.x = edgeX * (max == Math.abs(randomPos.x) ? Math.sign(randomPos.x) : 2 * randomPos.x);\n\t\t\t\trandomPos.y = edgeY * (max == Math.abs(randomPos.y) ? Math.sign(randomPos.y) : 2 * randomPos.y);\n\t\t\t\trandomPos.z = edgeZ * (max == Math.abs(randomPos.z) ? Math.sign(randomPos.z) : 2 * randomPos.z);\n\t\t\t\tif (!emitter.localSpace) randomPosTformed.copy(emitterPos).add(spawnMatrix.transformPoint(randomPos));else randomPosTformed.copy(spawnMatrix.transformPoint(randomPos));\n\t\t\t} else {\n\t\t\t\trandomPos.normalize();\n\t\t\t\tvar spawnBoundsSphereInnerRatio = emitter.emitterRadius === 0 ? 0 : emitter.emitterRadiusInner / emitter.emitterRadius;\n\t\t\t\tvar r = rW * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;\n\t\t\t\tif (!emitter.localSpace) randomPosTformed.copy(emitterPos).add(randomPos.scale(r * emitter.emitterRadius));else randomPosTformed.copy(randomPos.scale(r * emitter.emitterRadius));\n\t\t\t}\n\n\t\t\tvar particleRate, startSpawnTime;\n\t\t\tparticleRate = math.lerp(emitter.rate, emitter.rate2, rX);\n\t\t\tstartSpawnTime = -particleRate * i;\n\n\t\t\tif (emitter.pack8) {\n\t\t\t\tvar packX = (randomPosTformed.x - emitter.worldBounds.center.x) / emitter.worldBoundsSize.x + 0.5;\n\t\t\t\tvar packY = (randomPosTformed.y - emitter.worldBounds.center.y) / emitter.worldBoundsSize.y + 0.5;\n\t\t\t\tvar packZ = (randomPosTformed.z - emitter.worldBounds.center.z) / emitter.worldBoundsSize.z + 0.5;\n\t\t\t\tvar packA = math.lerp(emitter.startAngle * math.DEG_TO_RAD, emitter.startAngle2 * math.DEG_TO_RAD, rX);\n\t\t\t\tpackA = packA % (Math.PI * 2) / (Math.PI * 2);\n\t\t\t\tvar rg0 = encodeFloatRG(packX);\n\t\t\t\tparticleTex[i * particleTexChannels] = rg0[0];\n\t\t\t\tparticleTex[i * particleTexChannels + 1] = rg0[1];\n\t\t\t\tvar ba0 = encodeFloatRG(packY);\n\t\t\t\tparticleTex[i * particleTexChannels + 2] = ba0[0];\n\t\t\t\tparticleTex[i * particleTexChannels + 3] = ba0[1];\n\t\t\t\tvar rg1 = encodeFloatRG(packZ);\n\t\t\t\tparticleTex[i * particleTexChannels + 0 + emitter.numParticlesPot * particleTexChannels] = rg1[0];\n\t\t\t\tparticleTex[i * particleTexChannels + 1 + emitter.numParticlesPot * particleTexChannels] = rg1[1];\n\t\t\t\tvar ba1 = encodeFloatRG(packA);\n\t\t\t\tparticleTex[i * particleTexChannels + 2 + emitter.numParticlesPot * particleTexChannels] = ba1[0];\n\t\t\t\tparticleTex[i * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels] = ba1[1];\n\t\t\t\tvar a2 = 1.0;\n\t\t\t\tparticleTex[i * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels * 2] = a2;\n\t\t\t\tvar maxNegLife = Math.max(emitter.lifetime, (emitter.numParticles - 1.0) * Math.max(emitter.rate, emitter.rate2));\n\t\t\t\tvar maxPosLife = emitter.lifetime + 1.0;\n\t\t\t\tstartSpawnTime = (startSpawnTime + maxNegLife) / (maxNegLife + maxPosLife);\n\t\t\t\tvar rgba3 = encodeFloatRGBA(startSpawnTime);\n\t\t\t\tparticleTex[i * particleTexChannels + 0 + emitter.numParticlesPot * particleTexChannels * 3] = rgba3[0];\n\t\t\t\tparticleTex[i * particleTexChannels + 1 + emitter.numParticlesPot * particleTexChannels * 3] = rgba3[1];\n\t\t\t\tparticleTex[i * particleTexChannels + 2 + emitter.numParticlesPot * particleTexChannels * 3] = rgba3[2];\n\t\t\t\tparticleTex[i * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels * 3] = rgba3[3];\n\t\t\t} else {\n\t\t\t\tparticleTex[i * particleTexChannels] = randomPosTformed.x;\n\t\t\t\tparticleTex[i * particleTexChannels + 1] = randomPosTformed.y;\n\t\t\t\tparticleTex[i * particleTexChannels + 2] = randomPosTformed.z;\n\t\t\t\tparticleTex[i * particleTexChannels + 3] = math.lerp(emitter.startAngle * math.DEG_TO_RAD, emitter.startAngle2 * math.DEG_TO_RAD, rX);\n\t\t\t\tparticleTex[i * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels] = startSpawnTime;\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update(data, vbToSort, particleTex, spawnMatrix, extentsInnerRatioUniform, emitterPos, delta, isOnStop) {\n\t\t\tvar a, b, c, i, j;\n\t\t\tvar emitter = this._emitter;\n\n\t\t\tif (emitter.meshInstance.node) {\n\t\t\t\tvar fullMat = emitter.meshInstance.node.worldTransform;\n\n\t\t\t\tfor (j = 0; j < 12; j++) {\n\t\t\t\t\trotMat.data[j] = fullMat.data[j];\n\t\t\t\t}\n\n\t\t\t\trotMatInv.copy(rotMat);\n\t\t\t\trotMatInv.invert();\n\t\t\t\tnonUniformScale = emitter.meshInstance.node.localScale;\n\t\t\t\tuniformScale = Math.max(Math.max(nonUniformScale.x, nonUniformScale.y), nonUniformScale.z);\n\t\t\t}\n\n\t\t\temitterPos = emitter.meshInstance.node === null || emitter.localSpace ? Vec3.ZERO : emitter.meshInstance.node.getPosition();\n\t\t\tvar posCam = emitter.camera ? emitter.camera._node.getPosition() : Vec3.ZERO;\n\t\t\tvar vertSize = !emitter.useMesh ? 15 : 17;\n\t\t\tvar cf, cc;\n\t\t\tvar rotSpeed, rotSpeed2, scale2, alpha, alpha2, radialSpeed, radialSpeed2;\n\t\t\tvar precision1 = emitter.precision - 1;\n\n\t\t\tfor (i = 0; i < emitter.numParticles; i++) {\n\t\t\t\tvar id = Math.floor(emitter.vbCPU[i * emitter.numParticleVerts * (emitter.useMesh ? 6 : 4) + 3]);\n\t\t\t\tvar rndFactor = particleTex[id * particleTexChannels + 0 + emitter.numParticlesPot * 2 * particleTexChannels];\n\t\t\t\trndFactor3Vec.x = rndFactor;\n\t\t\t\trndFactor3Vec.y = particleTex[id * particleTexChannels + 1 + emitter.numParticlesPot * 2 * particleTexChannels];\n\t\t\t\trndFactor3Vec.z = particleTex[id * particleTexChannels + 2 + emitter.numParticlesPot * 2 * particleTexChannels];\n\t\t\t\tvar particleRate = emitter.rate + (emitter.rate2 - emitter.rate) * rndFactor;\n\t\t\t\tvar particleLifetime = emitter.lifetime;\n\t\t\t\tvar life = particleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels] + delta;\n\t\t\t\tvar nlife = saturate(life / particleLifetime);\n\t\t\t\tvar scale = 0;\n\t\t\t\tvar alphaDiv = 0;\n\t\t\t\tvar angle = 0;\n\t\t\t\tvar respawn = life - delta <= 0.0 || life >= particleLifetime;\n\n\t\t\t\tif (respawn) {\n\t\t\t\t\tthis.calcSpawnPosition(particleTex, spawnMatrix, extentsInnerRatioUniform, emitterPos, id);\n\t\t\t\t}\n\n\t\t\t\tvar particleEnabled = life > 0.0 && life < particleLifetime;\n\n\t\t\t\tif (particleEnabled) {\n\t\t\t\t\tc = nlife * precision1;\n\t\t\t\t\tcf = Math.floor(c);\n\t\t\t\t\tcc = Math.ceil(c);\n\t\t\t\t\tc %= 1;\n\t\t\t\t\ta = emitter.qRotSpeed[cf];\n\t\t\t\t\tb = emitter.qRotSpeed[cc];\n\t\t\t\t\trotSpeed = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qRotSpeed2[cf];\n\t\t\t\t\tb = emitter.qRotSpeed2[cc];\n\t\t\t\t\trotSpeed2 = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qScale[cf];\n\t\t\t\t\tb = emitter.qScale[cc];\n\t\t\t\t\tscale = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qScale2[cf];\n\t\t\t\t\tb = emitter.qScale2[cc];\n\t\t\t\t\tscale2 = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qAlpha[cf];\n\t\t\t\t\tb = emitter.qAlpha[cc];\n\t\t\t\t\talpha = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qAlpha2[cf];\n\t\t\t\t\tb = emitter.qAlpha2[cc];\n\t\t\t\t\talpha2 = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qRadialSpeed[cf];\n\t\t\t\t\tb = emitter.qRadialSpeed[cc];\n\t\t\t\t\tradialSpeed = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qRadialSpeed2[cf];\n\t\t\t\t\tb = emitter.qRadialSpeed2[cc];\n\t\t\t\t\tradialSpeed2 = a + (b - a) * c;\n\t\t\t\t\tradialSpeed += (radialSpeed2 - radialSpeed) * (rndFactor * 100.0 % 1.0);\n\t\t\t\t\tparticlePosPrev.x = particleTex[id * particleTexChannels];\n\t\t\t\t\tparticlePosPrev.y = particleTex[id * particleTexChannels + 1];\n\t\t\t\t\tparticlePosPrev.z = particleTex[id * particleTexChannels + 2];\n\t\t\t\t\tif (!emitter.localSpace) radialVelocityVec.copy(particlePosPrev).sub(emitterPos);else radialVelocityVec.copy(particlePosPrev);\n\t\t\t\t\tradialVelocityVec.normalize().scale(radialSpeed);\n\t\t\t\t\tcf *= 3;\n\t\t\t\t\tcc *= 3;\n\t\t\t\t\ta = emitter.qLocalVelocity[cf];\n\t\t\t\t\tb = emitter.qLocalVelocity[cc];\n\t\t\t\t\tlocalVelocityVec.x = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qLocalVelocity[cf + 1];\n\t\t\t\t\tb = emitter.qLocalVelocity[cc + 1];\n\t\t\t\t\tlocalVelocityVec.y = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qLocalVelocity[cf + 2];\n\t\t\t\t\tb = emitter.qLocalVelocity[cc + 2];\n\t\t\t\t\tlocalVelocityVec.z = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qLocalVelocity2[cf];\n\t\t\t\t\tb = emitter.qLocalVelocity2[cc];\n\t\t\t\t\tlocalVelocityVec2.x = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qLocalVelocity2[cf + 1];\n\t\t\t\t\tb = emitter.qLocalVelocity2[cc + 1];\n\t\t\t\t\tlocalVelocityVec2.y = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qLocalVelocity2[cf + 2];\n\t\t\t\t\tb = emitter.qLocalVelocity2[cc + 2];\n\t\t\t\t\tlocalVelocityVec2.z = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity[cf];\n\t\t\t\t\tb = emitter.qVelocity[cc];\n\t\t\t\t\tvelocityVec.x = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity[cf + 1];\n\t\t\t\t\tb = emitter.qVelocity[cc + 1];\n\t\t\t\t\tvelocityVec.y = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity[cf + 2];\n\t\t\t\t\tb = emitter.qVelocity[cc + 2];\n\t\t\t\t\tvelocityVec.z = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity2[cf];\n\t\t\t\t\tb = emitter.qVelocity2[cc];\n\t\t\t\t\tvelocityVec2.x = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity2[cf + 1];\n\t\t\t\t\tb = emitter.qVelocity2[cc + 1];\n\t\t\t\t\tvelocityVec2.y = a + (b - a) * c;\n\t\t\t\t\ta = emitter.qVelocity2[cf + 2];\n\t\t\t\t\tb = emitter.qVelocity2[cc + 2];\n\t\t\t\t\tvelocityVec2.z = a + (b - a) * c;\n\t\t\t\t\tlocalVelocityVec.x += (localVelocityVec2.x - localVelocityVec.x) * rndFactor3Vec.x;\n\t\t\t\t\tlocalVelocityVec.y += (localVelocityVec2.y - localVelocityVec.y) * rndFactor3Vec.y;\n\t\t\t\t\tlocalVelocityVec.z += (localVelocityVec2.z - localVelocityVec.z) * rndFactor3Vec.z;\n\n\t\t\t\t\tif (emitter.initialVelocity > 0) {\n\t\t\t\t\t\tif (emitter.emitterShape === EMITTERSHAPE_SPHERE) {\n\t\t\t\t\t\t\trandomPos.copy(rndFactor3Vec).scale(2).sub(Vec3.ONE).normalize();\n\t\t\t\t\t\t\tlocalVelocityVec.add(randomPos.scale(emitter.initialVelocity));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlocalVelocityVec.add(Vec3.FORWARD.scale(emitter.initialVelocity));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvelocityVec.x += (velocityVec2.x - velocityVec.x) * rndFactor3Vec.x;\n\t\t\t\t\tvelocityVec.y += (velocityVec2.y - velocityVec.y) * rndFactor3Vec.y;\n\t\t\t\t\tvelocityVec.z += (velocityVec2.z - velocityVec.z) * rndFactor3Vec.z;\n\t\t\t\t\trotSpeed += (rotSpeed2 - rotSpeed) * rndFactor3Vec.y;\n\t\t\t\t\tscale = (scale + (scale2 - scale) * (rndFactor * 10000.0 % 1.0)) * uniformScale;\n\t\t\t\t\talphaDiv = (alpha2 - alpha) * (rndFactor * 1000.0 % 1.0);\n\n\t\t\t\t\tif (emitter.meshInstance.node) {\n\t\t\t\t\t\tif (!emitter.localSpace) {\n\t\t\t\t\t\t\trotMat.transformPoint(localVelocityVec, localVelocityVec);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlocalVelocityVec.x /= nonUniformScale.x;\n\t\t\t\t\t\t\tlocalVelocityVec.y /= nonUniformScale.y;\n\t\t\t\t\t\t\tlocalVelocityVec.z /= nonUniformScale.z;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!emitter.localSpace) {\n\t\t\t\t\t\tlocalVelocityVec.add(velocityVec.mul(nonUniformScale));\n\t\t\t\t\t\tlocalVelocityVec.add(radialVelocityVec.mul(nonUniformScale));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trotMatInv.transformPoint(velocityVec, velocityVec);\n\t\t\t\t\t\tlocalVelocityVec.add(velocityVec).add(radialVelocityVec);\n\t\t\t\t\t}\n\n\t\t\t\t\tmoveDirVec.copy(localVelocityVec);\n\t\t\t\t\tparticlePos.copy(particlePosPrev).add(localVelocityVec.scale(delta));\n\t\t\t\t\tparticleFinalPos.copy(particlePos);\n\t\t\t\t\tparticleTex[id * particleTexChannels] = particleFinalPos.x;\n\t\t\t\t\tparticleTex[id * particleTexChannels + 1] = particleFinalPos.y;\n\t\t\t\t\tparticleTex[id * particleTexChannels + 2] = particleFinalPos.z;\n\t\t\t\t\tparticleTex[id * particleTexChannels + 3] += rotSpeed * delta;\n\n\t\t\t\t\tif (emitter.wrap && emitter.wrapBounds) {\n\t\t\t\t\t\tif (!emitter.localSpace) particleFinalPos.sub(emitterPos);\n\t\t\t\t\t\tparticleFinalPos.x = glMod(particleFinalPos.x, emitter.wrapBounds.x) - emitter.wrapBounds.x * 0.5;\n\t\t\t\t\t\tparticleFinalPos.y = glMod(particleFinalPos.y, emitter.wrapBounds.y) - emitter.wrapBounds.y * 0.5;\n\t\t\t\t\t\tparticleFinalPos.z = glMod(particleFinalPos.z, emitter.wrapBounds.z) - emitter.wrapBounds.z * 0.5;\n\t\t\t\t\t\tif (!emitter.localSpace) particleFinalPos.add(emitterPos);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (emitter.sort > 0) {\n\t\t\t\t\t\tif (emitter.sort === 1) {\n\t\t\t\t\t\t\ttmpVec3$1.copy(particleFinalPos).sub(posCam);\n\t\t\t\t\t\t\temitter.particleDistance[id] = -(tmpVec3$1.x * tmpVec3$1.x + tmpVec3$1.y * tmpVec3$1.y + tmpVec3$1.z * tmpVec3$1.z);\n\t\t\t\t\t\t} else if (emitter.sort === 2) {\n\t\t\t\t\t\t\temitter.particleDistance[id] = life;\n\t\t\t\t\t\t} else if (emitter.sort === 3) {\n\t\t\t\t\t\t\temitter.particleDistance[id] = -life;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isOnStop) {\n\t\t\t\t\tif (life < 0) {\n\t\t\t\t\t\tparticleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * 2 * particleTexChannels] = -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (life >= particleLifetime) {\n\t\t\t\t\t\tlife -= Math.max(particleLifetime, (emitter.numParticles - 1) * particleRate);\n\t\t\t\t\t\tparticleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * 2 * particleTexChannels] = emitter.loop ? 1 : -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (life < 0 && emitter.loop) {\n\t\t\t\t\t\tparticleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * 2 * particleTexChannels] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (particleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * 2 * particleTexChannels] < 0) particleEnabled = false;\n\t\t\t\tparticleTex[id * particleTexChannels + 3 + emitter.numParticlesPot * particleTexChannels] = life;\n\n\t\t\t\tfor (var v = 0; v < emitter.numParticleVerts; v++) {\n\t\t\t\t\tvar vbOffset = (i * emitter.numParticleVerts + v) * (emitter.useMesh ? 6 : 4);\n\t\t\t\t\tvar quadX = emitter.vbCPU[vbOffset];\n\t\t\t\t\tvar quadY = emitter.vbCPU[vbOffset + 1];\n\t\t\t\t\tvar quadZ = emitter.vbCPU[vbOffset + 2];\n\n\t\t\t\t\tif (!particleEnabled) {\n\t\t\t\t\t\tquadX = quadY = quadZ = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar w = i * emitter.numParticleVerts * vertSize + v * vertSize;\n\t\t\t\t\tdata[w] = particleFinalPos.x;\n\t\t\t\t\tdata[w + 1] = particleFinalPos.y;\n\t\t\t\t\tdata[w + 2] = particleFinalPos.z;\n\t\t\t\t\tdata[w + 3] = nlife;\n\t\t\t\t\tdata[w + 4] = emitter.alignToMotion ? angle : particleTex[id * particleTexChannels + 3];\n\t\t\t\t\tdata[w + 5] = scale;\n\t\t\t\t\tdata[w + 6] = alphaDiv;\n\t\t\t\t\tdata[w + 7] = moveDirVec.x;\n\t\t\t\t\tdata[w + 8] = quadX;\n\t\t\t\t\tdata[w + 9] = quadY;\n\t\t\t\t\tdata[w + 10] = quadZ;\n\t\t\t\t\tdata[w + 11] = moveDirVec.y;\n\t\t\t\t\tdata[w + 12] = id;\n\t\t\t\t\tdata[w + 13] = moveDirVec.z;\n\t\t\t\t\tdata[w + 14] = emitter.vbCPU[vbOffset + 3];\n\n\t\t\t\t\tif (emitter.useMesh) {\n\t\t\t\t\t\tdata[w + 15] = emitter.vbCPU[vbOffset + 4];\n\t\t\t\t\t\tdata[w + 16] = emitter.vbCPU[vbOffset + 5];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (emitter.sort > PARTICLESORT_NONE && emitter.camera) {\n\t\t\t\tvar vbStride = emitter.useMesh ? 6 : 4;\n\t\t\t\tvar particleDistance = emitter.particleDistance;\n\n\t\t\t\tfor (i = 0; i < emitter.numParticles; i++) {\n\t\t\t\t\tvbToSort[i][0] = i;\n\t\t\t\t\tvbToSort[i][1] = particleDistance[Math.floor(emitter.vbCPU[i * emitter.numParticleVerts * vbStride + 3])];\n\t\t\t\t}\n\n\t\t\t\temitter.vbOld.set(emitter.vbCPU);\n\t\t\t\tvbToSort.sort(function (p1, p2) {\n\t\t\t\t\treturn p1[1] - p2[1];\n\t\t\t\t});\n\n\t\t\t\tfor (i = 0; i < emitter.numParticles; i++) {\n\t\t\t\t\tvar src = vbToSort[i][0] * emitter.numParticleVerts * vbStride;\n\t\t\t\t\tvar dest = i * emitter.numParticleVerts * vbStride;\n\n\t\t\t\t\tfor (j = 0; j < emitter.numParticleVerts * vbStride; j++) {\n\t\t\t\t\t\temitter.vbCPU[dest + j] = emitter.vbOld[src + j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn ParticleCPUUpdater;\n\t}();\n\n\tvar spawnMatrix3 = new Mat3();\n\tvar emitterMatrix3 = new Mat3();\n\tvar emitterMatrix3Inv = new Mat3();\n\n\tvar ParticleGPUUpdater = function () {\n\t\tfunction ParticleGPUUpdater(emitter, gd) {\n\t\t\tthis.randomize = function () {\n\t\t\t\tthis.frameRandomUniform[0] = Math.random();\n\t\t\t\tthis.frameRandomUniform[1] = Math.random();\n\t\t\t\tthis.frameRandomUniform[2] = Math.random();\n\t\t\t};\n\n\t\t\tthis._emitter = emitter;\n\t\t\tthis.frameRandomUniform = new Float32Array(3);\n\t\t\tthis.emitterPosUniform = new Float32Array(3);\n\t\t\tthis.emitterScaleUniform = new Float32Array([1, 1, 1]);\n\t\t\tthis.worldBoundsMulUniform = new Float32Array(3);\n\t\t\tthis.worldBoundsAddUniform = new Float32Array(3);\n\t\t\tthis.inBoundsSizeUniform = new Float32Array(3);\n\t\t\tthis.inBoundsCenterUniform = new Float32Array(3);\n\t\t\tthis.constantParticleTexIN = gd.scope.resolve(\"particleTexIN\");\n\t\t\tthis.constantParticleTexOUT = gd.scope.resolve(\"particleTexOUT\");\n\t\t\tthis.constantEmitterPos = gd.scope.resolve(\"emitterPos\");\n\t\t\tthis.constantEmitterScale = gd.scope.resolve(\"emitterScale\");\n\t\t\tthis.constantSpawnBounds = gd.scope.resolve(\"spawnBounds\");\n\t\t\tthis.constantSpawnPosInnerRatio = gd.scope.resolve(\"spawnPosInnerRatio\");\n\t\t\tthis.constantSpawnBoundsSphere = gd.scope.resolve(\"spawnBoundsSphere\");\n\t\t\tthis.constantSpawnBoundsSphereInnerRatio = gd.scope.resolve(\"spawnBoundsSphereInnerRatio\");\n\t\t\tthis.constantInitialVelocity = gd.scope.resolve(\"initialVelocity\");\n\t\t\tthis.constantFrameRandom = gd.scope.resolve(\"frameRandom\");\n\t\t\tthis.constantDelta = gd.scope.resolve(\"delta\");\n\t\t\tthis.constantRate = gd.scope.resolve(\"rate\");\n\t\t\tthis.constantRateDiv = gd.scope.resolve(\"rateDiv\");\n\t\t\tthis.constantLifetime = gd.scope.resolve(\"lifetime\");\n\t\t\tthis.constantGraphSampleSize = gd.scope.resolve(\"graphSampleSize\");\n\t\t\tthis.constantGraphNumSamples = gd.scope.resolve(\"graphNumSamples\");\n\t\t\tthis.constantInternalTex0 = gd.scope.resolve(\"internalTex0\");\n\t\t\tthis.constantInternalTex1 = gd.scope.resolve(\"internalTex1\");\n\t\t\tthis.constantInternalTex2 = gd.scope.resolve(\"internalTex2\");\n\t\t\tthis.constantInternalTex3 = gd.scope.resolve(\"internalTex3\");\n\t\t\tthis.constantEmitterMatrix = gd.scope.resolve(\"emitterMatrix\");\n\t\t\tthis.constantEmitterMatrixInv = gd.scope.resolve(\"emitterMatrixInv\");\n\t\t\tthis.constantNumParticles = gd.scope.resolve(\"numParticles\");\n\t\t\tthis.constantNumParticlesPot = gd.scope.resolve(\"numParticlesPot\");\n\t\t\tthis.constantLocalVelocityDivMult = gd.scope.resolve(\"localVelocityDivMult\");\n\t\t\tthis.constantVelocityDivMult = gd.scope.resolve(\"velocityDivMult\");\n\t\t\tthis.constantRotSpeedDivMult = gd.scope.resolve(\"rotSpeedDivMult\");\n\t\t\tthis.constantSeed = gd.scope.resolve(\"seed\");\n\t\t\tthis.constantStartAngle = gd.scope.resolve(\"startAngle\");\n\t\t\tthis.constantStartAngle2 = gd.scope.resolve(\"startAngle2\");\n\t\t\tthis.constantOutBoundsMul = gd.scope.resolve(\"outBoundsMul\");\n\t\t\tthis.constantOutBoundsAdd = gd.scope.resolve(\"outBoundsAdd\");\n\t\t\tthis.constantInBoundsSize = gd.scope.resolve(\"inBoundsSize\");\n\t\t\tthis.constantInBoundsCenter = gd.scope.resolve(\"inBoundsCenter\");\n\t\t\tthis.constantMaxVel = gd.scope.resolve(\"maxVel\");\n\t\t\tthis.constantFaceTangent = gd.scope.resolve(\"faceTangent\");\n\t\t\tthis.constantFaceBinorm = gd.scope.resolve(\"faceBinorm\");\n\t\t}\n\n\t\tvar _proto = ParticleGPUUpdater.prototype;\n\n\t\t_proto._setInputBounds = function _setInputBounds() {\n\t\t\tthis.inBoundsSizeUniform[0] = this._emitter.prevWorldBoundsSize.x;\n\t\t\tthis.inBoundsSizeUniform[1] = this._emitter.prevWorldBoundsSize.y;\n\t\t\tthis.inBoundsSizeUniform[2] = this._emitter.prevWorldBoundsSize.z;\n\t\t\tthis.constantInBoundsSize.setValue(this.inBoundsSizeUniform);\n\t\t\tthis.inBoundsCenterUniform[0] = this._emitter.prevWorldBoundsCenter.x;\n\t\t\tthis.inBoundsCenterUniform[1] = this._emitter.prevWorldBoundsCenter.y;\n\t\t\tthis.inBoundsCenterUniform[2] = this._emitter.prevWorldBoundsCenter.z;\n\t\t\tthis.constantInBoundsCenter.setValue(this.inBoundsCenterUniform);\n\t\t};\n\n\t\t_proto.update = function update(device, spawnMatrix, extentsInnerRatioUniform, delta, isOnStop) {\n\t\t\tvar emitter = this._emitter;\n\t\t\tdevice.setBlending(false);\n\t\t\tdevice.setColorWrite(true, true, true, true);\n\t\t\tdevice.setCullMode(CULLFACE_NONE);\n\t\t\tdevice.setDepthTest(false);\n\t\t\tdevice.setDepthWrite(false);\n\t\t\tthis.randomize();\n\t\t\tthis.constantGraphSampleSize.setValue(1.0 / emitter.precision);\n\t\t\tthis.constantGraphNumSamples.setValue(emitter.precision);\n\t\t\tthis.constantNumParticles.setValue(emitter.numParticles);\n\t\t\tthis.constantNumParticlesPot.setValue(emitter.numParticlesPot);\n\t\t\tthis.constantInternalTex0.setValue(emitter.internalTex0);\n\t\t\tthis.constantInternalTex1.setValue(emitter.internalTex1);\n\t\t\tthis.constantInternalTex2.setValue(emitter.internalTex2);\n\t\t\tthis.constantInternalTex3.setValue(emitter.internalTex3);\n\t\t\tvar node = emitter.meshInstance.node;\n\t\t\tvar emitterScale = node === null ? Vec3.ONE : node.localScale;\n\n\t\t\tif (emitter.pack8) {\n\t\t\t\tthis.worldBoundsMulUniform[0] = emitter.worldBoundsMul.x;\n\t\t\t\tthis.worldBoundsMulUniform[1] = emitter.worldBoundsMul.y;\n\t\t\t\tthis.worldBoundsMulUniform[2] = emitter.worldBoundsMul.z;\n\t\t\t\tthis.constantOutBoundsMul.setValue(this.worldBoundsMulUniform);\n\t\t\t\tthis.worldBoundsAddUniform[0] = emitter.worldBoundsAdd.x;\n\t\t\t\tthis.worldBoundsAddUniform[1] = emitter.worldBoundsAdd.y;\n\t\t\t\tthis.worldBoundsAddUniform[2] = emitter.worldBoundsAdd.z;\n\t\t\t\tthis.constantOutBoundsAdd.setValue(this.worldBoundsAddUniform);\n\n\t\t\t\tthis._setInputBounds();\n\n\t\t\t\tvar maxVel = emitter.maxVel * Math.max(Math.max(emitterScale.x, emitterScale.y), emitterScale.z);\n\t\t\t\tmaxVel = Math.max(maxVel, 1);\n\t\t\t\tthis.constantMaxVel.setValue(maxVel);\n\t\t\t}\n\n\t\t\tvar emitterPos = node === null || emitter.localSpace ? Vec3.ZERO : node.getPosition();\n\t\t\tvar emitterMatrix = node === null ? Mat4.IDENTITY : node.getWorldTransform();\n\n\t\t\tif (emitter.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\tspawnMatrix3.setFromMat4(spawnMatrix);\n\t\t\t\tthis.constantSpawnBounds.setValue(spawnMatrix3.data);\n\t\t\t\tthis.constantSpawnPosInnerRatio.setValue(extentsInnerRatioUniform);\n\t\t\t} else {\n\t\t\t\tthis.constantSpawnBoundsSphere.setValue(emitter.emitterRadius);\n\t\t\t\tthis.constantSpawnBoundsSphereInnerRatio.setValue(emitter.emitterRadius === 0 ? 0 : emitter.emitterRadiusInner / emitter.emitterRadius);\n\t\t\t}\n\n\t\t\tthis.constantInitialVelocity.setValue(emitter.initialVelocity);\n\t\t\temitterMatrix3.setFromMat4(emitterMatrix);\n\t\t\temitterMatrix.invertTo3x3(emitterMatrix3Inv);\n\t\t\tthis.emitterPosUniform[0] = emitterPos.x;\n\t\t\tthis.emitterPosUniform[1] = emitterPos.y;\n\t\t\tthis.emitterPosUniform[2] = emitterPos.z;\n\t\t\tthis.constantEmitterPos.setValue(this.emitterPosUniform);\n\t\t\tthis.constantFrameRandom.setValue(this.frameRandomUniform);\n\t\t\tthis.constantDelta.setValue(delta);\n\t\t\tthis.constantRate.setValue(emitter.rate);\n\t\t\tthis.constantRateDiv.setValue(emitter.rate2 - emitter.rate);\n\t\t\tthis.constantStartAngle.setValue(emitter.startAngle * math.DEG_TO_RAD);\n\t\t\tthis.constantStartAngle2.setValue(emitter.startAngle2 * math.DEG_TO_RAD);\n\t\t\tthis.constantSeed.setValue(emitter.seed);\n\t\t\tthis.constantLifetime.setValue(emitter.lifetime);\n\t\t\tthis.emitterScaleUniform[0] = emitterScale.x;\n\t\t\tthis.emitterScaleUniform[1] = emitterScale.y;\n\t\t\tthis.emitterScaleUniform[2] = emitterScale.z;\n\t\t\tthis.constantEmitterScale.setValue(this.emitterScaleUniform);\n\t\t\tthis.constantEmitterMatrix.setValue(emitterMatrix3.data);\n\t\t\tthis.constantEmitterMatrixInv.setValue(emitterMatrix3Inv.data);\n\t\t\tthis.constantLocalVelocityDivMult.setValue(emitter.localVelocityUMax);\n\t\t\tthis.constantVelocityDivMult.setValue(emitter.velocityUMax);\n\t\t\tthis.constantRotSpeedDivMult.setValue(emitter.rotSpeedUMax[0]);\n\t\t\tvar texIN = emitter.swapTex ? emitter.particleTexOUT : emitter.particleTexIN;\n\t\t\ttexIN = emitter.beenReset ? emitter.particleTexStart : texIN;\n\t\t\tvar texOUT = emitter.swapTex ? emitter.particleTexIN : emitter.particleTexOUT;\n\t\t\tthis.constantParticleTexIN.setValue(texIN);\n\t\t\tdrawQuadWithShader(device, emitter.swapTex ? emitter.rtParticleTexIN : emitter.rtParticleTexOUT, !isOnStop ? emitter.loop ? emitter.shaderParticleUpdateRespawn : emitter.shaderParticleUpdateNoRespawn : emitter.shaderParticleUpdateOnStop);\n\t\t\temitter.material.setParameter(\"particleTexOUT\", texIN);\n\t\t\temitter.material.setParameter(\"particleTexIN\", texOUT);\n\t\t\temitter.beenReset = false;\n\t\t\temitter.swapTex = !emitter.swapTex;\n\t\t\tdevice.setDepthTest(true);\n\t\t\tdevice.setDepthWrite(true);\n\t\t\temitter.prevWorldBoundsSize.copy(emitter.worldBoundsSize);\n\t\t\temitter.prevWorldBoundsCenter.copy(emitter.worldBounds.center);\n\t\t\tif (emitter.pack8) this._setInputBounds();\n\t\t};\n\n\t\treturn ParticleGPUUpdater;\n\t}();\n\n\tvar particleVerts = [[-1, -1], [1, -1], [1, 1], [-1, 1]];\n\n\tvar _createTexture = function _createTexture(device, width, height, pixelData, format, mult8Bit, filter) {\n\t\tif (format === void 0) {\n\t\t\tformat = PIXELFORMAT_RGBA32F;\n\t\t}\n\n\t\tvar mipFilter = FILTER_NEAREST;\n\t\tif (filter && format === PIXELFORMAT_R8_G8_B8_A8) mipFilter = FILTER_LINEAR;\n\t\tvar texture = new Texture(device, {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tformat: format,\n\t\t\tcubemap: false,\n\t\t\tmipmaps: false,\n\t\t\tminFilter: mipFilter,\n\t\t\tmagFilter: mipFilter,\n\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t});\n\t\ttexture.name = \"PSTexture\";\n\t\tvar pixels = texture.lock();\n\n\t\tif (format === PIXELFORMAT_R8_G8_B8_A8) {\n\t\t\tvar temp = new Uint8Array(pixelData.length);\n\n\t\t\tfor (var i = 0; i < pixelData.length; i++) {\n\t\t\t\ttemp[i] = pixelData[i] * mult8Bit * 255;\n\t\t\t}\n\n\t\t\tpixelData = temp;\n\t\t}\n\n\t\tpixels.set(pixelData);\n\t\ttexture.unlock();\n\t\treturn texture;\n\t};\n\n\tfunction saturate$1(x) {\n\t\treturn Math.max(Math.min(x, 1), 0);\n\t}\n\n\tvar default0Curve = new Curve([0, 0, 1, 0]);\n\tvar default1Curve = new Curve([0, 1, 1, 1]);\n\tvar default0Curve3 = new CurveSet([0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]);\n\tvar default1Curve3 = new CurveSet([0, 1, 1, 1], [0, 1, 1, 1], [0, 1, 1, 1]);\n\tvar particleTexHeight = 2;\n\tvar particleTexChannels$1 = 4;\n\tvar extentsInnerRatioUniform = new Float32Array(3);\n\tvar spawnMatrix = new Mat4();\n\tvar tmpVec3$2 = new Vec3();\n\tvar bMin = new Vec3();\n\tvar bMax = new Vec3();\n\tvar setPropertyTarget;\n\tvar setPropertyOptions;\n\n\tfunction setProperty(pName, defaultVal) {\n\t\tif (setPropertyOptions[pName] !== undefined && setPropertyOptions[pName] !== null) {\n\t\t\tsetPropertyTarget[pName] = setPropertyOptions[pName];\n\t\t} else {\n\t\t\tsetPropertyTarget[pName] = defaultVal;\n\t\t}\n\t}\n\n\tfunction pack3NFloats(a, b, c) {\n\t\tvar packed = a * 255 << 16 | b * 255 << 8 | c * 255;\n\t\treturn packed / (1 << 24);\n\t}\n\n\tfunction packTextureXYZ_NXYZ(qXYZ, qXYZ2) {\n\t\tvar num = qXYZ.length / 3;\n\t\tvar colors = new Array(num * 4);\n\n\t\tfor (var i = 0; i < num; i++) {\n\t\t\tcolors[i * 4] = qXYZ[i * 3];\n\t\t\tcolors[i * 4 + 1] = qXYZ[i * 3 + 1];\n\t\t\tcolors[i * 4 + 2] = qXYZ[i * 3 + 2];\n\t\t\tcolors[i * 4 + 3] = pack3NFloats(qXYZ2[i * 3], qXYZ2[i * 3 + 1], qXYZ2[i * 3 + 2]);\n\t\t}\n\n\t\treturn colors;\n\t}\n\n\tfunction packTextureRGBA(qRGB, qA) {\n\t\tvar colors = new Array(qA.length * 4);\n\n\t\tfor (var i = 0; i < qA.length; i++) {\n\t\t\tcolors[i * 4] = qRGB[i * 3];\n\t\t\tcolors[i * 4 + 1] = qRGB[i * 3 + 1];\n\t\t\tcolors[i * 4 + 2] = qRGB[i * 3 + 2];\n\t\t\tcolors[i * 4 + 3] = qA[i];\n\t\t}\n\n\t\treturn colors;\n\t}\n\n\tfunction packTexture5Floats(qA, qB, qC, qD, qE) {\n\t\tvar colors = new Array(qA.length * 4);\n\n\t\tfor (var i = 0; i < qA.length; i++) {\n\t\t\tcolors[i * 4] = qA[i];\n\t\t\tcolors[i * 4 + 1] = qB[i];\n\t\t\tcolors[i * 4 + 2] = 0;\n\t\t\tcolors[i * 4 + 3] = pack3NFloats(qC[i], qD[i], qE[i]);\n\t\t}\n\n\t\treturn colors;\n\t}\n\n\tfunction packTexture2Floats(qA, qB) {\n\t\tvar colors = new Array(qA.length * 4);\n\n\t\tfor (var i = 0; i < qA.length; i++) {\n\t\t\tcolors[i * 4] = qA[i];\n\t\t\tcolors[i * 4 + 1] = qB[i];\n\t\t\tcolors[i * 4 + 2] = 0;\n\t\t\tcolors[i * 4 + 3] = 0;\n\t\t}\n\n\t\treturn colors;\n\t}\n\n\tfunction calcEndTime(emitter) {\n\t\tvar interval = Math.max(emitter.rate, emitter.rate2) * emitter.numParticles + emitter.lifetime;\n\t\treturn Date.now() + interval * 1000;\n\t}\n\n\tfunction subGraph(A, B) {\n\t\tvar r = new Float32Array(A.length);\n\n\t\tfor (var i = 0; i < A.length; i++) {\n\t\t\tr[i] = A[i] - B[i];\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction maxUnsignedGraphValue(A, outUMax) {\n\t\tvar i, j;\n\t\tvar chans = outUMax.length;\n\t\tvar values = A.length / chans;\n\n\t\tfor (i = 0; i < values; i++) {\n\t\t\tfor (j = 0; j < chans; j++) {\n\t\t\t\tvar a = Math.abs(A[i * chans + j]);\n\t\t\t\toutUMax[j] = Math.max(outUMax[j], a);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction normalizeGraph(A, uMax) {\n\t\tvar chans = uMax.length;\n\t\tvar i, j;\n\t\tvar values = A.length / chans;\n\n\t\tfor (i = 0; i < values; i++) {\n\t\t\tfor (j = 0; j < chans; j++) {\n\t\t\t\tA[i * chans + j] /= uMax[j] === 0 ? 1 : uMax[j];\n\t\t\t\tA[i * chans + j] *= 0.5;\n\t\t\t\tA[i * chans + j] += 0.5;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction divGraphFrom2Curves(curve1, curve2, outUMax) {\n\t\tvar sub = subGraph(curve2, curve1);\n\t\tmaxUnsignedGraphValue(sub, outUMax);\n\t\tnormalizeGraph(sub, outUMax);\n\t\treturn sub;\n\t}\n\n\tvar ParticleEmitter = function () {\n\t\tfunction ParticleEmitter(graphicsDevice, options) {\n\t\t\tthis.graphicsDevice = graphicsDevice;\n\t\t\tvar gd = graphicsDevice;\n\t\t\tvar precision = 32;\n\t\t\tthis.precision = precision;\n\t\t\tthis._addTimeTime = 0;\n\n\t\t\tif (!ParticleEmitter.DEFAULT_PARAM_TEXTURE) {\n\t\t\t\tvar resolution = 16;\n\t\t\t\tvar centerPoint = resolution * 0.5 + 0.5;\n\t\t\t\tvar dtex = new Float32Array(resolution * resolution * 4);\n\t\t\t\tvar x, y, xgrad, ygrad, p, c;\n\n\t\t\t\tfor (y = 0; y < resolution; y++) {\n\t\t\t\t\tfor (x = 0; x < resolution; x++) {\n\t\t\t\t\t\txgrad = x + 1 - centerPoint;\n\t\t\t\t\t\tygrad = y + 1 - centerPoint;\n\t\t\t\t\t\tc = saturate$1(1 - saturate$1(Math.sqrt(xgrad * xgrad + ygrad * ygrad) / resolution) - 0.5);\n\t\t\t\t\t\tp = y * resolution + x;\n\t\t\t\t\t\tdtex[p * 4] = 1;\n\t\t\t\t\t\tdtex[p * 4 + 1] = 1;\n\t\t\t\t\t\tdtex[p * 4 + 2] = 1;\n\t\t\t\t\t\tdtex[p * 4 + 3] = c;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tParticleEmitter.DEFAULT_PARAM_TEXTURE = _createTexture(gd, resolution, resolution, dtex, PIXELFORMAT_R8_G8_B8_A8, 1.0, true);\n\t\t\t\tParticleEmitter.DEFAULT_PARAM_TEXTURE.minFilter = FILTER_LINEAR;\n\t\t\t\tParticleEmitter.DEFAULT_PARAM_TEXTURE.magFilter = FILTER_LINEAR;\n\t\t\t}\n\n\t\t\tsetPropertyTarget = this;\n\t\t\tsetPropertyOptions = options;\n\t\t\tsetProperty(\"numParticles\", 1);\n\n\t\t\tif (this.numParticles > graphicsDevice.maxTextureSize) {\n\t\t\t\tconsole.warn(\"WARNING: can't create more than \" + graphicsDevice.maxTextureSize + \" particles on this device.\");\n\t\t\t\tthis.numParticles = graphicsDevice.maxTextureSize;\n\t\t\t}\n\n\t\t\tsetProperty(\"rate\", 1);\n\t\t\tsetProperty(\"rate2\", this.rate);\n\t\t\tsetProperty(\"lifetime\", 50);\n\t\t\tsetProperty(\"emitterExtents\", new Vec3(0, 0, 0));\n\t\t\tsetProperty(\"emitterExtentsInner\", new Vec3(0, 0, 0));\n\t\t\tsetProperty(\"emitterRadius\", 0);\n\t\t\tsetProperty(\"emitterRadiusInner\", 0);\n\t\t\tsetProperty(\"emitterShape\", EMITTERSHAPE_BOX);\n\t\t\tsetProperty(\"initialVelocity\", 1);\n\t\t\tsetProperty(\"wrap\", false);\n\t\t\tsetProperty(\"localSpace\", false);\n\t\t\tsetProperty(\"screenSpace\", false);\n\t\t\tsetProperty(\"wrapBounds\", null);\n\t\t\tsetProperty(\"colorMap\", ParticleEmitter.DEFAULT_PARAM_TEXTURE);\n\t\t\tsetProperty(\"normalMap\", null);\n\t\t\tsetProperty(\"loop\", true);\n\t\t\tsetProperty(\"preWarm\", false);\n\t\t\tsetProperty(\"sort\", PARTICLESORT_NONE);\n\t\t\tsetProperty(\"mode\", PARTICLEMODE_GPU);\n\t\t\tsetProperty(\"scene\", null);\n\t\t\tsetProperty(\"lighting\", false);\n\t\t\tsetProperty(\"halfLambert\", false);\n\t\t\tsetProperty(\"intensity\", 1.0);\n\t\t\tsetProperty(\"stretch\", 0.0);\n\t\t\tsetProperty(\"alignToMotion\", false);\n\t\t\tsetProperty(\"depthSoftening\", 0);\n\t\t\tsetProperty(\"mesh\", null);\n\t\t\tsetProperty(\"particleNormal\", new Vec3(0, 1, 0));\n\t\t\tsetProperty(\"orientation\", PARTICLEORIENTATION_SCREEN);\n\t\t\tsetProperty(\"depthWrite\", false);\n\t\t\tsetProperty(\"noFog\", false);\n\t\t\tsetProperty(\"blendType\", BLEND_NORMAL);\n\t\t\tsetProperty(\"node\", null);\n\t\t\tsetProperty(\"startAngle\", 0);\n\t\t\tsetProperty(\"startAngle2\", this.startAngle);\n\t\t\tsetProperty(\"animTilesX\", 1);\n\t\t\tsetProperty(\"animTilesY\", 1);\n\t\t\tsetProperty(\"animStartFrame\", 0);\n\t\t\tsetProperty(\"animNumFrames\", 1);\n\t\t\tsetProperty(\"animNumAnimations\", 1);\n\t\t\tsetProperty(\"animIndex\", 0);\n\t\t\tsetProperty(\"randomizeAnimIndex\", false);\n\t\t\tsetProperty(\"animSpeed\", 1);\n\t\t\tsetProperty(\"animLoop\", true);\n\t\t\tthis._gpuUpdater = new ParticleGPUUpdater(this, gd);\n\t\t\tthis._cpuUpdater = new ParticleCPUUpdater(this);\n\t\t\tthis.constantLightCube = gd.scope.resolve(\"lightCube[0]\");\n\t\t\tthis.emitterPosUniform = new Float32Array(3);\n\t\t\tthis.wrapBoundsUniform = new Float32Array(3);\n\t\t\tthis.emitterScaleUniform = new Float32Array([1, 1, 1]);\n\t\t\tsetProperty(\"colorGraph\", default1Curve3);\n\t\t\tsetProperty(\"colorGraph2\", this.colorGraph);\n\t\t\tsetProperty(\"scaleGraph\", default1Curve);\n\t\t\tsetProperty(\"scaleGraph2\", this.scaleGraph);\n\t\t\tsetProperty(\"alphaGraph\", default1Curve);\n\t\t\tsetProperty(\"alphaGraph2\", this.alphaGraph);\n\t\t\tsetProperty(\"localVelocityGraph\", default0Curve3);\n\t\t\tsetProperty(\"localVelocityGraph2\", this.localVelocityGraph);\n\t\t\tsetProperty(\"velocityGraph\", default0Curve3);\n\t\t\tsetProperty(\"velocityGraph2\", this.velocityGraph);\n\t\t\tsetProperty(\"rotationSpeedGraph\", default0Curve);\n\t\t\tsetProperty(\"rotationSpeedGraph2\", this.rotationSpeedGraph);\n\t\t\tsetProperty(\"radialSpeedGraph\", default0Curve);\n\t\t\tsetProperty(\"radialSpeedGraph2\", this.radialSpeedGraph);\n\t\t\tthis.lightCube = new Float32Array(6 * 3);\n\t\t\tthis.lightCubeDir = new Array(6);\n\t\t\tthis.lightCubeDir[0] = new Vec3(-1, 0, 0);\n\t\t\tthis.lightCubeDir[1] = new Vec3(1, 0, 0);\n\t\t\tthis.lightCubeDir[2] = new Vec3(0, -1, 0);\n\t\t\tthis.lightCubeDir[3] = new Vec3(0, 1, 0);\n\t\t\tthis.lightCubeDir[4] = new Vec3(0, 0, -1);\n\t\t\tthis.lightCubeDir[5] = new Vec3(0, 0, 1);\n\t\t\tthis.animTilesParams = new Float32Array(2);\n\t\t\tthis.animParams = new Float32Array(4);\n\t\t\tthis.animIndexParams = new Float32Array(2);\n\t\t\tthis.internalTex0 = null;\n\t\t\tthis.internalTex1 = null;\n\t\t\tthis.internalTex2 = null;\n\t\t\tthis.colorParam = null;\n\t\t\tthis.vbToSort = null;\n\t\t\tthis.vbOld = null;\n\t\t\tthis.particleDistance = null;\n\t\t\tthis.camera = null;\n\t\t\tthis.swapTex = false;\n\t\t\tthis.useMesh = true;\n\t\t\tthis.useCpu = false;\n\t\t\tthis.pack8 = true;\n\t\t\tthis.localBounds = new BoundingBox();\n\t\t\tthis.worldBoundsNoTrail = new BoundingBox();\n\t\t\tthis.worldBoundsTrail = [new BoundingBox(), new BoundingBox()];\n\t\t\tthis.worldBounds = new BoundingBox();\n\t\t\tthis.worldBoundsSize = new Vec3();\n\t\t\tthis.prevWorldBoundsSize = new Vec3();\n\t\t\tthis.prevWorldBoundsCenter = new Vec3();\n\t\t\tthis.prevEmitterExtents = this.emitterExtents;\n\t\t\tthis.prevEmitterRadius = this.emitterRadius;\n\t\t\tthis.worldBoundsMul = new Vec3();\n\t\t\tthis.worldBoundsAdd = new Vec3();\n\t\t\tthis.timeToSwitchBounds = 0;\n\t\t\tthis.shaderParticleUpdateRespawn = null;\n\t\t\tthis.shaderParticleUpdateNoRespawn = null;\n\t\t\tthis.shaderParticleUpdateOnStop = null;\n\t\t\tthis.numParticleVerts = 0;\n\t\t\tthis.numParticleIndices = 0;\n\t\t\tthis.material = null;\n\t\t\tthis.meshInstance = null;\n\t\t\tthis.drawOrder = 0;\n\t\t\tthis.seed = Math.random();\n\t\t\tthis.fixedTimeStep = 1.0 / 60;\n\t\t\tthis.maxSubSteps = 10;\n\t\t\tthis.simTime = 0;\n\t\t\tthis.simTimeTotal = 0;\n\t\t\tthis.beenReset = false;\n\t\t\tthis._layer = null;\n\t\t\tthis.rebuild();\n\t\t}\n\n\t\tvar _proto = ParticleEmitter.prototype;\n\n\t\t_proto.onChangeCamera = function onChangeCamera() {\n\t\t\tthis.regenShader();\n\t\t\tthis.resetMaterial();\n\t\t};\n\n\t\t_proto.calculateBoundsMad = function calculateBoundsMad() {\n\t\t\tthis.worldBoundsMul.x = 1.0 / this.worldBoundsSize.x;\n\t\t\tthis.worldBoundsMul.y = 1.0 / this.worldBoundsSize.y;\n\t\t\tthis.worldBoundsMul.z = 1.0 / this.worldBoundsSize.z;\n\t\t\tthis.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).scale(-1);\n\t\t\tthis.worldBoundsAdd.x += 0.5;\n\t\t\tthis.worldBoundsAdd.y += 0.5;\n\t\t\tthis.worldBoundsAdd.z += 0.5;\n\t\t};\n\n\t\t_proto.calculateWorldBounds = function calculateWorldBounds() {\n\t\t\tif (!this.node) return;\n\t\t\tthis.prevWorldBoundsSize.copy(this.worldBoundsSize);\n\t\t\tthis.prevWorldBoundsCenter.copy(this.worldBounds.center);\n\n\t\t\tif (!this.useCpu) {\n\t\t\t\tvar recalculateLocalBounds = false;\n\n\t\t\t\tif (this.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\t\trecalculateLocalBounds = !this.emitterExtents.equals(this.prevEmitterExtents);\n\t\t\t\t} else {\n\t\t\t\t\trecalculateLocalBounds = !(this.emitterRadius === this.prevEmitterRadius);\n\t\t\t\t}\n\n\t\t\t\tif (recalculateLocalBounds) {\n\t\t\t\t\tthis.calculateLocalBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar nodeWT = this.node.getWorldTransform();\n\n\t\t\tif (this.localSpace) {\n\t\t\t\tthis.worldBoundsNoTrail.copy(this.localBounds);\n\t\t\t} else {\n\t\t\t\tthis.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds, nodeWT);\n\t\t\t}\n\n\t\t\tthis.worldBoundsTrail[0].add(this.worldBoundsNoTrail);\n\t\t\tthis.worldBoundsTrail[1].add(this.worldBoundsNoTrail);\n\t\t\tvar now = this.simTimeTotal;\n\n\t\t\tif (now >= this.timeToSwitchBounds) {\n\t\t\t\tthis.worldBoundsTrail[0].copy(this.worldBoundsTrail[1]);\n\t\t\t\tthis.worldBoundsTrail[1].copy(this.worldBoundsNoTrail);\n\t\t\t\tthis.timeToSwitchBounds = now + this.lifetime;\n\t\t\t}\n\n\t\t\tthis.worldBounds.copy(this.worldBoundsTrail[0]);\n\t\t\tthis.worldBoundsSize.copy(this.worldBounds.halfExtents).scale(2);\n\n\t\t\tif (this.localSpace) {\n\t\t\t\tthis.meshInstance.aabb.setFromTransformedAabb(this.worldBounds, nodeWT);\n\t\t\t\tthis.meshInstance.mesh.aabb.setFromTransformedAabb(this.worldBounds, nodeWT);\n\t\t\t} else {\n\t\t\t\tthis.meshInstance.aabb.copy(this.worldBounds);\n\t\t\t\tthis.meshInstance.mesh.aabb.copy(this.worldBounds);\n\t\t\t}\n\n\t\t\tthis.meshInstance._aabbVer = 1 - this.meshInstance._aabbVer;\n\t\t\tif (this.pack8) this.calculateBoundsMad();\n\t\t};\n\n\t\t_proto.resetWorldBounds = function resetWorldBounds() {\n\t\t\tif (!this.node) return;\n\t\t\tthis.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds, this.localSpace ? Mat4.IDENTITY : this.node.getWorldTransform());\n\t\t\tthis.worldBoundsTrail[0].copy(this.worldBoundsNoTrail);\n\t\t\tthis.worldBoundsTrail[1].copy(this.worldBoundsNoTrail);\n\t\t\tthis.worldBounds.copy(this.worldBoundsTrail[0]);\n\t\t\tthis.worldBoundsSize.copy(this.worldBounds.halfExtents).scale(2);\n\t\t\tthis.prevWorldBoundsSize.copy(this.worldBoundsSize);\n\t\t\tthis.prevWorldBoundsCenter.copy(this.worldBounds.center);\n\t\t\tthis.simTimeTotal = 0;\n\t\t\tthis.timeToSwitchBounds = 0;\n\t\t};\n\n\t\t_proto.calculateLocalBounds = function calculateLocalBounds() {\n\t\t\tvar minx = Number.MAX_VALUE;\n\t\t\tvar miny = Number.MAX_VALUE;\n\t\t\tvar minz = Number.MAX_VALUE;\n\t\t\tvar maxx = -Number.MAX_VALUE;\n\t\t\tvar maxy = -Number.MAX_VALUE;\n\t\t\tvar maxz = -Number.MAX_VALUE;\n\t\t\tvar maxR = 0;\n\t\t\tvar maxScale = 0;\n\t\t\tvar stepWeight = this.lifetime / this.precision;\n\t\t\tvar wVels = [this.qVelocity, this.qVelocity2];\n\t\t\tvar lVels = [this.qLocalVelocity, this.qLocalVelocity2];\n\t\t\tvar accumX = [0, 0];\n\t\t\tvar accumY = [0, 0];\n\t\t\tvar accumZ = [0, 0];\n\t\t\tvar accumR = [0, 0];\n\t\t\tvar accumW = [0, 0];\n\t\t\tvar i, j;\n\t\t\tvar index;\n\t\t\tvar x, y, z;\n\n\t\t\tfor (i = 0; i < this.precision + 1; i++) {\n\t\t\t\tindex = Math.min(i, this.precision - 1);\n\n\t\t\t\tfor (j = 0; j < 2; j++) {\n\t\t\t\t\tx = lVels[j][index * 3 + 0] * stepWeight + accumX[j];\n\t\t\t\t\ty = lVels[j][index * 3 + 1] * stepWeight + accumY[j];\n\t\t\t\t\tz = lVels[j][index * 3 + 2] * stepWeight + accumZ[j];\n\t\t\t\t\tminx = Math.min(x, minx);\n\t\t\t\t\tminy = Math.min(y, miny);\n\t\t\t\t\tminz = Math.min(z, minz);\n\t\t\t\t\tmaxx = Math.max(x, maxx);\n\t\t\t\t\tmaxy = Math.max(y, maxy);\n\t\t\t\t\tmaxz = Math.max(z, maxz);\n\t\t\t\t\taccumX[j] = x;\n\t\t\t\t\taccumY[j] = y;\n\t\t\t\t\taccumZ[j] = z;\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0; j < 2; j++) {\n\t\t\t\t\taccumW[j] += stepWeight * Math.sqrt(wVels[j][index * 3 + 0] * wVels[j][index * 3 + 0] + wVels[j][index * 3 + 1] * wVels[j][index * 3 + 1] + wVels[j][index * 3 + 2] * wVels[j][index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\taccumR[0] += this.qRadialSpeed[index] * stepWeight;\n\t\t\t\taccumR[1] += this.qRadialSpeed2[index] * stepWeight;\n\t\t\t\tmaxR = Math.max(maxR, Math.max(Math.abs(accumR[0]), Math.abs(accumR[1])));\n\t\t\t\tmaxScale = Math.max(maxScale, this.qScale[index]);\n\t\t\t}\n\n\t\t\tif (this.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\tx = this.emitterExtents.x * 0.5;\n\t\t\t\ty = this.emitterExtents.y * 0.5;\n\t\t\t\tz = this.emitterExtents.z * 0.5;\n\t\t\t} else {\n\t\t\t\tx = this.emitterRadius;\n\t\t\t\ty = this.emitterRadius;\n\t\t\t\tz = this.emitterRadius;\n\t\t\t}\n\n\t\t\tvar w = Math.max(accumW[0], accumW[1]);\n\t\t\tbMin.x = minx - maxScale - x - maxR - w;\n\t\t\tbMin.y = miny - maxScale - y - maxR - w;\n\t\t\tbMin.z = minz - maxScale - z - maxR - w;\n\t\t\tbMax.x = maxx + maxScale + x + maxR + w;\n\t\t\tbMax.y = maxy + maxScale + y + maxR + w;\n\t\t\tbMax.z = maxz + maxScale + z + maxR + w;\n\t\t\tthis.localBounds.setMinMax(bMin, bMax);\n\t\t};\n\n\t\t_proto.rebuild = function rebuild() {\n\t\t\tvar i;\n\t\t\tvar gd = this.graphicsDevice;\n\t\t\tif (this.colorMap === null) this.colorMap = ParticleEmitter.DEFAULT_PARAM_TEXTURE;\n\t\t\tthis.spawnBounds = this.emitterShape === EMITTERSHAPE_BOX ? this.emitterExtents : this.emitterRadius;\n\t\t\tthis.useCpu = this.useCpu || this.sort > PARTICLESORT_NONE || gd.maxVertexTextures <= 1 || gd.fragmentUniformsCount < 64 || gd.forceCpuParticles || !gd.extTextureFloat;\n\n\t\t\tthis._destroyResources();\n\n\t\t\tthis.pack8 = (this.pack8 || !gd.textureFloatRenderable) && !this.useCpu;\n\t\t\tparticleTexHeight = this.useCpu || this.pack8 ? 4 : 2;\n\t\t\tthis.useMesh = false;\n\n\t\t\tif (this.mesh) {\n\t\t\t\tvar totalVertCount = this.numParticles * this.mesh.vertexBuffer.numVertices;\n\n\t\t\t\tif (totalVertCount > 65535) {\n\t\t\t\t\tconsole.warn(\"WARNING: particle system can't render mesh particles because numParticles * numVertices is more than 65k. Reverting to quad particles.\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.useMesh = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.numParticlesPot = math.nextPowerOfTwo(this.numParticles);\n\t\t\tthis.rebuildGraphs();\n\t\t\tthis.calculateLocalBounds();\n\t\t\tthis.resetWorldBounds();\n\n\t\t\tif (this.node) {\n\t\t\t\tthis.worldBounds.setFromTransformedAabb(this.localBounds, this.localSpace ? Mat4.IDENTITY : this.node.getWorldTransform());\n\t\t\t\tthis.worldBoundsTrail[0].copy(this.worldBounds);\n\t\t\t\tthis.worldBoundsTrail[1].copy(this.worldBounds);\n\t\t\t\tthis.worldBoundsSize.copy(this.worldBounds.halfExtents).scale(2);\n\t\t\t\tthis.prevWorldBoundsSize.copy(this.worldBoundsSize);\n\t\t\t\tthis.prevWorldBoundsCenter.copy(this.worldBounds.center);\n\t\t\t\tif (this.pack8) this.calculateBoundsMad();\n\t\t\t}\n\n\t\t\tthis.vbToSort = new Array(this.numParticles);\n\n\t\t\tfor (var iSort = 0; iSort < this.numParticles; iSort++) {\n\t\t\t\tthis.vbToSort[iSort] = [0, 0];\n\t\t\t}\n\n\t\t\tthis.particleDistance = new Float32Array(this.numParticles);\n\n\t\t\tthis._gpuUpdater.randomize();\n\n\t\t\tthis.particleTex = new Float32Array(this.numParticlesPot * particleTexHeight * particleTexChannels$1);\n\t\t\tvar emitterPos = this.node === null || this.localSpace ? Vec3.ZERO : this.node.getPosition();\n\n\t\t\tif (this.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\tif (this.node === null || this.localSpace) {\n\t\t\t\t\tspawnMatrix.setTRS(Vec3.ZERO, Quat.IDENTITY, this.spawnBounds);\n\t\t\t\t} else {\n\t\t\t\t\tspawnMatrix.setTRS(Vec3.ZERO, this.node.getRotation(), tmpVec3$2.copy(this.spawnBounds).mul(this.node.localScale));\n\t\t\t\t}\n\n\t\t\t\textentsInnerRatioUniform[0] = this.emitterExtents.x != 0 ? this.emitterExtentsInner.x / this.emitterExtents.x : 0;\n\t\t\t\textentsInnerRatioUniform[1] = this.emitterExtents.y != 0 ? this.emitterExtentsInner.y / this.emitterExtents.y : 0;\n\t\t\t\textentsInnerRatioUniform[2] = this.emitterExtents.z != 0 ? this.emitterExtentsInner.z / this.emitterExtents.z : 0;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.numParticles; i++) {\n\t\t\t\tthis._cpuUpdater.calcSpawnPosition(this.particleTex, spawnMatrix, extentsInnerRatioUniform, emitterPos, i);\n\n\t\t\t\tif (this.useCpu) this.particleTex[i * particleTexChannels$1 + 3 + this.numParticlesPot * 2 * particleTexChannels$1] = 1;\n\t\t\t}\n\n\t\t\tthis.particleTexStart = new Float32Array(this.numParticlesPot * particleTexHeight * particleTexChannels$1);\n\n\t\t\tfor (i = 0; i < this.particleTexStart.length; i++) {\n\t\t\t\tthis.particleTexStart[i] = this.particleTex[i];\n\t\t\t}\n\n\t\t\tif (!this.useCpu) {\n\t\t\t\tif (this.pack8) {\n\t\t\t\t\tthis.particleTexIN = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTex, PIXELFORMAT_R8_G8_B8_A8, 1, false);\n\t\t\t\t\tthis.particleTexOUT = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTex, PIXELFORMAT_R8_G8_B8_A8, 1, false);\n\t\t\t\t\tthis.particleTexStart = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTexStart, PIXELFORMAT_R8_G8_B8_A8, 1, false);\n\t\t\t\t} else {\n\t\t\t\t\tthis.particleTexIN = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTex);\n\t\t\t\t\tthis.particleTexOUT = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTex);\n\t\t\t\t\tthis.particleTexStart = _createTexture(gd, this.numParticlesPot, particleTexHeight, this.particleTexStart);\n\t\t\t\t}\n\n\t\t\t\tthis.rtParticleTexIN = new RenderTarget(gd, this.particleTexIN, {\n\t\t\t\t\tdepth: false\n\t\t\t\t});\n\t\t\t\tthis.rtParticleTexOUT = new RenderTarget(gd, this.particleTexOUT, {\n\t\t\t\t\tdepth: false\n\t\t\t\t});\n\t\t\t\tthis.swapTex = false;\n\t\t\t}\n\n\t\t\tvar shaderCodeStart = (this.localSpace ? '#define LOCAL_SPACE\\n' : '') + shaderChunks.particleUpdaterInitPS + (this.pack8 ? shaderChunks.particleInputRgba8PS + shaderChunks.particleOutputRgba8PS : shaderChunks.particleInputFloatPS + shaderChunks.particleOutputFloatPS) + (this.emitterShape === EMITTERSHAPE_BOX ? shaderChunks.particleUpdaterAABBPS : shaderChunks.particleUpdaterSpherePS) + shaderChunks.particleUpdaterStartPS;\n\t\t\tvar shaderCodeRespawn = shaderCodeStart + shaderChunks.particleUpdaterRespawnPS + shaderChunks.particleUpdaterEndPS;\n\t\t\tvar shaderCodeNoRespawn = shaderCodeStart + shaderChunks.particleUpdaterNoRespawnPS + shaderChunks.particleUpdaterEndPS;\n\t\t\tvar shaderCodeOnStop = shaderCodeStart + shaderChunks.particleUpdaterOnStopPS + shaderChunks.particleUpdaterEndPS;\n\t\t\tvar params = this.emitterShape + \"\" + this.pack8 + \"\" + this.localSpace;\n\t\t\tthis.shaderParticleUpdateRespawn = createShaderFromCode(gd, shaderChunks.fullscreenQuadVS, shaderCodeRespawn, \"fsQuad0\" + params);\n\t\t\tthis.shaderParticleUpdateNoRespawn = createShaderFromCode(gd, shaderChunks.fullscreenQuadVS, shaderCodeNoRespawn, \"fsQuad1\" + params);\n\t\t\tthis.shaderParticleUpdateOnStop = createShaderFromCode(gd, shaderChunks.fullscreenQuadVS, shaderCodeOnStop, \"fsQuad2\" + params);\n\t\t\tthis.numParticleVerts = this.useMesh ? this.mesh.vertexBuffer.numVertices : 4;\n\t\t\tthis.numParticleIndices = this.useMesh ? this.mesh.indexBuffer[0].numIndices : 6;\n\n\t\t\tthis._allocate(this.numParticles);\n\n\t\t\tvar mesh = new Mesh(gd);\n\t\t\tmesh.vertexBuffer = this.vertexBuffer;\n\t\t\tmesh.indexBuffer[0] = this.indexBuffer;\n\t\t\tmesh.primitive[0].type = PRIMITIVE_TRIANGLES;\n\t\t\tmesh.primitive[0].base = 0;\n\t\t\tmesh.primitive[0].count = this.numParticles * this.numParticleIndices;\n\t\t\tmesh.primitive[0].indexed = true;\n\t\t\tthis.material = new Material();\n\t\t\tthis.material.name = this.node.name;\n\t\t\tthis.material.cull = CULLFACE_NONE;\n\t\t\tthis.material.alphaWrite = false;\n\t\t\tthis.material.blend = true;\n\t\t\tthis.material.blendType = this.blendType;\n\t\t\tthis.material.depthWrite = this.depthWrite;\n\t\t\tthis.material.emitter = this;\n\t\t\tthis.regenShader();\n\t\t\tthis.resetMaterial();\n\t\t\tvar wasVisible = this.meshInstance ? this.meshInstance.visible : true;\n\t\t\tthis.meshInstance = new MeshInstance(this.node, mesh, this.material);\n\t\t\tthis.meshInstance.pick = false;\n\t\t\tthis.meshInstance.updateKey();\n\t\t\tthis.meshInstance.cull = true;\n\t\t\tthis.meshInstance._noDepthDrawGl1 = true;\n\n\t\t\tif (this.localSpace) {\n\t\t\t\tthis.meshInstance.aabb.setFromTransformedAabb(this.worldBounds, this.node.getWorldTransform());\n\t\t\t} else {\n\t\t\t\tthis.meshInstance.aabb.copy(this.worldBounds);\n\t\t\t}\n\n\t\t\tthis.meshInstance._updateAabb = false;\n\t\t\tthis.meshInstance.visible = wasVisible;\n\n\t\t\tthis._initializeTextures();\n\n\t\t\tthis.resetTime();\n\t\t\tthis.addTime(0, false);\n\t\t\tif (this.preWarm) this.prewarm(this.lifetime);\n\t\t};\n\n\t\t_proto._isAnimated = function _isAnimated() {\n\t\t\treturn this.animNumFrames >= 1 && (this.animTilesX > 1 || this.animTilesY > 1) && (this.colorMap && this.colorMap !== ParticleEmitter.DEFAULT_PARAM_TEXTURE || this.normalMap);\n\t\t};\n\n\t\t_proto.rebuildGraphs = function rebuildGraphs() {\n\t\t\tvar precision = this.precision;\n\t\t\tvar gd = this.graphicsDevice;\n\t\t\tvar i;\n\t\t\tthis.qLocalVelocity = this.localVelocityGraph.quantize(precision);\n\t\t\tthis.qVelocity = this.velocityGraph.quantize(precision);\n\t\t\tthis.qColor = this.colorGraph.quantizeClamped(precision, 0, 1);\n\t\t\tthis.qRotSpeed = this.rotationSpeedGraph.quantize(precision);\n\t\t\tthis.qScale = this.scaleGraph.quantize(precision);\n\t\t\tthis.qAlpha = this.alphaGraph.quantize(precision);\n\t\t\tthis.qRadialSpeed = this.radialSpeedGraph.quantize(precision);\n\t\t\tthis.qLocalVelocity2 = this.localVelocityGraph2.quantize(precision);\n\t\t\tthis.qVelocity2 = this.velocityGraph2.quantize(precision);\n\t\t\tthis.qColor2 = this.colorGraph2.quantizeClamped(precision, 0, 1);\n\t\t\tthis.qRotSpeed2 = this.rotationSpeedGraph2.quantize(precision);\n\t\t\tthis.qScale2 = this.scaleGraph2.quantize(precision);\n\t\t\tthis.qAlpha2 = this.alphaGraph2.quantize(precision);\n\t\t\tthis.qRadialSpeed2 = this.radialSpeedGraph2.quantize(precision);\n\n\t\t\tfor (i = 0; i < precision; i++) {\n\t\t\t\tthis.qRotSpeed[i] *= math.DEG_TO_RAD;\n\t\t\t\tthis.qRotSpeed2[i] *= math.DEG_TO_RAD;\n\t\t\t}\n\n\t\t\tthis.localVelocityUMax = new Float32Array(3);\n\t\t\tthis.velocityUMax = new Float32Array(3);\n\t\t\tthis.colorUMax = new Float32Array(3);\n\t\t\tthis.rotSpeedUMax = [0];\n\t\t\tthis.scaleUMax = [0];\n\t\t\tthis.alphaUMax = [0];\n\t\t\tthis.radialSpeedUMax = [0];\n\t\t\tthis.qLocalVelocityDiv = divGraphFrom2Curves(this.qLocalVelocity, this.qLocalVelocity2, this.localVelocityUMax);\n\t\t\tthis.qVelocityDiv = divGraphFrom2Curves(this.qVelocity, this.qVelocity2, this.velocityUMax);\n\t\t\tthis.qColorDiv = divGraphFrom2Curves(this.qColor, this.qColor2, this.colorUMax);\n\t\t\tthis.qRotSpeedDiv = divGraphFrom2Curves(this.qRotSpeed, this.qRotSpeed2, this.rotSpeedUMax);\n\t\t\tthis.qScaleDiv = divGraphFrom2Curves(this.qScale, this.qScale2, this.scaleUMax);\n\t\t\tthis.qAlphaDiv = divGraphFrom2Curves(this.qAlpha, this.qAlpha2, this.alphaUMax);\n\t\t\tthis.qRadialSpeedDiv = divGraphFrom2Curves(this.qRadialSpeed, this.qRadialSpeed2, this.radialSpeedUMax);\n\n\t\t\tif (this.pack8) {\n\t\t\t\tvar umax = [0, 0, 0];\n\t\t\t\tmaxUnsignedGraphValue(this.qVelocity, umax);\n\t\t\t\tvar umax2 = [0, 0, 0];\n\t\t\t\tmaxUnsignedGraphValue(this.qVelocity2, umax2);\n\t\t\t\tvar lumax = [0, 0, 0];\n\t\t\t\tmaxUnsignedGraphValue(this.qLocalVelocity, lumax);\n\t\t\t\tvar lumax2 = [0, 0, 0];\n\t\t\t\tmaxUnsignedGraphValue(this.qLocalVelocity2, lumax2);\n\t\t\t\tvar rumax = [0];\n\t\t\t\tmaxUnsignedGraphValue(this.qRadialSpeed, rumax);\n\t\t\t\tvar rumax2 = [0];\n\t\t\t\tmaxUnsignedGraphValue(this.qRadialSpeed2, rumax2);\n\t\t\t\tvar maxVel = Math.max(umax[0], umax2[0]);\n\t\t\t\tmaxVel = Math.max(maxVel, umax[1]);\n\t\t\t\tmaxVel = Math.max(maxVel, umax2[1]);\n\t\t\t\tmaxVel = Math.max(maxVel, umax[2]);\n\t\t\t\tmaxVel = Math.max(maxVel, umax2[2]);\n\t\t\t\tvar lmaxVel = Math.max(lumax[0], lumax2[0]);\n\t\t\t\tlmaxVel = Math.max(lmaxVel, lumax[1]);\n\t\t\t\tlmaxVel = Math.max(lmaxVel, lumax2[1]);\n\t\t\t\tlmaxVel = Math.max(lmaxVel, lumax[2]);\n\t\t\t\tlmaxVel = Math.max(lmaxVel, lumax2[2]);\n\t\t\t\tvar maxRad = Math.max(rumax[0], rumax2[0]);\n\t\t\t\tthis.maxVel = maxVel + lmaxVel + maxRad;\n\t\t\t}\n\n\t\t\tif (!this.useCpu) {\n\t\t\t\tthis.internalTex0 = _createTexture(gd, precision, 1, packTextureXYZ_NXYZ(this.qLocalVelocity, this.qLocalVelocityDiv));\n\t\t\t\tthis.internalTex1 = _createTexture(gd, precision, 1, packTextureXYZ_NXYZ(this.qVelocity, this.qVelocityDiv));\n\t\t\t\tthis.internalTex2 = _createTexture(gd, precision, 1, packTexture5Floats(this.qRotSpeed, this.qScale, this.qScaleDiv, this.qRotSpeedDiv, this.qAlphaDiv));\n\t\t\t\tthis.internalTex3 = _createTexture(gd, precision, 1, packTexture2Floats(this.qRadialSpeed, this.qRadialSpeedDiv));\n\t\t\t}\n\n\t\t\tthis.colorParam = _createTexture(gd, precision, 1, packTextureRGBA(this.qColor, this.qAlpha), PIXELFORMAT_R8_G8_B8_A8, 1.0, true);\n\t\t};\n\n\t\t_proto._initializeTextures = function _initializeTextures() {\n\t\t\tif (this.colorMap) {\n\t\t\t\tthis.material.setParameter('colorMap', this.colorMap);\n\n\t\t\t\tif (this.lighting && this.normalMap) {\n\t\t\t\t\tthis.material.setParameter('normalMap', this.normalMap);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.regenShader = function regenShader() {\n\t\t\tvar programLib = this.graphicsDevice.getProgramLibrary();\n\t\t\tvar hasNormal = this.normalMap !== null;\n\t\t\tthis.normalOption = 0;\n\n\t\t\tif (this.lighting) {\n\t\t\t\tthis.normalOption = hasNormal ? 2 : 1;\n\t\t\t}\n\n\t\t\tthis.material.updateShader = function () {\n\t\t\t\tif (this.emitter.scene) {\n\t\t\t\t\tif (this.emitter.camera != this.emitter.scene._activeCamera) {\n\t\t\t\t\t\tthis.emitter.camera = this.emitter.scene._activeCamera;\n\t\t\t\t\t\tthis.emitter.onChangeCamera();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar inTools = this.emitter.inTools;\n\t\t\t\tvar shader = programLib.getProgram(\"particle\", {\n\t\t\t\t\tuseCpu: this.emitter.useCpu,\n\t\t\t\t\tnormal: this.emitter.normalOption,\n\t\t\t\t\thalflambert: this.emitter.halfLambert,\n\t\t\t\t\tstretch: this.emitter.stretch,\n\t\t\t\t\talignToMotion: this.emitter.alignToMotion,\n\t\t\t\t\tsoft: this.emitter.depthSoftening,\n\t\t\t\t\tmesh: this.emitter.useMesh,\n\t\t\t\t\tgamma: this.emitter.scene ? this.emitter.scene.gammaCorrection : 0,\n\t\t\t\t\ttoneMap: this.emitter.scene ? this.emitter.scene.toneMapping : 0,\n\t\t\t\t\tfog: this.emitter.scene && !this.emitter.noFog ? this.emitter.scene.fog : \"none\",\n\t\t\t\t\twrap: this.emitter.wrap && this.emitter.wrapBounds,\n\t\t\t\t\tlocalSpace: this.emitter.localSpace,\n\t\t\t\t\tscreenSpace: inTools ? false : this.emitter.screenSpace,\n\t\t\t\t\tblend: this.blendType,\n\t\t\t\t\tanimTex: this.emitter._isAnimated(),\n\t\t\t\t\tanimTexLoop: this.emitter.animLoop,\n\t\t\t\t\tpack8: this.emitter.pack8,\n\t\t\t\t\tcustomFace: this.emitter.orientation != PARTICLEORIENTATION_SCREEN\n\t\t\t\t});\n\t\t\t\tthis.shader = shader;\n\t\t\t};\n\n\t\t\tthis.material.updateShader();\n\t\t};\n\n\t\t_proto.resetMaterial = function resetMaterial() {\n\t\t\tvar material = this.material;\n\t\t\tmaterial.setParameter('stretch', this.stretch);\n\n\t\t\tif (this._isAnimated()) {\n\t\t\t\tmaterial.setParameter('animTexTilesParams', this.animTilesParams);\n\t\t\t\tmaterial.setParameter('animTexParams', this.animParams);\n\t\t\t\tmaterial.setParameter('animTexIndexParams', this.animIndexParams);\n\t\t\t}\n\n\t\t\tmaterial.setParameter('colorMult', this.intensity);\n\n\t\t\tif (!this.useCpu) {\n\t\t\t\tmaterial.setParameter('internalTex0', this.internalTex0);\n\t\t\t\tmaterial.setParameter('internalTex1', this.internalTex1);\n\t\t\t\tmaterial.setParameter('internalTex2', this.internalTex2);\n\t\t\t\tmaterial.setParameter('internalTex3', this.internalTex3);\n\t\t\t}\n\n\t\t\tmaterial.setParameter('colorParam', this.colorParam);\n\t\t\tmaterial.setParameter('numParticles', this.numParticles);\n\t\t\tmaterial.setParameter('numParticlesPot', this.numParticlesPot);\n\t\t\tmaterial.setParameter('lifetime', this.lifetime);\n\t\t\tmaterial.setParameter('rate', this.rate);\n\t\t\tmaterial.setParameter('rateDiv', this.rate2 - this.rate);\n\t\t\tmaterial.setParameter('seed', this.seed);\n\t\t\tmaterial.setParameter('scaleDivMult', this.scaleUMax[0]);\n\t\t\tmaterial.setParameter('alphaDivMult', this.alphaUMax[0]);\n\t\t\tmaterial.setParameter('radialSpeedDivMult', this.radialSpeedUMax[0]);\n\t\t\tmaterial.setParameter(\"graphNumSamples\", this.precision);\n\t\t\tmaterial.setParameter(\"graphSampleSize\", 1.0 / this.precision);\n\t\t\tmaterial.setParameter(\"emitterScale\", new Float32Array([1, 1, 1]));\n\n\t\t\tif (this.pack8) {\n\t\t\t\tthis._gpuUpdater._setInputBounds();\n\n\t\t\t\tmaterial.setParameter(\"inBoundsSize\", this._gpuUpdater.inBoundsSizeUniform);\n\t\t\t\tmaterial.setParameter(\"inBoundsCenter\", this._gpuUpdater.inBoundsCenterUniform);\n\t\t\t\tmaterial.setParameter(\"maxVel\", this.maxVel);\n\t\t\t}\n\n\t\t\tif (this.wrap && this.wrapBounds) {\n\t\t\t\tthis.wrapBoundsUniform[0] = this.wrapBounds.x;\n\t\t\t\tthis.wrapBoundsUniform[1] = this.wrapBounds.y;\n\t\t\t\tthis.wrapBoundsUniform[2] = this.wrapBounds.z;\n\t\t\t\tmaterial.setParameter('wrapBounds', this.wrapBoundsUniform);\n\t\t\t}\n\n\t\t\tif (this.colorMap) {\n\t\t\t\tmaterial.setParameter('colorMap', this.colorMap);\n\t\t\t}\n\n\t\t\tif (this.lighting) {\n\t\t\t\tif (this.normalMap) {\n\t\t\t\t\tmaterial.setParameter('normalMap', this.normalMap);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.depthSoftening > 0) {\n\t\t\t\tmaterial.setParameter('softening', 1.0 / (this.depthSoftening * this.depthSoftening * 100));\n\t\t\t}\n\n\t\t\tif (this.stretch > 0.0) material.cull = CULLFACE_NONE;\n\n\t\t\tthis._compParticleFaceParams();\n\t\t};\n\n\t\t_proto._compParticleFaceParams = function _compParticleFaceParams() {\n\t\t\tvar tangent, binormal;\n\n\t\t\tif (this.orientation == PARTICLEORIENTATION_SCREEN) {\n\t\t\t\ttangent = new Float32Array([1, 0, 0]);\n\t\t\t\tbinormal = new Float32Array([0, 0, 1]);\n\t\t\t} else {\n\t\t\t\tvar n;\n\n\t\t\t\tif (this.orientation == PARTICLEORIENTATION_WORLD) {\n\t\t\t\t\tn = this.particleNormal.normalize();\n\t\t\t\t} else {\n\t\t\t\t\tvar emitterMat = this.node === null ? Mat4.IDENTITY : this.node.getWorldTransform();\n\t\t\t\t\tn = emitterMat.transformVector(this.particleNormal).normalize();\n\t\t\t\t}\n\n\t\t\t\tvar t = new Vec3(1, 0, 0);\n\t\t\t\tif (Math.abs(t.dot(n)) == 1) t.set(0, 0, 1);\n\t\t\t\tvar b = new Vec3().cross(n, t).normalize();\n\t\t\t\tt.cross(b, n).normalize();\n\t\t\t\ttangent = new Float32Array([t.x, t.y, t.z]);\n\t\t\t\tbinormal = new Float32Array([b.x, b.y, b.z]);\n\t\t\t}\n\n\t\t\tthis.material.setParameter(\"faceTangent\", tangent);\n\t\t\tthis.material.setParameter(\"faceBinorm\", binormal);\n\t\t};\n\n\t\t_proto._allocate = function _allocate(numParticles) {\n\t\t\tvar psysVertCount = numParticles * this.numParticleVerts;\n\t\t\tvar psysIndexCount = numParticles * this.numParticleIndices;\n\t\t\tvar elements, particleFormat;\n\t\t\tvar i;\n\n\t\t\tif (this.vertexBuffer === undefined || this.vertexBuffer.getNumVertices() !== psysVertCount) {\n\t\t\t\tif (!this.useCpu) {\n\t\t\t\t\telements = [{\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR0,\n\t\t\t\t\t\tcomponents: 4,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}];\n\n\t\t\t\t\tif (this.useMesh) {\n\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\tsemantic: SEMANTIC_ATTR1,\n\t\t\t\t\t\t\tcomponents: 2,\n\t\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tparticleFormat = new VertexFormat(this.graphicsDevice, elements);\n\t\t\t\t\tthis.vertexBuffer = new VertexBuffer(this.graphicsDevice, particleFormat, psysVertCount, BUFFER_DYNAMIC);\n\t\t\t\t\tthis.indexBuffer = new IndexBuffer(this.graphicsDevice, INDEXFORMAT_UINT16, psysIndexCount);\n\t\t\t\t} else {\n\t\t\t\t\telements = [{\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR0,\n\t\t\t\t\t\tcomponents: 4,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}, {\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR1,\n\t\t\t\t\t\tcomponents: 4,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}, {\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR2,\n\t\t\t\t\t\tcomponents: 4,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}, {\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR3,\n\t\t\t\t\t\tcomponents: 1,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}, {\n\t\t\t\t\t\tsemantic: SEMANTIC_ATTR4,\n\t\t\t\t\t\tcomponents: this.useMesh ? 4 : 2,\n\t\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t\t}];\n\t\t\t\t\tparticleFormat = new VertexFormat(this.graphicsDevice, elements);\n\t\t\t\t\tthis.vertexBuffer = new VertexBuffer(this.graphicsDevice, particleFormat, psysVertCount, BUFFER_DYNAMIC);\n\t\t\t\t\tthis.indexBuffer = new IndexBuffer(this.graphicsDevice, INDEXFORMAT_UINT16, psysIndexCount);\n\t\t\t\t}\n\n\t\t\t\tvar data = new Float32Array(this.vertexBuffer.lock());\n\t\t\t\tvar meshData, stride, texCoordOffset;\n\n\t\t\t\tif (this.useMesh) {\n\t\t\t\t\tmeshData = new Float32Array(this.mesh.vertexBuffer.lock());\n\t\t\t\t\tstride = meshData.length / this.mesh.vertexBuffer.numVertices;\n\n\t\t\t\t\tfor (var elem = 0; elem < this.mesh.vertexBuffer.format.elements.length; elem++) {\n\t\t\t\t\t\tif (this.mesh.vertexBuffer.format.elements[elem].name === SEMANTIC_TEXCOORD0) {\n\t\t\t\t\t\t\ttexCoordOffset = this.mesh.vertexBuffer.format.elements[elem].offset / 4;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar id;\n\n\t\t\t\tfor (i = 0; i < psysVertCount; i++) {\n\t\t\t\t\tid = Math.floor(i / this.numParticleVerts);\n\n\t\t\t\t\tif (!this.useMesh) {\n\t\t\t\t\t\tvar vertID = i % 4;\n\t\t\t\t\t\tdata[i * 4] = particleVerts[vertID][0];\n\t\t\t\t\t\tdata[i * 4 + 1] = particleVerts[vertID][1];\n\t\t\t\t\t\tdata[i * 4 + 2] = 0;\n\t\t\t\t\t\tdata[i * 4 + 3] = id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar vert = i % this.numParticleVerts;\n\t\t\t\t\t\tdata[i * 6] = meshData[vert * stride];\n\t\t\t\t\t\tdata[i * 6 + 1] = meshData[vert * stride + 1];\n\t\t\t\t\t\tdata[i * 6 + 2] = meshData[vert * stride + 2];\n\t\t\t\t\t\tdata[i * 6 + 3] = id;\n\t\t\t\t\t\tdata[i * 6 + 4] = meshData[vert * stride + texCoordOffset + 0];\n\t\t\t\t\t\tdata[i * 6 + 5] = meshData[vert * stride + texCoordOffset + 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.useCpu) {\n\t\t\t\t\tthis.vbCPU = new Float32Array(data);\n\t\t\t\t\tthis.vbOld = new Float32Array(this.vbCPU.length);\n\t\t\t\t}\n\n\t\t\t\tthis.vertexBuffer.unlock();\n\n\t\t\t\tif (this.useMesh) {\n\t\t\t\t\tthis.mesh.vertexBuffer.unlock();\n\t\t\t\t}\n\n\t\t\t\tvar dst = 0;\n\t\t\t\tvar indices = new Uint16Array(this.indexBuffer.lock());\n\t\t\t\tif (this.useMesh) meshData = new Uint16Array(this.mesh.indexBuffer[0].lock());\n\n\t\t\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\t\t\tif (!this.useMesh) {\n\t\t\t\t\t\tvar baseIndex = i * 4;\n\t\t\t\t\t\tindices[dst++] = baseIndex;\n\t\t\t\t\t\tindices[dst++] = baseIndex + 1;\n\t\t\t\t\t\tindices[dst++] = baseIndex + 2;\n\t\t\t\t\t\tindices[dst++] = baseIndex;\n\t\t\t\t\t\tindices[dst++] = baseIndex + 2;\n\t\t\t\t\t\tindices[dst++] = baseIndex + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var j = 0; j < this.numParticleIndices; j++) {\n\t\t\t\t\t\t\tindices[i * this.numParticleIndices + j] = meshData[j] + i * this.numParticleVerts;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.indexBuffer.unlock();\n\t\t\t\tif (this.useMesh) this.mesh.indexBuffer[0].unlock();\n\t\t\t}\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis.beenReset = true;\n\t\t\tthis.seed = Math.random();\n\t\t\tthis.material.setParameter('seed', this.seed);\n\n\t\t\tif (this.useCpu) {\n\t\t\t\tfor (var i = 0; i < this.particleTexStart.length; i++) {\n\t\t\t\t\tthis.particleTex[i] = this.particleTexStart[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._initializeTextures();\n\t\t\t}\n\n\t\t\tthis.resetWorldBounds();\n\t\t\tthis.resetTime();\n\t\t\tvar origLoop = this.loop;\n\t\t\tthis.loop = true;\n\t\t\tthis.addTime(0, false);\n\t\t\tthis.loop = origLoop;\n\n\t\t\tif (this.preWarm) {\n\t\t\t\tthis.prewarm(this.lifetime);\n\t\t\t}\n\t\t};\n\n\t\t_proto.prewarm = function prewarm(time) {\n\t\t\tvar lifetimeFraction = time / this.lifetime;\n\t\t\tvar iterations = Math.min(Math.floor(lifetimeFraction * this.precision), this.precision);\n\t\t\tvar stepDelta = time / iterations;\n\n\t\t\tfor (var i = 0; i < iterations; i++) {\n\t\t\t\tthis.addTime(stepDelta, false);\n\t\t\t}\n\t\t};\n\n\t\t_proto.resetTime = function resetTime() {\n\t\t\tthis.endTime = calcEndTime(this);\n\t\t};\n\n\t\t_proto.finishFrame = function finishFrame() {\n\t\t\tif (this.useCpu) this.vertexBuffer.unlock();\n\t\t};\n\n\t\t_proto.addTime = function addTime(delta, isOnStop) {\n\t\t\tvar device = this.graphicsDevice;\n\t\t\tthis.simTimeTotal += delta;\n\t\t\tthis.calculateWorldBounds();\n\n\t\t\tif (this._isAnimated()) {\n\t\t\t\tvar tilesParams = this.animTilesParams;\n\t\t\t\ttilesParams[0] = 1.0 / this.animTilesX;\n\t\t\t\ttilesParams[1] = 1.0 / this.animTilesY;\n\t\t\t\tvar params = this.animParams;\n\t\t\t\tparams[0] = this.animStartFrame;\n\t\t\t\tparams[1] = this.animNumFrames * this.animSpeed;\n\t\t\t\tparams[2] = this.animNumFrames - 1;\n\t\t\t\tparams[3] = this.animNumAnimations - 1;\n\t\t\t\tvar animIndexParams = this.animIndexParams;\n\t\t\t\tanimIndexParams[0] = this.animIndex;\n\t\t\t\tanimIndexParams[1] = this.randomizeAnimIndex;\n\t\t\t}\n\n\t\t\tif (this.scene) {\n\t\t\t\tif (this.camera != this.scene._activeCamera) {\n\t\t\t\t\tthis.camera = this.scene._activeCamera;\n\t\t\t\t\tthis.onChangeCamera();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.emitterShape === EMITTERSHAPE_BOX) {\n\t\t\t\textentsInnerRatioUniform[0] = this.emitterExtents.x != 0 ? this.emitterExtentsInner.x / this.emitterExtents.x : 0;\n\t\t\t\textentsInnerRatioUniform[1] = this.emitterExtents.y != 0 ? this.emitterExtentsInner.y / this.emitterExtents.y : 0;\n\t\t\t\textentsInnerRatioUniform[2] = this.emitterExtents.z != 0 ? this.emitterExtentsInner.z / this.emitterExtents.z : 0;\n\n\t\t\t\tif (this.meshInstance.node === null) {\n\t\t\t\t\tspawnMatrix.setTRS(Vec3.ZERO, Quat.IDENTITY, this.emitterExtents);\n\t\t\t\t} else {\n\t\t\t\t\tspawnMatrix.setTRS(Vec3.ZERO, this.meshInstance.node.getRotation(), tmpVec3$2.copy(this.emitterExtents).mul(this.meshInstance.node.localScale));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar emitterPos;\n\t\t\tvar emitterScale = this.meshInstance.node === null ? Vec3.ONE : this.meshInstance.node.localScale;\n\t\t\tthis.emitterScaleUniform[0] = emitterScale.x;\n\t\t\tthis.emitterScaleUniform[1] = emitterScale.y;\n\t\t\tthis.emitterScaleUniform[2] = emitterScale.z;\n\t\t\tthis.material.setParameter(\"emitterScale\", this.emitterScaleUniform);\n\n\t\t\tif (this.localSpace && this.meshInstance.node) {\n\t\t\t\temitterPos = this.meshInstance.node.getPosition();\n\t\t\t\tthis.emitterPosUniform[0] = emitterPos.x;\n\t\t\t\tthis.emitterPosUniform[1] = emitterPos.y;\n\t\t\t\tthis.emitterPosUniform[2] = emitterPos.z;\n\t\t\t\tthis.material.setParameter(\"emitterPos\", this.emitterPosUniform);\n\t\t\t}\n\n\t\t\tthis._compParticleFaceParams();\n\n\t\t\tif (!this.useCpu) {\n\t\t\t\tthis._gpuUpdater.update(device, spawnMatrix, extentsInnerRatioUniform, delta, isOnStop);\n\t\t\t} else {\n\t\t\t\tvar data = new Float32Array(this.vertexBuffer.lock());\n\n\t\t\t\tthis._cpuUpdater.update(data, this.vbToSort, this.particleTex, spawnMatrix, extentsInnerRatioUniform, emitterPos, delta, isOnStop);\n\t\t\t}\n\n\t\t\tif (!this.loop) {\n\t\t\t\tif (Date.now() > this.endTime) {\n\t\t\t\t\tif (this.onFinished) this.onFinished();\n\t\t\t\t\tthis.meshInstance.visible = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.meshInstance) {\n\t\t\t\tthis.meshInstance.drawOrder = this.drawOrder;\n\t\t\t}\n\t\t};\n\n\t\t_proto._destroyResources = function _destroyResources() {\n\t\t\tif (this.particleTexIN) {\n\t\t\t\tthis.particleTexIN.destroy();\n\t\t\t\tthis.particleTexIN = null;\n\t\t\t}\n\n\t\t\tif (this.particleTexOUT) {\n\t\t\t\tthis.particleTexOUT.destroy();\n\t\t\t\tthis.particleTexOUT = null;\n\t\t\t}\n\n\t\t\tif (this.particleTexStart && this.particleTexStart.destroy) {\n\t\t\t\tthis.particleTexStart.destroy();\n\t\t\t\tthis.particleTexStart = null;\n\t\t\t}\n\n\t\t\tif (this.rtParticleTexIN) {\n\t\t\t\tthis.rtParticleTexIN.destroy();\n\t\t\t\tthis.rtParticleTexIN = null;\n\t\t\t}\n\n\t\t\tif (this.rtParticleTexOUT) {\n\t\t\t\tthis.rtParticleTexOUT.destroy();\n\t\t\t\tthis.rtParticleTexOUT = null;\n\t\t\t}\n\n\t\t\tif (this.internalTex0) {\n\t\t\t\tthis.internalTex0.destroy();\n\t\t\t\tthis.internalTex0 = null;\n\t\t\t}\n\n\t\t\tif (this.internalTex1) {\n\t\t\t\tthis.internalTex1.destroy();\n\t\t\t\tthis.internalTex1 = null;\n\t\t\t}\n\n\t\t\tif (this.internalTex2) {\n\t\t\t\tthis.internalTex2.destroy();\n\t\t\t\tthis.internalTex2 = null;\n\t\t\t}\n\n\t\t\tif (this.internalTex3) {\n\t\t\t\tthis.internalTex3.destroy();\n\t\t\t\tthis.internalTex3 = null;\n\t\t\t}\n\n\t\t\tif (this.colorParam) {\n\t\t\t\tthis.colorParam.destroy();\n\t\t\t\tthis.colorParam = null;\n\t\t\t}\n\n\t\t\tif (this.vertexBuffer) {\n\t\t\t\tthis.vertexBuffer.destroy();\n\t\t\t\tthis.vertexBuffer = undefined;\n\t\t\t}\n\n\t\t\tif (this.indexBuffer) {\n\t\t\t\tthis.indexBuffer.destroy();\n\t\t\t\tthis.indexBuffer = undefined;\n\t\t\t}\n\n\t\t\tif (this.material) {\n\t\t\t\tthis.material.destroy();\n\t\t\t\tthis.material = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.camera = null;\n\n\t\t\tthis._destroyResources();\n\t\t};\n\n\t\treturn ParticleEmitter;\n\t}();\n\n\tvar primitiveUv1Padding = 4.0 / 64;\n\tvar primitiveUv1PaddingScale = 1.0 - primitiveUv1Padding * 2;\n\tvar shapePrimitives = [];\n\n\tfunction calculateNormals(positions, indices) {\n\t\tvar triangleCount = indices.length / 3;\n\t\tvar vertexCount = positions.length / 3;\n\t\tvar i1, i2, i3;\n\t\tvar i;\n\t\tvar p1 = new Vec3();\n\t\tvar p2 = new Vec3();\n\t\tvar p3 = new Vec3();\n\t\tvar p1p2 = new Vec3();\n\t\tvar p1p3 = new Vec3();\n\t\tvar faceNormal = new Vec3();\n\t\tvar normals = [];\n\n\t\tfor (i = 0; i < positions.length; i++) {\n\t\t\tnormals[i] = 0;\n\t\t}\n\n\t\tfor (i = 0; i < triangleCount; i++) {\n\t\t\ti1 = indices[i * 3];\n\t\t\ti2 = indices[i * 3 + 1];\n\t\t\ti3 = indices[i * 3 + 2];\n\t\t\tp1.set(positions[i1 * 3], positions[i1 * 3 + 1], positions[i1 * 3 + 2]);\n\t\t\tp2.set(positions[i2 * 3], positions[i2 * 3 + 1], positions[i2 * 3 + 2]);\n\t\t\tp3.set(positions[i3 * 3], positions[i3 * 3 + 1], positions[i3 * 3 + 2]);\n\t\t\tp1p2.sub2(p2, p1);\n\t\t\tp1p3.sub2(p3, p1);\n\t\t\tfaceNormal.cross(p1p2, p1p3).normalize();\n\t\t\tnormals[i1 * 3] += faceNormal.x;\n\t\t\tnormals[i1 * 3 + 1] += faceNormal.y;\n\t\t\tnormals[i1 * 3 + 2] += faceNormal.z;\n\t\t\tnormals[i2 * 3] += faceNormal.x;\n\t\t\tnormals[i2 * 3 + 1] += faceNormal.y;\n\t\t\tnormals[i2 * 3 + 2] += faceNormal.z;\n\t\t\tnormals[i3 * 3] += faceNormal.x;\n\t\t\tnormals[i3 * 3 + 1] += faceNormal.y;\n\t\t\tnormals[i3 * 3 + 2] += faceNormal.z;\n\t\t}\n\n\t\tfor (i = 0; i < vertexCount; i++) {\n\t\t\tvar nx = normals[i * 3];\n\t\t\tvar ny = normals[i * 3 + 1];\n\t\t\tvar nz = normals[i * 3 + 2];\n\t\t\tvar invLen = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n\t\t\tnormals[i * 3] *= invLen;\n\t\t\tnormals[i * 3 + 1] *= invLen;\n\t\t\tnormals[i * 3 + 2] *= invLen;\n\t\t}\n\n\t\treturn normals;\n\t}\n\n\tfunction calculateTangents(positions, normals, uvs, indices) {\n\t\tvar triangleCount = indices.length / 3;\n\t\tvar vertexCount = positions.length / 3;\n\t\tvar i1, i2, i3;\n\t\tvar x1, x2, y1, y2, z1, z2, s1, s2, t1, t2, r;\n\t\tvar sdir = new Vec3();\n\t\tvar tdir = new Vec3();\n\t\tvar v1 = new Vec3();\n\t\tvar v2 = new Vec3();\n\t\tvar v3 = new Vec3();\n\t\tvar w1 = new Vec2();\n\t\tvar w2 = new Vec2();\n\t\tvar w3 = new Vec2();\n\t\tvar i;\n\t\tvar tan1 = new Float32Array(vertexCount * 3);\n\t\tvar tan2 = new Float32Array(vertexCount * 3);\n\t\tvar tangents = [];\n\t\tvar area = 0.0;\n\n\t\tfor (i = 0; i < triangleCount; i++) {\n\t\t\ti1 = indices[i * 3];\n\t\t\ti2 = indices[i * 3 + 1];\n\t\t\ti3 = indices[i * 3 + 2];\n\t\t\tv1.set(positions[i1 * 3], positions[i1 * 3 + 1], positions[i1 * 3 + 2]);\n\t\t\tv2.set(positions[i2 * 3], positions[i2 * 3 + 1], positions[i2 * 3 + 2]);\n\t\t\tv3.set(positions[i3 * 3], positions[i3 * 3 + 1], positions[i3 * 3 + 2]);\n\t\t\tw1.set(uvs[i1 * 2], uvs[i1 * 2 + 1]);\n\t\t\tw2.set(uvs[i2 * 2], uvs[i2 * 2 + 1]);\n\t\t\tw3.set(uvs[i3 * 2], uvs[i3 * 2 + 1]);\n\t\t\tx1 = v2.x - v1.x;\n\t\t\tx2 = v3.x - v1.x;\n\t\t\ty1 = v2.y - v1.y;\n\t\t\ty2 = v3.y - v1.y;\n\t\t\tz1 = v2.z - v1.z;\n\t\t\tz2 = v3.z - v1.z;\n\t\t\ts1 = w2.x - w1.x;\n\t\t\ts2 = w3.x - w1.x;\n\t\t\tt1 = w2.y - w1.y;\n\t\t\tt2 = w3.y - w1.y;\n\t\t\tarea = s1 * t2 - s2 * t1;\n\n\t\t\tif (area == 0.0) {\n\t\t\t\tsdir.set(0.0, 1.0, 0.0);\n\t\t\t\ttdir.set(1.0, 0.0, 0.0);\n\t\t\t} else {\n\t\t\t\tr = 1.0 / area;\n\t\t\t\tsdir.set((t2 * x1 - t1 * x2) * r, (t2 * y1 - t1 * y2) * r, (t2 * z1 - t1 * z2) * r);\n\t\t\t\ttdir.set((s1 * x2 - s2 * x1) * r, (s1 * y2 - s2 * y1) * r, (s1 * z2 - s2 * z1) * r);\n\t\t\t}\n\n\t\t\ttan1[i1 * 3 + 0] += sdir.x;\n\t\t\ttan1[i1 * 3 + 1] += sdir.y;\n\t\t\ttan1[i1 * 3 + 2] += sdir.z;\n\t\t\ttan1[i2 * 3 + 0] += sdir.x;\n\t\t\ttan1[i2 * 3 + 1] += sdir.y;\n\t\t\ttan1[i2 * 3 + 2] += sdir.z;\n\t\t\ttan1[i3 * 3 + 0] += sdir.x;\n\t\t\ttan1[i3 * 3 + 1] += sdir.y;\n\t\t\ttan1[i3 * 3 + 2] += sdir.z;\n\t\t\ttan2[i1 * 3 + 0] += tdir.x;\n\t\t\ttan2[i1 * 3 + 1] += tdir.y;\n\t\t\ttan2[i1 * 3 + 2] += tdir.z;\n\t\t\ttan2[i2 * 3 + 0] += tdir.x;\n\t\t\ttan2[i2 * 3 + 1] += tdir.y;\n\t\t\ttan2[i2 * 3 + 2] += tdir.z;\n\t\t\ttan2[i3 * 3 + 0] += tdir.x;\n\t\t\ttan2[i3 * 3 + 1] += tdir.y;\n\t\t\ttan2[i3 * 3 + 2] += tdir.z;\n\t\t}\n\n\t\tt1 = new Vec3();\n\t\tt2 = new Vec3();\n\t\tvar n = new Vec3();\n\t\tvar temp = new Vec3();\n\n\t\tfor (i = 0; i < vertexCount; i++) {\n\t\t\tn.set(normals[i * 3], normals[i * 3 + 1], normals[i * 3 + 2]);\n\t\t\tt1.set(tan1[i * 3], tan1[i * 3 + 1], tan1[i * 3 + 2]);\n\t\t\tt2.set(tan2[i * 3], tan2[i * 3 + 1], tan2[i * 3 + 2]);\n\t\t\tvar ndott = n.dot(t1);\n\t\t\ttemp.copy(n).scale(ndott);\n\t\t\ttemp.sub2(t1, temp).normalize();\n\t\t\ttangents[i * 4] = temp.x;\n\t\t\ttangents[i * 4 + 1] = temp.y;\n\t\t\ttangents[i * 4 + 2] = temp.z;\n\t\t\ttemp.cross(n, t1);\n\t\t\ttangents[i * 4 + 3] = temp.dot(t2) < 0.0 ? -1.0 : 1.0;\n\t\t}\n\n\t\treturn tangents;\n\t}\n\n\tfunction createMesh(device, positions, opts) {\n\t\tvar normals = opts && opts.normals !== undefined ? opts.normals : null;\n\t\tvar tangents = opts && opts.tangents !== undefined ? opts.tangents : null;\n\t\tvar colors = opts && opts.colors !== undefined ? opts.colors : null;\n\t\tvar uvs = opts && opts.uvs !== undefined ? opts.uvs : null;\n\t\tvar uvs1 = opts && opts.uvs1 !== undefined ? opts.uvs1 : null;\n\t\tvar indices = opts && opts.indices !== undefined ? opts.indices : null;\n\t\tvar blendIndices = opts && opts.blendIndices !== undefined ? opts.blendIndices : null;\n\t\tvar blendWeights = opts && opts.blendWeights !== undefined ? opts.blendWeights : null;\n\t\tvar vertexDesc = [{\n\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\tcomponents: 3,\n\t\t\ttype: TYPE_FLOAT32\n\t\t}];\n\n\t\tif (normals !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_NORMAL,\n\t\t\t\tcomponents: 3,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t});\n\t\t}\n\n\t\tif (tangents !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_TANGENT,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t});\n\t\t}\n\n\t\tif (colors !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_COLOR,\n\t\t\t\tcomponents: 4,\n\t\t\t\ttype: TYPE_UINT8,\n\t\t\t\tnormalize: true\n\t\t\t});\n\t\t}\n\n\t\tif (uvs !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD0,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t});\n\t\t}\n\n\t\tif (uvs1 !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD1,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t});\n\t\t}\n\n\t\tif (blendIndices !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_BLENDINDICES,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_UINT8\n\t\t\t});\n\t\t}\n\n\t\tif (blendWeights !== null) {\n\t\t\tvertexDesc.push({\n\t\t\t\tsemantic: SEMANTIC_BLENDWEIGHT,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t});\n\t\t}\n\n\t\tvar vertexFormat = new VertexFormat(device, vertexDesc);\n\t\tvar numVertices = positions.length / 3;\n\t\tvar vertexBuffer = new VertexBuffer(device, vertexFormat, numVertices);\n\t\tvar iterator = new VertexIterator(vertexBuffer);\n\n\t\tfor (var i = 0; i < numVertices; i++) {\n\t\t\titerator.element[SEMANTIC_POSITION].set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2]);\n\n\t\t\tif (normals !== null) {\n\t\t\t\titerator.element[SEMANTIC_NORMAL].set(normals[i * 3], normals[i * 3 + 1], normals[i * 3 + 2]);\n\t\t\t}\n\n\t\t\tif (tangents !== null) {\n\t\t\t\titerator.element[SEMANTIC_TANGENT].set(tangents[i * 4], tangents[i * 4 + 1], tangents[i * 4 + 2], tangents[i * 4 + 3]);\n\t\t\t}\n\n\t\t\tif (colors !== null) {\n\t\t\t\titerator.element[SEMANTIC_COLOR].set(colors[i * 4], colors[i * 4 + 1], colors[i * 4 + 2], colors[i * 4 + 3]);\n\t\t\t}\n\n\t\t\tif (uvs !== null) {\n\t\t\t\titerator.element[SEMANTIC_TEXCOORD0].set(uvs[i * 2], uvs[i * 2 + 1]);\n\t\t\t}\n\n\t\t\tif (uvs1 !== null) {\n\t\t\t\titerator.element[SEMANTIC_TEXCOORD1].set(uvs1[i * 2], uvs1[i * 2 + 1]);\n\t\t\t}\n\n\t\t\tif (blendIndices !== null) {\n\t\t\t\titerator.element[SEMANTIC_BLENDINDICES].set(blendIndices[i * 2], blendIndices[i * 2 + 1]);\n\t\t\t}\n\n\t\t\tif (blendWeights !== null) {\n\t\t\t\titerator.element[SEMANTIC_BLENDWEIGHT].set(blendWeights[i * 2], blendWeights[i * 2 + 1]);\n\t\t\t}\n\n\t\t\titerator.next();\n\t\t}\n\n\t\titerator.end();\n\t\tvar indexBuffer = null;\n\t\tvar indexed = indices !== null;\n\n\t\tif (indexed) {\n\t\t\tindexBuffer = new IndexBuffer(device, INDEXFORMAT_UINT16, indices.length);\n\t\t\tvar dst = new Uint16Array(indexBuffer.lock());\n\t\t\tdst.set(indices);\n\t\t\tindexBuffer.unlock();\n\t\t}\n\n\t\tvar aabb = new BoundingBox();\n\t\taabb.compute(positions);\n\t\tvar mesh = new Mesh(device);\n\t\tmesh.vertexBuffer = vertexBuffer;\n\t\tmesh.indexBuffer[0] = indexBuffer;\n\t\tmesh.primitive[0].type = PRIMITIVE_TRIANGLES;\n\t\tmesh.primitive[0].base = 0;\n\t\tmesh.primitive[0].count = indexed ? indices.length : numVertices;\n\t\tmesh.primitive[0].indexed = indexed;\n\t\tmesh.aabb = aabb;\n\t\treturn mesh;\n\t}\n\n\tfunction createTorus(device, opts) {\n\t\tvar rc = opts && opts.tubeRadius !== undefined ? opts.tubeRadius : 0.2;\n\t\tvar rt = opts && opts.ringRadius !== undefined ? opts.ringRadius : 0.3;\n\t\tvar segments = opts && opts.segments !== undefined ? opts.segments : 30;\n\t\tvar sides = opts && opts.sides !== undefined ? opts.sides : 20;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\t\tvar i, j;\n\t\tvar x, y, z, nx, ny, nz, u, v;\n\t\tvar positions = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\tfor (i = 0; i <= sides; i++) {\n\t\t\tfor (j = 0; j <= segments; j++) {\n\t\t\t\tx = Math.cos(2.0 * Math.PI * j / segments) * (rt + rc * Math.cos(2.0 * Math.PI * i / sides));\n\t\t\t\ty = Math.sin(2.0 * Math.PI * i / sides) * rc;\n\t\t\t\tz = Math.sin(2.0 * Math.PI * j / segments) * (rt + rc * Math.cos(2.0 * Math.PI * i / sides));\n\t\t\t\tnx = Math.cos(2.0 * Math.PI * j / segments) * Math.cos(2.0 * Math.PI * i / sides);\n\t\t\t\tny = Math.sin(2.0 * Math.PI * i / sides);\n\t\t\t\tnz = Math.sin(2.0 * Math.PI * j / segments) * Math.cos(2.0 * Math.PI * i / sides);\n\t\t\t\tu = i / sides;\n\t\t\t\tv = 1.0 - j / segments;\n\t\t\t\tpositions.push(x, y, z);\n\t\t\t\tnormals.push(nx, ny, nz);\n\t\t\t\tuvs.push(u, v);\n\n\t\t\t\tif (i < sides && j < segments) {\n\t\t\t\t\tvar first, second, third, fourth;\n\t\t\t\t\tfirst = i * (segments + 1) + j;\n\t\t\t\t\tsecond = (i + 1) * (segments + 1) + j;\n\t\t\t\t\tthird = i * (segments + 1) + (j + 1);\n\t\t\t\t\tfourth = (i + 1) * (segments + 1) + (j + 1);\n\t\t\t\t\tindices.push(first, second, third);\n\t\t\t\t\tindices.push(second, fourth, third);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar options = {\n\t\t\tnormals: normals,\n\t\t\tuvs: uvs,\n\t\t\tindices: indices\n\t\t};\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(positions, normals, uvs, indices);\n\t\t}\n\n\t\treturn createMesh(device, positions, options);\n\t}\n\n\tfunction _createConeData(baseRadius, peakRadius, height, heightSegments, capSegments, roundedCaps) {\n\t\tvar i, j;\n\t\tvar x, y, z, u, v;\n\t\tvar pos = new Vec3();\n\t\tvar bottomToTop = new Vec3();\n\t\tvar norm = new Vec3();\n\t\tvar top, bottom, tangent;\n\t\tvar positions = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar uvs1 = [];\n\t\tvar indices = [];\n\t\tvar theta, cosTheta, sinTheta;\n\t\tvar phi, sinPhi, cosPhi;\n\t\tvar first, second, third, fourth;\n\t\tvar offset;\n\n\t\tif (height > 0) {\n\t\t\tfor (i = 0; i <= heightSegments; i++) {\n\t\t\t\tfor (j = 0; j <= capSegments; j++) {\n\t\t\t\t\ttheta = j / capSegments * 2.0 * Math.PI - Math.PI;\n\t\t\t\t\tsinTheta = Math.sin(theta);\n\t\t\t\t\tcosTheta = Math.cos(theta);\n\t\t\t\t\tbottom = new Vec3(sinTheta * baseRadius, -height / 2.0, cosTheta * baseRadius);\n\t\t\t\t\ttop = new Vec3(sinTheta * peakRadius, height / 2.0, cosTheta * peakRadius);\n\t\t\t\t\tpos.lerp(bottom, top, i / heightSegments);\n\t\t\t\t\tbottomToTop.sub2(top, bottom).normalize();\n\t\t\t\t\ttangent = new Vec3(cosTheta, 0.0, -sinTheta);\n\t\t\t\t\tnorm.cross(tangent, bottomToTop).normalize();\n\t\t\t\t\tpositions.push(pos.x, pos.y, pos.z);\n\t\t\t\t\tnormals.push(norm.x, norm.y, norm.z);\n\t\t\t\t\tu = j / capSegments;\n\t\t\t\t\tv = i / heightSegments;\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tvar _v = v;\n\t\t\t\t\tv = u;\n\t\t\t\t\tu = _v;\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tuvs1.push(u, v);\n\n\t\t\t\t\tif (i < heightSegments && j < capSegments) {\n\t\t\t\t\t\tfirst = i * (capSegments + 1) + j;\n\t\t\t\t\t\tsecond = i * (capSegments + 1) + (j + 1);\n\t\t\t\t\t\tthird = (i + 1) * (capSegments + 1) + j;\n\t\t\t\t\t\tfourth = (i + 1) * (capSegments + 1) + (j + 1);\n\t\t\t\t\t\tindices.push(first, second, third);\n\t\t\t\t\t\tindices.push(second, fourth, third);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (roundedCaps) {\n\t\t\tvar lat, lon;\n\t\t\tvar latitudeBands = Math.floor(capSegments / 2);\n\t\t\tvar longitudeBands = capSegments;\n\t\t\tvar capOffset = height / 2;\n\n\t\t\tfor (lat = 0; lat <= latitudeBands; lat++) {\n\t\t\t\ttheta = lat * Math.PI * 0.5 / latitudeBands;\n\t\t\t\tsinTheta = Math.sin(theta);\n\t\t\t\tcosTheta = Math.cos(theta);\n\n\t\t\t\tfor (lon = 0; lon <= longitudeBands; lon++) {\n\t\t\t\t\tphi = lon * 2 * Math.PI / longitudeBands - Math.PI / 2.0;\n\t\t\t\t\tsinPhi = Math.sin(phi);\n\t\t\t\t\tcosPhi = Math.cos(phi);\n\t\t\t\t\tx = cosPhi * sinTheta;\n\t\t\t\t\ty = cosTheta;\n\t\t\t\t\tz = sinPhi * sinTheta;\n\t\t\t\t\tu = 1.0 - lon / longitudeBands;\n\t\t\t\t\tv = 1.0 - lat / latitudeBands;\n\t\t\t\t\tpositions.push(x * peakRadius, y * peakRadius + capOffset, z * peakRadius);\n\t\t\t\t\tnormals.push(x, y, z);\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tv /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tu += 1.0 / 3;\n\t\t\t\t\tuvs1.push(u, v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = (heightSegments + 1) * (capSegments + 1);\n\n\t\t\tfor (lat = 0; lat < latitudeBands; ++lat) {\n\t\t\t\tfor (lon = 0; lon < longitudeBands; ++lon) {\n\t\t\t\t\tfirst = lat * (longitudeBands + 1) + lon;\n\t\t\t\t\tsecond = first + longitudeBands + 1;\n\t\t\t\t\tindices.push(offset + first + 1, offset + second, offset + first);\n\t\t\t\t\tindices.push(offset + first + 1, offset + second + 1, offset + second);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (lat = 0; lat <= latitudeBands; lat++) {\n\t\t\t\ttheta = Math.PI * 0.5 + lat * Math.PI * 0.5 / latitudeBands;\n\t\t\t\tsinTheta = Math.sin(theta);\n\t\t\t\tcosTheta = Math.cos(theta);\n\n\t\t\t\tfor (lon = 0; lon <= longitudeBands; lon++) {\n\t\t\t\t\tphi = lon * 2 * Math.PI / longitudeBands - Math.PI / 2.0;\n\t\t\t\t\tsinPhi = Math.sin(phi);\n\t\t\t\t\tcosPhi = Math.cos(phi);\n\t\t\t\t\tx = cosPhi * sinTheta;\n\t\t\t\t\ty = cosTheta;\n\t\t\t\t\tz = sinPhi * sinTheta;\n\t\t\t\t\tu = 1.0 - lon / longitudeBands;\n\t\t\t\t\tv = 1.0 - lat / latitudeBands;\n\t\t\t\t\tpositions.push(x * peakRadius, y * peakRadius - capOffset, z * peakRadius);\n\t\t\t\t\tnormals.push(x, y, z);\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tv /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tu += 2.0 / 3;\n\t\t\t\t\tuvs1.push(u, v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = (heightSegments + 1) * (capSegments + 1) + (longitudeBands + 1) * (latitudeBands + 1);\n\n\t\t\tfor (lat = 0; lat < latitudeBands; ++lat) {\n\t\t\t\tfor (lon = 0; lon < longitudeBands; ++lon) {\n\t\t\t\t\tfirst = lat * (longitudeBands + 1) + lon;\n\t\t\t\t\tsecond = first + longitudeBands + 1;\n\t\t\t\t\tindices.push(offset + first + 1, offset + second, offset + first);\n\t\t\t\t\tindices.push(offset + first + 1, offset + second + 1, offset + second);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toffset = (heightSegments + 1) * (capSegments + 1);\n\n\t\t\tif (baseRadius > 0.0) {\n\t\t\t\tfor (i = 0; i < capSegments; i++) {\n\t\t\t\t\ttheta = i / capSegments * 2.0 * Math.PI;\n\t\t\t\t\tx = Math.sin(theta);\n\t\t\t\t\ty = -height / 2.0;\n\t\t\t\t\tz = Math.cos(theta);\n\t\t\t\t\tu = 1.0 - (x + 1.0) / 2.0;\n\t\t\t\t\tv = (z + 1.0) / 2.0;\n\t\t\t\t\tpositions.push(x * baseRadius, y, z * baseRadius);\n\t\t\t\t\tnormals.push(0.0, -1.0, 0.0);\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tv /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tu += 1.0 / 3;\n\t\t\t\t\tuvs1.push(u, v);\n\n\t\t\t\t\tif (i > 1) {\n\t\t\t\t\t\tindices.push(offset, offset + i, offset + i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset += capSegments;\n\n\t\t\tif (peakRadius > 0.0) {\n\t\t\t\tfor (i = 0; i < capSegments; i++) {\n\t\t\t\t\ttheta = i / capSegments * 2.0 * Math.PI;\n\t\t\t\t\tx = Math.sin(theta);\n\t\t\t\t\ty = height / 2.0;\n\t\t\t\t\tz = Math.cos(theta);\n\t\t\t\t\tu = 1.0 - (x + 1.0) / 2.0;\n\t\t\t\t\tv = (z + 1.0) / 2.0;\n\t\t\t\t\tpositions.push(x * peakRadius, y, z * peakRadius);\n\t\t\t\t\tnormals.push(0.0, 1.0, 0.0);\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tv /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tu += 2.0 / 3;\n\t\t\t\t\tuvs1.push(u, v);\n\n\t\t\t\t\tif (i > 1) {\n\t\t\t\t\t\tindices.push(offset, offset + i - 1, offset + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tpositions: positions,\n\t\t\tnormals: normals,\n\t\t\tuvs: uvs,\n\t\t\tuvs1: uvs1,\n\t\t\tindices: indices\n\t\t};\n\t}\n\n\tfunction createCylinder(device, opts) {\n\t\tvar radius = opts && (opts.radius || opts.baseRadius);\n\t\tradius = radius !== undefined ? radius : 0.5;\n\t\tvar height = opts && opts.height !== undefined ? opts.height : 1.0;\n\t\tvar heightSegments = opts && opts.heightSegments !== undefined ? opts.heightSegments : 5;\n\t\tvar capSegments = opts && opts.capSegments !== undefined ? opts.capSegments : 20;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\n\t\tvar options = _createConeData(radius, radius, height, heightSegments, capSegments, false);\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(options.positions, options.normals, options.uvs, options.indices);\n\t\t}\n\n\t\treturn createMesh(device, options.positions, options);\n\t}\n\n\tfunction createCapsule(device, opts) {\n\t\tvar radius = opts && opts.radius !== undefined ? opts.radius : 0.3;\n\t\tvar height = opts && opts.height !== undefined ? opts.height : 1.0;\n\t\tvar heightSegments = opts && opts.heightSegments !== undefined ? opts.heightSegments : 1;\n\t\tvar sides = opts && opts.sides !== undefined ? opts.sides : 20;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\n\t\tvar options = _createConeData(radius, radius, height - 2 * radius, heightSegments, sides, true);\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(options.positions, options.normals, options.uvs, options.indices);\n\t\t}\n\n\t\treturn createMesh(device, options.positions, options);\n\t}\n\n\tfunction createCone(device, opts) {\n\t\tvar baseRadius = opts && opts.baseRadius !== undefined ? opts.baseRadius : 0.5;\n\t\tvar peakRadius = opts && opts.peakRadius !== undefined ? opts.peakRadius : 0.0;\n\t\tvar height = opts && opts.height !== undefined ? opts.height : 1.0;\n\t\tvar heightSegments = opts && opts.heightSegments !== undefined ? opts.heightSegments : 5;\n\t\tvar capSegments = opts && opts.capSegments !== undefined ? opts.capSegments : 18;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\n\t\tvar options = _createConeData(baseRadius, peakRadius, height, heightSegments, capSegments, false);\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(options.positions, options.normals, options.uvs, options.indices);\n\t\t}\n\n\t\treturn createMesh(device, options.positions, options);\n\t}\n\n\tfunction createSphere(device, opts) {\n\t\tvar radius = opts && opts.radius !== undefined ? opts.radius : 0.5;\n\t\tvar latitudeBands = opts && opts.latitudeBands !== undefined ? opts.latitudeBands : 16;\n\t\tvar longitudeBands = opts && opts.longitudeBands !== undefined ? opts.longitudeBands : 16;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\t\tvar lon, lat;\n\t\tvar theta, sinTheta, cosTheta, phi, sinPhi, cosPhi;\n\t\tvar first, second;\n\t\tvar x, y, z, u, v;\n\t\tvar positions = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\tfor (lat = 0; lat <= latitudeBands; lat++) {\n\t\t\ttheta = lat * Math.PI / latitudeBands;\n\t\t\tsinTheta = Math.sin(theta);\n\t\t\tcosTheta = Math.cos(theta);\n\n\t\t\tfor (lon = 0; lon <= longitudeBands; lon++) {\n\t\t\t\tphi = lon * 2 * Math.PI / longitudeBands - Math.PI / 2.0;\n\t\t\t\tsinPhi = Math.sin(phi);\n\t\t\t\tcosPhi = Math.cos(phi);\n\t\t\t\tx = cosPhi * sinTheta;\n\t\t\t\ty = cosTheta;\n\t\t\t\tz = sinPhi * sinTheta;\n\t\t\t\tu = 1.0 - lon / longitudeBands;\n\t\t\t\tv = 1.0 - lat / latitudeBands;\n\t\t\t\tpositions.push(x * radius, y * radius, z * radius);\n\t\t\t\tnormals.push(x, y, z);\n\t\t\t\tuvs.push(u, v);\n\t\t\t}\n\t\t}\n\n\t\tfor (lat = 0; lat < latitudeBands; ++lat) {\n\t\t\tfor (lon = 0; lon < longitudeBands; ++lon) {\n\t\t\t\tfirst = lat * (longitudeBands + 1) + lon;\n\t\t\t\tsecond = first + longitudeBands + 1;\n\t\t\t\tindices.push(first + 1, second, first);\n\t\t\t\tindices.push(first + 1, second + 1, second);\n\t\t\t}\n\t\t}\n\n\t\tvar options = {\n\t\t\tnormals: normals,\n\t\t\tuvs: uvs,\n\t\t\tuvs1: uvs,\n\t\t\tindices: indices\n\t\t};\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(positions, normals, uvs, indices);\n\t\t}\n\n\t\treturn createMesh(device, positions, options);\n\t}\n\n\tfunction createPlane(device, opts) {\n\t\tvar he = opts && opts.halfExtents !== undefined ? opts.halfExtents : new Vec2(0.5, 0.5);\n\t\tvar ws = opts && opts.widthSegments !== undefined ? opts.widthSegments : 5;\n\t\tvar ls = opts && opts.lengthSegments !== undefined ? opts.lengthSegments : 5;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\t\tvar i, j;\n\t\tvar x, y, z, u, v;\n\t\tvar positions = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\t\tvar vcounter = 0;\n\n\t\tfor (i = 0; i <= ws; i++) {\n\t\t\tfor (j = 0; j <= ls; j++) {\n\t\t\t\tx = -he.x + 2.0 * he.x * i / ws;\n\t\t\t\ty = 0.0;\n\t\t\t\tz = -(-he.y + 2.0 * he.y * j / ls);\n\t\t\t\tu = i / ws;\n\t\t\t\tv = j / ls;\n\t\t\t\tpositions.push(x, y, z);\n\t\t\t\tnormals.push(0.0, 1.0, 0.0);\n\t\t\t\tuvs.push(u, v);\n\n\t\t\t\tif (i < ws && j < ls) {\n\t\t\t\t\tindices.push(vcounter + ls + 1, vcounter + 1, vcounter);\n\t\t\t\t\tindices.push(vcounter + ls + 1, vcounter + ls + 2, vcounter + 1);\n\t\t\t\t}\n\n\t\t\t\tvcounter++;\n\t\t\t}\n\t\t}\n\n\t\tvar options = {\n\t\t\tnormals: normals,\n\t\t\tuvs: uvs,\n\t\t\tuvs1: uvs,\n\t\t\tindices: indices\n\t\t};\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(positions, normals, uvs, indices);\n\t\t}\n\n\t\treturn createMesh(device, positions, options);\n\t}\n\n\tfunction createBox(device, opts) {\n\t\tvar he = opts && opts.halfExtents !== undefined ? opts.halfExtents : new Vec3(0.5, 0.5, 0.5);\n\t\tvar ws = opts && opts.widthSegments !== undefined ? opts.widthSegments : 1;\n\t\tvar ls = opts && opts.lengthSegments !== undefined ? opts.lengthSegments : 1;\n\t\tvar hs = opts && opts.heightSegments !== undefined ? opts.heightSegments : 1;\n\t\tvar calculateTangents = opts && opts.calculateTangents !== undefined ? opts.calculateTangents : false;\n\t\tvar corners = [new Vec3(-he.x, -he.y, he.z), new Vec3(he.x, -he.y, he.z), new Vec3(he.x, he.y, he.z), new Vec3(-he.x, he.y, he.z), new Vec3(he.x, -he.y, -he.z), new Vec3(-he.x, -he.y, -he.z), new Vec3(-he.x, he.y, -he.z), new Vec3(he.x, he.y, -he.z)];\n\t\tvar faceAxes = [[0, 1, 3], [4, 5, 7], [3, 2, 6], [1, 0, 4], [1, 4, 2], [5, 0, 6]];\n\t\tvar faceNormals = [[0, 0, 1], [0, 0, -1], [0, 1, 0], [0, -1, 0], [1, 0, 0], [-1, 0, 0]];\n\t\tvar sides = {\n\t\t\tFRONT: 0,\n\t\t\tBACK: 1,\n\t\t\tTOP: 2,\n\t\t\tBOTTOM: 3,\n\t\t\tRIGHT: 4,\n\t\t\tLEFT: 5\n\t\t};\n\t\tvar positions = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar uvs1 = [];\n\t\tvar indices = [];\n\t\tvar vcounter = 0;\n\n\t\tvar generateFace = function generateFace(side, uSegments, vSegments) {\n\t\t\tvar u, v;\n\t\t\tvar i, j;\n\n\t\t\tfor (i = 0; i <= uSegments; i++) {\n\t\t\t\tfor (j = 0; j <= vSegments; j++) {\n\t\t\t\t\tvar temp1 = new Vec3();\n\t\t\t\t\tvar temp2 = new Vec3();\n\t\t\t\t\tvar temp3 = new Vec3();\n\t\t\t\t\tvar r = new Vec3();\n\t\t\t\t\ttemp1.lerp(corners[faceAxes[side][0]], corners[faceAxes[side][1]], i / uSegments);\n\t\t\t\t\ttemp2.lerp(corners[faceAxes[side][0]], corners[faceAxes[side][2]], j / vSegments);\n\t\t\t\t\ttemp3.sub2(temp2, corners[faceAxes[side][0]]);\n\t\t\t\t\tr.add2(temp1, temp3);\n\t\t\t\t\tu = i / uSegments;\n\t\t\t\t\tv = j / vSegments;\n\t\t\t\t\tpositions.push(r.x, r.y, r.z);\n\t\t\t\t\tnormals.push(faceNormals[side][0], faceNormals[side][1], faceNormals[side][2]);\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t\tu /= 3;\n\t\t\t\t\tv /= 3;\n\t\t\t\t\tu = u * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tv = v * primitiveUv1PaddingScale + primitiveUv1Padding;\n\t\t\t\t\tu += side % 3 / 3;\n\t\t\t\t\tv += Math.floor(side / 3) / 3;\n\t\t\t\t\tuvs1.push(u, v);\n\n\t\t\t\t\tif (i < uSegments && j < vSegments) {\n\t\t\t\t\t\tindices.push(vcounter + vSegments + 1, vcounter + 1, vcounter);\n\t\t\t\t\t\tindices.push(vcounter + vSegments + 1, vcounter + vSegments + 2, vcounter + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tgenerateFace(sides.FRONT, ws, hs);\n\t\tgenerateFace(sides.BACK, ws, hs);\n\t\tgenerateFace(sides.TOP, ws, ls);\n\t\tgenerateFace(sides.BOTTOM, ws, ls);\n\t\tgenerateFace(sides.RIGHT, ls, hs);\n\t\tgenerateFace(sides.LEFT, ls, hs);\n\t\tvar options = {\n\t\t\tnormals: normals,\n\t\t\tuvs: uvs,\n\t\t\tuvs1: uvs1,\n\t\t\tindices: indices\n\t\t};\n\n\t\tif (calculateTangents) {\n\t\t\toptions.tangents = calculateTangents(positions, normals, uvs, indices);\n\t\t}\n\n\t\treturn createMesh(device, positions, options);\n\t}\n\n\tfunction getShapePrimitive(device, type) {\n\t\tvar primData = null;\n\n\t\tfor (var i = 0; i < shapePrimitives.length; i++) {\n\t\t\tif (shapePrimitives[i].type === type && shapePrimitives[i].device === device) {\n\t\t\t\tprimData = shapePrimitives[i].primData;\n\t\t\t}\n\t\t}\n\n\t\tif (!primData) {\n\t\t\tvar mesh, area;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'box':\n\t\t\t\t\tmesh = createBox(device, {\n\t\t\t\t\t\thalfExtents: new Vec3(0.5, 0.5, 0.5)\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: 2,\n\t\t\t\t\t\ty: 2,\n\t\t\t\t\t\tz: 2,\n\t\t\t\t\t\tuv: 2.0 / 3\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'capsule':\n\t\t\t\t\tmesh = createCapsule(device, {\n\t\t\t\t\t\tradius: 0.5,\n\t\t\t\t\t\theight: 2\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: Math.PI * 2,\n\t\t\t\t\t\ty: Math.PI,\n\t\t\t\t\t\tz: Math.PI * 2,\n\t\t\t\t\t\tuv: 1.0 / 3 + 1.0 / 3 / 3 * 2\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'cone':\n\t\t\t\t\tmesh = createCone(device, {\n\t\t\t\t\t\tbaseRadius: 0.5,\n\t\t\t\t\t\tpeakRadius: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: 2.54,\n\t\t\t\t\t\ty: 2.54,\n\t\t\t\t\t\tz: 2.54,\n\t\t\t\t\t\tuv: 1.0 / 3 + 1.0 / 3 / 3\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'cylinder':\n\t\t\t\t\tmesh = createCylinder(device, {\n\t\t\t\t\t\tradius: 0.5,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: Math.PI,\n\t\t\t\t\t\ty: 0.79 * 2,\n\t\t\t\t\t\tz: Math.PI,\n\t\t\t\t\t\tuv: 1.0 / 3 + 1.0 / 3 / 3 * 2\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'plane':\n\t\t\t\t\tmesh = createPlane(device, {\n\t\t\t\t\t\thalfExtents: new Vec2(0.5, 0.5),\n\t\t\t\t\t\twidthSegments: 1,\n\t\t\t\t\t\tlengthSegments: 1\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 1,\n\t\t\t\t\t\tz: 0,\n\t\t\t\t\t\tuv: 1\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'sphere':\n\t\t\t\t\tmesh = createSphere(device, {\n\t\t\t\t\t\tradius: 0.5\n\t\t\t\t\t});\n\t\t\t\t\tarea = {\n\t\t\t\t\t\tx: Math.PI,\n\t\t\t\t\t\ty: Math.PI,\n\t\t\t\t\t\tz: Math.PI,\n\t\t\t\t\t\tuv: 1\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Invalid primitive type: \" + type);\n\t\t\t}\n\n\t\t\tprimData = {\n\t\t\t\tmesh: mesh,\n\t\t\t\tarea: area\n\t\t\t};\n\t\t\tshapePrimitives.push({\n\t\t\t\ttype: type,\n\t\t\t\tdevice: device,\n\t\t\t\tprimData: primData\n\t\t\t});\n\t\t}\n\n\t\treturn primData;\n\t}\n\n\tvar Scene = function (_EventHandler) {\n\t\t_inheritsLoose(Scene, _EventHandler);\n\n\t\tfunction Scene() {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this.destroy = function () {\n\t\t\t\tthis.skybox = null;\n\t\t\t};\n\n\t\t\t_this.root = null;\n\t\t\t_this._gravity = new Vec3(0, -9.8, 0);\n\t\t\t_this._layers = null;\n\t\t\t_this._fog = FOG_NONE;\n\t\t\t_this.fogColor = new Color(0, 0, 0);\n\t\t\t_this.fogStart = 1;\n\t\t\t_this.fogEnd = 1000;\n\t\t\t_this.fogDensity = 0;\n\t\t\t_this.ambientLight = new Color(0, 0, 0);\n\t\t\t_this._gammaCorrection = GAMMA_NONE;\n\t\t\t_this._toneMapping = 0;\n\t\t\t_this.exposure = 1.0;\n\t\t\t_this._skyboxPrefiltered = [null, null, null, null, null, null];\n\t\t\t_this._firstUpdateSkybox = true;\n\t\t\t_this._skyboxCubeMap = null;\n\t\t\t_this.skyboxModel = null;\n\t\t\t_this._skyboxIntensity = 1;\n\t\t\t_this._skyboxMip = 0;\n\t\t\t_this._skyboxRotation = new Quat();\n\t\t\t_this._skyboxRotationMat3 = null;\n\t\t\t_this._skyboxRotationMat4 = null;\n\t\t\t_this._skyboxIsRenderTarget = false;\n\t\t\t_this.lightmapSizeMultiplier = 1;\n\t\t\t_this.lightmapMaxResolution = 2048;\n\t\t\t_this.lightmapMode = BAKE_COLORDIR;\n\t\t\t_this._stats = {\n\t\t\t\tmeshInstances: 0,\n\t\t\t\tlights: 0,\n\t\t\t\tdynamicLights: 0,\n\t\t\t\tbakedLights: 0,\n\t\t\t\tlastStaticPrepareFullTime: 0,\n\t\t\t\tlastStaticPrepareSearchTime: 0,\n\t\t\t\tlastStaticPrepareWriteTime: 0,\n\t\t\t\tlastStaticPrepareTriAabbTime: 0,\n\t\t\t\tlastStaticPrepareCombineTime: 0,\n\t\t\t\tupdateShadersTime: 0\n\t\t\t};\n\t\t\t_this.updateShaders = true;\n\t\t\t_this.updateSkybox = true;\n\t\t\t_this._shaderVersion = 0;\n\t\t\t_this._statsUpdated = false;\n\t\t\t_this._models = [];\n\t\t\t_this.defaultMaterial = new StandardMaterial();\n\t\t\t_this.defaultMaterial.name = \"Default Material\";\n\t\t\t_this.defaultMaterial.shadingModel = SPECULAR_BLINN;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Scene.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.root = null;\n\t\t\tthis.defaultMaterial.destroy();\n\t\t\tthis.defaultMaterial = null;\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto.applySettings = function applySettings(settings) {\n\t\t\tthis._gravity.set(settings.physics.gravity[0], settings.physics.gravity[1], settings.physics.gravity[2]);\n\n\t\t\tthis.ambientLight.set(settings.render.global_ambient[0], settings.render.global_ambient[1], settings.render.global_ambient[2]);\n\t\t\tthis._fog = settings.render.fog;\n\t\t\tthis.fogColor.set(settings.render.fog_color[0], settings.render.fog_color[1], settings.render.fog_color[2]);\n\t\t\tthis.fogStart = settings.render.fog_start;\n\t\t\tthis.fogEnd = settings.render.fog_end;\n\t\t\tthis.fogDensity = settings.render.fog_density;\n\t\t\tthis._gammaCorrection = settings.render.gamma_correction;\n\t\t\tthis._toneMapping = settings.render.tonemapping;\n\t\t\tthis.lightmapSizeMultiplier = settings.render.lightmapSizeMultiplier;\n\t\t\tthis.lightmapMaxResolution = settings.render.lightmapMaxResolution;\n\t\t\tthis.lightmapMode = settings.render.lightmapMode;\n\t\t\tthis.exposure = settings.render.exposure;\n\t\t\tthis._skyboxIntensity = settings.render.skyboxIntensity === undefined ? 1 : settings.render.skyboxIntensity;\n\t\t\tthis._skyboxMip = settings.render.skyboxMip === undefined ? 0 : settings.render.skyboxMip;\n\n\t\t\tif (settings.render.skyboxRotation !== undefined) {\n\t\t\t\tthis._skyboxRotation.setFromEulerAngles(settings.render.skyboxRotation[0], settings.render.skyboxRotation[1], settings.render.skyboxRotation[2]);\n\t\t\t}\n\n\t\t\tthis._resetSkyboxModel();\n\n\t\t\tthis.updateShaders = true;\n\t\t};\n\n\t\t_proto._updateSkybox = function _updateSkybox(device) {\n\t\t\tif (!this.skyboxModel) {\n\t\t\t\tvar skyboxMapping = [0, 1, 3, 4, 5, 6];\n\t\t\t\tvar usedTex = this._skyboxMip ? this._skyboxPrefiltered[skyboxMapping[this._skyboxMip]] || this._skyboxPrefiltered[0] || this._skyboxCubeMap : this._skyboxCubeMap || this._skyboxPrefiltered[0];\n\n\t\t\t\tif (!usedTex) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (usedTex._isRenderTarget) {\n\t\t\t\t\tthis._skyboxIsRenderTarget = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._skyboxIsRenderTarget = false;\n\t\t\t\t}\n\n\t\t\t\tvar material = new Material();\n\t\t\t\tvar scene = this;\n\n\t\t\t\tmaterial.updateShader = function (dev, sc, defs, staticLightList, pass) {\n\t\t\t\t\tvar library = device.getProgramLibrary();\n\t\t\t\t\tvar shader = library.getProgram('skybox', {\n\t\t\t\t\t\trgbm: usedTex.type === TEXTURETYPE_RGBM,\n\t\t\t\t\t\thdr: usedTex.type === TEXTURETYPE_RGBM || usedTex.format === PIXELFORMAT_RGBA32F,\n\t\t\t\t\t\tuseIntensity: scene.skyboxIntensity !== 1,\n\t\t\t\t\t\tuseCubeMapRotation: !scene.skyboxRotation.equals(Quat.IDENTITY),\n\t\t\t\t\t\tuseRightHandedCubeMap: scene._skyboxIsRenderTarget,\n\t\t\t\t\t\tmip: usedTex.fixCubemapSeams ? scene.skyboxMip : 0,\n\t\t\t\t\t\tfixSeams: usedTex.fixCubemapSeams,\n\t\t\t\t\t\tgamma: pass === SHADER_FORWARDHDR ? scene.gammaCorrection ? GAMMA_SRGBHDR : GAMMA_NONE : scene.gammaCorrection,\n\t\t\t\t\t\ttoneMapping: pass === SHADER_FORWARDHDR ? TONEMAP_LINEAR : scene.toneMapping\n\t\t\t\t\t});\n\t\t\t\t\tthis.shader = shader;\n\t\t\t\t};\n\n\t\t\t\tmaterial.updateShader();\n\t\t\t\tmaterial.setParameter(\"texture_cubeMap\", usedTex);\n\n\t\t\t\tif (!this.skyboxRotation.equals(Quat.IDENTITY)) {\n\t\t\t\t\tif (!this._skyboxRotationMat4) this._skyboxRotationMat4 = new Mat4();\n\t\t\t\t\tif (!this._skyboxRotationMat3) this._skyboxRotationMat3 = new Mat3();\n\n\t\t\t\t\tthis._skyboxRotationMat4.setTRS(pc.Vec3.ZERO, this._skyboxRotation, pc.Vec3.ONE);\n\n\t\t\t\t\tthis._skyboxRotationMat4.invertTo3x3(this._skyboxRotationMat3);\n\n\t\t\t\t\tmaterial.setParameter(\"cubeMapRotationMatrix\", this._skyboxRotationMat3.data);\n\t\t\t\t}\n\n\t\t\t\tmaterial.cull = CULLFACE_FRONT;\n\t\t\t\tmaterial.depthWrite = false;\n\t\t\t\tvar skyLayer = this.layers.getLayerById(LAYERID_SKYBOX);\n\n\t\t\t\tif (skyLayer) {\n\t\t\t\t\tvar node = new GraphNode();\n\t\t\t\t\tvar mesh = createBox(device);\n\t\t\t\t\tvar meshInstance = new MeshInstance(node, mesh, material);\n\t\t\t\t\tmeshInstance.cull = false;\n\t\t\t\t\tmeshInstance._noDepthDrawGl1 = true;\n\t\t\t\t\tvar model = new Model();\n\t\t\t\t\tmodel.graph = node;\n\t\t\t\t\tmodel.meshInstances = [meshInstance];\n\t\t\t\t\tthis.skyboxModel = model;\n\t\t\t\t\tskyLayer.addMeshInstances(model.meshInstances);\n\t\t\t\t\tthis.skyLayer = skyLayer;\n\n\t\t\t\t\tif (this._firstUpdateSkybox) {\n\t\t\t\t\t\tskyLayer.enabled = true;\n\t\t\t\t\t\tthis._firstUpdateSkybox = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.fire(\"set:skybox\", usedTex);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._resetSkyboxModel = function _resetSkyboxModel() {\n\t\t\tif (this.skyboxModel) {\n\t\t\t\tthis.skyLayer.removeMeshInstances(this.skyboxModel.meshInstances);\n\t\t\t\tthis.skyboxModel.destroy();\n\t\t\t}\n\n\t\t\tthis.skyboxModel = null;\n\t\t\tthis.updateSkybox = true;\n\t\t};\n\n\t\t_proto.setSkybox = function setSkybox(cubemaps) {\n\t\t\tvar i;\n\t\t\tif (!cubemaps) cubemaps = [null, null, null, null, null, null, null];\n\t\t\tvar different = false;\n\t\t\tif (this._skyboxCubeMap !== cubemaps[0]) different = true;\n\n\t\t\tif (!different) {\n\t\t\t\tfor (i = 0; i < 6 && !different; i++) {\n\t\t\t\t\tif (this._skyboxPrefiltered[i] !== cubemaps[i + 1]) different = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!different) return;\n\n\t\t\tfor (i = 0; i < 6; i++) {\n\t\t\t\tthis._skyboxPrefiltered[i] = cubemaps[i + 1];\n\t\t\t}\n\n\t\t\tthis.skybox = cubemaps[0];\n\t\t};\n\n\t\t_proto.addModel = function addModel(model) {\n\t\t\tif (this.containsModel(model)) return;\n\t\t\tvar layer = this.layers.getLayerById(LAYERID_WORLD);\n\t\t\tif (!layer) return;\n\t\t\tlayer.addMeshInstances(model.meshInstances);\n\n\t\t\tthis._models.push(model);\n\t\t};\n\n\t\t_proto.addShadowCaster = function addShadowCaster(model) {\n\t\t\tvar layer = this.layers.getLayerById(LAYERID_WORLD);\n\t\t\tif (!layer) return;\n\t\t\tlayer.addShadowCasters(model.meshInstances);\n\t\t};\n\n\t\t_proto.removeModel = function removeModel(model) {\n\t\t\tvar index = this._models.indexOf(model);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tvar layer = this.layers.getLayerById(LAYERID_WORLD);\n\t\t\t\tif (!layer) return;\n\t\t\t\tlayer.removeMeshInstances(model.meshInstances);\n\n\t\t\t\tthis._models.splice(index, 1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeShadowCasters = function removeShadowCasters(model) {\n\t\t\tvar layer = this.layers.getLayerById(LAYERID_WORLD);\n\t\t\tif (!layer) return;\n\t\t\tlayer.removeShadowCasters(model.meshInstances);\n\t\t};\n\n\t\t_proto.containsModel = function containsModel(model) {\n\t\t\treturn this._models.indexOf(model) >= 0;\n\t\t};\n\n\t\t_proto.getModels = function getModels(model) {\n\t\t\treturn this._models;\n\t\t};\n\n\t\t_createClass(Scene, [{\n\t\t\tkey: \"fog\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fog;\n\t\t\t},\n\t\t\tset: function set(type) {\n\t\t\t\tif (type !== this._fog) {\n\t\t\t\t\tthis._fog = type;\n\t\t\t\t\tthis.updateShaders = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"gammaCorrection\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._gammaCorrection;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value !== this._gammaCorrection) {\n\t\t\t\t\tthis._gammaCorrection = value;\n\t\t\t\t\tthis.updateShaders = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"toneMapping\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._toneMapping;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value !== this._toneMapping) {\n\t\t\t\t\tthis._toneMapping = value;\n\t\t\t\t\tthis.updateShaders = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skybox\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxCubeMap;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._skyboxCubeMap = value;\n\n\t\t\t\tthis._resetSkyboxModel();\n\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxIntensity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxIntensity;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._skyboxIntensity = value;\n\n\t\t\t\tthis._resetSkyboxModel();\n\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxRotation\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxRotation;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (!this._skyboxRotation.equals(value)) {\n\t\t\t\t\tthis._skyboxRotation.copy(value);\n\n\t\t\t\t\tthis._resetSkyboxModel();\n\n\t\t\t\t\tthis.updateShaders = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxMip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxMip;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._skyboxMip = value;\n\n\t\t\t\tthis._resetSkyboxModel();\n\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered128\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[0];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[0] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[0] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered64\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[1];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[1] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[1] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered32\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[2];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[2] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[2] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered16\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[3];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[3] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[3] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered8\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[4];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[4] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[4] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"skyboxPrefiltered4\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._skyboxPrefiltered[5];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._skyboxPrefiltered[5] === value) return;\n\t\t\t\tthis._skyboxPrefiltered[5] = value;\n\t\t\t\tthis.updateShaders = true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"drawCalls\",\n\t\t\tget: function get() {\n\t\t\t\tvar drawCalls = this.layers._meshInstances;\n\n\t\t\t\tif (!drawCalls.length) {\n\t\t\t\t\tthis.layers._update();\n\n\t\t\t\t\tdrawCalls = this.layers._meshInstances;\n\t\t\t\t}\n\n\t\t\t\treturn drawCalls;\n\t\t\t},\n\t\t\tset: function set(value) {}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t},\n\t\t\tset: function set(layers) {\n\t\t\t\tvar prev = this._layers;\n\t\t\t\tthis._layers = layers;\n\t\t\t\tthis.fire(\"set:layers\", prev, layers);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"defaultMaterial\",\n\t\t\tget: function get() {\n\t\t\t\treturn Material.defaultMaterial;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tMaterial.defaultMaterial = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Scene;\n\t}(EventHandler);\n\n\tfunction hasAudio() {\n\t\treturn typeof Audio !== 'undefined';\n\t}\n\n\tfunction hasAudioContext() {\n\t\treturn !!(typeof AudioContext !== 'undefined' || typeof webkitAudioContext !== 'undefined');\n\t}\n\n\tvar Channel = function () {\n\t\tfunction Channel(manager, sound, options) {\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tthis.volume = options.volume === undefined ? 1 : options.volume;\n\t\t\tthis.loop = options.loop === undefined ? false : options.loop;\n\t\t\tthis.pitch = options.pitch === undefined ? 1 : options.pitch;\n\t\t\tthis.sound = sound;\n\t\t\tthis.paused = false;\n\t\t\tthis.suspended = false;\n\t\t\tthis.manager = manager;\n\t\t\tthis.source = null;\n\n\t\t\tif (hasAudioContext()) {\n\t\t\t\tthis.startTime = 0;\n\t\t\t\tthis.startOffset = 0;\n\t\t\t\tvar context = manager.context;\n\t\t\t\tthis.gain = context.createGain();\n\t\t\t} else if (hasAudio()) {\n\t\t\t\tif (sound.audio) {\n\t\t\t\t\tthis.source = sound.audio.cloneNode(false);\n\t\t\t\t\tthis.source.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Channel.prototype;\n\n\t\t_proto.getVolume = function getVolume() {\n\t\t\treturn this.volume;\n\t\t};\n\n\t\t_proto.getLoop = function getLoop() {\n\t\t\treturn this.loop;\n\t\t};\n\n\t\t_proto.setLoop = function setLoop(loop) {\n\t\t\tthis.loop = loop;\n\n\t\t\tif (this.source) {\n\t\t\t\tthis.source.loop = loop;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getPitch = function getPitch() {\n\t\t\treturn this.pitch;\n\t\t};\n\n\t\t_proto.onManagerVolumeChange = function onManagerVolumeChange() {\n\t\t\tthis.setVolume(this.getVolume());\n\t\t};\n\n\t\t_proto.onManagerSuspend = function onManagerSuspend() {\n\t\t\tif (this.isPlaying() && !this.suspended) {\n\t\t\t\tthis.suspended = true;\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onManagerResume = function onManagerResume() {\n\t\t\tif (this.suspended) {\n\t\t\t\tthis.suspended = false;\n\t\t\t\tthis.unpause();\n\t\t\t}\n\t\t};\n\n\t\treturn Channel;\n\t}();\n\n\tif (hasAudioContext()) {\n\t\tObject.assign(Channel.prototype, {\n\t\t\tplay: function play() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthrow new Error('Call stop() before calling play()');\n\t\t\t\t}\n\n\t\t\t\tthis._createSource();\n\n\t\t\t\tif (!this.source) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startTime = this.manager.context.currentTime;\n\t\t\t\tthis.source.start(0, this.startOffset % this.source.buffer.duration);\n\t\t\t\tthis.setVolume(this.volume);\n\t\t\t\tthis.setLoop(this.loop);\n\t\t\t\tthis.setPitch(this.pitch);\n\t\t\t\tthis.manager.on('volumechange', this.onManagerVolumeChange, this);\n\t\t\t\tthis.manager.on('suspend', this.onManagerSuspend, this);\n\t\t\t\tthis.manager.on('resume', this.onManagerResume, this);\n\t\t\t\tif (this.manager.suspended) this.onManagerSuspend();\n\t\t\t},\n\t\t\tpause: function pause() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tthis.startOffset += this.manager.context.currentTime - this.startTime;\n\t\t\t\t\tthis.source.stop(0);\n\t\t\t\t\tthis.source = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tunpause: function unpause() {\n\t\t\t\tif (this.source || !this.paused) {\n\t\t\t\t\tconsole.warn('Call pause() before unpausing.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._createSource();\n\n\t\t\t\tif (!this.source) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startTime = this.manager.context.currentTime;\n\t\t\t\tthis.source.start(0, this.startOffset % this.source.buffer.duration);\n\t\t\t\tthis.setVolume(this.volume);\n\t\t\t\tthis.setLoop(this.loop);\n\t\t\t\tthis.setPitch(this.pitch);\n\t\t\t\tthis.paused = false;\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.stop(0);\n\t\t\t\t\tthis.source = null;\n\t\t\t\t}\n\n\t\t\t\tthis.manager.off('volumechange', this.onManagerVolumeChange, this);\n\t\t\t\tthis.manager.off('suspend', this.onManagerSuspend, this);\n\t\t\t\tthis.manager.off('resume', this.onManagerResume, this);\n\t\t\t},\n\t\t\tsetVolume: function setVolume(volume) {\n\t\t\t\tvolume = math.clamp(volume, 0, 1);\n\t\t\t\tthis.volume = volume;\n\n\t\t\t\tif (this.gain) {\n\t\t\t\t\tthis.gain.gain.value = volume * this.manager.volume;\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetPitch: function setPitch(pitch) {\n\t\t\t\tthis.pitch = pitch;\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.playbackRate.value = pitch;\n\t\t\t\t}\n\t\t\t},\n\t\t\tisPlaying: function isPlaying() {\n\t\t\t\treturn !this.paused && this.source.playbackState === this.source.PLAYING_STATE;\n\t\t\t},\n\t\t\tgetDuration: function getDuration() {\n\t\t\t\treturn this.source ? this.source.buffer.duration : 0;\n\t\t\t},\n\t\t\t_createSource: function _createSource() {\n\t\t\t\tvar context = this.manager.context;\n\n\t\t\t\tif (this.sound.buffer) {\n\t\t\t\t\tthis.source = context.createBufferSource();\n\t\t\t\t\tthis.source.buffer = this.sound.buffer;\n\t\t\t\t\tthis.source.connect(this.gain);\n\t\t\t\t\tthis.gain.connect(context.destination);\n\n\t\t\t\t\tif (!this.loop) {\n\t\t\t\t\t\tthis.source.onended = this.pause.bind(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else if (hasAudio()) {\n\t\tObject.assign(Channel.prototype, {\n\t\t\tplay: function play() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.paused = false;\n\t\t\t\t\tthis.setVolume(this.volume);\n\t\t\t\t\tthis.setLoop(this.loop);\n\t\t\t\t\tthis.setPitch(this.pitch);\n\t\t\t\t\tthis.source.play();\n\t\t\t\t}\n\n\t\t\t\tthis.manager.on('volumechange', this.onManagerVolumeChange, this);\n\t\t\t\tthis.manager.on('suspend', this.onManagerSuspend, this);\n\t\t\t\tthis.manager.on('resume', this.onManagerResume, this);\n\t\t\t\tif (this.manager.suspended) this.onManagerSuspend();\n\t\t\t},\n\t\t\tpause: function pause() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tthis.source.pause();\n\t\t\t\t}\n\t\t\t},\n\t\t\tunpause: function unpause() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.paused = false;\n\t\t\t\t\tthis.source.play();\n\t\t\t\t}\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.pause();\n\t\t\t\t}\n\n\t\t\t\tthis.manager.off('volumechange', this.onManagerVolumeChange, this);\n\t\t\t\tthis.manager.off('suspend', this.onManagerSuspend, this);\n\t\t\t\tthis.manager.off('resume', this.onManagerResume, this);\n\t\t\t},\n\t\t\tsetVolume: function setVolume(volume) {\n\t\t\t\tvolume = math.clamp(volume, 0, 1);\n\t\t\t\tthis.volume = volume;\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.volume = volume * this.manager.volume;\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetPitch: function setPitch(pitch) {\n\t\t\t\tthis.pitch = pitch;\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.playbackRate = pitch;\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetDuration: function getDuration() {\n\t\t\t\treturn this.source && !isNaN(this.source.duration) ? this.source.duration : 0;\n\t\t\t},\n\t\t\tisPlaying: function isPlaying() {\n\t\t\t\treturn !this.source.paused;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar DISTANCE_LINEAR = 'linear';\n\tvar DISTANCE_INVERSE = 'inverse';\n\tvar DISTANCE_EXPONENTIAL = 'exponential';\n\n\tvar MAX_DISTANCE = 10000;\n\n\tvar Channel3d = function (_Channel) {\n\t\t_inheritsLoose(Channel3d, _Channel);\n\n\t\tfunction Channel3d(manager, sound, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Channel.call(this, manager, sound, options) || this;\n\t\t\t_this.position = new Vec3();\n\t\t\t_this.velocity = new Vec3();\n\n\t\t\tif (hasAudioContext()) {\n\t\t\t\t_this.panner = manager.context.createPanner();\n\t\t\t} else {\n\t\t\t\t_this.maxDistance = MAX_DISTANCE;\n\t\t\t\t_this.minDistance = 1;\n\t\t\t\t_this.rollOffFactor = 1;\n\t\t\t\t_this.distanceModel = DISTANCE_INVERSE;\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Channel3d.prototype;\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\treturn this.position;\n\t\t};\n\n\t\t_proto.getVelocity = function getVelocity() {\n\t\t\treturn this.velocity;\n\t\t};\n\n\t\treturn Channel3d;\n\t}(Channel);\n\n\tif (hasAudioContext()) {\n\t\tObject.assign(Channel3d.prototype, {\n\t\t\tsetPosition: function setPosition(position) {\n\t\t\t\tthis.position.copy(position);\n\t\t\t\tthis.panner.setPosition(position.x, position.y, position.z);\n\t\t\t},\n\t\t\tsetVelocity: function setVelocity(velocity) {\n\t\t\t\tthis.velocity.copy(velocity);\n\t\t\t\tthis.panner.setVelocity(velocity.x, velocity.y, velocity.z);\n\t\t\t},\n\t\t\tgetMaxDistance: function getMaxDistance() {\n\t\t\t\treturn this.panner.maxDistance;\n\t\t\t},\n\t\t\tsetMaxDistance: function setMaxDistance(max) {\n\t\t\t\tthis.panner.maxDistance = max;\n\t\t\t},\n\t\t\tgetMinDistance: function getMinDistance() {\n\t\t\t\treturn this.panner.refDistance;\n\t\t\t},\n\t\t\tsetMinDistance: function setMinDistance(min) {\n\t\t\t\tthis.panner.refDistance = min;\n\t\t\t},\n\t\t\tgetRollOffFactor: function getRollOffFactor() {\n\t\t\t\treturn this.panner.rolloffFactor;\n\t\t\t},\n\t\t\tsetRollOffFactor: function setRollOffFactor(factor) {\n\t\t\t\tthis.panner.rolloffFactor = factor;\n\t\t\t},\n\t\t\tgetDistanceModel: function getDistanceModel() {\n\t\t\t\treturn this.pannel.distanceModel;\n\t\t\t},\n\t\t\tsetDistanceModel: function setDistanceModel(distanceModel) {\n\t\t\t\tthis.panner.distanceModel = distanceModel;\n\t\t\t},\n\t\t\t_createSource: function _createSource() {\n\t\t\t\tvar context = this.manager.context;\n\t\t\t\tthis.source = context.createBufferSource();\n\t\t\t\tthis.source.buffer = this.sound.buffer;\n\t\t\t\tthis.source.connect(this.panner);\n\t\t\t\tthis.panner.connect(this.gain);\n\t\t\t\tthis.gain.connect(context.destination);\n\n\t\t\t\tif (!this.loop) {\n\t\t\t\t\tthis.source.onended = this.pause.bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else {\n\t\tvar offset = new Vec3();\n\n\t\tvar fallOff = function fallOff(posOne, posTwo, refDistance, maxDistance, rolloffFactor, distanceModel) {\n\t\t\toffset = offset.sub2(posOne, posTwo);\n\t\t\tvar distance = offset.length();\n\n\t\t\tif (distance < refDistance) {\n\t\t\t\treturn 1;\n\t\t\t} else if (distance > maxDistance) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar result = 0;\n\n\t\t\tif (distanceModel === DISTANCE_LINEAR) {\n\t\t\t\tresult = 1 - rolloffFactor * (distance - refDistance) / (maxDistance - refDistance);\n\t\t\t} else if (distanceModel === DISTANCE_INVERSE) {\n\t\t\t\tresult = refDistance / (refDistance + rolloffFactor * (distance - refDistance));\n\t\t\t} else if (distanceModel === DISTANCE_EXPONENTIAL) {\n\t\t\t\tresult = Math.pow(distance / refDistance, -rolloffFactor);\n\t\t\t}\n\n\t\t\treturn math.clamp(result, 0, 1);\n\t\t};\n\n\t\tObject.assign(Channel3d.prototype, {\n\t\t\tsetPosition: function setPosition(position) {\n\t\t\t\tthis.position.copy(position);\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tvar listener = this.manager.listener;\n\t\t\t\t\tvar lpos = listener.getPosition();\n\t\t\t\t\tvar factor = fallOff(lpos, this.position, this.minDistance, this.maxDistance, this.rollOffFactor, this.distanceModel);\n\t\t\t\t\tvar v = this.getVolume();\n\t\t\t\t\tthis.source.volume = v * factor;\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetVelocity: function setVelocity(velocity) {\n\t\t\t\tthis.velocity.copy(velocity);\n\t\t\t},\n\t\t\tgetMaxDistance: function getMaxDistance() {\n\t\t\t\treturn this.maxDistance;\n\t\t\t},\n\t\t\tsetMaxDistance: function setMaxDistance(max) {\n\t\t\t\tthis.maxDistance = max;\n\t\t\t},\n\t\t\tgetMinDistance: function getMinDistance() {\n\t\t\t\treturn this.minDistance;\n\t\t\t},\n\t\t\tsetMinDistance: function setMinDistance(min) {\n\t\t\t\tthis.minDistance = min;\n\t\t\t},\n\t\t\tgetRollOffFactor: function getRollOffFactor() {\n\t\t\t\treturn this.rollOffFactor;\n\t\t\t},\n\t\t\tsetRollOffFactor: function setRollOffFactor(factor) {\n\t\t\t\tthis.rollOffFactor = factor;\n\t\t\t},\n\t\t\tgetDistanceModel: function getDistanceModel() {\n\t\t\t\treturn this.distanceModel;\n\t\t\t},\n\t\t\tsetDistanceModel: function setDistanceModel(distanceModel) {\n\t\t\t\tthis.distanceModel = distanceModel;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar Listener = function () {\n\t\tfunction Listener(manager) {\n\t\t\tthis.position = new Vec3();\n\t\t\tthis.velocity = new Vec3();\n\t\t\tthis.orientation = new Mat4();\n\n\t\t\tif (hasAudioContext()) {\n\t\t\t\tthis.listener = manager.context.listener;\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Listener.prototype;\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\treturn this.position;\n\t\t};\n\n\t\t_proto.setPosition = function setPosition(position) {\n\t\t\tthis.position.copy(position);\n\n\t\t\tif (this.listener) {\n\t\t\t\tthis.listener.setPosition(position.x, position.y, position.z);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getVelocity = function getVelocity() {\n\t\t\treturn this.velocity;\n\t\t};\n\n\t\t_proto.setVelocity = function setVelocity(velocity) {\n\t\t\tthis.velocity.copy(velocity);\n\n\t\t\tif (this.listener) {\n\t\t\t\tthis.listener.setPosition(velocity.x, velocity.y, velocity.z);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setOrientation = function setOrientation(orientation) {\n\t\t\tthis.orientation.copy(orientation);\n\n\t\t\tif (this.listener) {\n\t\t\t\tthis.listener.setOrientation(-orientation.data[8], -orientation.data[9], -orientation.data[10], orientation.data[4], orientation.data[5], orientation.data[6]);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getOrientation = function getOrientation() {\n\t\t\treturn this.orientation;\n\t\t};\n\n\t\treturn Listener;\n\t}();\n\n\tvar SoundManager = function (_EventHandler) {\n\t\t_inheritsLoose(SoundManager, _EventHandler);\n\n\t\tfunction SoundManager(options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tif (hasAudioContext() || options.forceWebAudioApi) {\n\t\t\t\tif (typeof AudioContext !== 'undefined') {\n\t\t\t\t\t_this.context = new AudioContext();\n\t\t\t\t} else if (typeof webkitAudioContext !== 'undefined') {\n\t\t\t\t\t_this.context = new webkitAudioContext();\n\t\t\t\t}\n\n\t\t\t\tif (_this.context) {\n\t\t\t\t\tvar context = _this.context;\n\n\t\t\t\t\t_this.resumeContext = function () {\n\t\t\t\t\t\tthis.context.resume();\n\t\t\t\t\t\twindow.removeEventListener('mousedown', this.resumeContext);\n\t\t\t\t\t\twindow.removeEventListener('touchend', this.resumeContext);\n\t\t\t\t\t}.bind(_assertThisInitialized(_this));\n\n\t\t\t\t\twindow.addEventListener('mousedown', _this.resumeContext);\n\t\t\t\t\twindow.addEventListener('touchend', _this.resumeContext);\n\n\t\t\t\t\tif (platform.ios) {\n\t\t\t\t\t\tvar unlock = function unlock() {\n\t\t\t\t\t\t\tvar buffer = context.createBuffer(1, 1, 44100);\n\t\t\t\t\t\t\tvar source = context.createBufferSource();\n\t\t\t\t\t\t\tsource.buffer = buffer;\n\t\t\t\t\t\t\tsource.connect(context.destination);\n\t\t\t\t\t\t\tsource.start(0);\n\t\t\t\t\t\t\tsource.disconnect();\n\t\t\t\t\t\t\twindow.removeEventListener('touchend', unlock);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\twindow.addEventListener('touchend', unlock);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('No support for 3D audio found');\n\t\t\t}\n\n\t\t\tif (!hasAudio()) console.warn('No support for 2D audio found');\n\t\t\t_this.listener = new Listener(_assertThisInitialized(_this));\n\t\t\t_this._volume = 1;\n\t\t\t_this.suspended = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SoundManager.prototype;\n\n\t\t_proto.suspend = function suspend() {\n\t\t\tthis.suspended = true;\n\t\t\tthis.fire('suspend');\n\t\t};\n\n\t\t_proto.resume = function resume() {\n\t\t\tthis.suspended = false;\n\t\t\tthis.fire('resume');\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\twindow.removeEventListener('mousedown', this.resumeContext);\n\t\t\twindow.removeEventListener('touchend', this.resumeContext);\n\t\t\tthis.fire('destroy');\n\n\t\t\tif (this.context && this.context.close) {\n\t\t\t\tthis.context.close();\n\t\t\t\tthis.context = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.playSound = function playSound(sound, options) {\n\t\t\toptions = options || {};\n\t\t\tvar channel = null;\n\n\t\t\tif (Channel) {\n\t\t\t\tchannel = new Channel(this, sound, options);\n\t\t\t\tchannel.play();\n\t\t\t}\n\n\t\t\treturn channel;\n\t\t};\n\n\t\t_proto.playSound3d = function playSound3d(sound, position, options) {\n\t\t\toptions = options || {};\n\t\t\tvar channel = null;\n\n\t\t\tif (Channel3d) {\n\t\t\t\tchannel = new Channel3d(this, sound, options);\n\t\t\t\tchannel.setPosition(position);\n\n\t\t\t\tif (options.volume) {\n\t\t\t\t\tchannel.setVolume(options.volume);\n\t\t\t\t}\n\n\t\t\t\tif (options.loop) {\n\t\t\t\t\tchannel.setLoop(options.loop);\n\t\t\t\t}\n\n\t\t\t\tif (options.maxDistance) {\n\t\t\t\t\tchannel.setMaxDistance(options.maxDistance);\n\t\t\t\t}\n\n\t\t\t\tif (options.minDistance) {\n\t\t\t\t\tchannel.setMinDistance(options.minDistance);\n\t\t\t\t}\n\n\t\t\t\tif (options.rollOffFactor) {\n\t\t\t\t\tchannel.setRollOffFactor(options.rollOffFactor);\n\t\t\t\t}\n\n\t\t\t\tif (options.distanceModel) {\n\t\t\t\t\tchannel.setDistanceModel(options.distanceModel);\n\t\t\t\t}\n\n\t\t\t\tchannel.play();\n\t\t\t}\n\n\t\t\treturn channel;\n\t\t};\n\n\t\t_createClass(SoundManager, [{\n\t\t\tkey: \"volume\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._volume;\n\t\t\t},\n\t\t\tset: function set(volume) {\n\t\t\t\tvolume = math.clamp(volume, 0, 1);\n\t\t\t\tthis._volume = volume;\n\t\t\t\tthis.fire('volumechange', volume);\n\t\t\t}\n\t\t}]);\n\n\t\treturn SoundManager;\n\t}(EventHandler);\n\n\tvar Key = function Key(time, position, rotation, scale) {\n\t\tthis.time = time;\n\t\tthis.position = position;\n\t\tthis.rotation = rotation;\n\t\tthis.scale = scale;\n\t};\n\n\tvar Node = function Node() {\n\t\tthis._name = \"\";\n\t\tthis._keys = [];\n\t};\n\n\tvar Animation = function () {\n\t\tfunction Animation() {\n\t\t\tthis.name = '';\n\t\t\tthis.duration = 0;\n\t\t\tthis._nodes = [];\n\t\t\tthis._nodeDict = {};\n\t\t}\n\n\t\tvar _proto = Animation.prototype;\n\n\t\t_proto.getNode = function getNode(name) {\n\t\t\treturn this._nodeDict[name];\n\t\t};\n\n\t\t_proto.addNode = function addNode(node) {\n\t\t\tthis._nodes.push(node);\n\n\t\t\tthis._nodeDict[node._name] = node;\n\t\t};\n\n\t\t_createClass(Animation, [{\n\t\t\tkey: \"nodes\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._nodes;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Animation;\n\t}();\n\n\tvar MorphTarget = function () {\n\t\tfunction MorphTarget(options) {\n\t\t\tif (arguments.length === 2) {\n\t\t\t\toptions = arguments[1];\n\t\t\t}\n\n\t\t\tthis.options = options;\n\t\t\tthis.name = options.name;\n\t\t\tthis.defaultWeight = options.defaultWeight || 0;\n\t\t\tthis.aabb = options.aabb;\n\n\t\t\tif (!this.aabb) {\n\t\t\t\tthis.aabb = new BoundingBox();\n\t\t\t\tif (options.deltaPositions) this.aabb.compute(options.deltaPositions);\n\t\t\t}\n\n\t\t\tthis.deltaPositions = options.deltaPositions;\n\t\t}\n\n\t\tvar _proto = MorphTarget.prototype;\n\n\t\t_proto._postInit = function _postInit() {\n\t\t\tthis.options = null;\n\t\t};\n\n\t\t_proto._initVertexBuffers = function _initVertexBuffers(graphicsDevice) {\n\t\t\tvar options = this.options;\n\t\t\tthis._vertexBufferPositions = this._createVertexBuffer(graphicsDevice, options.deltaPositions, options.deltaPositionsType);\n\t\t\tthis._vertexBufferNormals = this._createVertexBuffer(graphicsDevice, options.deltaNormals, options.deltaNormalsType);\n\n\t\t\tif (this._vertexBufferPositions) {\n\t\t\t\tthis.deltaPositions = this._vertexBufferPositions.lock();\n\t\t\t}\n\t\t};\n\n\t\t_proto._createVertexBuffer = function _createVertexBuffer(device, data, dataType) {\n\t\t\tif (dataType === void 0) {\n\t\t\t\tdataType = TYPE_FLOAT32;\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tvar formatDesc = [{\n\t\t\t\t\tsemantic: SEMANTIC_ATTR0,\n\t\t\t\t\tcomponents: 3,\n\t\t\t\t\ttype: dataType\n\t\t\t\t}];\n\t\t\t\treturn new VertexBuffer(device, new VertexFormat(device, formatDesc), data.length / 3, BUFFER_STATIC, data);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._setTexture = function _setTexture(name, texture) {\n\t\t\tthis[name] = texture;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this._vertexBufferPositions) {\n\t\t\t\tthis._vertexBufferPositions.destroy();\n\n\t\t\t\tthis._vertexBufferPositions = null;\n\t\t\t}\n\n\t\t\tif (this._vertexBufferNormals) {\n\t\t\t\tthis._vertexBufferNormals.destroy();\n\n\t\t\t\tthis._vertexBufferNormals = null;\n\t\t\t}\n\n\t\t\tif (this.texturePositions) {\n\t\t\t\tthis.texturePositions.destroy();\n\t\t\t\tthis.texturePositions = null;\n\t\t\t}\n\n\t\t\tif (this.textureNormals) {\n\t\t\t\tthis.textureNormals.destroy();\n\t\t\t\tthis.textureNormals = null;\n\t\t\t}\n\t\t};\n\n\t\t_createClass(MorphTarget, [{\n\t\t\tkey: \"morphPositions\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!this._vertexBufferPositions || !!this.texturePositions;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"morphNormals\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!this._vertexBufferNormals || !!this.textureNormals;\n\t\t\t}\n\t\t}]);\n\n\t\treturn MorphTarget;\n\t}();\n\n\tvar Skin = function Skin(graphicsDevice, ibp, boneNames) {\n\t\tthis.device = graphicsDevice;\n\t\tthis.inverseBindPose = ibp;\n\t\tthis.boneNames = boneNames;\n\t};\n\n\tvar AnimCurve = function () {\n\t\tfunction AnimCurve(paths, input, output, interpolation) {\n\t\t\tthis._paths = paths;\n\t\t\tthis._input = input;\n\t\t\tthis._output = output;\n\t\t\tthis._interpolation = interpolation;\n\t\t}\n\n\t\t_createClass(AnimCurve, [{\n\t\t\tkey: \"paths\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._paths;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"input\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._input;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"output\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._output;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"interpolation\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._interpolation;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimCurve;\n\t}();\n\n\tvar AnimData = function () {\n\t\tfunction AnimData(components, data) {\n\t\t\tthis._components = components;\n\t\t\tthis._data = data;\n\t\t}\n\n\t\t_createClass(AnimData, [{\n\t\t\tkey: \"components\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._components;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"data\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._data;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimData;\n\t}();\n\n\tvar AnimTrack = function () {\n\t\tfunction AnimTrack(name, duration, inputs, outputs, curves) {\n\t\t\tthis._name = name;\n\t\t\tthis._duration = duration;\n\t\t\tthis._inputs = inputs;\n\t\t\tthis._outputs = outputs;\n\t\t\tthis._curves = curves;\n\t\t}\n\n\t\tvar _proto = AnimTrack.prototype;\n\n\t\t_proto.eval = function _eval(time, snapshot) {\n\t\t\tsnapshot._time = time;\n\t\t\tvar inputs = this._inputs;\n\t\t\tvar outputs = this._outputs;\n\t\t\tvar curves = this._curves;\n\t\t\tvar cache = snapshot._cache;\n\t\t\tvar results = snapshot._results;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < inputs.length; ++i) {\n\t\t\t\tcache[i].update(time, inputs[i]._data);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < curves.length; ++i) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tvar output = outputs[curve._output];\n\t\t\t\tvar result = results[i];\n\n\t\t\t\tcache[curve._input].eval(result, curve._interpolation, output);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(AnimTrack, [{\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"inputs\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._inputs;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"outputs\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._outputs;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"curves\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._curves;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimTrack;\n\t}();\n\n\tvar AnimBinder = function () {\n\t\tfunction AnimBinder() {}\n\n\t\tAnimBinder.joinPath = function joinPath(pathSegments, character) {\n\t\t\tcharacter = character || '.';\n\n\t\t\tvar escape = function escape(string) {\n\t\t\t\treturn string.replace(/\\\\/g, '\\\\\\\\').replace(new RegExp('\\\\' + character, 'g'), '\\\\' + character);\n\t\t\t};\n\n\t\t\treturn pathSegments.map(escape).join(character);\n\t\t};\n\n\t\tAnimBinder.splitPath = function splitPath(path, character) {\n\t\t\tcharacter = character || '.';\n\t\t\tvar result = [];\n\t\t\tvar curr = \"\";\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < path.length) {\n\t\t\t\tvar c = path[i++];\n\n\t\t\t\tif (c === '\\\\' && i < path.length) {\n\t\t\t\t\tc = path[i++];\n\n\t\t\t\t\tif (c === '\\\\' || c === character) {\n\t\t\t\t\t\tcurr += c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurr += '\\\\' + c;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === character) {\n\t\t\t\t\tresult.push(curr);\n\t\t\t\t\tcurr = '';\n\t\t\t\t} else {\n\t\t\t\t\tcurr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (curr.length > 0) {\n\t\t\t\tresult.push(curr);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tAnimBinder.encode = function encode(locator) {\n\t\t\treturn AnimBinder.joinPath([AnimBinder.joinPath(Array.isArray(locator.entityPath) ? locator.entityPath : [locator.entityPath]), locator.component, AnimBinder.joinPath(Array.isArray(locator.propertyPath) ? locator.propertyPath : [locator.propertyPath])], '/');\n\t\t};\n\n\t\tAnimBinder.decode = function decode(locator) {\n\t\t\tvar locatorSections = AnimBinder.splitPath(locator, '/');\n\t\t\treturn {\n\t\t\t\tentityPath: AnimBinder.splitPath(locatorSections[0]),\n\t\t\t\tcomponent: locatorSections[1],\n\t\t\t\tpropertyPath: AnimBinder.splitPath(locatorSections[2])\n\t\t\t};\n\t\t};\n\n\t\tvar _proto = AnimBinder.prototype;\n\n\t\t_proto.resolve = function resolve(path) {\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.unresolve = function unresolve(path) {};\n\n\t\t_proto.update = function update(deltaTime) {};\n\n\t\treturn AnimBinder;\n\t}();\n\n\tvar INTERPOLATION_STEP = 0;\n\tvar INTERPOLATION_LINEAR = 1;\n\tvar INTERPOLATION_CUBIC = 2;\n\n\tvar DEFAULT_LOCALE = 'en-US';\n\tvar DEFAULT_LOCALE_FALLBACKS = {\n\t\t'en': 'en-US',\n\t\t'es': 'en-ES',\n\t\t'zh': 'zh-CN',\n\t\t'zh-HK': 'zh-TW',\n\t\t'zh-TW': 'zh-HK',\n\t\t'zh-MO': 'zh-HK',\n\t\t'fr': 'fr-FR',\n\t\t'de': 'de-DE',\n\t\t'it': 'it-IT',\n\t\t'ru': 'ru-RU',\n\t\t'ja': 'ja-JP'\n\t};\n\n\tvar PLURALS = {};\n\n\tfunction definePluralFn(locales, fn) {\n\t\tfor (var i = 0, len = locales.length; i < len; i++) {\n\t\t\tPLURALS[locales[i]] = fn;\n\t\t}\n\t}\n\n\tfunction getLang(locale) {\n\t\tvar idx = locale.indexOf('-');\n\n\t\tif (idx !== -1) {\n\t\t\treturn locale.substring(0, idx);\n\t\t}\n\n\t\treturn locale;\n\t}\n\n\tfunction replaceLang(locale, desiredLang) {\n\t\tvar idx = locale.indexOf('-');\n\n\t\tif (idx !== -1) {\n\t\t\treturn desiredLang + locale.substring(idx);\n\t\t}\n\n\t\treturn desiredLang;\n\t}\n\n\tfunction findAvailableLocale(desiredLocale, availableLocales) {\n\t\tif (availableLocales[desiredLocale]) {\n\t\t\treturn desiredLocale;\n\t\t}\n\n\t\tvar fallback = DEFAULT_LOCALE_FALLBACKS[desiredLocale];\n\n\t\tif (fallback && availableLocales[fallback]) {\n\t\t\treturn fallback;\n\t\t}\n\n\t\tvar lang = getLang(desiredLocale);\n\t\tfallback = DEFAULT_LOCALE_FALLBACKS[lang];\n\n\t\tif (availableLocales[fallback]) {\n\t\t\treturn fallback;\n\t\t}\n\n\t\tif (availableLocales[lang]) {\n\t\t\treturn lang;\n\t\t}\n\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\tdefinePluralFn(['ja', 'ko', 'th', 'vi', 'zh', 'id'], function (n) {\n\t\treturn 0;\n\t});\n\tdefinePluralFn(['fa', 'hi'], function (n) {\n\t\tif (n >= 0 && n <= 1) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t});\n\tdefinePluralFn(['fr', 'pt'], function (n) {\n\t\tif (n >= 0 && n < 2) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t});\n\tdefinePluralFn(['da'], function (n) {\n\t\tif (n === 1 || !Number.isInteger(n) && n >= 0 && n <= 1) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t});\n\tdefinePluralFn(['de', 'en', 'it', 'el', 'es', 'tr', 'fi', 'sv', 'nb', 'no', 'ur'], function (n) {\n\t\tif (n === 1) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t});\n\tdefinePluralFn(['ru', 'uk'], function (n) {\n\t\tif (Number.isInteger(n)) {\n\t\t\tvar mod10 = n % 10;\n\t\t\tvar mod100 = n % 100;\n\n\t\t\tif (mod10 === 1 && mod100 !== 11) {\n\t\t\t\treturn 0;\n\t\t\t} else if (mod10 >= 2 && mod10 <= 4 && (mod100 < 12 || mod100 > 14)) {\n\t\t\t\treturn 1;\n\t\t\t} else if (mod10 === 0 || mod10 >= 5 && mod10 <= 9 || mod100 >= 11 && mod100 <= 14) {\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t}\n\n\t\treturn 3;\n\t});\n\tdefinePluralFn(['pl'], function (n) {\n\t\tif (Number.isInteger(n)) {\n\t\t\tif (n === 1) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar mod10 = n % 10;\n\t\t\tvar mod100 = n % 100;\n\n\t\t\tif (mod10 >= 2 && mod10 <= 4 && (mod100 < 12 || mod100 > 14)) {\n\t\t\t\treturn 1;\n\t\t\t} else if (mod10 >= 0 && mod10 <= 1 || mod10 >= 5 && mod10 <= 9 || mod100 >= 12 && mod100 <= 14) {\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t}\n\n\t\treturn 3;\n\t});\n\tdefinePluralFn(['ar'], function (n) {\n\t\tif (n === 0) {\n\t\t\treturn 0;\n\t\t} else if (n === 1) {\n\t\t\treturn 1;\n\t\t} else if (n === 2) {\n\t\t\treturn 2;\n\t\t}\n\n\t\tif (Number.isInteger(n)) {\n\t\t\tvar mod100 = n % 100;\n\n\t\t\tif (mod100 >= 3 && mod100 <= 10) {\n\t\t\t\treturn 3;\n\t\t\t} else if (mod100 >= 11 && mod100 <= 99) {\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t}\n\n\t\treturn 5;\n\t});\n\tvar DEFAULT_PLURAL_FN = PLURALS[getLang(DEFAULT_LOCALE)];\n\n\tfunction getPluralFn(lang) {\n\t\treturn PLURALS[lang] || DEFAULT_PLURAL_FN;\n\t}\n\n\tvar ABSOLUTE_URL = new RegExp('^' + '\\\\s*' + '(?:' + '(?:' + '[a-z]+[a-z0-9\\\\-\\\\+\\\\.]*' + ':' + ')?' + '//' + '|' + 'data:' + '|blob:' + ')', 'i');\n\tvar ASSET_ANIMATION = 'animation';\n\tvar ASSET_AUDIO = 'audio';\n\tvar ASSET_IMAGE = 'image';\n\tvar ASSET_JSON = 'json';\n\tvar ASSET_MODEL = 'model';\n\tvar ASSET_MATERIAL = 'material';\n\tvar ASSET_TEXT = 'text';\n\tvar ASSET_TEXTURE = 'texture';\n\tvar ASSET_CUBEMAP = 'cubemap';\n\tvar ASSET_SHADER = 'shader';\n\tvar ASSET_CSS = 'css';\n\tvar ASSET_HTML = 'html';\n\tvar ASSET_SCRIPT = 'script';\n\tvar ASSET_CONTAINER = 'container';\n\n\tvar properties = [];\n\n\tvar AssetVariants = function () {\n\t\tfunction AssetVariants(asset) {\n\t\t\tthis.asset = asset;\n\t\t}\n\n\t\tvar _proto = AssetVariants.prototype;\n\n\t\t_proto.clear = function clear() {\n\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\tthis[properties[i]] = null;\n\t\t\t}\n\t\t};\n\n\t\treturn AssetVariants;\n\t}();\n\n\tfunction defineVariantProperty(name) {\n\t\tvar field = '_' + name;\n\t\tproperties.push(field);\n\t\tObject.defineProperty(AssetVariants.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[field] || null;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar fieldAsBool = !!this[field];\n\t\t\t\tvar valueAsBool = !!value;\n\n\t\t\t\tif (fieldAsBool !== valueAsBool || this[field] && value && this[field].hash !== value.hash) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tthis[field] = {\n\t\t\t\t\t\t\turl: value.url,\n\t\t\t\t\t\t\tfilename: value.filename,\n\t\t\t\t\t\t\tsize: value.size,\n\t\t\t\t\t\t\thash: value.hash,\n\t\t\t\t\t\t\topt: value.opt || 0\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[field] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.asset.file) {\n\t\t\t\t\t\tthis.asset.fire('change', this.asset, 'file', this.asset._file, this.asset._file);\n\t\t\t\t\t\tthis.asset.reload();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdefineVariantProperty('dxt');\n\tdefineVariantProperty('pvr');\n\tdefineVariantProperty('etc1');\n\tdefineVariantProperty('etc2');\n\tdefineVariantProperty('basis');\n\n\tvar assetIdCounter = -1;\n\tvar VARIANT_SUPPORT = {\n\t\tpvr: 'extCompressedTexturePVRTC',\n\t\tdxt: 'extCompressedTextureS3TC',\n\t\tetc2: 'extCompressedTextureETC',\n\t\tetc1: 'extCompressedTextureETC1',\n\t\tbasis: 'canvas'\n\t};\n\tvar VARIANT_DEFAULT_PRIORITY = ['pvr', 'dxt', 'etc2', 'etc1', 'basis'];\n\n\tvar Asset = function (_EventHandler) {\n\t\t_inheritsLoose(Asset, _EventHandler);\n\n\t\tfunction Asset(name, type, file, data, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._id = assetIdCounter--;\n\t\t\t_this.name = name || '';\n\t\t\t_this.type = type;\n\t\t\t_this.tags = new Tags(_assertThisInitialized(_this));\n\t\t\t_this._preload = false;\n\t\t\t_this.variants = new AssetVariants(_assertThisInitialized(_this));\n\t\t\t_this._file = null;\n\t\t\t_this._data = data || {};\n\t\t\t_this.options = options || {};\n\t\t\t_this._resources = [];\n\t\t\t_this._i18n = {};\n\t\t\t_this.loaded = false;\n\t\t\t_this.loading = false;\n\t\t\t_this.registry = null;\n\t\t\tif (file) _this.file = file;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Asset.prototype;\n\n\t\t_proto.getFileUrl = function getFileUrl() {\n\t\t\tvar file = this.getPreferredFile();\n\t\t\tif (!file || !file.url) return null;\n\t\t\tvar url = file.url;\n\t\t\tif (this.registry && this.registry.prefix && !ABSOLUTE_URL.test(url)) url = this.registry.prefix + url;\n\n\t\t\tif (this.type !== 'script' && file.hash) {\n\t\t\t\tvar separator = url.indexOf('?') !== -1 ? '&' : '?';\n\t\t\t\turl += separator + 't=' + file.hash;\n\t\t\t}\n\n\t\t\treturn url;\n\t\t};\n\n\t\t_proto.getPreferredFile = function getPreferredFile() {\n\t\t\tif (!this.file) return null;\n\n\t\t\tif (this.type === 'texture' || this.type === 'textureatlas' || this.type === 'bundle') {\n\t\t\t\tvar app = this.registry._loader._app;\n\t\t\t\tvar device = app.graphicsDevice;\n\n\t\t\t\tfor (var i = 0, len = VARIANT_DEFAULT_PRIORITY.length; i < len; i++) {\n\t\t\t\t\tvar variant = VARIANT_DEFAULT_PRIORITY[i];\n\t\t\t\t\tif (!device[VARIANT_SUPPORT[variant]]) continue;\n\n\t\t\t\t\tif (this.file.variants[variant]) {\n\t\t\t\t\t\treturn this.file.variants[variant];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (app.enableBundles) {\n\t\t\t\t\t\tvar bundles = app.bundles.listBundlesForAsset(this);\n\t\t\t\t\t\tif (!bundles) continue;\n\n\t\t\t\t\t\tfor (var j = 0, len2 = bundles.length; j < len2; j++) {\n\t\t\t\t\t\t\tif (bundles[j].file && bundles[j].file.variants && bundles[j].file.variants[variant]) {\n\t\t\t\t\t\t\t\treturn this.file;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.file;\n\t\t};\n\n\t\t_proto.getAbsoluteUrl = function getAbsoluteUrl(relativePath) {\n\t\t\tvar base = path.getDirectory(this.file.url);\n\t\t\treturn path.join(base, relativePath);\n\t\t};\n\n\t\t_proto.getLocalizedAssetId = function getLocalizedAssetId(locale) {\n\t\t\tlocale = findAvailableLocale(locale, this._i18n);\n\t\t\treturn this._i18n[locale] || null;\n\t\t};\n\n\t\t_proto.addLocalizedAssetId = function addLocalizedAssetId(locale, assetId) {\n\t\t\tthis._i18n[locale] = assetId;\n\t\t\tthis.fire('add:localized', locale, assetId);\n\t\t};\n\n\t\t_proto.removeLocalizedAssetId = function removeLocalizedAssetId(locale) {\n\t\t\tvar assetId = this._i18n[locale];\n\n\t\t\tif (assetId) {\n\t\t\t\tdelete this._i18n[locale];\n\t\t\t\tthis.fire('remove:localized', locale, assetId);\n\t\t\t}\n\t\t};\n\n\t\t_proto.ready = function ready(callback, scope) {\n\t\t\tscope = scope || this;\n\n\t\t\tif (this.resource) {\n\t\t\t\tcallback.call(scope, this);\n\t\t\t} else {\n\t\t\t\tthis.once(\"load\", function (asset) {\n\t\t\t\t\tcallback.call(scope, asset);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto.reload = function reload() {\n\t\t\tif (this.loaded) {\n\t\t\t\tthis.loaded = false;\n\t\t\t\tthis.registry.load(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.unload = function unload() {\n\t\t\tif (!this.loaded && this._resources.length === 0) return;\n\t\t\tthis.fire('unload', this);\n\t\t\tthis.registry.fire('unload:' + this.id, this);\n\t\t\tvar old = this._resources;\n\t\t\tthis.resources = [];\n\t\t\tthis.loaded = false;\n\n\t\t\tif (this.file) {\n\t\t\t\tthis.registry._loader.clearCache(this.getFileUrl(), this.type);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < old.length; ++i) {\n\t\t\t\tvar resource = old[i];\n\n\t\t\t\tif (resource && resource.destroy) {\n\t\t\t\t\tresource.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(Asset, [{\n\t\t\tkey: \"id\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._id;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._id = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"file\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._file;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar key;\n\t\t\t\tvar valueAsBool = !!value;\n\t\t\t\tvar fileAsBool = !!this._file;\n\n\t\t\t\tif (valueAsBool !== fileAsBool || value && this._file && value.hash !== this._file) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tif (!this._file) this._file = {};\n\t\t\t\t\t\tthis._file.url = value.url;\n\t\t\t\t\t\tthis._file.filename = value.filename;\n\t\t\t\t\t\tthis._file.hash = value.hash;\n\t\t\t\t\t\tthis._file.size = value.size;\n\t\t\t\t\t\tthis._file.variants = this.variants;\n\t\t\t\t\t\tthis._file.contents = value.contents;\n\n\t\t\t\t\t\tif (value.hasOwnProperty('variants')) {\n\t\t\t\t\t\t\tthis.variants.clear();\n\n\t\t\t\t\t\t\tif (value.variants) {\n\t\t\t\t\t\t\t\tfor (key in value.variants) {\n\t\t\t\t\t\t\t\t\tif (!value.variants[key]) continue;\n\t\t\t\t\t\t\t\t\tthis.variants[key] = value.variants[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.fire('change', this, 'file', this._file, this._file);\n\t\t\t\t\t\tthis.reload();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._file = null;\n\t\t\t\t\t\tthis.variants.clear();\n\t\t\t\t\t}\n\t\t\t\t} else if (value && this._file && value.hasOwnProperty('variants')) {\n\t\t\t\t\tthis.variants.clear();\n\n\t\t\t\t\tif (value.variants) {\n\t\t\t\t\t\tfor (key in value.variants) {\n\t\t\t\t\t\t\tif (!value.variants[key]) continue;\n\t\t\t\t\t\t\tthis.variants[key] = value.variants[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"data\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._data;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar old = this._data;\n\t\t\t\tthis._data = value;\n\n\t\t\t\tif (value !== old) {\n\t\t\t\t\tthis.fire('change', this, 'data', value, old);\n\t\t\t\t\tif (this.loaded) this.registry._loader.patch(this, this.registry);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"resource\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._resources[0];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _old = this._resources[0];\n\t\t\t\tthis._resources[0] = value;\n\t\t\t\tthis.fire('change', this, 'resource', value, _old);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"resources\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._resources;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _old = this._resources;\n\t\t\t\tthis._resources = value;\n\t\t\t\tthis.fire('change', this, 'resources', value, _old);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"preload\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._preload;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvalue = !!value;\n\t\t\t\tif (this._preload === value) return;\n\t\t\t\tthis._preload = value;\n\t\t\t\tif (this._preload && !this.loaded && !this.loading && this.registry) this.registry.load(this);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"loadFaces\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._loadFaces;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvalue = !!value;\n\n\t\t\t\tif (!this.hasOwnProperty('_loadFaces') || value !== this._loadFaces) {\n\t\t\t\t\tthis._loadFaces = value;\n\t\t\t\t\tif (this.loaded) this.registry._loader.patch(this, this.registry);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn Asset;\n\t}(EventHandler);\n\n\tvar isDataURI = function isDataURI(uri) {\n\t\treturn /^data:.*,.*$/i.test(uri);\n\t};\n\n\tvar getDataURIMimeType = function getDataURIMimeType(uri) {\n\t\treturn uri.substring(uri.indexOf(\":\") + 1, uri.indexOf(\";\"));\n\t};\n\n\tvar getNumComponents = function getNumComponents(accessorType) {\n\t\tswitch (accessorType) {\n\t\t\tcase 'SCALAR':\n\t\t\t\treturn 1;\n\n\t\t\tcase 'VEC2':\n\t\t\t\treturn 2;\n\n\t\t\tcase 'VEC3':\n\t\t\t\treturn 3;\n\n\t\t\tcase 'VEC4':\n\t\t\t\treturn 4;\n\n\t\t\tcase 'MAT2':\n\t\t\t\treturn 4;\n\n\t\t\tcase 'MAT3':\n\t\t\t\treturn 9;\n\n\t\t\tcase 'MAT4':\n\t\t\t\treturn 16;\n\n\t\t\tdefault:\n\t\t\t\treturn 3;\n\t\t}\n\t};\n\n\tvar getComponentType = function getComponentType(componentType) {\n\t\tswitch (componentType) {\n\t\t\tcase 5120:\n\t\t\t\treturn TYPE_INT8;\n\n\t\t\tcase 5121:\n\t\t\t\treturn TYPE_UINT8;\n\n\t\t\tcase 5122:\n\t\t\t\treturn TYPE_INT16;\n\n\t\t\tcase 5123:\n\t\t\t\treturn TYPE_UINT16;\n\n\t\t\tcase 5124:\n\t\t\t\treturn TYPE_INT32;\n\n\t\t\tcase 5125:\n\t\t\t\treturn TYPE_UINT32;\n\n\t\t\tcase 5126:\n\t\t\t\treturn TYPE_FLOAT32;\n\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t};\n\n\tvar getComponentSizeInBytes = function getComponentSizeInBytes(componentType) {\n\t\tswitch (componentType) {\n\t\t\tcase 5120:\n\t\t\t\treturn 1;\n\n\t\t\tcase 5121:\n\t\t\t\treturn 1;\n\n\t\t\tcase 5122:\n\t\t\t\treturn 2;\n\n\t\t\tcase 5123:\n\t\t\t\treturn 2;\n\n\t\t\tcase 5124:\n\t\t\t\treturn 4;\n\n\t\t\tcase 5125:\n\t\t\t\treturn 4;\n\n\t\t\tcase 5126:\n\t\t\t\treturn 4;\n\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t};\n\n\tvar getComponentDataType = function getComponentDataType(componentType) {\n\t\tswitch (componentType) {\n\t\t\tcase 5120:\n\t\t\t\treturn Int8Array;\n\n\t\t\tcase 5121:\n\t\t\t\treturn Uint8Array;\n\n\t\t\tcase 5122:\n\t\t\t\treturn Int16Array;\n\n\t\t\tcase 5123:\n\t\t\t\treturn Uint16Array;\n\n\t\t\tcase 5124:\n\t\t\t\treturn Int32Array;\n\n\t\t\tcase 5125:\n\t\t\t\treturn Uint32Array;\n\n\t\t\tcase 5126:\n\t\t\t\treturn Float32Array;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tvar gltfToEngineSemanticMap = {\n\t\t'POSITION': SEMANTIC_POSITION,\n\t\t'NORMAL': SEMANTIC_NORMAL,\n\t\t'TANGENT': SEMANTIC_TANGENT,\n\t\t'COLOR_0': SEMANTIC_COLOR,\n\t\t'JOINTS_0': SEMANTIC_BLENDINDICES,\n\t\t'WEIGHTS_0': SEMANTIC_BLENDWEIGHT,\n\t\t'TEXCOORD_0': SEMANTIC_TEXCOORD0,\n\t\t'TEXCOORD_1': SEMANTIC_TEXCOORD1\n\t};\n\n\tvar getAccessorData = function getAccessorData(gltfAccessor, bufferViews) {\n\t\tvar numComponents = getNumComponents(gltfAccessor.type);\n\t\tvar dataType = getComponentDataType(gltfAccessor.componentType);\n\n\t\tif (!dataType) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar result;\n\n\t\tif (gltfAccessor.sparse) {\n\t\t\tvar sparse = gltfAccessor.sparse;\n\t\t\tvar indicesAccessor = {\n\t\t\t\tcount: sparse.count,\n\t\t\t\ttype: \"SCALAR\"\n\t\t\t};\n\t\t\tvar indices = getAccessorData(Object.assign(indicesAccessor, sparse.indices), bufferViews);\n\t\t\tvar valuesAccessor = {\n\t\t\t\tcount: sparse.count,\n\t\t\t\ttype: gltfAccessor.scalar,\n\t\t\t\tcomponentType: gltfAccessor.componentType\n\t\t\t};\n\t\t\tvar values = getAccessorData(Object.assign(valuesAccessor, sparse.values), bufferViews);\n\n\t\t\tif (gltfAccessor.hasOwnProperty('bufferView')) {\n\t\t\t\tvar baseAccessor = {\n\t\t\t\t\tbufferView: gltfAccessor.bufferView,\n\t\t\t\t\tbyteOffset: gltfAccessor.byteOffset,\n\t\t\t\t\tcomponentType: gltfAccessor.componentType,\n\t\t\t\t\tcount: gltfAccessor.count,\n\t\t\t\t\ttype: gltfAccessor.type\n\t\t\t\t};\n\t\t\t\tresult = getAccessorData(baseAccessor, bufferViews).slice();\n\t\t\t} else {\n\t\t\t\tresult = new dataType(gltfAccessor.count * numComponents);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < sparse.count; ++i) {\n\t\t\t\tvar targetIndex = indices[i];\n\n\t\t\t\tfor (var j = 0; j < numComponents; ++j) {\n\t\t\t\t\tresult[targetIndex * numComponents + j] = values[i * numComponents + j];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar bufferView = bufferViews[gltfAccessor.bufferView];\n\t\t\tresult = new dataType(bufferView.buffer, bufferView.byteOffset + (gltfAccessor.hasOwnProperty('byteOffset') ? gltfAccessor.byteOffset : 0), gltfAccessor.count * numComponents);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tvar getPrimitiveType = function getPrimitiveType(primitive) {\n\t\tif (!primitive.hasOwnProperty('mode')) {\n\t\t\treturn PRIMITIVE_TRIANGLES;\n\t\t}\n\n\t\tswitch (primitive.mode) {\n\t\t\tcase 0:\n\t\t\t\treturn PRIMITIVE_POINTS;\n\n\t\t\tcase 1:\n\t\t\t\treturn PRIMITIVE_LINES;\n\n\t\t\tcase 2:\n\t\t\t\treturn PRIMITIVE_LINELOOP;\n\n\t\t\tcase 3:\n\t\t\t\treturn PRIMITIVE_LINESTRIP;\n\n\t\t\tcase 4:\n\t\t\t\treturn PRIMITIVE_TRIANGLES;\n\n\t\t\tcase 5:\n\t\t\t\treturn PRIMITIVE_TRISTRIP;\n\n\t\t\tcase 6:\n\t\t\t\treturn PRIMITIVE_TRIFAN;\n\n\t\t\tdefault:\n\t\t\t\treturn PRIMITIVE_TRIANGLES;\n\t\t}\n\t};\n\n\tvar generateIndices = function generateIndices(numVertices) {\n\t\tvar dummyIndices = new Uint16Array(numVertices);\n\n\t\tfor (var i = 0; i < numVertices; i++) {\n\t\t\tdummyIndices[i] = i;\n\t\t}\n\n\t\treturn dummyIndices;\n\t};\n\n\tvar generateNormals = function generateNormals(sourceDesc, indices) {\n\t\tvar p = sourceDesc[SEMANTIC_POSITION];\n\n\t\tif (!p || p.components !== 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar positions;\n\n\t\tif (p.size !== p.stride) {\n\t\t\tvar srcStride = p.stride / typedArrayTypesByteSize[p.type];\n\t\t\tvar src = new typedArrayTypes[p.type](p.buffer, p.offset, p.count * srcStride);\n\t\t\tpositions = new typedArrayTypes[p.type](p.count * 3);\n\n\t\t\tfor (var i = 0; i < p.count; ++i) {\n\t\t\t\tpositions[i * 3 + 0] = src[i * srcStride + 0];\n\t\t\t\tpositions[i * 3 + 1] = src[i * srcStride + 1];\n\t\t\t\tpositions[i * 3 + 2] = src[i * srcStride + 2];\n\t\t\t}\n\t\t} else {\n\t\t\tpositions = new typedArrayTypes[p.type](p.buffer, p.offset, p.count * 3);\n\t\t}\n\n\t\tvar numVertices = p.count;\n\n\t\tif (!indices) {\n\t\t\tindices = generateIndices(numVertices);\n\t\t}\n\n\t\tvar normalsTemp = calculateNormals(positions, indices);\n\t\tvar normals = new Float32Array(normalsTemp.length);\n\t\tnormals.set(normalsTemp);\n\t\tsourceDesc[SEMANTIC_NORMAL] = {\n\t\t\tbuffer: normals.buffer,\n\t\t\tsize: 12,\n\t\t\toffset: 0,\n\t\t\tstride: 12,\n\t\t\tcount: numVertices,\n\t\t\tcomponents: 3,\n\t\t\ttype: TYPE_FLOAT32\n\t\t};\n\t};\n\n\tvar flipTexCoordVs = function flipTexCoordVs(vertexBuffer) {\n\t\tvar i, j;\n\t\tvar floatOffsets = [];\n\t\tvar shortOffsets = [];\n\t\tvar byteOffsets = [];\n\n\t\tfor (i = 0; i < vertexBuffer.format.elements.length; ++i) {\n\t\t\tvar element = vertexBuffer.format.elements[i];\n\n\t\t\tif (element.name === SEMANTIC_TEXCOORD0 || element.name === SEMANTIC_TEXCOORD1) {\n\t\t\t\tswitch (element.dataType) {\n\t\t\t\t\tcase TYPE_FLOAT32:\n\t\t\t\t\t\tfloatOffsets.push({\n\t\t\t\t\t\t\toffset: element.offset / 4 + 1,\n\t\t\t\t\t\t\tstride: element.stride / 4\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TYPE_UINT16:\n\t\t\t\t\t\tshortOffsets.push({\n\t\t\t\t\t\t\toffset: element.offset / 2 + 1,\n\t\t\t\t\t\t\tstride: element.stride / 2\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TYPE_UINT8:\n\t\t\t\t\t\tbyteOffsets.push({\n\t\t\t\t\t\t\toffset: element.offset + 1,\n\t\t\t\t\t\t\tstride: element.stride\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar flip = function flip(offsets, type, one) {\n\t\t\tvar typedArray = new type(vertexBuffer.storage);\n\n\t\t\tfor (i = 0; i < offsets.length; ++i) {\n\t\t\t\tvar index = offsets[i].offset;\n\t\t\t\tvar stride = offsets[i].stride;\n\n\t\t\t\tfor (j = 0; j < vertexBuffer.numVertices; ++j) {\n\t\t\t\t\ttypedArray[index] = one - typedArray[index];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (floatOffsets.length > 0) {\n\t\t\tflip(floatOffsets, Float32Array, 1.0);\n\t\t}\n\n\t\tif (shortOffsets.length > 0) {\n\t\t\tflip(shortOffsets, Uint16Array, 65535);\n\t\t}\n\n\t\tif (byteOffsets.length > 0) {\n\t\t\tflip(byteOffsets, Uint8Array, 255);\n\t\t}\n\t};\n\n\tvar cloneTexture = function cloneTexture(texture) {\n\t\tvar shallowCopyLevels = function shallowCopyLevels(texture) {\n\t\t\tvar result = [];\n\n\t\t\tfor (var mip = 0; mip < texture._levels.length; ++mip) {\n\t\t\t\tvar level = [];\n\n\t\t\t\tif (texture.cubemap) {\n\t\t\t\t\tfor (var face = 0; face < 6; ++face) {\n\t\t\t\t\t\tlevel.push(texture._levels[mip][face]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlevel = texture._levels[mip];\n\t\t\t\t}\n\n\t\t\t\tresult.push(level);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tvar result = new pc.Texture(texture.device, texture);\n\t\tresult._levels = shallowCopyLevels(texture);\n\t\treturn result;\n\t};\n\n\tvar cloneTextureAsset = function cloneTextureAsset(src) {\n\t\tvar result = new pc.Asset(src.name + '_clone', src.type, src.file, src.data, src.options);\n\t\tresult.loaded = true;\n\t\tresult.resource = cloneTexture(src.resource);\n\t\tsrc.registry.add(result);\n\t\treturn result;\n\t};\n\n\tvar createVertexBufferInternal = function createVertexBufferInternal(device, sourceDesc, disableFlipV) {\n\t\tvar positionDesc = sourceDesc[SEMANTIC_POSITION];\n\t\tvar numVertices = positionDesc.count;\n\t\tvar vertexDesc = [];\n\n\t\tfor (var semantic in sourceDesc) {\n\t\t\tif (sourceDesc.hasOwnProperty(semantic)) {\n\t\t\t\tvertexDesc.push({\n\t\t\t\t\tsemantic: semantic,\n\t\t\t\t\tcomponents: sourceDesc[semantic].components,\n\t\t\t\t\ttype: sourceDesc[semantic].type,\n\t\t\t\t\tnormalize: !!sourceDesc[semantic].normalize\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar elementOrder = [SEMANTIC_POSITION, SEMANTIC_NORMAL, SEMANTIC_TANGENT, SEMANTIC_COLOR, SEMANTIC_BLENDINDICES, SEMANTIC_BLENDWEIGHT, SEMANTIC_TEXCOORD0, SEMANTIC_TEXCOORD1];\n\t\tvertexDesc.sort(function (lhs, rhs) {\n\t\t\tvar lhsOrder = elementOrder.indexOf(lhs.semantic);\n\t\t\tvar rhsOrder = elementOrder.indexOf(rhs.semantic);\n\t\t\treturn lhsOrder < rhsOrder ? -1 : rhsOrder < lhsOrder ? 1 : 0;\n\t\t});\n\t\tvar i, j, k;\n\t\tvar source, target, sourceOffset;\n\t\tvar vertexFormat = new VertexFormat(device, vertexDesc);\n\t\tvar isCorrectlyInterleaved = true;\n\n\t\tfor (i = 0; i < vertexFormat.elements.length; ++i) {\n\t\t\ttarget = vertexFormat.elements[i];\n\t\t\tsource = sourceDesc[target.name];\n\t\t\tsourceOffset = source.offset - positionDesc.offset;\n\n\t\t\tif (source.buffer !== positionDesc.buffer || source.stride !== target.stride || source.size !== target.size || sourceOffset !== target.offset) {\n\t\t\t\tisCorrectlyInterleaved = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar vertexBuffer = new VertexBuffer(device, vertexFormat, numVertices, BUFFER_STATIC);\n\t\tvar vertexData = vertexBuffer.lock();\n\t\tvar targetArray = new Uint32Array(vertexData);\n\t\tvar sourceArray;\n\n\t\tif (isCorrectlyInterleaved) {\n\t\t\tsourceArray = new Uint32Array(positionDesc.buffer, positionDesc.offset, numVertices * vertexBuffer.format.size / 4);\n\t\t\ttargetArray.set(sourceArray);\n\t\t} else {\n\t\t\tvar targetStride, sourceStride;\n\n\t\t\tfor (i = 0; i < vertexBuffer.format.elements.length; ++i) {\n\t\t\t\ttarget = vertexBuffer.format.elements[i];\n\t\t\t\ttargetStride = target.stride / 4;\n\t\t\t\tsource = sourceDesc[target.name];\n\t\t\t\tsourceArray = new Uint32Array(source.buffer, source.offset, source.count * source.stride / 4);\n\t\t\t\tsourceStride = source.stride / 4;\n\t\t\t\tvar src = 0;\n\t\t\t\tvar dst = target.offset / 4;\n\t\t\t\tvar kend = Math.floor((source.size + 3) / 4);\n\n\t\t\t\tfor (j = 0; j < numVertices; ++j) {\n\t\t\t\t\tfor (k = 0; k < kend; ++k) {\n\t\t\t\t\t\ttargetArray[dst + k] = sourceArray[src + k];\n\t\t\t\t\t}\n\n\t\t\t\t\tsrc += sourceStride;\n\t\t\t\t\tdst += targetStride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!disableFlipV) {\n\t\t\tflipTexCoordVs(vertexBuffer);\n\t\t}\n\n\t\tvertexBuffer.unlock();\n\t\treturn vertexBuffer;\n\t};\n\n\tvar createVertexBuffer = function createVertexBuffer(device, attributes, indices, accessors, bufferViews, disableFlipV, vertexBufferDict) {\n\t\tvar attrib,\n\t\t\t\tuseAttributes = {},\n\t\t\t\tattribIds = [];\n\n\t\tfor (attrib in attributes) {\n\t\t\tif (attributes.hasOwnProperty(attrib) && gltfToEngineSemanticMap.hasOwnProperty(attrib)) {\n\t\t\t\tuseAttributes[attrib] = attributes[attrib];\n\t\t\t\tattribIds.push(attrib + \":\" + attributes[attrib]);\n\t\t\t}\n\t\t}\n\n\t\tattribIds.sort();\n\t\tvar vbKey = attribIds.join();\n\t\tvar vb = vertexBufferDict[vbKey];\n\n\t\tif (!vb) {\n\t\t\tvar sourceDesc = {};\n\n\t\t\tfor (attrib in useAttributes) {\n\t\t\t\tvar accessor = accessors[attributes[attrib]];\n\t\t\t\tvar accessorData = getAccessorData(accessor, bufferViews);\n\t\t\t\tvar bufferView = bufferViews[accessor.bufferView];\n\t\t\t\tvar semantic = gltfToEngineSemanticMap[attrib];\n\t\t\t\tvar size = getNumComponents(accessor.type) * getComponentSizeInBytes(accessor.componentType);\n\t\t\t\tvar stride = bufferView.hasOwnProperty('byteStride') ? bufferView.byteStride : size;\n\t\t\t\tsourceDesc[semantic] = {\n\t\t\t\t\tbuffer: accessorData.buffer,\n\t\t\t\t\tsize: size,\n\t\t\t\t\toffset: accessorData.byteOffset,\n\t\t\t\t\tstride: stride,\n\t\t\t\t\tcount: accessor.count,\n\t\t\t\t\tcomponents: getNumComponents(accessor.type),\n\t\t\t\t\ttype: getComponentType(accessor.componentType),\n\t\t\t\t\tnormalize: accessor.normalized\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!sourceDesc.hasOwnProperty(SEMANTIC_NORMAL)) {\n\t\t\t\tgenerateNormals(sourceDesc, indices);\n\t\t\t}\n\n\t\t\tvb = createVertexBufferInternal(device, sourceDesc, disableFlipV);\n\t\t\tvertexBufferDict[vbKey] = vb;\n\t\t}\n\n\t\treturn vb;\n\t};\n\n\tvar createVertexBufferDraco = function createVertexBufferDraco(device, outputGeometry, extDraco, decoder, decoderModule, indices, disableFlipV) {\n\t\tvar numPoints = outputGeometry.num_points();\n\n\t\tvar extractDracoAttributeInfo = function extractDracoAttributeInfo(uniqueId) {\n\t\t\tvar attribute = decoder.GetAttributeByUniqueId(outputGeometry, uniqueId);\n\t\t\tvar numValues = numPoints * attribute.num_components();\n\t\t\tvar dracoFormat = attribute.data_type();\n\t\t\tvar ptr, values, componentSizeInBytes, storageType;\n\n\t\t\tswitch (dracoFormat) {\n\t\t\t\tcase decoderModule.DT_UINT8:\n\t\t\t\t\tstorageType = TYPE_UINT8;\n\t\t\t\t\tcomponentSizeInBytes = 1;\n\t\t\t\t\tptr = decoderModule._malloc(numValues * componentSizeInBytes);\n\t\t\t\t\tdecoder.GetAttributeDataArrayForAllPoints(outputGeometry, attribute, decoderModule.DT_UINT8, numValues * componentSizeInBytes, ptr);\n\t\t\t\t\tvalues = new Uint8Array(decoderModule.HEAPU8.buffer, ptr, numValues).slice();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase decoderModule.DT_UINT16:\n\t\t\t\t\tstorageType = TYPE_UINT16;\n\t\t\t\t\tcomponentSizeInBytes = 2;\n\t\t\t\t\tptr = decoderModule._malloc(numValues * componentSizeInBytes);\n\t\t\t\t\tdecoder.GetAttributeDataArrayForAllPoints(outputGeometry, attribute, decoderModule.DT_UINT16, numValues * componentSizeInBytes, ptr);\n\t\t\t\t\tvalues = new Uint16Array(decoderModule.HEAPU16.buffer, ptr, numValues).slice();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase decoderModule.DT_FLOAT32:\n\t\t\t\tdefault:\n\t\t\t\t\tstorageType = TYPE_FLOAT32;\n\t\t\t\t\tcomponentSizeInBytes = 4;\n\t\t\t\t\tptr = decoderModule._malloc(numValues * componentSizeInBytes);\n\t\t\t\t\tdecoder.GetAttributeDataArrayForAllPoints(outputGeometry, attribute, decoderModule.DT_FLOAT32, numValues * componentSizeInBytes, ptr);\n\t\t\t\t\tvalues = new Float32Array(decoderModule.HEAPF32.buffer, ptr, numValues).slice();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdecoderModule._free(ptr);\n\n\t\t\treturn {\n\t\t\t\tvalues: values,\n\t\t\t\tnumComponents: attribute.num_components(),\n\t\t\t\tcomponentSizeInBytes: componentSizeInBytes,\n\t\t\t\tstorageType: storageType,\n\t\t\t\tnormalized: attribute.normalized()\n\t\t\t};\n\t\t};\n\n\t\tvar sourceDesc = {};\n\t\tvar attributes = extDraco.attributes;\n\n\t\tfor (var attrib in attributes) {\n\t\t\tif (attributes.hasOwnProperty(attrib) && gltfToEngineSemanticMap.hasOwnProperty(attrib)) {\n\t\t\t\tvar semantic = gltfToEngineSemanticMap[attrib];\n\t\t\t\tvar attributeInfo = extractDracoAttributeInfo(attributes[attrib]);\n\t\t\t\tvar size = attributeInfo.numComponents * attributeInfo.componentSizeInBytes;\n\t\t\t\tsourceDesc[semantic] = {\n\t\t\t\t\tvalues: attributeInfo.values,\n\t\t\t\t\tbuffer: attributeInfo.values.buffer,\n\t\t\t\t\tsize: size,\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tstride: size,\n\t\t\t\t\tcount: numPoints,\n\t\t\t\t\tcomponents: attributeInfo.numComponents,\n\t\t\t\t\ttype: attributeInfo.storageType,\n\t\t\t\t\tnormalize: attributeInfo.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (!sourceDesc.hasOwnProperty(SEMANTIC_NORMAL)) {\n\t\t\tgenerateNormals(sourceDesc, indices);\n\t\t}\n\n\t\treturn createVertexBufferInternal(device, sourceDesc, disableFlipV);\n\t};\n\n\tvar createSkin = function createSkin(device, gltfSkin, accessors, bufferViews, nodes) {\n\t\tvar i, j, bindMatrix;\n\t\tvar joints = gltfSkin.joints;\n\t\tvar numJoints = joints.length;\n\t\tvar ibp = [];\n\n\t\tif (gltfSkin.hasOwnProperty('inverseBindMatrices')) {\n\t\t\tvar inverseBindMatrices = gltfSkin.inverseBindMatrices;\n\t\t\tvar ibmData = getAccessorData(accessors[inverseBindMatrices], bufferViews);\n\t\t\tvar ibmValues = [];\n\n\t\t\tfor (i = 0; i < numJoints; i++) {\n\t\t\t\tfor (j = 0; j < 16; j++) {\n\t\t\t\t\tibmValues[j] = ibmData[i * 16 + j];\n\t\t\t\t}\n\n\t\t\t\tbindMatrix = new Mat4();\n\t\t\t\tbindMatrix.set(ibmValues);\n\t\t\t\tibp.push(bindMatrix);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0; i < numJoints; i++) {\n\t\t\t\tbindMatrix = new Mat4();\n\t\t\t\tibp.push(bindMatrix);\n\t\t\t}\n\t\t}\n\n\t\tvar boneNames = [];\n\n\t\tfor (i = 0; i < numJoints; i++) {\n\t\t\tboneNames[i] = nodes[joints[i]].name;\n\t\t}\n\n\t\tvar skeleton = gltfSkin.skeleton;\n\t\tvar skin = new Skin(device, ibp, boneNames);\n\t\tskin.skeleton = nodes[skeleton];\n\t\tskin.bones = [];\n\n\t\tfor (i = 0; i < joints.length; i++) {\n\t\t\tskin.bones[i] = nodes[joints[i]];\n\t\t}\n\n\t\treturn skin;\n\t};\n\n\tvar tempMat = new Mat4();\n\tvar tempVec$1 = new Vec3();\n\n\tvar createMesh$1 = function createMesh(device, gltfMesh, accessors, bufferViews, callback, disableFlipV, vertexBufferDict) {\n\t\tvar meshes = [];\n\t\tgltfMesh.primitives.forEach(function (primitive) {\n\t\t\tvar primitiveType, vertexBuffer, numIndices;\n\t\t\tvar indices = null;\n\t\t\tvar mesh = new Mesh(device);\n\t\t\tvar canUseMorph = true;\n\n\t\t\tif (primitive.hasOwnProperty('extensions')) {\n\t\t\t\tvar extensions = primitive.extensions;\n\n\t\t\t\tif (extensions.hasOwnProperty('KHR_draco_mesh_compression')) {\n\t\t\t\t\tvar decoderModule = window.DracoDecoderModule;\n\n\t\t\t\t\tif (decoderModule) {\n\t\t\t\t\t\tvar extDraco = extensions.KHR_draco_mesh_compression;\n\n\t\t\t\t\t\tif (extDraco.hasOwnProperty('attributes')) {\n\t\t\t\t\t\t\tvar uint8Buffer = bufferViews[extDraco.bufferView];\n\t\t\t\t\t\t\tvar buffer = new decoderModule.DecoderBuffer();\n\t\t\t\t\t\t\tbuffer.Init(uint8Buffer, uint8Buffer.length);\n\t\t\t\t\t\t\tvar decoder = new decoderModule.Decoder();\n\t\t\t\t\t\t\tvar geometryType = decoder.GetEncodedGeometryType(buffer);\n\t\t\t\t\t\t\tvar outputGeometry, status;\n\n\t\t\t\t\t\t\tswitch (geometryType) {\n\t\t\t\t\t\t\t\tcase decoderModule.POINT_CLOUD:\n\t\t\t\t\t\t\t\t\tprimitiveType = PRIMITIVE_POINTS;\n\t\t\t\t\t\t\t\t\toutputGeometry = new decoderModule.PointCloud();\n\t\t\t\t\t\t\t\t\tstatus = decoder.DecodeBufferToPointCloud(buffer, outputGeometry);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase decoderModule.TRIANGULAR_MESH:\n\t\t\t\t\t\t\t\t\tprimitiveType = PRIMITIVE_TRIANGLES;\n\t\t\t\t\t\t\t\t\toutputGeometry = new decoderModule.Mesh();\n\t\t\t\t\t\t\t\t\tstatus = decoder.DecodeBufferToMesh(buffer, outputGeometry);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase decoderModule.INVALID_GEOMETRY_TYPE:\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!status || !status.ok() || outputGeometry.ptr == 0) {\n\t\t\t\t\t\t\t\tcallback(\"Failed to decode draco compressed asset: \" + (status ? status.error_msg() : 'Mesh asset - invalid draco compressed geometry type: ' + geometryType));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar numFaces = outputGeometry.num_faces();\n\n\t\t\t\t\t\t\tif (geometryType == decoderModule.TRIANGULAR_MESH) {\n\t\t\t\t\t\t\t\tvar bit32 = outputGeometry.num_points() > 65535;\n\t\t\t\t\t\t\t\tnumIndices = numFaces * 3;\n\t\t\t\t\t\t\t\tvar dataSize = numIndices * (bit32 ? 4 : 2);\n\n\t\t\t\t\t\t\t\tvar ptr = decoderModule._malloc(dataSize);\n\n\t\t\t\t\t\t\t\tif (bit32) {\n\t\t\t\t\t\t\t\t\tdecoder.GetTrianglesUInt32Array(outputGeometry, dataSize, ptr);\n\t\t\t\t\t\t\t\t\tindices = new Uint32Array(decoderModule.HEAPU32.buffer, ptr, numIndices).slice();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdecoder.GetTrianglesUInt16Array(outputGeometry, dataSize, ptr);\n\t\t\t\t\t\t\t\t\tindices = new Uint16Array(decoderModule.HEAPU16.buffer, ptr, numIndices).slice();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdecoderModule._free(ptr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvertexBuffer = createVertexBufferDraco(device, outputGeometry, extDraco, decoder, decoderModule, indices, disableFlipV);\n\t\t\t\t\t\t\tdecoderModule.destroy(outputGeometry);\n\t\t\t\t\t\t\tdecoderModule.destroy(decoder);\n\t\t\t\t\t\t\tdecoderModule.destroy(buffer);\n\t\t\t\t\t\t\tcanUseMorph = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!vertexBuffer) {\n\t\t\t\tindices = primitive.hasOwnProperty('indices') ? getAccessorData(accessors[primitive.indices], bufferViews) : null;\n\t\t\t\tvertexBuffer = createVertexBuffer(device, primitive.attributes, indices, accessors, bufferViews, disableFlipV, vertexBufferDict);\n\t\t\t\tprimitiveType = getPrimitiveType(primitive);\n\t\t\t}\n\n\t\t\tmesh.vertexBuffer = vertexBuffer;\n\t\t\tmesh.primitive[0].type = primitiveType;\n\t\t\tmesh.primitive[0].base = 0;\n\t\t\tmesh.primitive[0].indexed = indices !== null;\n\n\t\t\tif (indices !== null) {\n\t\t\t\tvar indexFormat;\n\n\t\t\t\tif (indices instanceof Uint8Array) {\n\t\t\t\t\tindexFormat = INDEXFORMAT_UINT8;\n\t\t\t\t} else if (indices instanceof Uint16Array) {\n\t\t\t\t\tindexFormat = INDEXFORMAT_UINT16;\n\t\t\t\t} else {\n\t\t\t\t\tindexFormat = INDEXFORMAT_UINT32;\n\t\t\t\t}\n\n\t\t\t\tif (indexFormat === INDEXFORMAT_UINT32 && !device.extUintElement) {\n\t\t\t\t\tindexFormat = INDEXFORMAT_UINT16;\n\t\t\t\t\tindices = new Uint16Array(indices);\n\t\t\t\t}\n\n\t\t\t\tvar indexBuffer = new IndexBuffer(device, indexFormat, indices.length, BUFFER_STATIC, indices);\n\t\t\t\tmesh.indexBuffer[0] = indexBuffer;\n\t\t\t\tmesh.primitive[0].count = indices.length;\n\t\t\t} else {\n\t\t\t\tmesh.primitive[0].count = vertexBuffer.numVertices;\n\t\t\t}\n\n\t\t\tmesh.materialIndex = primitive.material;\n\t\t\tvar accessor = accessors[primitive.attributes.POSITION];\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\t\t\tvar aabb = new BoundingBox(new Vec3((max[0] + min[0]) / 2, (max[1] + min[1]) / 2, (max[2] + min[2]) / 2), new Vec3((max[0] - min[0]) / 2, (max[1] - min[1]) / 2, (max[2] - min[2]) / 2));\n\t\t\tmesh.aabb = aabb;\n\n\t\t\tif (canUseMorph && primitive.hasOwnProperty('targets')) {\n\t\t\t\tvar targets = [];\n\t\t\t\tprimitive.targets.forEach(function (target, index) {\n\t\t\t\t\tvar options = {};\n\n\t\t\t\t\tif (target.hasOwnProperty('POSITION')) {\n\t\t\t\t\t\taccessor = accessors[target.POSITION];\n\t\t\t\t\t\toptions.deltaPositions = getAccessorData(accessor, bufferViews);\n\t\t\t\t\t\toptions.deltaPositionsType = getComponentType(accessor.componentType);\n\n\t\t\t\t\t\tif (accessor.hasOwnProperty('min') && accessor.hasOwnProperty('max')) {\n\t\t\t\t\t\t\toptions.aabb = new BoundingBox();\n\t\t\t\t\t\t\toptions.aabb.setMinMax(new Vec3(accessor.min), new Vec3(accessor.max));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target.hasOwnProperty('NORMAL')) {\n\t\t\t\t\t\taccessor = accessors[target.NORMAL];\n\t\t\t\t\t\toptions.deltaNormals = getAccessorData(accessor, bufferViews);\n\t\t\t\t\t\toptions.deltaNormalsType = getComponentType(accessor.componentType);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gltfMesh.hasOwnProperty('extras') && gltfMesh.extras.hasOwnProperty('targetNames')) {\n\t\t\t\t\t\toptions.name = gltfMesh.extras.targetNames[index];\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.name = targets.length.toString(10);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargets.push(new MorphTarget(options));\n\t\t\t\t});\n\t\t\t\tmesh.morph = new Morph(targets, device);\n\n\t\t\t\tif (gltfMesh.hasOwnProperty('weights')) {\n\t\t\t\t\tfor (var i = 0; i < gltfMesh.weights.length; ++i) {\n\t\t\t\t\t\ttargets[i].defaultWeight = gltfMesh.weights[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeshes.push(mesh);\n\t\t});\n\t\treturn meshes;\n\t};\n\n\tvar createMaterial = function createMaterial(gltfMaterial, textures, disableFlipV) {\n\t\tvar glossChunk = [\"#ifdef MAPFLOAT\", \"uniform float material_shininess;\", \"#endif\", \"\", \"#ifdef MAPTEXTURE\", \"uniform sampler2D texture_glossMap;\", \"#endif\", \"\", \"void getGlossiness() {\", \"\t\tdGlossiness = 1.0;\", \"\", \"#ifdef MAPFLOAT\", \"\t\tdGlossiness *= material_shininess;\", \"#endif\", \"\", \"#ifdef MAPTEXTURE\", \"\t\tdGlossiness *= texture2D(texture_glossMap, $UV).$CH;\", \"#endif\", \"\", \"#ifdef MAPVERTEX\", \"\t\tdGlossiness *= saturate(vVertexColor.$VC);\", \"#endif\", \"\", \"\t\tdGlossiness = 1.0 - dGlossiness;\", \"\", \"\t\tdGlossiness += 0.0000001;\", \"}\"].join('\\n');\n\t\tvar specularChunk = [\"#ifdef MAPCOLOR\", \"uniform vec3 material_specular;\", \"#endif\", \"\", \"#ifdef MAPTEXTURE\", \"uniform sampler2D texture_specularMap;\", \"#endif\", \"\", \"void getSpecularity() {\", \"\t\tdSpecularity = vec3(1.0);\", \"\", \"\t\t#ifdef MAPCOLOR\", \"\t\t\t\tdSpecularity *= material_specular;\", \"\t\t#endif\", \"\", \"\t\t#ifdef MAPTEXTURE\", \"\t\t\t\tvec3 srgb = texture2D(texture_specularMap, $UV).$CH;\", \"\t\t\t\tdSpecularity *= vec3(pow(srgb.r, 2.2), pow(srgb.g, 2.2), pow(srgb.b, 2.2));\", \"\t\t#endif\", \"\", \"\t\t#ifdef MAPVERTEX\", \"\t\t\t\tdSpecularity *= saturate(vVertexColor.$VC);\", \"\t\t#endif\", \"}\"].join('\\n');\n\t\tvar clearCoatGlossChunk = [\"#ifdef MAPFLOAT\", \"uniform float material_clearCoatGlossiness;\", \"#endif\", \"\", \"#ifdef MAPTEXTURE\", \"uniform sampler2D texture_clearCoatGlossMap;\", \"#endif\", \"\", \"void getClearCoatGlossiness() {\", \"\t\tccGlossiness = 1.0;\", \"\", \"#ifdef MAPFLOAT\", \"\t\tccGlossiness *= material_clearCoatGlossiness;\", \"#endif\", \"\", \"#ifdef MAPTEXTURE\", \"\t\tccGlossiness *= texture2D(texture_clearCoatGlossMap, $UV).$CH;\", \"#endif\", \"\", \"#ifdef MAPVERTEX\", \"\t\tccGlossiness *= saturate(vVertexColor.$VC);\", \"#endif\", \"\", \"\t\tccGlossiness = 1.0 - ccGlossiness;\", \"\", \"\t\tccGlossiness += 0.0000001;\", \"}\"].join('\\n');\n\t\tvar uvONE = [1, 1];\n\t\tvar uvZERO = [0, 0];\n\n\t\tvar extractTextureTransform = function extractTextureTransform(source, material, maps) {\n\t\t\tvar map;\n\t\t\tvar texCoord = source.texCoord;\n\n\t\t\tif (texCoord) {\n\t\t\t\tfor (map = 0; map < maps.length; ++map) {\n\t\t\t\t\tmaterial[maps[map] + 'MapUv'] = texCoord;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar scale = uvONE;\n\t\t\tvar offset = uvZERO;\n\t\t\tvar extensions = source.extensions;\n\n\t\t\tif (extensions) {\n\t\t\t\tvar textureTransformData = extensions.KHR_texture_transform;\n\n\t\t\t\tif (textureTransformData) {\n\t\t\t\t\tif (textureTransformData.scale) {\n\t\t\t\t\t\tscale = textureTransformData.scale;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (textureTransformData.offset) {\n\t\t\t\t\t\toffset = textureTransformData.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (map = 0; map < maps.length; ++map) {\n\t\t\t\tmaterial[maps[map] + 'MapTiling'] = new Vec2(scale[0], scale[1]);\n\t\t\t\tmaterial[maps[map] + 'MapOffset'] = new Vec2(offset[0], disableFlipV ? offset[1] : 1.0 - scale[1] - offset[1]);\n\t\t\t}\n\t\t};\n\n\t\tvar material = new StandardMaterial();\n\t\tmaterial.occludeSpecular = true;\n\t\tmaterial.diffuseTint = true;\n\t\tmaterial.diffuseVertexColor = true;\n\t\tmaterial.specularTint = true;\n\t\tmaterial.specularVertexColor = true;\n\n\t\tif (gltfMaterial.hasOwnProperty('name')) {\n\t\t\tmaterial.name = gltfMaterial.name;\n\t\t}\n\n\t\tvar color, texture;\n\n\t\tif (gltfMaterial.hasOwnProperty('extensions') && gltfMaterial.extensions.hasOwnProperty('KHR_materials_pbrSpecularGlossiness')) {\n\t\t\tvar specData = gltfMaterial.extensions.KHR_materials_pbrSpecularGlossiness;\n\n\t\t\tif (specData.hasOwnProperty('diffuseFactor')) {\n\t\t\t\tcolor = specData.diffuseFactor;\n\t\t\t\tmaterial.diffuse.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\n\t\t\t\tmaterial.opacity = color[3] != null ? color[3] : 1;\n\t\t\t} else {\n\t\t\t\tmaterial.diffuse.set(1, 1, 1);\n\t\t\t\tmaterial.opacity = 1;\n\t\t\t}\n\n\t\t\tif (specData.hasOwnProperty('diffuseTexture')) {\n\t\t\t\tvar diffuseTexture = specData.diffuseTexture;\n\t\t\t\ttexture = textures[diffuseTexture.index];\n\t\t\t\tmaterial.diffuseMap = texture;\n\t\t\t\tmaterial.diffuseMapChannel = 'rgb';\n\t\t\t\tmaterial.opacityMap = texture;\n\t\t\t\tmaterial.opacityMapChannel = 'a';\n\t\t\t\textractTextureTransform(diffuseTexture, material, ['diffuse', 'opacity']);\n\t\t\t}\n\n\t\t\tmaterial.useMetalness = false;\n\n\t\t\tif (specData.hasOwnProperty('specularFactor')) {\n\t\t\t\tcolor = specData.specularFactor;\n\t\t\t\tmaterial.specular.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\n\t\t\t} else {\n\t\t\t\tmaterial.specular.set(1, 1, 1);\n\t\t\t}\n\n\t\t\tif (specData.hasOwnProperty('glossinessFactor')) {\n\t\t\t\tmaterial.shininess = 100 * specData.glossinessFactor;\n\t\t\t} else {\n\t\t\t\tmaterial.shininess = 100;\n\t\t\t}\n\n\t\t\tif (specData.hasOwnProperty('specularGlossinessTexture')) {\n\t\t\t\tvar specularGlossinessTexture = specData.specularGlossinessTexture;\n\t\t\t\tmaterial.specularMap = material.glossMap = textures[specularGlossinessTexture.index];\n\t\t\t\tmaterial.specularMapChannel = 'rgb';\n\t\t\t\tmaterial.glossMapChannel = 'a';\n\t\t\t\textractTextureTransform(specularGlossinessTexture, material, ['gloss', 'metalness']);\n\t\t\t}\n\n\t\t\tmaterial.chunks.specularPS = specularChunk;\n\t\t} else if (gltfMaterial.hasOwnProperty('pbrMetallicRoughness')) {\n\t\t\tvar pbrData = gltfMaterial.pbrMetallicRoughness;\n\n\t\t\tif (pbrData.hasOwnProperty('baseColorFactor')) {\n\t\t\t\tcolor = pbrData.baseColorFactor;\n\t\t\t\tmaterial.diffuse.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\n\t\t\t\tmaterial.opacity = color[3];\n\t\t\t} else {\n\t\t\t\tmaterial.diffuse.set(1, 1, 1);\n\t\t\t\tmaterial.opacity = 1;\n\t\t\t}\n\n\t\t\tif (pbrData.hasOwnProperty('baseColorTexture')) {\n\t\t\t\tvar baseColorTexture = pbrData.baseColorTexture;\n\t\t\t\ttexture = textures[baseColorTexture.index];\n\t\t\t\tmaterial.diffuseMap = texture;\n\t\t\t\tmaterial.diffuseMapChannel = 'rgb';\n\t\t\t\tmaterial.opacityMap = texture;\n\t\t\t\tmaterial.opacityMapChannel = 'a';\n\t\t\t\textractTextureTransform(baseColorTexture, material, ['diffuse', 'opacity']);\n\t\t\t}\n\n\t\t\tmaterial.useMetalness = true;\n\n\t\t\tif (pbrData.hasOwnProperty('metallicFactor')) {\n\t\t\t\tmaterial.metalness = pbrData.metallicFactor;\n\t\t\t} else {\n\t\t\t\tmaterial.metalness = 1;\n\t\t\t}\n\n\t\t\tif (pbrData.hasOwnProperty('roughnessFactor')) {\n\t\t\t\tmaterial.shininess = 100 * pbrData.roughnessFactor;\n\t\t\t} else {\n\t\t\t\tmaterial.shininess = 100;\n\t\t\t}\n\n\t\t\tif (pbrData.hasOwnProperty('metallicRoughnessTexture')) {\n\t\t\t\tvar metallicRoughnessTexture = pbrData.metallicRoughnessTexture;\n\t\t\t\tmaterial.metalnessMap = material.glossMap = textures[metallicRoughnessTexture.index];\n\t\t\t\tmaterial.metalnessMapChannel = 'b';\n\t\t\t\tmaterial.glossMapChannel = 'g';\n\t\t\t\textractTextureTransform(metallicRoughnessTexture, material, ['gloss', 'metalness']);\n\t\t\t}\n\n\t\t\tmaterial.chunks.glossPS = glossChunk;\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('normalTexture')) {\n\t\t\tvar normalTexture = gltfMaterial.normalTexture;\n\t\t\tmaterial.normalMap = textures[normalTexture.index];\n\t\t\textractTextureTransform(normalTexture, material, ['normal']);\n\n\t\t\tif (normalTexture.hasOwnProperty('scale')) {\n\t\t\t\tmaterial.bumpiness = normalTexture.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('occlusionTexture')) {\n\t\t\tvar occlusionTexture = gltfMaterial.occlusionTexture;\n\t\t\tmaterial.aoMap = textures[occlusionTexture.index];\n\t\t\tmaterial.aoMapChannel = 'r';\n\t\t\textractTextureTransform(occlusionTexture, material, ['ao']);\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('emissiveFactor')) {\n\t\t\tcolor = gltfMaterial.emissiveFactor;\n\t\t\tmaterial.emissive.set(Math.pow(color[0], 1 / 2.2), Math.pow(color[1], 1 / 2.2), Math.pow(color[2], 1 / 2.2));\n\t\t\tmaterial.emissiveTint = true;\n\t\t} else {\n\t\t\tmaterial.emissive.set(0, 0, 0);\n\t\t\tmaterial.emissiveTint = false;\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('emissiveTexture')) {\n\t\t\tvar emissiveTexture = gltfMaterial.emissiveTexture;\n\t\t\tmaterial.emissiveMap = textures[emissiveTexture.index];\n\t\t\textractTextureTransform(emissiveTexture, material, ['emissive']);\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('alphaMode')) {\n\t\t\tswitch (gltfMaterial.alphaMode) {\n\t\t\t\tcase 'MASK':\n\t\t\t\t\tmaterial.blendType = BLEND_NONE;\n\n\t\t\t\t\tif (gltfMaterial.hasOwnProperty('alphaCutoff')) {\n\t\t\t\t\t\tmaterial.alphaTest = gltfMaterial.alphaCutoff;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmaterial.alphaTest = 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BLEND':\n\t\t\t\t\tmaterial.blendType = BLEND_NORMAL;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\tcase 'OPAQUE':\n\t\t\t\t\tmaterial.blendType = BLEND_NONE;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tmaterial.blendType = BLEND_NONE;\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('doubleSided')) {\n\t\t\tmaterial.twoSidedLighting = gltfMaterial.doubleSided;\n\t\t\tmaterial.cull = gltfMaterial.doubleSided ? CULLFACE_NONE : CULLFACE_BACK;\n\t\t} else {\n\t\t\tmaterial.twoSidedLighting = false;\n\t\t\tmaterial.cull = CULLFACE_BACK;\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('extensions') && gltfMaterial.extensions.hasOwnProperty('KHR_materials_clearcoat')) {\n\t\t\tvar ccData = gltfMaterial.extensions.KHR_materials_clearcoat;\n\n\t\t\tif (ccData.hasOwnProperty('clearcoatFactor')) {\n\t\t\t\tmaterial.clearCoat = ccData.clearcoatFactor * 0.25;\n\t\t\t} else {\n\t\t\t\tmaterial.clearCoat = 0;\n\t\t\t}\n\n\t\t\tif (ccData.hasOwnProperty('clearcoatTexture')) {\n\t\t\t\tvar clearcoatTexture = ccData.clearcoatTexture;\n\t\t\t\tmaterial.clearCoatMap = textures[clearcoatTexture.index];\n\t\t\t\tmaterial.clearCoatMapChannel = 'r';\n\t\t\t\textractTextureTransform(clearcoatTexture, material, ['clearCoat']);\n\t\t\t}\n\n\t\t\tif (ccData.hasOwnProperty('clearcoatRoughnessFactor')) {\n\t\t\t\tmaterial.clearCoatGlossiness = ccData.clearcoatRoughnessFactor;\n\t\t\t} else {\n\t\t\t\tmaterial.clearCoatGlossiness = 0;\n\t\t\t}\n\n\t\t\tif (ccData.hasOwnProperty('clearcoatRoughnessTexture')) {\n\t\t\t\tvar clearcoatRoughnessTexture = ccData.clearcoatRoughnessTexture;\n\t\t\t\tmaterial.clearCoatGlossMap = textures[clearcoatRoughnessTexture.index];\n\t\t\t\tmaterial.clearCoatGlossMapChannel = 'g';\n\t\t\t\textractTextureTransform(clearcoatRoughnessTexture, material, ['clearCoatGloss']);\n\t\t\t}\n\n\t\t\tif (ccData.hasOwnProperty('clearcoatNormalTexture')) {\n\t\t\t\tvar clearcoatNormalTexture = ccData.clearcoatNormalTexture;\n\t\t\t\tmaterial.clearCoatNormalMap = textures[clearcoatNormalTexture.index];\n\t\t\t\textractTextureTransform(clearcoatNormalTexture, material, ['clearCoatNormal']);\n\n\t\t\t\tif (clearcoatNormalTexture.hasOwnProperty('scale')) {\n\t\t\t\t\tmaterial.clearCoatBumpiness = clearcoatNormalTexture.scale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmaterial.chunks.clearCoatGlossPS = clearCoatGlossChunk;\n\t\t}\n\n\t\tif (gltfMaterial.hasOwnProperty('extensions') && gltfMaterial.extensions.hasOwnProperty('KHR_materials_unlit')) {\n\t\t\tmaterial.useLighting = false;\n\t\t\tmaterial.emissive.copy(material.diffuse);\n\t\t\tmaterial.emissiveTint = material.diffuseTint;\n\t\t\tmaterial.emissiveMap = material.diffuseMap;\n\t\t\tmaterial.emissiveMapUv = material.diffuseMapUv;\n\t\t\tmaterial.emissiveMapTiling.copy(material.diffuseMapTiling);\n\t\t\tmaterial.emissiveMapOffset.copy(material.diffuseMapOffset);\n\t\t\tmaterial.emissiveMapChannel = material.diffuseMapChannel;\n\t\t\tmaterial.emissiveVertexColor = material.diffuseVertexColor;\n\t\t\tmaterial.emissiveVertexColorChannel = material.diffuseVertexColorChannel;\n\t\t\tmaterial.diffuse.set(0, 0, 0);\n\t\t\tmaterial.diffuseTint = false;\n\t\t\tmaterial.diffuseMap = null;\n\t\t\tmaterial.diffuseVertexColor = false;\n\t\t}\n\n\t\tmaterial.update();\n\t\treturn material;\n\t};\n\n\tvar createAnimation = function createAnimation(gltfAnimation, animationIndex, gltfAccessors, bufferViews, nodes) {\n\t\tvar createAnimData = function createAnimData(gltfAccessor) {\n\t\t\tvar data = getAccessorData(gltfAccessor, bufferViews);\n\t\t\treturn new AnimData(getNumComponents(gltfAccessor.type), new data.constructor(data));\n\t\t};\n\n\t\tvar interpMap = {\n\t\t\t\"STEP\": INTERPOLATION_STEP,\n\t\t\t\"LINEAR\": INTERPOLATION_LINEAR,\n\t\t\t\"CUBICSPLINE\": INTERPOLATION_CUBIC\n\t\t};\n\t\tvar inputMap = {};\n\t\tvar inputs = [];\n\t\tvar outputMap = {};\n\t\tvar outputs = [];\n\t\tvar curves = [];\n\t\tvar i;\n\n\t\tfor (i = 0; i < gltfAnimation.samplers.length; ++i) {\n\t\t\tvar sampler = gltfAnimation.samplers[i];\n\n\t\t\tif (!inputMap.hasOwnProperty(sampler.input)) {\n\t\t\t\tinputMap[sampler.input] = inputs.length;\n\t\t\t\tinputs.push(createAnimData(gltfAccessors[sampler.input]));\n\t\t\t}\n\n\t\t\tif (!outputMap.hasOwnProperty(sampler.output)) {\n\t\t\t\toutputMap[sampler.output] = outputs.length;\n\t\t\t\toutputs.push(createAnimData(gltfAccessors[sampler.output]));\n\t\t\t}\n\n\t\t\tvar interpolation = sampler.hasOwnProperty('interpolation') && interpMap.hasOwnProperty(sampler.interpolation) ? interpMap[sampler.interpolation] : INTERPOLATION_LINEAR;\n\t\t\tcurves.push(new AnimCurve([], inputMap[sampler.input], outputMap[sampler.output], interpolation));\n\t\t}\n\n\t\tvar quatArrays = [];\n\t\tvar transformSchema = {\n\t\t\t'translation': 'localPosition',\n\t\t\t'rotation': 'localRotation',\n\t\t\t'scale': 'localScale',\n\t\t\t'weights': 'weights'\n\t\t};\n\n\t\tfor (i = 0; i < gltfAnimation.channels.length; ++i) {\n\t\t\tvar channel = gltfAnimation.channels[i];\n\t\t\tvar target = channel.target;\n\t\t\tvar curve = curves[channel.sampler];\n\n\t\t\tcurve._paths.push(AnimBinder.encode({\n\t\t\t\tentityPath: [nodes[target.node].path],\n\t\t\t\tcomponent: 'graph',\n\t\t\t\tpropertyPath: [transformSchema[target.path]]\n\t\t\t}));\n\n\t\t\tif (target.path.startsWith('rotation') && curve.interpolation !== INTERPOLATION_CUBIC) {\n\t\t\t\tquatArrays.push(curve.output);\n\t\t\t} else if (target.path.startsWith('weights')) {\n\t\t\t\toutputs[curve.output]._components = outputs[curve.output].data.length / inputs[curve.input].data.length;\n\t\t\t}\n\t\t}\n\n\t\tquatArrays.sort();\n\t\tvar prevIndex = null;\n\t\tvar data;\n\n\t\tfor (i = 0; i < quatArrays.length; ++i) {\n\t\t\tvar index = quatArrays[i];\n\n\t\t\tif (i === 0 || index !== prevIndex) {\n\t\t\t\tdata = outputs[index];\n\n\t\t\t\tif (data.components === 4) {\n\t\t\t\t\tvar d = data.data;\n\t\t\t\t\tvar len = d.length - 4;\n\n\t\t\t\t\tfor (var j = 0; j < len; j += 4) {\n\t\t\t\t\t\tvar dp = d[j + 0] * d[j + 4] + d[j + 1] * d[j + 5] + d[j + 2] * d[j + 6] + d[j + 3] * d[j + 7];\n\n\t\t\t\t\t\tif (dp < 0) {\n\t\t\t\t\t\t\td[j + 4] *= -1;\n\t\t\t\t\t\t\td[j + 5] *= -1;\n\t\t\t\t\t\t\td[j + 6] *= -1;\n\t\t\t\t\t\t\td[j + 7] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevIndex = index;\n\t\t\t}\n\t\t}\n\n\t\tvar duration = 0;\n\n\t\tfor (i = 0; i < inputs.length; i++) {\n\t\t\tdata = inputs[i]._data;\n\t\t\tduration = Math.max(duration, data.length === 0 ? 0 : data[data.length - 1]);\n\t\t}\n\n\t\treturn new AnimTrack(gltfAnimation.hasOwnProperty('name') ? gltfAnimation.name : \"animation_\" + animationIndex, duration, inputs, outputs, curves);\n\t};\n\n\tvar createNode = function createNode(gltfNode, nodeIndex) {\n\t\tvar entity = new GraphNode();\n\n\t\tif (gltfNode.hasOwnProperty('name') && gltfNode.name.length > 0) {\n\t\t\tentity.name = gltfNode.name;\n\t\t} else {\n\t\t\tentity.name = \"node_\" + nodeIndex;\n\t\t}\n\n\t\tif (gltfNode.hasOwnProperty('matrix')) {\n\t\t\ttempMat.data.set(gltfNode.matrix);\n\t\t\ttempMat.getTranslation(tempVec$1);\n\t\t\tentity.setLocalPosition(tempVec$1);\n\t\t\ttempMat.getEulerAngles(tempVec$1);\n\t\t\tentity.setLocalEulerAngles(tempVec$1);\n\t\t\ttempMat.getScale(tempVec$1);\n\t\t\tentity.setLocalScale(tempVec$1);\n\t\t}\n\n\t\tif (gltfNode.hasOwnProperty('rotation')) {\n\t\t\tvar r = gltfNode.rotation;\n\t\t\tentity.setLocalRotation(r[0], r[1], r[2], r[3]);\n\t\t}\n\n\t\tif (gltfNode.hasOwnProperty('translation')) {\n\t\t\tvar t = gltfNode.translation;\n\t\t\tentity.setLocalPosition(t[0], t[1], t[2]);\n\t\t}\n\n\t\tif (gltfNode.hasOwnProperty('scale')) {\n\t\t\tvar s = gltfNode.scale;\n\t\t\tentity.setLocalScale(s[0], s[1], s[2]);\n\t\t}\n\n\t\treturn entity;\n\t};\n\n\tvar createSkins = function createSkins(device, gltf, nodes, bufferViews) {\n\t\tif (!gltf.hasOwnProperty('skins') || gltf.skins.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn gltf.skins.map(function (gltfSkin) {\n\t\t\treturn createSkin(device, gltfSkin, gltf.accessors, bufferViews, nodes);\n\t\t});\n\t};\n\n\tvar createMeshes = function createMeshes(device, gltf, bufferViews, callback, disableFlipV) {\n\t\tif (!gltf.hasOwnProperty('meshes') || gltf.meshes.length === 0 || !gltf.hasOwnProperty('accessors') || gltf.accessors.length === 0 || !gltf.hasOwnProperty('bufferViews') || gltf.bufferViews.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar vertexBufferDict = {};\n\t\treturn gltf.meshes.map(function (gltfMesh) {\n\t\t\treturn createMesh$1(device, gltfMesh, gltf.accessors, bufferViews, callback, disableFlipV, vertexBufferDict);\n\t\t});\n\t};\n\n\tvar createMaterials = function createMaterials(gltf, textures, options, disableFlipV) {\n\t\tif (!gltf.hasOwnProperty('materials') || gltf.materials.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar preprocess = options && options.material && options.material.preprocess;\n\t\tvar process = options && options.material && options.material.process || createMaterial;\n\t\tvar postprocess = options && options.material && options.material.postprocess;\n\t\treturn gltf.materials.map(function (gltfMaterial) {\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfMaterial);\n\t\t\t}\n\n\t\t\tvar material = process(gltfMaterial, textures, disableFlipV);\n\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltfMaterial, material);\n\t\t\t}\n\n\t\t\treturn material;\n\t\t});\n\t};\n\n\tvar createAnimations = function createAnimations(gltf, nodes, bufferViews, options) {\n\t\tif (!gltf.hasOwnProperty('animations') || gltf.animations.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar preprocess = options && options.animation && options.animation.preprocess;\n\t\tvar postprocess = options && options.animation && options.animation.postprocess;\n\t\treturn gltf.animations.map(function (gltfAnimation, index) {\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfAnimation);\n\t\t\t}\n\n\t\t\tvar animation = createAnimation(gltfAnimation, index, gltf.accessors, bufferViews, nodes);\n\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltfAnimation, animation);\n\t\t\t}\n\n\t\t\treturn animation;\n\t\t});\n\t};\n\n\tvar createNodes = function createNodes(gltf, options) {\n\t\tif (!gltf.hasOwnProperty('nodes') || gltf.nodes.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar preprocess = options && options.node && options.node.preprocess;\n\t\tvar process = options && options.node && options.node.process || createNode;\n\t\tvar postprocess = options && options.node && options.node.postprocess;\n\t\tvar nodes = gltf.nodes.map(function (gltfNode, index) {\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfNode);\n\t\t\t}\n\n\t\t\tvar node = process(gltfNode, index);\n\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltfNode, node);\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\n\t\tfor (var i = 0; i < gltf.nodes.length; ++i) {\n\t\t\tvar gltfNode = gltf.nodes[i];\n\n\t\t\tif (gltfNode.hasOwnProperty('children')) {\n\t\t\t\tfor (var j = 0; j < gltfNode.children.length; ++j) {\n\t\t\t\t\tvar parent = nodes[i];\n\t\t\t\t\tvar child = nodes[gltfNode.children[j]];\n\n\t\t\t\t\tif (!child.parent) {\n\t\t\t\t\t\tparent.addChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn nodes;\n\t};\n\n\tvar createScenes = function createScenes(gltf, nodes) {\n\t\tvar scenes = [];\n\t\tvar count = gltf.scenes.length;\n\n\t\tif (count === 1 && gltf.scenes[0].nodes.length === 1) {\n\t\t\tvar nodeIndex = gltf.scenes[0].nodes[0];\n\t\t\tscenes.push(nodes[nodeIndex]);\n\t\t} else {\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar scene = gltf.scenes[i];\n\t\t\t\tvar sceneRoot = new GraphNode(scene.name);\n\n\t\t\t\tfor (var n = 0; n < scene.nodes.length; n++) {\n\t\t\t\t\tvar childNode = nodes[scene.nodes[n]];\n\t\t\t\t\tsceneRoot.addChild(childNode);\n\t\t\t\t}\n\n\t\t\t\tscenes.push(sceneRoot);\n\t\t\t}\n\t\t}\n\n\t\treturn scenes;\n\t};\n\n\tvar createResources = function createResources(device, gltf, bufferViews, textureAssets, options, callback) {\n\t\tvar preprocess = options && options.global && options.global.preprocess;\n\t\tvar postprocess = options && options.global && options.global.postprocess;\n\n\t\tif (preprocess) {\n\t\t\tpreprocess(gltf);\n\t\t}\n\n\t\tvar disableFlipV = gltf.asset && gltf.asset.generator === 'PlayCanvas';\n\t\tvar nodes = createNodes(gltf, options);\n\t\tvar scenes = createScenes(gltf, nodes);\n\t\tvar animations = createAnimations(gltf, nodes, bufferViews, options);\n\t\tvar materials = createMaterials(gltf, textureAssets.map(function (textureAsset) {\n\t\t\treturn textureAsset.resource;\n\t\t}), options, disableFlipV);\n\t\tvar meshes = createMeshes(device, gltf, bufferViews, callback, disableFlipV);\n\t\tvar skins = createSkins(device, gltf, nodes, bufferViews);\n\t\tvar result = {\n\t\t\t'gltf': gltf,\n\t\t\t'nodes': nodes,\n\t\t\t'scenes': scenes,\n\t\t\t'animations': animations,\n\t\t\t'textures': textureAssets,\n\t\t\t'materials': materials,\n\t\t\t'meshes': meshes,\n\t\t\t'skins': skins\n\t\t};\n\n\t\tif (postprocess) {\n\t\t\tpostprocess(gltf, result);\n\t\t}\n\n\t\tcallback(null, result);\n\t};\n\n\tvar applySampler = function applySampler(texture, gltfSampler) {\n\t\tvar defaultSampler = {\n\t\t\tmagFilter: 9729,\n\t\t\tminFilter: 9987,\n\t\t\twrapS: 10497,\n\t\t\twrapT: 10497\n\t\t};\n\n\t\tvar getFilter = function getFilter(filter) {\n\t\t\tswitch (filter) {\n\t\t\t\tcase 9728:\n\t\t\t\t\treturn FILTER_NEAREST;\n\n\t\t\t\tcase 9729:\n\t\t\t\t\treturn FILTER_LINEAR;\n\n\t\t\t\tcase 9984:\n\t\t\t\t\treturn FILTER_NEAREST_MIPMAP_NEAREST;\n\n\t\t\t\tcase 9985:\n\t\t\t\t\treturn FILTER_LINEAR_MIPMAP_NEAREST;\n\n\t\t\t\tcase 9986:\n\t\t\t\t\treturn FILTER_NEAREST_MIPMAP_LINEAR;\n\n\t\t\t\tcase 9987:\n\t\t\t\t\treturn FILTER_LINEAR_MIPMAP_LINEAR;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn FILTER_LINEAR;\n\t\t\t}\n\t\t};\n\n\t\tvar getWrap = function getWrap(wrap) {\n\t\t\tswitch (wrap) {\n\t\t\t\tcase 33071:\n\t\t\t\t\treturn ADDRESS_CLAMP_TO_EDGE;\n\n\t\t\t\tcase 33648:\n\t\t\t\t\treturn ADDRESS_MIRRORED_REPEAT;\n\n\t\t\t\tcase 10497:\n\t\t\t\t\treturn ADDRESS_REPEAT;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn ADDRESS_REPEAT;\n\t\t\t}\n\t\t};\n\n\t\tif (texture) {\n\t\t\tgltfSampler = gltfSampler || defaultSampler;\n\t\t\ttexture.minFilter = getFilter(gltfSampler.minFilter);\n\t\t\ttexture.magFilter = getFilter(gltfSampler.magFilter);\n\t\t\ttexture.addressU = getWrap(gltfSampler.wrapS);\n\t\t\ttexture.addressV = getWrap(gltfSampler.wrapT);\n\t\t}\n\t};\n\n\tvar loadImageAsync = function loadImageAsync(gltfImage, index, bufferViews, urlBase, registry, options, callback) {\n\t\tvar preprocess = options && options.image && options.image.preprocess;\n\n\t\tvar processAsync = options && options.image && options.image.processAsync || function (gltfImage, callback) {\n\t\t\tcallback(null, null);\n\t\t};\n\n\t\tvar postprocess = options && options.image && options.image.postprocess;\n\n\t\tvar onLoad = function onLoad(textureAsset) {\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltfImage, textureAsset);\n\t\t\t}\n\n\t\t\tcallback(null, textureAsset);\n\t\t};\n\n\t\tvar loadTexture = function loadTexture(url, mimeType, crossOrigin, isBlobUrl) {\n\t\t\tvar mimeTypeFileExtensions = {\n\t\t\t\t'image/png': 'png',\n\t\t\t\t'image/jpeg': 'jpg',\n\t\t\t\t'image/basis': 'basis',\n\t\t\t\t'image/ktx': 'ktx',\n\t\t\t\t'image/vnd-ms.dds': 'dds'\n\t\t\t};\n\t\t\tvar file = {\n\t\t\t\turl: url\n\t\t\t};\n\n\t\t\tif (mimeType) {\n\t\t\t\tvar extension = mimeTypeFileExtensions[mimeType];\n\n\t\t\t\tif (extension) {\n\t\t\t\t\tfile.filename = 'glb-texture-' + index + '.' + extension;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar asset = new Asset('texture_' + index, 'texture', file, null, {\n\t\t\t\tcrossOrigin: crossOrigin\n\t\t\t});\n\t\t\tasset.on('load', function () {\n\t\t\t\tif (isBlobUrl) {\n\t\t\t\t\tURL.revokeObjectURL(url);\n\t\t\t\t}\n\n\t\t\t\tonLoad(asset);\n\t\t\t});\n\t\t\tasset.on('error', function (err, asset) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t\tregistry.add(asset);\n\t\t\tregistry.load(asset);\n\t\t};\n\n\t\tif (preprocess) {\n\t\t\tpreprocess(gltfImage);\n\t\t}\n\n\t\tprocessAsync(gltfImage, function (err, textureAsset) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err);\n\t\t\t} else if (textureAsset) {\n\t\t\t\tonLoad(textureAsset);\n\t\t\t} else {\n\t\t\t\tif (gltfImage.hasOwnProperty('uri')) {\n\t\t\t\t\tif (isDataURI(gltfImage.uri)) {\n\t\t\t\t\t\tloadTexture(gltfImage.uri, getDataURIMimeType(gltfImage.uri));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloadTexture(path.join(urlBase, gltfImage.uri), null, \"anonymous\");\n\t\t\t\t\t}\n\t\t\t\t} else if (gltfImage.hasOwnProperty('bufferView') && gltfImage.hasOwnProperty('mimeType')) {\n\t\t\t\t\tvar blob = new Blob([bufferViews[gltfImage.bufferView]], {\n\t\t\t\t\t\ttype: gltfImage.mimeType\n\t\t\t\t\t});\n\t\t\t\t\tloadTexture(URL.createObjectURL(blob), gltfImage.mimeType, null, true);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Invalid image found in gltf (neither uri or bufferView found). index=\" + index);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tvar loadTexturesAsync = function loadTexturesAsync(gltf, bufferViews, urlBase, registry, options, callback) {\n\t\tif (!gltf.hasOwnProperty('images') || gltf.images.length === 0 || !gltf.hasOwnProperty('textures') || gltf.textures.length === 0) {\n\t\t\tcallback(null, []);\n\t\t\treturn;\n\t\t}\n\n\t\tvar preprocess = options && options.texture && options.texture.preprocess;\n\n\t\tvar processAsync = options && options.texture && options.texture.processAsync || function (gltfTexture, gltfImages, callback) {\n\t\t\tcallback(null, null);\n\t\t};\n\n\t\tvar postprocess = options && options.texture && options.texture.postprocess;\n\t\tvar assets = [];\n\t\tvar textures = [];\n\t\tvar remaining = gltf.textures.length;\n\n\t\tvar onLoad = function onLoad(textureIndex, imageIndex) {\n\t\t\tif (!textures[imageIndex]) {\n\t\t\t\ttextures[imageIndex] = [];\n\t\t\t}\n\n\t\t\ttextures[imageIndex].push(textureIndex);\n\n\t\t\tif (--remaining === 0) {\n\t\t\t\tvar result = [];\n\t\t\t\ttextures.forEach(function (textureList, imageIndex) {\n\t\t\t\t\ttextureList.forEach(function (textureIndex, index) {\n\t\t\t\t\t\tvar textureAsset = index === 0 ? assets[imageIndex] : cloneTextureAsset(assets[imageIndex]);\n\t\t\t\t\t\tapplySampler(textureAsset.resource, (gltf.samplers || [])[gltf.textures[textureIndex].sampler]);\n\t\t\t\t\t\tresult[textureIndex] = textureAsset;\n\n\t\t\t\t\t\tif (postprocess) {\n\t\t\t\t\t\t\tpostprocess(gltf.textures[index], textureAsset);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tcallback(null, result);\n\t\t\t}\n\t\t};\n\n\t\tfor (var i = 0; i < gltf.textures.length; ++i) {\n\t\t\tvar gltfTexture = gltf.textures[i];\n\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfTexture);\n\t\t\t}\n\n\t\t\tprocessAsync(gltfTexture, gltf.images, function (i, gltfTexture, err, gltfImageIndex) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else {\n\t\t\t\t\tif (gltfImageIndex === undefined || gltfImageIndex === null) {\n\t\t\t\t\t\tgltfImageIndex = gltfTexture.source;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (assets[gltfImageIndex]) {\n\t\t\t\t\t\tonLoad(i, gltfImageIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar gltfImage = gltf.images[gltfImageIndex];\n\t\t\t\t\t\tloadImageAsync(gltfImage, i, bufferViews, urlBase, registry, options, function (err, textureAsset) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tassets[gltfImageIndex] = textureAsset;\n\t\t\t\t\t\t\t\tonLoad(i, gltfImageIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(null, i, gltfTexture));\n\t\t}\n\t};\n\n\tvar loadBuffersAsync = function loadBuffersAsync(gltf, binaryChunk, urlBase, options, callback) {\n\t\tvar result = [];\n\n\t\tif (!gltf.buffers || gltf.buffers.length === 0) {\n\t\t\tcallback(null, result);\n\t\t\treturn;\n\t\t}\n\n\t\tvar preprocess = options && options.buffer && options.buffer.preprocess;\n\n\t\tvar processAsync = options && options.buffer && options.buffer.processAsync || function (gltfBuffer, callback) {\n\t\t\tcallback(null, null);\n\t\t};\n\n\t\tvar postprocess = options && options.buffer && options.buffer.postprocess;\n\t\tvar remaining = gltf.buffers.length;\n\n\t\tvar onLoad = function onLoad(index, buffer) {\n\t\t\tresult[index] = buffer;\n\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltf.buffers[index], buffer);\n\t\t\t}\n\n\t\t\tif (--remaining === 0) {\n\t\t\t\tcallback(null, result);\n\t\t\t}\n\t\t};\n\n\t\tfor (var i = 0; i < gltf.buffers.length; ++i) {\n\t\t\tvar gltfBuffer = gltf.buffers[i];\n\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfBuffer);\n\t\t\t}\n\n\t\t\tprocessAsync(gltfBuffer, function (i, gltfBuffer, err, arrayBuffer) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (arrayBuffer) {\n\t\t\t\t\tonLoad(i, new Uint8Array(arrayBuffer));\n\t\t\t\t} else {\n\t\t\t\t\tif (gltfBuffer.hasOwnProperty('uri')) {\n\t\t\t\t\t\tif (isDataURI(gltfBuffer.uri)) {\n\t\t\t\t\t\t\tvar byteString = atob(gltfBuffer.uri.split(',')[1]);\n\t\t\t\t\t\t\tvar binaryArray = new Uint8Array(byteString.length);\n\n\t\t\t\t\t\t\tfor (var j = 0; j < byteString.length; j++) {\n\t\t\t\t\t\t\t\tbinaryArray[j] = byteString.charCodeAt(j);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tonLoad(i, binaryArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thttp.get(path.join(urlBase, gltfBuffer.uri), {\n\t\t\t\t\t\t\t\tcache: true,\n\t\t\t\t\t\t\t\tresponseType: 'arraybuffer',\n\t\t\t\t\t\t\t\tretry: false\n\t\t\t\t\t\t\t}, function (i, err, result) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tonLoad(i, new Uint8Array(result));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.bind(null, i));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonLoad(i, binaryChunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(null, i, gltfBuffer));\n\t\t}\n\t};\n\n\tvar parseGltf = function parseGltf(gltfChunk, callback) {\n\t\tvar decodeBinaryUtf8 = function decodeBinaryUtf8(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t}\n\n\t\t\tvar str = \"\";\n\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tstr += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\treturn decodeURIComponent(escape(str));\n\t\t};\n\n\t\tvar gltf = JSON.parse(decodeBinaryUtf8(gltfChunk));\n\n\t\tif (gltf.asset && gltf.asset.version && parseFloat(gltf.asset.version) < 2) {\n\t\t\tcallback(\"Invalid gltf version. Expected version 2.0 or above but found version '\" + gltf.asset.version + \"'.\");\n\t\t\treturn;\n\t\t}\n\n\t\tcallback(null, gltf);\n\t};\n\n\tvar parseGlb = function parseGlb(glbData, callback) {\n\t\tvar data = new DataView(glbData);\n\t\tvar magic = data.getUint32(0, true);\n\t\tvar version = data.getUint32(4, true);\n\t\tvar length = data.getUint32(8, true);\n\n\t\tif (magic !== 0x46546C67) {\n\t\t\tcallback(\"Invalid magic number found in glb header. Expected 0x46546C67, found 0x\" + magic.toString(16));\n\t\t\treturn;\n\t\t}\n\n\t\tif (version !== 2) {\n\t\t\tcallback(\"Invalid version number found in glb header. Expected 2, found \" + version);\n\t\t\treturn;\n\t\t}\n\n\t\tif (length <= 0 || length > glbData.byteLength) {\n\t\t\tcallback(\"Invalid length found in glb header. Found \" + length);\n\t\t\treturn;\n\t\t}\n\n\t\tvar chunks = [];\n\t\tvar offset = 12;\n\n\t\twhile (offset < length) {\n\t\t\tvar chunkLength = data.getUint32(offset, true);\n\n\t\t\tif (offset + chunkLength + 8 > glbData.byteLength) {\n\t\t\t\tthrow new Error(\"Invalid chunk length found in glb. Found \" + chunkLength);\n\t\t\t}\n\n\t\t\tvar chunkType = data.getUint32(offset + 4, true);\n\t\t\tvar chunkData = new Uint8Array(glbData, offset + 8, chunkLength);\n\t\t\tchunks.push({\n\t\t\t\tlength: chunkLength,\n\t\t\t\ttype: chunkType,\n\t\t\t\tdata: chunkData\n\t\t\t});\n\t\t\toffset += chunkLength + 8;\n\t\t}\n\n\t\tif (chunks.length !== 1 && chunks.length !== 2) {\n\t\t\tcallback(\"Invalid number of chunks found in glb file.\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (chunks[0].type !== 0x4E4F534A) {\n\t\t\tcallback(\"Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x\" + chunks[0].type.toString(16));\n\t\t\treturn;\n\t\t}\n\n\t\tif (chunks.length > 1 && chunks[1].type !== 0x004E4942) {\n\t\t\tcallback(\"Invalid chunk type found in glb file. Expected 0x004E4942, found 0x\" + chunks[1].type.toString(16));\n\t\t\treturn;\n\t\t}\n\n\t\tcallback(null, {\n\t\t\tgltfChunk: chunks[0].data,\n\t\t\tbinaryChunk: chunks.length === 2 ? chunks[1].data : null\n\t\t});\n\t};\n\n\tvar parseChunk = function parseChunk(filename, data, callback) {\n\t\tif (filename && filename.toLowerCase().endsWith('.glb')) {\n\t\t\tparseGlb(data, callback);\n\t\t} else {\n\t\t\tcallback(null, {\n\t\t\t\tgltfChunk: data,\n\t\t\t\tbinaryChunk: null\n\t\t\t});\n\t\t}\n\t};\n\n\tvar parseBufferViewsAsync = function parseBufferViewsAsync(gltf, buffers, options, callback) {\n\t\tvar result = [];\n\t\tvar preprocess = options && options.bufferView && options.bufferView.preprocess;\n\n\t\tvar processAsync = options && options.bufferView && options.bufferView.processAsync || function (gltfBufferView, buffers, callback) {\n\t\t\tcallback(null, null);\n\t\t};\n\n\t\tvar postprocess = options && options.bufferView && options.bufferView.postprocess;\n\t\tvar remaining = gltf.bufferViews ? gltf.bufferViews.length : 0;\n\n\t\tif (!remaining) {\n\t\t\tcallback(null, null);\n\t\t\treturn;\n\t\t}\n\n\t\tvar onLoad = function onLoad(index, bufferView) {\n\t\t\tvar gltfBufferView = gltf.bufferViews[index];\n\n\t\t\tif (gltfBufferView.hasOwnProperty('byteStride')) {\n\t\t\t\tbufferView.byteStride = gltfBufferView.byteStride;\n\t\t\t}\n\n\t\t\tresult[index] = bufferView;\n\n\t\t\tif (postprocess) {\n\t\t\t\tpostprocess(gltfBufferView, bufferView);\n\t\t\t}\n\n\t\t\tif (--remaining === 0) {\n\t\t\t\tcallback(null, result);\n\t\t\t}\n\t\t};\n\n\t\tfor (var i = 0; i < gltf.bufferViews.length; ++i) {\n\t\t\tvar gltfBufferView = gltf.bufferViews[i];\n\n\t\t\tif (preprocess) {\n\t\t\t\tpreprocess(gltfBufferView);\n\t\t\t}\n\n\t\t\tprocessAsync(gltfBufferView, buffers, function (i, gltfBufferView, err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (result) {\n\t\t\t\t\tonLoad(i, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar buffer = buffers[gltfBufferView.buffer];\n\t\t\t\t\tvar typedArray = new Uint8Array(buffer.buffer, buffer.byteOffset + (gltfBufferView.hasOwnProperty('byteOffset') ? gltfBufferView.byteOffset : 0), gltfBufferView.byteLength);\n\t\t\t\t\tonLoad(i, typedArray);\n\t\t\t\t}\n\t\t\t}.bind(null, i, gltfBufferView));\n\t\t}\n\t};\n\n\tvar GlbParser = function () {\n\t\tfunction GlbParser() {}\n\n\t\tGlbParser.parseAsync = function parseAsync(filename, urlBase, data, device, registry, options, callback) {\n\t\t\tparseChunk(filename, data, function (err, chunks) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tparseGltf(chunks.gltfChunk, function (err, gltf) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tloadBuffersAsync(gltf, chunks.binaryChunk, urlBase, options, function (err, buffers) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparseBufferViewsAsync(gltf, buffers, options, function (err, bufferViews) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tloadTexturesAsync(gltf, bufferViews, urlBase, registry, options, function (err, textureAssets) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcreateResources(device, gltf, bufferViews, textureAssets, options, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tGlbParser.parse = function parse(filename, data, device, options) {\n\t\t\tvar result = null;\n\t\t\toptions = options || {};\n\t\t\tparseChunk(filename, data, function (err, chunks) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t} else {\n\t\t\t\t\tparseGltf(chunks.gltfChunk, function (err, gltf) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparseBufferViewsAsync(gltf, [chunks.binaryChunk], options, function (err, bufferViews) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcreateResources(device, gltf, bufferViews, [], options, function (err, result_) {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tresult = result_;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\n\t\tGlbParser.createModel = function createModel(glb, defaultMaterial) {\n\t\t\tvar createMeshInstance = function createMeshInstance(model, mesh, skins, skinInstances, materials, node, gltfNode) {\n\t\t\t\tvar material = mesh.materialIndex === undefined ? defaultMaterial : materials[mesh.materialIndex];\n\t\t\t\tvar meshInstance = new MeshInstance(node, mesh, material);\n\n\t\t\t\tif (mesh.morph) {\n\t\t\t\t\tvar morphInstance = new MorphInstance(mesh.morph);\n\n\t\t\t\t\tif (mesh.weights) {\n\t\t\t\t\t\tfor (var wi = 0; wi < mesh.weights.length; wi++) {\n\t\t\t\t\t\t\tmorphInstance.setWeight(wi, mesh.weights[wi]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshInstance.morphInstance = morphInstance;\n\t\t\t\t\tmodel.morphInstances.push(morphInstance);\n\t\t\t\t}\n\n\t\t\t\tif (gltfNode.hasOwnProperty('skin')) {\n\t\t\t\t\tvar skinIndex = gltfNode.skin;\n\t\t\t\t\tvar skin = skins[skinIndex];\n\t\t\t\t\tmesh.skin = skin;\n\t\t\t\t\tvar skinInstance = skinInstances[skinIndex];\n\t\t\t\t\tmeshInstance.skinInstance = skinInstance;\n\t\t\t\t\tmodel.skinInstances.push(skinInstance);\n\t\t\t\t}\n\n\t\t\t\tmodel.meshInstances.push(meshInstance);\n\t\t\t};\n\n\t\t\tvar model = new Model();\n\t\t\tvar s,\n\t\t\t\t\tskinInstances = [];\n\n\t\t\tfor (s = 0; s < glb.skins.length; s++) {\n\t\t\t\tvar skinInstance = new SkinInstance(glb.skins[s]);\n\t\t\t\tskinInstance.bones = glb.skins[s].bones;\n\t\t\t\tskinInstances.push(skinInstance);\n\t\t\t}\n\n\t\t\tif (glb.scenes.length === 1) {\n\t\t\t\tmodel.graph = glb.scenes[0];\n\t\t\t} else {\n\t\t\t\tmodel.graph = new GraphNode('SceneGroup');\n\n\t\t\t\tfor (s = 0; s < glb.scenes.length; s++) {\n\t\t\t\t\tmodel.graph.addChild(glb.scenes[s]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < glb.nodes.length; i++) {\n\t\t\t\tvar node = glb.nodes[i];\n\n\t\t\t\tif (node.root === model.graph) {\n\t\t\t\t\tvar gltfNode = glb.gltf.nodes[i];\n\n\t\t\t\t\tif (gltfNode.hasOwnProperty('mesh')) {\n\t\t\t\t\t\tvar meshGroup = glb.meshes[gltfNode.mesh];\n\n\t\t\t\t\t\tfor (var mi = 0; mi < meshGroup.length; mi++) {\n\t\t\t\t\t\t\tcreateMeshInstance(model, meshGroup[mi], glb.skins, skinInstances, glb.materials, node, gltfNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn model;\n\t\t};\n\n\t\treturn GlbParser;\n\t}();\n\n\tvar AnimationHandler = function () {\n\t\tfunction AnimationHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = AnimationHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\n\t\t\tif (url.load.startsWith('blob:') || url.load.startsWith('data:')) {\n\t\t\t\tif (path.getExtension(url.original).toLowerCase() === '.glb') {\n\t\t\t\t\toptions.responseType = Http.ResponseType.ARRAY_BUFFER;\n\t\t\t\t} else {\n\t\t\t\t\toptions.responseType = Http.ResponseType.JSON;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(\"Error loading animation resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tif (path.getExtension(url).toLowerCase() === '.glb') {\n\t\t\t\tvar glb = GlbParser.parse(\"filename.glb\", data, null);\n\n\t\t\t\tif (!glb) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn glb.animations;\n\t\t\t}\n\n\t\t\treturn this[\"_parseAnimationV\" + data.animation.version](data);\n\t\t};\n\n\t\t_proto._parseAnimationV3 = function _parseAnimationV3(data) {\n\t\t\tvar animData = data.animation;\n\t\t\tvar anim = new Animation();\n\t\t\tanim.name = animData.name;\n\t\t\tanim.duration = animData.duration;\n\n\t\t\tfor (var i = 0; i < animData.nodes.length; i++) {\n\t\t\t\tvar node = new Node();\n\t\t\t\tvar n = animData.nodes[i];\n\t\t\t\tnode._name = n.name;\n\n\t\t\t\tfor (var j = 0; j < n.keys.length; j++) {\n\t\t\t\t\tvar k = n.keys[j];\n\t\t\t\t\tvar t = k.time;\n\t\t\t\t\tvar p = k.pos;\n\t\t\t\t\tvar r = k.rot;\n\t\t\t\t\tvar s = k.scale;\n\t\t\t\t\tvar pos = new Vec3(p[0], p[1], p[2]);\n\t\t\t\t\tvar rot = new Quat().setFromEulerAngles(r[0], r[1], r[2]);\n\t\t\t\t\tvar scl = new Vec3(s[0], s[1], s[2]);\n\t\t\t\t\tvar key = new Key(t, pos, rot, scl);\n\n\t\t\t\t\tnode._keys.push(key);\n\t\t\t\t}\n\n\t\t\t\tanim.addNode(node);\n\t\t\t}\n\n\t\t\treturn anim;\n\t\t};\n\n\t\t_proto._parseAnimationV4 = function _parseAnimationV4(data) {\n\t\t\tvar animData = data.animation;\n\t\t\tvar anim = new Animation();\n\t\t\tanim.name = animData.name;\n\t\t\tanim.duration = animData.duration;\n\n\t\t\tfor (var i = 0; i < animData.nodes.length; i++) {\n\t\t\t\tvar node = new Node();\n\t\t\t\tvar n = animData.nodes[i];\n\t\t\t\tnode._name = n.name;\n\t\t\t\tvar defPos = n.defaults.p;\n\t\t\t\tvar defRot = n.defaults.r;\n\t\t\t\tvar defScl = n.defaults.s;\n\n\t\t\t\tfor (var j = 0; j < n.keys.length; j++) {\n\t\t\t\t\tvar k = n.keys[j];\n\t\t\t\t\tvar t = k.t;\n\t\t\t\t\tvar p = defPos ? defPos : k.p;\n\t\t\t\t\tvar r = defRot ? defRot : k.r;\n\t\t\t\t\tvar s = defScl ? defScl : k.s;\n\t\t\t\t\tvar pos = new Vec3(p[0], p[1], p[2]);\n\t\t\t\t\tvar rot = new Quat().setFromEulerAngles(r[0], r[1], r[2]);\n\t\t\t\t\tvar scl = new Vec3(s[0], s[1], s[2]);\n\t\t\t\t\tvar key = new Key(t, pos, rot, scl);\n\n\t\t\t\t\tnode._keys.push(key);\n\t\t\t\t}\n\n\t\t\t\tanim.addNode(node);\n\t\t\t}\n\n\t\t\treturn anim;\n\t\t};\n\n\t\treturn AnimationHandler;\n\t}();\n\n\tvar AnimClipHandler = function () {\n\t\tfunction AnimClipHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = AnimClipHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\n\t\t\tif (url.load.startsWith('blob:')) {\n\t\t\t\toptions.responseType = Http.ResponseType.JSON;\n\t\t\t}\n\n\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(\"Error loading animation clip resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tvar name = data.name;\n\t\t\tvar duration = data.duration;\n\t\t\tvar inputs = data.inputs.map(function (input) {\n\t\t\t\treturn new AnimData(1, input);\n\t\t\t});\n\t\t\tvar outputs = data.outputs.map(function (output) {\n\t\t\t\treturn new AnimData(output.components, output.data);\n\t\t\t});\n\t\t\tvar curves = data.curves.map(function (curve) {\n\t\t\t\treturn new AnimCurve([curve.path], curve.inputIndex, curve.outputIndex, curve.interpolation);\n\t\t\t});\n\t\t\treturn new AnimTrack(name, duration, inputs, outputs, curves);\n\t\t};\n\n\t\treturn AnimClipHandler;\n\t}();\n\n\tvar AnimStateGraph = function () {\n\t\tfunction AnimStateGraph(data) {\n\t\t\tthis._layers = [];\n\t\t\tthis._parameters = {};\n\t\t\tvar i;\n\n\t\t\tif (!Array.isArray(data.layers)) {\n\t\t\t\tfor (var layerId in data.layers) {\n\t\t\t\t\tvar dataLayer = data.layers[layerId];\n\t\t\t\t\tvar layer = {\n\t\t\t\t\t\tname: dataLayer.name,\n\t\t\t\t\t\tstates: [],\n\t\t\t\t\t\ttransitions: []\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (i = 0; i < dataLayer.states.length; i++) {\n\t\t\t\t\t\tlayer.states.push(data.states[dataLayer.states[i]]);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < dataLayer.transitions.length; i++) {\n\t\t\t\t\t\tvar dataLayerTransition = data.transitions[dataLayer.transitions[i]];\n\n\t\t\t\t\t\tif (dataLayerTransition.conditions && !Array.isArray(dataLayerTransition.conditions)) {\n\t\t\t\t\t\t\tvar conditionKeys = Object.keys(dataLayerTransition.conditions);\n\t\t\t\t\t\t\tvar conditions = [];\n\n\t\t\t\t\t\t\tfor (var j = 0; j < conditionKeys.length; j++) {\n\t\t\t\t\t\t\t\tvar condition = dataLayerTransition.conditions[conditionKeys[j]];\n\n\t\t\t\t\t\t\t\tif (condition.parameterName) {\n\t\t\t\t\t\t\t\t\tconditions.push(condition);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdataLayerTransition.conditions = conditions;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Number.isInteger(dataLayerTransition.from)) {\n\t\t\t\t\t\t\tdataLayerTransition.from = data.states[dataLayerTransition.from].name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Number.isInteger(dataLayerTransition.to)) {\n\t\t\t\t\t\t\tdataLayerTransition.to = data.states[dataLayerTransition.to].name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer.transitions.push(dataLayerTransition);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._layers.push(layer);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._layers = data.layers;\n\t\t\t}\n\n\t\t\tfor (var paramId in data.parameters) {\n\t\t\t\tvar param = data.parameters[paramId];\n\t\t\t\tthis._parameters[param.name] = {\n\t\t\t\t\ttype: param.type,\n\t\t\t\t\tvalue: param.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t_createClass(AnimStateGraph, [{\n\t\t\tkey: \"parameters\",\n\t\t\tget: function get() {\n\t\t\t\treturn Object.assign({}, this._parameters);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimStateGraph;\n\t}();\n\n\tvar AnimStateGraphHandler = function () {\n\t\tfunction AnimStateGraphHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = AnimStateGraphHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\n\t\t\tif (url.load.startsWith('blob:')) {\n\t\t\t\toptions.responseType = Http.ResponseType.JSON;\n\t\t\t}\n\n\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(\"Error loading animation state graph resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn new AnimStateGraph(data);\n\t\t};\n\n\t\treturn AnimStateGraphHandler;\n\t}();\n\n\tvar Sound = function () {\n\t\tfunction Sound(resource) {\n\t\t\tif (resource instanceof Audio) {\n\t\t\t\tthis.audio = resource;\n\t\t\t} else {\n\t\t\t\tthis.buffer = resource;\n\t\t\t}\n\t\t}\n\n\t\t_createClass(Sound, [{\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\tvar duration = 0;\n\n\t\t\t\tif (this.buffer) {\n\t\t\t\t\tduration = this.buffer.duration;\n\t\t\t\t} else if (this.audio) {\n\t\t\t\t\tduration = this.audio.duration;\n\t\t\t\t}\n\n\t\t\t\treturn duration || 0;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Sound;\n\t}();\n\n\tvar ie = function () {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar ua = window.navigator.userAgent;\n\t\tvar msie = ua.indexOf('MSIE ');\n\n\t\tif (msie > 0) {\n\t\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t\t}\n\n\t\tvar trident = ua.indexOf('Trident/');\n\n\t\tif (trident > 0) {\n\t\t\tvar rv = ua.indexOf('rv:');\n\t\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t\t}\n\n\t\treturn false;\n\t}();\n\n\tvar toMIME = {\n\t\t'.ogg': 'audio/ogg',\n\t\t'.mp3': 'audio/mpeg',\n\t\t'.wav': 'audio/x-wav',\n\t\t'.mp4a': 'audio/mp4',\n\t\t'.m4a': 'audio/mp4',\n\t\t'.mp4': 'audio/mp4',\n\t\t'.aac': 'audio/aac'\n\t};\n\n\tvar AudioHandler = function () {\n\t\tfunction AudioHandler(manager) {\n\t\t\tthis.manager = manager;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = AudioHandler.prototype;\n\n\t\t_proto._isSupported = function _isSupported(url) {\n\t\t\tvar ext = path.getExtension(url);\n\n\t\t\tif (toMIME[ext]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar success = function success(resource) {\n\t\t\t\tcallback(null, new Sound(resource));\n\t\t\t};\n\n\t\t\tvar error = function error(err) {\n\t\t\t\tvar msg = 'Error loading audio url: ' + url.original;\n\n\t\t\t\tif (err) {\n\t\t\t\t\tmsg += ': ' + (err.message || err);\n\t\t\t\t}\n\n\t\t\t\tconsole.warn(msg);\n\t\t\t\tcallback(msg);\n\t\t\t};\n\n\t\t\tif (this._createSound) {\n\t\t\t\tif (!this._isSupported(url.original)) {\n\t\t\t\t\terror(\"Audio format for \" + url.original + \" not supported\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._createSound(url.load, success, error);\n\t\t\t} else {\n\t\t\t\terror(null);\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto._createSound = function _createSound(url, success, error) {\n\t\t\tif (hasAudioContext()) {\n\t\t\t\tvar manager = this.manager;\n\n\t\t\t\tif (!manager.context) {\n\t\t\t\t\terror('Audio manager has no audio context');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar options = {\n\t\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t\t};\n\n\t\t\t\tif (url.startsWith('blob:') || url.startsWith('data:')) {\n\t\t\t\t\toptions.responseType = Http.ResponseType.ARRAY_BUFFER;\n\t\t\t\t}\n\n\t\t\t\thttp.get(url, options, function (err, response) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\terror(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmanager.context.decodeAudioData(response, success, error);\n\t\t\t\t});\n\t\t\t} else if (hasAudio()) {\n\t\t\t\tvar audio = null;\n\n\t\t\t\ttry {\n\t\t\t\t\taudio = new Audio();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror(\"No support for Audio element\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ie) {\n\t\t\t\t\tdocument.body.appendChild(audio);\n\t\t\t\t}\n\n\t\t\t\tvar onReady = function onReady() {\n\t\t\t\t\taudio.removeEventListener('canplaythrough', onReady);\n\n\t\t\t\t\tif (ie) {\n\t\t\t\t\t\tdocument.body.removeChild(audio);\n\t\t\t\t\t}\n\n\t\t\t\t\tsuccess(audio);\n\t\t\t\t};\n\n\t\t\t\taudio.onerror = function () {\n\t\t\t\t\taudio.onerror = null;\n\n\t\t\t\t\tif (ie) {\n\t\t\t\t\t\tdocument.body.removeChild(audio);\n\t\t\t\t\t}\n\n\t\t\t\t\terror();\n\t\t\t\t};\n\n\t\t\t\taudio.addEventListener('canplaythrough', onReady);\n\t\t\t\taudio.src = url;\n\t\t\t}\n\t\t};\n\n\t\treturn AudioHandler;\n\t}();\n\n\tvar BinaryHandler = function () {\n\t\tfunction BinaryHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = BinaryHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tresponseType: Http.ResponseType.ARRAY_BUFFER,\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading binary resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn BinaryHandler;\n\t}();\n\n\tvar Bundle = function () {\n\t\tfunction Bundle(files) {\n\t\t\tthis._blobUrls = {};\n\n\t\t\tfor (var i = 0, len = files.length; i < len; i++) {\n\t\t\t\tif (files[i].url) {\n\t\t\t\t\tthis._blobUrls[files[i].name] = files[i].url;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Bundle.prototype;\n\n\t\t_proto.hasBlobUrl = function hasBlobUrl(url) {\n\t\t\treturn !!this._blobUrls[url];\n\t\t};\n\n\t\t_proto.getBlobUrl = function getBlobUrl(url) {\n\t\t\treturn this._blobUrls[url];\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tfor (var key in this._blobUrls) {\n\t\t\t\tURL.revokeObjectURL(this._blobUrls[key]);\n\t\t\t}\n\n\t\t\tthis._blobUrls = null;\n\t\t};\n\n\t\treturn Bundle;\n\t}();\n\n\tvar Untar;\n\n\tfunction UntarScope(isWorker) {\n\t\tvar utfDecoder;\n\t\tvar asciiDecoder;\n\n\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\tutfDecoder = new TextDecoder('utf-8');\n\t\t\tasciiDecoder = new TextDecoder('windows-1252');\n\t\t} else {\n\t\t\tconsole.warn('TextDecoder not supported - pc.Untar module will not work');\n\t\t}\n\n\t\tfunction PaxHeader(fields) {\n\t\t\tthis._fields = fields;\n\t\t}\n\n\t\tPaxHeader.parse = function (buffer, start, length) {\n\t\t\tvar paxArray = new Uint8Array(buffer, start, length);\n\t\t\tvar bytesRead = 0;\n\t\t\tvar fields = [];\n\n\t\t\twhile (bytesRead < length) {\n\t\t\t\tvar spaceIndex;\n\n\t\t\t\tfor (spaceIndex = bytesRead; spaceIndex < length; spaceIndex++) {\n\t\t\t\t\tif (paxArray[spaceIndex] == 0x20) break;\n\t\t\t\t}\n\n\t\t\t\tif (spaceIndex >= length) {\n\t\t\t\t\tthrow new Error('Invalid PAX header data format.');\n\t\t\t\t}\n\n\t\t\t\tvar fieldLength = parseInt(utfDecoder.decode(new Uint8Array(buffer, start + bytesRead, spaceIndex - bytesRead)), 10);\n\t\t\t\tvar fieldText = utfDecoder.decode(new Uint8Array(buffer, start + spaceIndex + 1, fieldLength - (spaceIndex - bytesRead) - 2));\n\t\t\t\tvar field = fieldText.split('=');\n\n\t\t\t\tif (field.length !== 2) {\n\t\t\t\t\tthrow new Error('Invalid PAX header data format.');\n\t\t\t\t}\n\n\t\t\t\tif (field[1].length === 0) {\n\t\t\t\t\tfield[1] = null;\n\t\t\t\t}\n\n\t\t\t\tfields.push({\n\t\t\t\t\tname: field[0],\n\t\t\t\t\tvalue: field[1]\n\t\t\t\t});\n\t\t\t\tbytesRead += fieldLength;\n\t\t\t}\n\n\t\t\treturn new PaxHeader(fields);\n\t\t};\n\n\t\tPaxHeader.prototype.applyHeader = function (file) {\n\t\t\tfor (var i = 0; i < this._fields.length; i++) {\n\t\t\t\tvar fieldName = this._fields[i].name;\n\t\t\t\tvar fieldValue = this._fields[i].value;\n\n\t\t\t\tif (fieldName === 'path') {\n\t\t\t\t\tfieldName = 'name';\n\t\t\t\t}\n\n\t\t\t\tif (fieldValue === null) {\n\t\t\t\t\tdelete file[fieldName];\n\t\t\t\t} else {\n\t\t\t\t\tfile[fieldName] = fieldValue;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfunction UntarInternal(arrayBuffer) {\n\t\t\tthis._arrayBuffer = arrayBuffer || new ArrayBuffer(0);\n\t\t\tthis._bufferView = new DataView(this._arrayBuffer);\n\t\t\tthis._globalPaxHeader = null;\n\t\t\tthis._paxHeader = null;\n\t\t\tthis._bytesRead = 0;\n\t\t}\n\n\t\tif (!isWorker) {\n\t\t\tUntar = UntarInternal;\n\t\t}\n\n\t\tUntarInternal.prototype._hasNext = function () {\n\t\t\treturn this._bytesRead + 4 < this._arrayBuffer.byteLength && this._bufferView.getUint32(this._bytesRead) !== 0;\n\t\t};\n\n\t\tUntarInternal.prototype._readNextFile = function () {\n\t\t\tvar headersDataView = new DataView(this._arrayBuffer, this._bytesRead, 512);\n\t\t\tvar headers = asciiDecoder.decode(headersDataView);\n\t\t\tthis._bytesRead += 512;\n\t\t\tvar name = headers.substr(0, 100).replace(/\\0/g, '');\n\t\t\tvar ustarFormat = headers.substr(257, 6);\n\t\t\tvar size = parseInt(headers.substr(124, 12), 8);\n\t\t\tvar type = headers.substr(156, 1);\n\t\t\tvar start = this._bytesRead;\n\t\t\tvar url = null;\n\t\t\tvar normalFile = false;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"0\":\n\t\t\t\tcase \"\":\n\t\t\t\t\tnormalFile = true;\n\n\t\t\t\t\tif (!isWorker) {\n\t\t\t\t\t\tvar blob = new Blob([this._arrayBuffer.slice(this._bytesRead, this._bytesRead + size)]);\n\t\t\t\t\t\turl = URL.createObjectURL(blob);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"g\":\n\t\t\t\t\tthis._globalPaxHeader = PaxHeader.parse(this._arrayBuffer, this._bytesRead, size);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\tthis._paxHeader = PaxHeader.parse(this._arrayBuffer, this._bytesRead, size);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._bytesRead += size;\n\t\t\tvar remainder = size % 512;\n\n\t\t\tif (remainder !== 0) {\n\t\t\t\tthis._bytesRead += 512 - remainder;\n\t\t\t}\n\n\t\t\tif (!normalFile) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (ustarFormat.indexOf(\"ustar\") !== -1) {\n\t\t\t\tvar namePrefix = headers.substr(345, 155).replace(/\\0/g, '');\n\n\t\t\t\tif (namePrefix.length > 0) {\n\t\t\t\t\tname = namePrefix.trim() + name.trim();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar file = {\n\t\t\t\tname: name,\n\t\t\t\tstart: start,\n\t\t\t\tsize: size,\n\t\t\t\turl: url\n\t\t\t};\n\n\t\t\tif (this._globalPaxHeader) {\n\t\t\t\tthis._globalPaxHeader.applyHeader(file);\n\t\t\t}\n\n\t\t\tif (this._paxHeader) {\n\t\t\t\tthis._paxHeader.applyHeader(file);\n\n\t\t\t\tthis._paxHeader = null;\n\t\t\t}\n\n\t\t\treturn file;\n\t\t};\n\n\t\tUntarInternal.prototype.untar = function (filenamePrefix) {\n\t\t\tif (!utfDecoder) {\n\t\t\t\tconsole.error('Cannot untar because TextDecoder interface is not available for this platform.');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tvar files = [];\n\n\t\t\twhile (this._hasNext()) {\n\t\t\t\tvar file = this._readNextFile();\n\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tif (filenamePrefix && file.name) {\n\t\t\t\t\tfile.name = filenamePrefix + file.name;\n\t\t\t\t}\n\n\t\t\t\tfiles.push(file);\n\t\t\t}\n\n\t\t\treturn files;\n\t\t};\n\n\t\tif (isWorker) {\n\t\t\tself.onmessage = function (e) {\n\t\t\t\tvar id = e.data.id;\n\n\t\t\t\ttry {\n\t\t\t\t\tvar archive = new UntarInternal(e.data.arrayBuffer);\n\t\t\t\t\tvar files = archive.untar(e.data.prefix);\n\t\t\t\t\tpostMessage({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tfiles: files,\n\t\t\t\t\t\tarrayBuffer: e.data.arrayBuffer\n\t\t\t\t\t}, [e.data.arrayBuffer]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tpostMessage({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\terror: err.toString()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tvar workerUrl = null;\n\n\tfunction getWorkerUrl() {\n\t\tif (!workerUrl) {\n\t\t\tvar code = '(' + UntarScope.toString() + ')(true)\\n\\n';\n\t\t\tvar blob = new Blob([code], {\n\t\t\t\ttype: 'application/javascript'\n\t\t\t});\n\t\t\tworkerUrl = URL.createObjectURL(blob);\n\t\t}\n\n\t\treturn workerUrl;\n\t}\n\n\tvar UntarWorker = function () {\n\t\tfunction UntarWorker(filenamePrefix) {\n\t\t\tthis._requestId = 0;\n\t\t\tthis._pendingRequests = {};\n\t\t\tthis._filenamePrefix = filenamePrefix;\n\t\t\tthis._worker = new Worker(getWorkerUrl());\n\n\t\t\tthis._worker.addEventListener('message', this._onMessage.bind(this));\n\t\t}\n\n\t\tvar _proto = UntarWorker.prototype;\n\n\t\t_proto._onMessage = function _onMessage(e) {\n\t\t\tvar id = e.data.id;\n\t\t\tif (!this._pendingRequests[id]) return;\n\t\t\tvar callback = this._pendingRequests[id];\n\t\t\tdelete this._pendingRequests[id];\n\n\t\t\tif (e.data.error) {\n\t\t\t\tcallback(e.data.error);\n\t\t\t} else {\n\t\t\t\tvar arrayBuffer = e.data.arrayBuffer;\n\n\t\t\t\tfor (var i = 0, len = e.data.files.length; i < len; i++) {\n\t\t\t\t\tvar file = e.data.files[i];\n\t\t\t\t\tvar blob = new Blob([arrayBuffer.slice(file.start, file.start + file.size)]);\n\t\t\t\t\tfile.url = URL.createObjectURL(blob);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, e.data.files);\n\t\t\t}\n\t\t};\n\n\t\t_proto.untar = function untar(arrayBuffer, callback) {\n\t\t\tvar id = this._requestId++;\n\t\t\tthis._pendingRequests[id] = callback;\n\n\t\t\tthis._worker.postMessage({\n\t\t\t\tid: id,\n\t\t\t\tprefix: this._filenamePrefix,\n\t\t\t\tarrayBuffer: arrayBuffer\n\t\t\t}, [arrayBuffer]);\n\t\t};\n\n\t\t_proto.hasPendingRequests = function hasPendingRequests() {\n\t\t\tfor (var key in this._pendingRequests) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this._worker) {\n\t\t\t\tthis._worker.terminate();\n\n\t\t\t\tthis._worker = null;\n\t\t\t\tthis._pendingRequests = null;\n\t\t\t}\n\t\t};\n\n\t\treturn UntarWorker;\n\t}();\n\n\tUntarScope();\n\n\tvar BundleHandler = function () {\n\t\tfunction BundleHandler(assets) {\n\t\t\tthis._assets = assets;\n\t\t\tthis._worker = null;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = BundleHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\thttp.get(url.load, {\n\t\t\t\tresponseType: Http.ResponseType.ARRAY_BUFFER,\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tself._untar(response, callback);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tcallback(\"Error loading bundle resource \" + url.original + \": \" + ex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading bundle resource \" + url.original + \": \" + err);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto._untar = function _untar(response, callback) {\n\t\t\tvar self = this;\n\n\t\t\tif (platform.workers) {\n\t\t\t\tif (!self._worker) {\n\t\t\t\t\tself._worker = new UntarWorker(self._assets.prefix);\n\t\t\t\t}\n\n\t\t\t\tself._worker.untar(response, function (err, files) {\n\t\t\t\t\tcallback(err, files);\n\n\t\t\t\t\tif (!self._worker.hasPendingRequests()) {\n\t\t\t\t\t\tself._worker.destroy();\n\n\t\t\t\t\t\tself._worker = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar archive = new Untar(response);\n\t\t\t\tvar files = archive.untar(self._assets.prefix);\n\t\t\t\tcallback(null, files);\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn new Bundle(data);\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn BundleHandler;\n\t}();\n\n\tvar Entity = function (_GraphNode) {\n\t\t_inheritsLoose(Entity, _GraphNode);\n\n\t\tfunction Entity(name, app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _GraphNode.call(this, name) || this;\n\t\t\tif (name instanceof Application) app = name;\n\t\t\t_this._batchHandle = null;\n\t\t\t_this.c = {};\n\t\t\t_this._app = app;\n\n\t\t\tif (!app) {\n\t\t\t\t_this._app = Application.getApplication();\n\n\t\t\t\tif (!_this._app) {\n\t\t\t\t\tthrow new Error(\"Couldn't find current application\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this._guid = null;\n\t\t\t_this._destroying = false;\n\t\t\t_this._template = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Entity.prototype;\n\n\t\t_proto.addComponent = function addComponent(type, data) {\n\t\t\tvar system = this._app.systems[type];\n\n\t\t\tif (!system) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.c[type]) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn system.addComponent(this, data);\n\t\t};\n\n\t\t_proto.removeComponent = function removeComponent(type) {\n\t\t\tvar system = this._app.systems[type];\n\n\t\t\tif (!system) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.c[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsystem.removeComponent(this);\n\t\t};\n\n\t\t_proto.findComponent = function findComponent(type) {\n\t\t\tvar entity = this.findOne(function (node) {\n\t\t\t\treturn node.c && node.c[type];\n\t\t\t});\n\t\t\treturn entity && entity.c[type];\n\t\t};\n\n\t\t_proto.findComponents = function findComponents(type) {\n\t\t\tvar entities = this.find(function (node) {\n\t\t\t\treturn node.c && node.c[type];\n\t\t\t});\n\t\t\treturn entities.map(function (entity) {\n\t\t\t\treturn entity.c[type];\n\t\t\t});\n\t\t};\n\n\t\t_proto.getGuid = function getGuid() {\n\t\t\tif (!this._guid) {\n\t\t\t\tthis.setGuid(guid.create());\n\t\t\t}\n\n\t\t\treturn this._guid;\n\t\t};\n\n\t\t_proto.setGuid = function setGuid(guid) {\n\t\t\tvar index = this._app._entityIndex;\n\n\t\t\tif (this._guid) {\n\t\t\t\tdelete index[this._guid];\n\t\t\t}\n\n\t\t\tthis._guid = guid;\n\t\t\tindex[this._guid] = this;\n\t\t};\n\n\t\t_proto._notifyHierarchyStateChanged = function _notifyHierarchyStateChanged(node, enabled) {\n\t\t\tvar enableFirst = false;\n\t\t\tif (node === this && this._app._enableList.length === 0) enableFirst = true;\n\t\t\tnode._beingEnabled = true;\n\n\t\t\tnode._onHierarchyStateChanged(enabled);\n\n\t\t\tif (node._onHierarchyStatePostChanged) this._app._enableList.push(node);\n\t\t\tvar i, len;\n\t\t\tvar c = node._children;\n\n\t\t\tfor (i = 0, len = c.length; i < len; i++) {\n\t\t\t\tif (c[i]._enabled) this._notifyHierarchyStateChanged(c[i], enabled);\n\t\t\t}\n\n\t\t\tnode._beingEnabled = false;\n\n\t\t\tif (enableFirst) {\n\t\t\t\tfor (i = 0; i < this._app._enableList.length; i++) {\n\t\t\t\t\tthis._app._enableList[i]._onHierarchyStatePostChanged();\n\t\t\t\t}\n\n\t\t\t\tthis._app._enableList.length = 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onHierarchyStateChanged = function _onHierarchyStateChanged(enabled) {\n\t\t\t_GraphNode.prototype._onHierarchyStateChanged.call(this, enabled);\n\n\t\t\tvar component;\n\t\t\tvar components = this.c;\n\n\t\t\tfor (var type in components) {\n\t\t\t\tif (components.hasOwnProperty(type)) {\n\t\t\t\t\tcomponent = components[type];\n\n\t\t\t\t\tif (component.enabled) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tcomponent.onEnable();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomponent.onDisable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onHierarchyStatePostChanged = function _onHierarchyStatePostChanged() {\n\t\t\tvar components = this.c;\n\n\t\t\tfor (var type in components) {\n\t\t\t\tif (components.hasOwnProperty(type)) components[type].onPostStateChange();\n\t\t\t}\n\t\t};\n\n\t\t_proto.findByGuid = function findByGuid(guid) {\n\t\t\tif (this._guid === guid) return this;\n\t\t\tvar e = this._app._entityIndex[guid];\n\n\t\t\tif (e && (e === this || e.isDescendantOf(this))) {\n\t\t\t\treturn e;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar name;\n\t\t\tthis._destroying = true;\n\n\t\t\tfor (name in this.c) {\n\t\t\t\tthis.c[name].enabled = false;\n\t\t\t}\n\n\t\t\tfor (name in this.c) {\n\t\t\t\tthis.c[name].system.removeComponent(this);\n\t\t\t}\n\n\t\t\tif (this._parent) this._parent.removeChild(this);\n\t\t\tvar children = this._children;\n\t\t\tvar child = children.shift();\n\n\t\t\twhile (child) {\n\t\t\t\tif (child instanceof Entity) {\n\t\t\t\t\tchild.destroy();\n\t\t\t\t}\n\n\t\t\t\tchild._parent = null;\n\t\t\t\tchild = children.shift();\n\t\t\t}\n\n\t\t\tthis.fire('destroy', this);\n\t\t\tthis.off();\n\n\t\t\tif (this._guid) {\n\t\t\t\tdelete this._app._entityIndex[this._guid];\n\t\t\t}\n\n\t\t\tthis._destroying = false;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar duplicatedIdsMap = {};\n\n\t\t\tvar clone = this._cloneRecursively(duplicatedIdsMap);\n\n\t\t\tduplicatedIdsMap[this.getGuid()] = clone;\n\t\t\tresolveDuplicatedEntityReferenceProperties(this, this, clone, duplicatedIdsMap);\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto._cloneRecursively = function _cloneRecursively(duplicatedIdsMap) {\n\t\t\tvar clone = new Entity(this._app);\n\n\t\t\t_GraphNode.prototype._cloneInternal.call(this, clone);\n\n\t\t\tfor (var type in this.c) {\n\t\t\t\tvar component = this.c[type];\n\t\t\t\tcomponent.system.cloneComponent(this, clone);\n\t\t\t}\n\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\tvar oldChild = this._children[i];\n\n\t\t\t\tif (oldChild instanceof Entity) {\n\t\t\t\t\tvar newChild = oldChild._cloneRecursively(duplicatedIdsMap);\n\n\t\t\t\t\tclone.addChild(newChild);\n\t\t\t\t\tduplicatedIdsMap[oldChild.getGuid()] = newChild;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn clone;\n\t\t};\n\n\t\treturn Entity;\n\t}(GraphNode);\n\n\tfunction resolveDuplicatedEntityReferenceProperties(oldSubtreeRoot, oldEntity, newEntity, duplicatedIdsMap) {\n\t\tvar i, len;\n\n\t\tif (oldEntity instanceof Entity) {\n\t\t\tvar components = oldEntity.c;\n\n\t\t\tfor (var componentName in components) {\n\t\t\t\tvar component = components[componentName];\n\t\t\t\tvar entityProperties = component.system.getPropertiesOfType('entity');\n\n\t\t\t\tfor (i = 0, len = entityProperties.length; i < len; i++) {\n\t\t\t\t\tvar propertyDescriptor = entityProperties[i];\n\t\t\t\t\tvar propertyName = propertyDescriptor.name;\n\t\t\t\t\tvar oldEntityReferenceId = component[propertyName];\n\t\t\t\t\tvar entityIsWithinOldSubtree = !!oldSubtreeRoot.findByGuid(oldEntityReferenceId);\n\n\t\t\t\t\tif (entityIsWithinOldSubtree) {\n\t\t\t\t\t\tvar newEntityReferenceId = duplicatedIdsMap[oldEntityReferenceId].getGuid();\n\n\t\t\t\t\t\tif (newEntityReferenceId) {\n\t\t\t\t\t\t\tnewEntity.c[componentName][propertyName] = newEntityReferenceId;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('Could not find corresponding entity id when resolving duplicated entity references');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (components.script && !newEntity._app.useLegacyScriptAttributeCloning) {\n\t\t\t\tnewEntity.script.resolveDuplicatedEntityReferenceProperties(components.script, duplicatedIdsMap);\n\t\t\t}\n\n\t\t\tvar _old = oldEntity.children.filter(function (e) {\n\t\t\t\treturn e instanceof Entity;\n\t\t\t});\n\n\t\t\tvar _new = newEntity.children.filter(function (e) {\n\t\t\t\treturn e instanceof Entity;\n\t\t\t});\n\n\t\t\tfor (i = 0, len = _old.length; i < len; i++) {\n\t\t\t\tresolveDuplicatedEntityReferenceProperties(oldSubtreeRoot, _old[i], _new[i], duplicatedIdsMap);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar ContainerResource = function () {\n\t\tfunction ContainerResource(data) {\n\t\t\tthis.data = data;\n\t\t\tthis.model = null;\n\t\t\tthis.renders = [];\n\t\t\tthis.materials = [];\n\t\t\tthis.textures = [];\n\t\t\tthis.animations = [];\n\t\t\tthis.registry = null;\n\t\t}\n\n\t\tvar _proto = ContainerResource.prototype;\n\n\t\t_proto.instantiateModelEntity = function instantiateModelEntity(options) {\n\t\t\tvar entity = new pc.Entity();\n\t\t\tentity.addComponent(\"model\", Object.assign({\n\t\t\t\ttype: \"asset\",\n\t\t\t\tasset: this.model\n\t\t\t}, options));\n\t\t\treturn entity;\n\t\t};\n\n\t\t_proto.instantiateRenderEntity = function instantiateRenderEntity(options) {\n\t\t\tvar cloneToEntity = function cloneToEntity(skinInstances, model, node) {\n\t\t\t\tif (node) {\n\t\t\t\t\tvar entity = new Entity();\n\n\t\t\t\t\tnode._cloneInternal(entity);\n\n\t\t\t\t\tvar attachedMi = null;\n\n\t\t\t\t\tfor (var m = 0; m < model.meshInstances.length; m++) {\n\t\t\t\t\t\tvar mi = model.meshInstances[m];\n\n\t\t\t\t\t\tif (mi.node === node) {\n\t\t\t\t\t\t\tvar cloneMi = new MeshInstance(entity, mi.mesh, mi.material);\n\n\t\t\t\t\t\t\tif (mi.morphInstance) {\n\t\t\t\t\t\t\t\tcloneMi.morphInstance = mi.morphInstance.clone();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (mi.skinInstance) {\n\t\t\t\t\t\t\t\tskinInstances.push({\n\t\t\t\t\t\t\t\t\tsrc: mi.skinInstance,\n\t\t\t\t\t\t\t\t\tdst: cloneMi\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!attachedMi) {\n\t\t\t\t\t\t\t\tattachedMi = [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tattachedMi.push(cloneMi);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attachedMi) {\n\t\t\t\t\t\tentity.addComponent(\"render\", Object.assign({\n\t\t\t\t\t\t\ttype: \"asset\"\n\t\t\t\t\t\t}, options));\n\t\t\t\t\t\tentity.render.meshInstances = attachedMi;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar children = node.children;\n\n\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\t\tvar childClone = cloneToEntity(skinInstances, model, children[i]);\n\t\t\t\t\t\tentity.addChild(childClone);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn entity;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tvar skinInstances = [];\n\t\t\tvar entity = cloneToEntity(skinInstances, this.model.resource, this.model.resource.graph);\n\n\t\t\tfor (var i = 0; i < skinInstances.length; i++) {\n\t\t\t\tvar srcSkinInstance = skinInstances[i].src;\n\t\t\t\tvar dstMeshInstance = skinInstances[i].dst;\n\t\t\t\tvar skin = srcSkinInstance.skin;\n\t\t\t\tvar cloneSkinInstance = new SkinInstance(skin);\n\t\t\t\tvar bones = [];\n\n\t\t\t\tfor (var j = 0; j < skin.boneNames.length; j++) {\n\t\t\t\t\tvar boneName = skin.boneNames[j];\n\t\t\t\t\tvar bone = entity.findByName(boneName);\n\t\t\t\t\tbones.push(bone);\n\t\t\t\t}\n\n\t\t\t\tcloneSkinInstance.bones = bones;\n\t\t\t\tdstMeshInstance.skinInstance = cloneSkinInstance;\n\t\t\t}\n\n\t\t\treturn entity;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar registry = this.registry;\n\n\t\t\tvar destroyAsset = function destroyAsset(asset) {\n\t\t\t\tregistry.remove(asset);\n\t\t\t\tasset.unload();\n\t\t\t};\n\n\t\t\tvar destroyAssets = function destroyAssets(assets) {\n\t\t\t\tassets.forEach(function (asset) {\n\t\t\t\t\tdestroyAsset(asset);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (this.animations) {\n\t\t\t\tdestroyAssets(this.animations);\n\t\t\t\tthis.animations = null;\n\t\t\t}\n\n\t\t\tif (this.textures) {\n\t\t\t\tdestroyAssets(this.textures);\n\t\t\t\tthis.textures = null;\n\t\t\t}\n\n\t\t\tif (this.materials) {\n\t\t\t\tdestroyAssets(this.materials);\n\t\t\t\tthis.materials = null;\n\t\t\t}\n\n\t\t\tif (this.model) {\n\t\t\t\tdestroyAsset(this.model);\n\t\t\t\tthis.model = null;\n\t\t\t}\n\n\t\t\tthis.data = null;\n\t\t\tthis.assets = null;\n\t\t};\n\n\t\treturn ContainerResource;\n\t}();\n\n\tvar ContainerHandler = function () {\n\t\tfunction ContainerHandler(device, defaultMaterial) {\n\t\t\tthis._device = device;\n\t\t\tthis._defaultMaterial = defaultMaterial;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto2 = ContainerHandler.prototype;\n\n\t\t_proto2._getUrlWithoutParams = function _getUrlWithoutParams(url) {\n\t\t\treturn url.indexOf('?') >= 0 ? url.split('?')[0] : url;\n\t\t};\n\n\t\t_proto2.load = function load(url, callback, asset) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tresponseType: Http.ResponseType.ARRAY_BUFFER,\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\t\t\tvar self = this;\n\n\t\t\tvar parseData = function parseData(arrayBuffer) {\n\t\t\t\tGlbParser.parseAsync(self._getUrlWithoutParams(url.original), path.extractPath(url.load), arrayBuffer, self._device, asset.registry, asset.options, function (err, result) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, new ContainerResource(result));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (asset && asset.file && asset.file.contents) {\n\t\t\t\tparseData(asset.file.contents);\n\t\t\t} else {\n\t\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\t\tif (!callback) return;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(\"Error loading model: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparseData(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto2.open = function open(url, data, asset) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto2.patch = function patch(asset, assets) {\n\t\t\tvar container = asset.resource;\n\t\t\tvar data = container && container.data;\n\n\t\t\tif (data) {\n\t\t\t\tvar createAsset = function createAsset(type, resource, index) {\n\t\t\t\t\tvar subAsset = new Asset(asset.name + '/' + type + '/' + index, type, {\n\t\t\t\t\t\turl: ''\n\t\t\t\t\t});\n\t\t\t\t\tsubAsset.resource = resource;\n\t\t\t\t\tsubAsset.loaded = true;\n\t\t\t\t\tassets.add(subAsset);\n\t\t\t\t\treturn subAsset;\n\t\t\t\t};\n\n\t\t\t\tvar i;\n\t\t\t\tvar model = createAsset('model', GlbParser.createModel(data, this._defaultMaterial), 0);\n\t\t\t\tvar renders = [];\n\n\t\t\t\tfor (i = 0; i < data.meshes.length; ++i) {\n\t\t\t\t\trenders.push(createAsset('render', data.meshes[i], i));\n\t\t\t\t}\n\n\t\t\t\tvar materials = [];\n\n\t\t\t\tfor (i = 0; i < data.materials.length; ++i) {\n\t\t\t\t\tmaterials.push(createAsset('material', data.materials[i], i));\n\t\t\t\t}\n\n\t\t\t\tvar animations = [];\n\n\t\t\t\tfor (i = 0; i < data.animations.length; ++i) {\n\t\t\t\t\tanimations.push(createAsset('animation', data.animations[i], i));\n\t\t\t\t}\n\n\t\t\t\tcontainer.data = null;\n\t\t\t\tcontainer.model = model;\n\t\t\t\tcontainer.renders = renders;\n\t\t\t\tcontainer.materials = materials;\n\t\t\t\tcontainer.textures = data.textures;\n\t\t\t\tcontainer.animations = animations;\n\t\t\t\tcontainer.registry = assets;\n\t\t\t}\n\t\t};\n\n\t\treturn ContainerHandler;\n\t}();\n\n\tvar CssHandler = function () {\n\t\tfunction CssHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = CssHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading css resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn CssHandler;\n\t}();\n\n\tfunction createStyle(cssString) {\n\t\tvar result = document.createElement('style');\n\t\tresult.type = 'text/css';\n\n\t\tif (result.styleSheet) {\n\t\t\tresult.styleSheet.cssText = cssString;\n\t\t} else {\n\t\t\tresult.appendChild(document.createTextNode(cssString));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tvar CubemapHandler = function () {\n\t\tfunction CubemapHandler(device, assets, loader) {\n\t\t\tthis._device = device;\n\t\t\tthis._registry = assets;\n\t\t\tthis._loader = loader;\n\t\t}\n\n\t\tvar _proto = CubemapHandler.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tthis.loadAssets(asset, callback);\n\t\t};\n\n\t\t_proto.open = function open(url, data, asset) {\n\t\t\treturn asset ? asset.resource : null;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, registry) {\n\t\t\tthis.loadAssets(asset, function (err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\tregistry.fire('error', asset);\n\t\t\t\t\tregistry.fire('error:' + asset.id, err, asset);\n\t\t\t\t\tasset.fire('error', asset);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.getAssetIds = function getAssetIds(cubemapAsset) {\n\t\t\tvar result = [];\n\t\t\tresult[0] = cubemapAsset.file;\n\n\t\t\tif ((cubemapAsset.loadFaces || !cubemapAsset.file) && cubemapAsset.data && cubemapAsset.data.textures) {\n\t\t\t\tfor (var i = 0; i < 6; ++i) {\n\t\t\t\t\tresult[i + 1] = cubemapAsset.data.textures[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[1] = result[2] = result[3] = result[4] = result[5] = result[6] = null;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.compareAssetIds = function compareAssetIds(assetIdA, assetIdB) {\n\t\t\tif (assetIdA && assetIdB) {\n\t\t\t\tif (parseInt(assetIdA, 10) === assetIdA || typeof assetIdA === \"string\") {\n\t\t\t\t\treturn assetIdA === assetIdB;\n\t\t\t\t}\n\n\t\t\t\treturn assetIdA.url === assetIdB.url;\n\t\t\t}\n\n\t\t\treturn assetIdA !== null === (assetIdB !== null);\n\t\t};\n\n\t\t_proto.update = function update(cubemapAsset, assetIds, assets) {\n\t\t\tvar assetData = cubemapAsset.data || {};\n\t\t\tvar oldAssets = cubemapAsset._handlerState.assets;\n\t\t\tvar oldResources = cubemapAsset._resources;\n\t\t\tvar tex, mip, i;\n\t\t\tvar resources = [null, null, null, null, null, null, null];\n\n\t\t\tvar getType = function getType() {\n\t\t\t\tif (assetData.hasOwnProperty('type')) {\n\t\t\t\t\treturn assetData.type;\n\t\t\t\t}\n\n\t\t\t\tif (assetData.hasOwnProperty('rgbm')) {\n\t\t\t\t\treturn assetData.rgbm ? TEXTURETYPE_RGBM : TEXTURETYPE_DEFAULT;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tif (!cubemapAsset.loaded || assets[0] !== oldAssets[0]) {\n\t\t\t\tif (assets[0]) {\n\t\t\t\t\ttex = assets[0].resource;\n\n\t\t\t\t\tfor (i = 0; i < 6; ++i) {\n\t\t\t\t\t\tvar prelitLevels = [tex._levels[i]];\n\n\t\t\t\t\t\tif (i === 0 && this._device.useTexCubeLod) {\n\t\t\t\t\t\t\tfor (mip = 1; mip < tex._levels.length; ++mip) {\n\t\t\t\t\t\t\t\tprelitLevels[mip] = tex._levels[mip];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar prelit = new Texture(this._device, {\n\t\t\t\t\t\t\tname: cubemapAsset.name + '_prelitCubemap' + (tex.width >> i),\n\t\t\t\t\t\t\tcubemap: true,\n\t\t\t\t\t\t\ttype: getType() || tex.type,\n\t\t\t\t\t\t\twidth: tex.width >> i,\n\t\t\t\t\t\t\theight: tex.height >> i,\n\t\t\t\t\t\t\tformat: tex.format,\n\t\t\t\t\t\t\tlevels: prelitLevels,\n\t\t\t\t\t\t\tfixCubemapSeams: true,\n\t\t\t\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresources[i + 1] = prelit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresources[1] = oldResources[1] || null;\n\t\t\t\tresources[2] = oldResources[2] || null;\n\t\t\t\tresources[3] = oldResources[3] || null;\n\t\t\t\tresources[4] = oldResources[4] || null;\n\t\t\t\tresources[5] = oldResources[5] || null;\n\t\t\t\tresources[6] = oldResources[6] || null;\n\t\t\t}\n\n\t\t\tvar faceAssets = assets.slice(1);\n\n\t\t\tif (!cubemapAsset.loaded || !this.cmpArrays(faceAssets, oldAssets.slice(1))) {\n\t\t\t\tif (faceAssets.indexOf(null) === -1) {\n\t\t\t\t\tvar faceTextures = faceAssets.map(function (asset) {\n\t\t\t\t\t\treturn asset.resource;\n\t\t\t\t\t});\n\t\t\t\t\tvar faceLevels = [];\n\n\t\t\t\t\tfor (mip = 0; mip < faceTextures[0]._levels.length; ++mip) {\n\t\t\t\t\t\tfaceLevels.push(faceTextures.map(function (faceTexture) {\n\t\t\t\t\t\t\treturn faceTexture._levels[mip];\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\n\t\t\t\t\tvar faces = new Texture(this._device, {\n\t\t\t\t\t\tname: cubemapAsset.name + '_faces',\n\t\t\t\t\t\tcubemap: true,\n\t\t\t\t\t\ttype: getType() || faceTextures[0].type,\n\t\t\t\t\t\twidth: faceTextures[0].width,\n\t\t\t\t\t\theight: faceTextures[0].height,\n\t\t\t\t\t\tformat: faceTextures[0].format,\n\t\t\t\t\t\tlevels: faceLevels,\n\t\t\t\t\t\tminFilter: assetData.hasOwnProperty('minFilter') ? assetData.minFilter : faceTextures[0].minFilter,\n\t\t\t\t\t\tmagFilter: assetData.hasOwnProperty('magFilter') ? assetData.magFilter : faceTextures[0].magFilter,\n\t\t\t\t\t\tanisotropy: assetData.hasOwnProperty('anisotropy') ? assetData.anisotropy : 1,\n\t\t\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\t\t\tfixCubemapSeams: !!assets[0]\n\t\t\t\t\t});\n\t\t\t\t\tresources[0] = faces;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresources[0] = oldResources[0] || null;\n\t\t\t}\n\n\t\t\tif (!this.cmpArrays(resources, oldResources)) {\n\t\t\t\tcubemapAsset.resources = resources;\n\t\t\t\tcubemapAsset._handlerState.assetIds = assetIds;\n\t\t\t\tcubemapAsset._handlerState.assets = assets;\n\n\t\t\t\tfor (i = 0; i < oldResources.length; ++i) {\n\t\t\t\t\tif (oldResources[i] !== null && resources.indexOf(oldResources[i]) === -1) {\n\t\t\t\t\t\toldResources[i].destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < oldAssets.length; ++i) {\n\t\t\t\tif (oldAssets[i] !== null && assets.indexOf(oldAssets[i]) === -1) {\n\t\t\t\t\toldAssets[i].unload();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.cmpArrays = function cmpArrays(arr1, arr2) {\n\t\t\tif (arr1.length !== arr2.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < arr1.length; ++i) {\n\t\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.resolveId = function resolveId(value) {\n\t\t\tvar valueInt = parseInt(value, 10);\n\t\t\treturn valueInt === value || valueInt.toString() === value ? valueInt : value;\n\t\t};\n\n\t\t_proto.loadAssets = function loadAssets(cubemapAsset, callback) {\n\t\t\tif (!cubemapAsset.hasOwnProperty('_handlerState')) {\n\t\t\t\tcubemapAsset._handlerState = {\n\t\t\t\t\tassetIds: [null, null, null, null, null, null, null],\n\t\t\t\t\tassets: [null, null, null, null, null, null, null]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tvar assetIds = self.getAssetIds(cubemapAsset);\n\t\t\tvar assets = [null, null, null, null, null, null, null];\n\t\t\tvar loadedAssetIds = cubemapAsset._handlerState.assetIds;\n\t\t\tvar loadedAssets = cubemapAsset._handlerState.assets;\n\t\t\tvar registry = self._registry;\n\t\t\tvar awaiting = 7;\n\n\t\t\tvar onReady = function onReady(index, asset) {\n\t\t\t\tassets[index] = asset;\n\t\t\t\tawaiting--;\n\n\t\t\t\tif (awaiting === 0) {\n\t\t\t\t\tself.update(cubemapAsset, assetIds, assets);\n\t\t\t\t\tcallback(null, cubemapAsset.resources);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar onLoad = function onLoad(index, asset) {\n\t\t\t\tvar level0 = asset && asset.resource && asset.resource._levels[0];\n\n\t\t\t\tif (level0 && typeof ImageBitmap !== 'undefined' && level0 instanceof ImageBitmap) {\n\t\t\t\t\tcreateImageBitmap(level0, {\n\t\t\t\t\t\tpremultiplyAlpha: 'none',\n\t\t\t\t\t\timageOrientation: 'flipY'\n\t\t\t\t\t}).then(function (imageBitmap) {\n\t\t\t\t\t\tasset.resource._levels[0] = imageBitmap;\n\t\t\t\t\t\tonReady(index, asset);\n\t\t\t\t\t}).catch(function (e) {\n\t\t\t\t\t\tcallback(e);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tonReady(index, asset);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar onError = function onError(index, err, asset) {\n\t\t\t\tcallback(err);\n\t\t\t};\n\n\t\t\tvar processTexAsset = function processTexAsset(index, texAsset) {\n\t\t\t\tif (texAsset.loaded) {\n\t\t\t\t\tonLoad(index, texAsset);\n\t\t\t\t} else {\n\t\t\t\t\tregistry.once('load:' + texAsset.id, onLoad.bind(self, index));\n\t\t\t\t\tregistry.once('error:' + texAsset.id, onError.bind(self, index));\n\n\t\t\t\t\tif (!texAsset.loading) {\n\t\t\t\t\t\tregistry.load(texAsset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar texAsset;\n\n\t\t\tfor (var i = 0; i < 7; ++i) {\n\t\t\t\tvar assetId = this.resolveId(assetIds[i]);\n\n\t\t\t\tif (!assetId) {\n\t\t\t\t\tonReady(i, null);\n\t\t\t\t} else if (self.compareAssetIds(assetId, loadedAssetIds[i])) {\n\t\t\t\t\tonReady(i, loadedAssets[i]);\n\t\t\t\t} else if (parseInt(assetId, 10) === assetId) {\n\t\t\t\t\ttexAsset = registry.get(assetId);\n\n\t\t\t\t\tif (texAsset) {\n\t\t\t\t\t\tprocessTexAsset(i, texAsset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTimeout(function (index, assetId_) {\n\t\t\t\t\t\t\tvar texAsset = registry.get(assetId_);\n\n\t\t\t\t\t\t\tif (texAsset) {\n\t\t\t\t\t\t\t\tprocessTexAsset(index, texAsset);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tonError(index, \"failed to find dependent cubemap asset=\" + assetId_);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(null, i, assetId));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar file = typeof assetId === \"string\" ? {\n\t\t\t\t\t\turl: assetId,\n\t\t\t\t\t\tfilename: assetId\n\t\t\t\t\t} : assetId;\n\t\t\t\t\ttexAsset = new Asset(cubemapAsset.name + \"_part_\" + i, \"texture\", file);\n\t\t\t\t\tregistry.add(texAsset);\n\t\t\t\t\tregistry.once('load:' + texAsset.id, onLoad.bind(self, i));\n\t\t\t\t\tregistry.once('error:' + texAsset.id, onError.bind(self, i));\n\t\t\t\t\tregistry.load(texAsset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn CubemapHandler;\n\t}();\n\n\tvar FolderHandler = function () {\n\t\tfunction FolderHandler() {}\n\n\t\tvar _proto = FolderHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tcallback(null, null);\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\treturn FolderHandler;\n\t}();\n\n\tvar FONT_MSDF = 'msdf';\n\tvar FONT_BITMAP = 'bitmap';\n\n\tvar Font = function () {\n\t\tfunction Font(textures, data) {\n\t\t\tthis.type = data ? data.type || FONT_MSDF : FONT_MSDF;\n\t\t\tthis.em = 1;\n\t\t\tthis.textures = textures;\n\t\t\tthis.intensity = 0.0;\n\t\t\tthis._data = null;\n\t\t\tthis.data = data;\n\t\t}\n\n\t\t_createClass(Font, [{\n\t\t\tkey: \"data\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._data;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._data = value;\n\t\t\t\tif (!value) return;\n\n\t\t\t\tif (this._data.intensity !== undefined) {\n\t\t\t\t\tthis.intensity = this._data.intensity;\n\t\t\t\t}\n\n\t\t\t\tif (!this._data.info) this._data.info = {};\n\n\t\t\t\tif (!this._data.version || this._data.version < 2) {\n\t\t\t\t\tthis._data.info.maps = [{\n\t\t\t\t\t\twidth: this._data.info.width,\n\t\t\t\t\t\theight: this._data.info.height\n\t\t\t\t\t}];\n\n\t\t\t\t\tif (this._data.chars) {\n\t\t\t\t\t\tfor (var key in this._data.chars) {\n\t\t\t\t\t\t\tthis._data.chars[key].map = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn Font;\n\t}();\n\n\tfunction upgradeDataSchema(data) {\n\t\tif (data.version < 3) {\n\t\t\tif (data.version < 2) {\n\t\t\t\tdata.info.maps = data.info.maps || [{\n\t\t\t\t\twidth: data.info.width,\n\t\t\t\t\theight: data.info.height\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tdata.chars = Object.keys(data.chars || {}).reduce(function (newChars, key) {\n\t\t\t\tvar existing = data.chars[key];\n\t\t\t\tvar newKey = existing.letter !== undefined ? existing.letter : string.fromCodePoint(key);\n\n\t\t\t\tif (data.version < 2) {\n\t\t\t\t\texisting.map = existing.map || 0;\n\t\t\t\t}\n\n\t\t\t\tnewChars[newKey] = existing;\n\t\t\t\treturn newChars;\n\t\t\t}, {});\n\t\t\tdata.version = 3;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tvar FontHandler = function () {\n\t\tfunction FontHandler(loader) {\n\t\t\tthis._loader = loader;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = FontHandler.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar self = this;\n\n\t\t\tif (path.getExtension(url.original) === '.json') {\n\t\t\t\thttp.get(url.load, {\n\t\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t\t}, function (err, response) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tvar data = upgradeDataSchema(response);\n\n\t\t\t\t\t\tself._loadTextures(url.load.replace('.json', '.png'), data, function (err, textures) {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t\ttextures: textures\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(\"Error loading font resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (asset && asset.data) {\n\t\t\t\t\tasset.data = upgradeDataSchema(asset.data);\n\t\t\t\t}\n\n\t\t\t\tthis._loadTextures(url.load, asset && asset.data, callback);\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadTextures = function _loadTextures(url, data, callback) {\n\t\t\tvar numTextures = data.info.maps.length;\n\t\t\tvar numLoaded = 0;\n\t\t\tvar error = null;\n\t\t\tvar textures = new Array(numTextures);\n\t\t\tvar loader = this._loader;\n\n\t\t\tvar loadTexture = function loadTexture(index) {\n\t\t\t\tvar onLoaded = function onLoaded(err, texture) {\n\t\t\t\t\tif (error) return;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.upload();\n\t\t\t\t\ttextures[index] = texture;\n\t\t\t\t\tnumLoaded++;\n\n\t\t\t\t\tif (numLoaded === numTextures) {\n\t\t\t\t\t\tcallback(null, textures);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tloader.load(url, \"texture\", onLoaded);\n\t\t\t\t} else {\n\t\t\t\t\tloader.load(url.replace('.png', index + '.png'), \"texture\", onLoaded);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < numTextures; i++) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data, asset) {\n\t\t\tvar font;\n\n\t\t\tif (data.textures) {\n\t\t\t\tfont = new Font(data.textures, data.data);\n\t\t\t} else {\n\t\t\t\tfont = new Font(data, null);\n\t\t\t}\n\n\t\t\treturn font;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tvar font = asset.resource;\n\n\t\t\tif (!font.data && asset.data) {\n\t\t\t\tfont.data = asset.data;\n\t\t\t} else if (!asset.data && font.data) {\n\t\t\t\tasset.data = font.data;\n\t\t\t}\n\n\t\t\tif (asset.data) {\n\t\t\t\tasset.data = upgradeDataSchema(asset.data);\n\t\t\t}\n\t\t};\n\n\t\treturn FontHandler;\n\t}();\n\n\tvar AssetListLoader = function (_EventHandler) {\n\t\t_inheritsLoose(AssetListLoader, _EventHandler);\n\n\t\tfunction AssetListLoader(assetList, assetRegistry) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._assets = [];\n\t\t\t_this._registry = assetRegistry;\n\t\t\t_this._loaded = false;\n\t\t\t_this._count = 0;\n\t\t\t_this._total = 0;\n\t\t\t_this._failed = [];\n\t\t\t_this._waitingAssets = [];\n\n\t\t\tif (assetList.length && assetList[0] instanceof Asset) {\n\t\t\t\t_this._assets = assetList;\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < assetList.length; i++) {\n\t\t\t\t\tvar asset = assetRegistry.get(assetList[i]);\n\n\t\t\t\t\tif (asset) {\n\t\t\t\t\t\t_this._assets.push(asset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._waitForAsset(assetList[i]);\n\n\t\t\t\t\t\t_this._total++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AssetListLoader.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar self = this;\n\n\t\t\tthis._registry.off(\"load\", this._onLoad);\n\n\t\t\tthis._registry.off(\"error\", this._onError);\n\n\t\t\tthis._waitingAssets.forEach(function (id) {\n\t\t\t\tself._registry.off(\"add:\" + id, this._onAddAsset);\n\t\t\t});\n\n\t\t\tthis.off(\"progress\");\n\t\t\tthis.off(\"load\");\n\t\t};\n\n\t\t_proto.load = function load(done, scope) {\n\t\t\tvar i = 0;\n\t\t\tvar l = this._assets.length;\n\t\t\tvar asset;\n\t\t\tthis._count = 0;\n\t\t\tthis._failed = [];\n\t\t\tthis._callback = done;\n\t\t\tthis._scope = scope;\n\n\t\t\tthis._registry.on(\"load\", this._onLoad, this);\n\n\t\t\tthis._registry.on(\"error\", this._onError, this);\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tasset = this._assets[i];\n\n\t\t\t\tif (!asset.loading && !asset.loaded) {\n\t\t\t\t\tthis._registry.load(asset);\n\n\t\t\t\t\tthis._total++;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.ready = function ready(done, scope) {\n\t\t\tscope = scope || this;\n\n\t\t\tif (this._loaded) {\n\t\t\t\tdone.call(scope, this._assets);\n\t\t\t} else {\n\t\t\t\tthis.once(\"load\", function (assets) {\n\t\t\t\t\tdone.call(scope, assets);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadingComplete = function _loadingComplete() {\n\t\t\tthis._loaded = true;\n\n\t\t\tthis._registry.off(\"load\", this._onLoad, this);\n\n\t\t\tthis._registry.off(\"error\", this._onError, this);\n\n\t\t\tif (this._failed && this._failed.length) {\n\t\t\t\tif (this._callback) {\n\t\t\t\t\tthis._callback.call(this._scope, \"Failed to load some assets\", this._failed);\n\t\t\t\t}\n\n\t\t\t\tthis.fire(\"error\", this._failed);\n\t\t\t} else {\n\t\t\t\tif (this._callback) {\n\t\t\t\t\tthis._callback.call(this._scope);\n\t\t\t\t}\n\n\t\t\t\tthis.fire(\"load\", this._assets);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onLoad = function _onLoad(asset) {\n\t\t\tvar self = this;\n\n\t\t\tif (this._assets.indexOf(asset) >= 0) {\n\t\t\t\tthis._count++;\n\t\t\t\tthis.fire(\"progress\", asset);\n\t\t\t}\n\n\t\t\tif (this._count === this._total) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tself._loadingComplete(self._failed);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onError = function _onError(err, asset) {\n\t\t\tvar self = this;\n\n\t\t\tif (this._assets.indexOf(asset) >= 0) {\n\t\t\t\tthis._count++;\n\n\t\t\t\tthis._failed.push(asset);\n\t\t\t}\n\n\t\t\tif (this._count === this._total) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tself._loadingComplete(self._failed);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onAddAsset = function _onAddAsset(asset) {\n\t\t\tvar index = this._waitingAssets.indexOf(asset);\n\n\t\t\tif (index >= 0) {\n\t\t\t\tthis._waitingAssets.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis._assets.push(asset);\n\n\t\t\tvar i;\n\t\t\tvar l = this._assets.length;\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tasset = this._assets[i];\n\n\t\t\t\tif (!asset.loading && !asset.loaded) {\n\t\t\t\t\tthis._registry.load(asset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._waitForAsset = function _waitForAsset(assetId) {\n\t\t\tthis._waitingAssets.push(assetId);\n\n\t\t\tthis._registry.once('add:' + assetId, this._onAddAsset, this);\n\t\t};\n\n\t\treturn AssetListLoader;\n\t}(EventHandler);\n\n\tvar TemplateUtils = {\n\t\twaitForTemplatesInScene: function waitForTemplatesInScene(data, assets, callback) {\n\t\t\tif (data.collapsedInstances) {\n\t\t\t\tvar entities = TemplateUtils._getAllCollapsedEntities(data);\n\n\t\t\t\tTemplateUtils.waitForTemplateAssets(entities, assets, callback, data);\n\t\t\t} else {\n\t\t\t\tcallback(null, data);\n\t\t\t}\n\t\t},\n\t\twaitForTemplateAssets: function waitForTemplateAssets(entities, assets, callback, response) {\n\t\t\tvar templateIds = TemplateUtils._extractTemplateIds(entities);\n\n\t\t\tvar loader = new AssetListLoader(templateIds, assets);\n\t\t\tloader.load(function (err) {\n\t\t\t\tcallback(err, response);\n\t\t\t});\n\t\t},\n\t\t_getAllCollapsedEntities: function _getAllCollapsedEntities(data) {\n\t\t\tvar entities = {};\n\t\t\tdata.collapsedInstances.forEach(function (h) {\n\t\t\t\tObject.assign(entities, h.instanceEntities);\n\t\t\t});\n\t\t\treturn entities;\n\t\t},\n\t\t_extractTemplateIds: function _extractTemplateIds(entities) {\n\t\t\tvar templateIds = [];\n\n\t\t\tfor (var guid in entities) {\n\t\t\t\tvar id = entities[guid].template_id;\n\n\t\t\t\tif (id) {\n\t\t\t\t\ttemplateIds.push(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn templateIds;\n\t\t},\n\t\texpandTemplateEntities: function expandTemplateEntities(app, entities) {\n\t\t\tvar result = {};\n\n\t\t\tfor (var guid in entities) {\n\t\t\t\tvar h = entities[guid];\n\t\t\t\tresult[guid] = h.collapsed_entity ? TemplateUtils.expandEntity(app, h) : h;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\texpandEntity: function expandEntity(app, data) {}\n\t};\n\n\tvar CompressUtils = {\n\t\tsetCompressedPRS: function setCompressedPRS(entity, data, compressed) {\n\t\t\tvar a = compressed.singleVecs;\n\t\t\tvar b, i;\n\t\t\tvar v = data.___1;\n\n\t\t\tif (!v) {\n\t\t\t\tb = compressed.tripleVecs;\n\t\t\t\ti = data.___2;\n\t\t\t}\n\n\t\t\tvar n = v ? v[0] : b[i];\n\t\t\tentity.setLocalPosition(a[n], a[n + 1], a[n + 2]);\n\t\t\tn = v ? v[1] : b[i + 1];\n\t\t\tentity.setLocalEulerAngles(a[n], a[n + 1], a[n + 2]);\n\t\t\tn = v ? v[2] : b[i + 2];\n\t\t\tentity.setLocalScale(a[n], a[n + 1], a[n + 2]);\n\t\t},\n\t\toneCharToKey: function oneCharToKey(s, data) {\n\t\t\tvar i = s.charCodeAt(0) - data.fieldFirstCode;\n\t\t\treturn data.fieldArray[i];\n\t\t},\n\t\tmultCharToKey: function multCharToKey(s, data) {\n\t\t\tvar ind = 0;\n\n\t\t\tfor (var i = 0; i < s.length; i++) {\n\t\t\t\tind = ind * data.fieldCodeBase + s.charCodeAt(i) - data.fieldFirstCode;\n\t\t\t}\n\n\t\t\treturn data.fieldArray[ind];\n\t\t}\n\t};\n\n\tvar Decompress = function () {\n\t\tfunction Decompress(node, data) {\n\t\t\tthis._node = node;\n\t\t\tthis._data = data;\n\t\t}\n\n\t\tvar _proto = Decompress.prototype;\n\n\t\t_proto.run = function run() {\n\t\t\tvar type = Object.prototype.toString.call(this._node);\n\n\t\t\tif (type === '[object Object]') {\n\t\t\t\tthis._handleMap();\n\t\t\t} else if (type === '[object Array]') {\n\t\t\t\tthis._handleArray();\n\t\t\t} else {\n\t\t\t\tthis._result = this._node;\n\t\t\t}\n\n\t\t\treturn this._result;\n\t\t};\n\n\t\t_proto._handleMap = function _handleMap() {\n\t\t\tthis._result = {};\n\t\t\tvar a = Object.keys(this._node);\n\t\t\ta.forEach(this._handleKey, this);\n\t\t};\n\n\t\t_proto._handleKey = function _handleKey(origKey) {\n\t\t\tvar newKey = origKey;\n\t\t\tvar len = origKey.length;\n\n\t\t\tif (len === 1) {\n\t\t\t\tnewKey = CompressUtils.oneCharToKey(origKey, this._data);\n\t\t\t} else if (len === 2) {\n\t\t\t\tnewKey = CompressUtils.multCharToKey(origKey, this._data);\n\t\t\t}\n\n\t\t\tthis._result[newKey] = new Decompress(this._node[origKey], this._data).run();\n\t\t};\n\n\t\t_proto._handleArray = function _handleArray() {\n\t\t\tthis._result = [];\n\n\t\t\tthis._node.forEach(this._handleArElt, this);\n\t\t};\n\n\t\t_proto._handleArElt = function _handleArElt(elt) {\n\t\t\tvar v = new Decompress(elt, this._data).run();\n\n\t\t\tthis._result.push(v);\n\t\t};\n\n\t\treturn Decompress;\n\t}();\n\n\tvar SceneParser = function () {\n\t\tfunction SceneParser(app, isTemplate) {\n\t\t\tthis._app = app;\n\t\t\tthis._isTemplate = isTemplate;\n\t\t}\n\n\t\tvar _proto = SceneParser.prototype;\n\n\t\t_proto.parse = function parse(data) {\n\t\t\tvar entities = {};\n\t\t\tvar id, i, curEnt;\n\t\t\tvar parent = null;\n\t\t\tvar compressed = data.compressedFormat;\n\n\t\t\tif (compressed) {\n\t\t\t\tdata.entities = new Decompress(data.entities, compressed).run();\n\t\t\t}\n\n\t\t\tif (data.collapsedInstances) {\n\t\t\t\tthis._addCollapsedToEntities(this._app, data);\n\t\t\t}\n\n\t\t\tfor (id in data.entities) {\n\t\t\t\tvar curData = data.entities[id];\n\t\t\t\tcurEnt = this._createEntity(curData, compressed);\n\t\t\t\tentities[id] = curEnt;\n\n\t\t\t\tif (curData.parent === null) {\n\t\t\t\t\tparent = curEnt;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (id in data.entities) {\n\t\t\t\tcurEnt = entities[id];\n\t\t\t\tvar children = data.entities[id].children;\n\t\t\t\tvar len = children.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvar childEnt = entities[children[i]];\n\n\t\t\t\t\tif (childEnt) {\n\t\t\t\t\t\tcurEnt.addChild(childEnt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._openComponentData(parent, data.entities);\n\n\t\t\tdelete data.compressedFormat;\n\t\t\treturn parent;\n\t\t};\n\n\t\t_proto._createEntity = function _createEntity(data, compressed) {\n\t\t\tvar entity = new Entity();\n\t\t\tentity.name = data.name;\n\t\t\tentity.setGuid(data.resource_id);\n\n\t\t\tthis._setPosRotScale(entity, data, compressed);\n\n\t\t\tentity._enabled = data.enabled !== undefined ? data.enabled : true;\n\n\t\t\tif (this._isTemplate) {\n\t\t\t\tentity._template = true;\n\t\t\t} else {\n\t\t\t\tentity._enabledInHierarchy = entity._enabled;\n\t\t\t}\n\n\t\t\tentity.template = data.template;\n\n\t\t\tif (data.tags) {\n\t\t\t\tfor (var i = 0; i < data.tags.length; i++) {\n\t\t\t\t\tentity.tags.add(data.tags[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.labels) {\n\t\t\t\tdata.labels.forEach(function (label) {\n\t\t\t\t\tentity.addLabel(label);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn entity;\n\t\t};\n\n\t\t_proto._setPosRotScale = function _setPosRotScale(entity, data, compressed) {\n\t\t\tif (compressed) {\n\t\t\t\tCompressUtils.setCompressedPRS(entity, data, compressed);\n\t\t\t} else {\n\t\t\t\tvar p = data.position;\n\t\t\t\tvar r = data.rotation;\n\t\t\t\tvar s = data.scale;\n\t\t\t\tentity.setLocalPosition(p[0], p[1], p[2]);\n\t\t\t\tentity.setLocalEulerAngles(r[0], r[1], r[2]);\n\t\t\t\tentity.setLocalScale(s[0], s[1], s[2]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._openComponentData = function _openComponentData(entity, entities) {\n\t\t\tvar systemsList = this._app.systems.list;\n\t\t\tvar i,\n\t\t\t\t\tlen = systemsList.length;\n\t\t\tvar entityData = entities[entity.getGuid()];\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tvar system = systemsList[i];\n\t\t\t\tvar componentData = entityData.components[system.id];\n\n\t\t\t\tif (componentData) {\n\t\t\t\t\tsystem.addComponent(entity, componentData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlen = entityData.children.length;\n\t\t\tvar children = entity._children;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tchildren[i] = this._openComponentData(children[i], entities);\n\t\t\t}\n\n\t\t\treturn entity;\n\t\t};\n\n\t\t_proto._addCollapsedToEntities = function _addCollapsedToEntities(app, data) {\n\t\t\tdata.collapsedInstances.forEach(function (h) {\n\t\t\t\tvar expanded = TemplateUtils.expandTemplateEntities(app, h.instanceEntities);\n\t\t\t\tObject.assign(data.entities, expanded);\n\t\t\t});\n\t\t};\n\n\t\treturn SceneParser;\n\t}();\n\n\tvar HierarchyHandler = function () {\n\t\tfunction HierarchyHandler(app) {\n\t\t\tthis._app = app;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = HierarchyHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar assets = this._app.assets;\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tTemplateUtils.waitForTemplatesInScene(response, assets, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar errMsg = 'Error while loading scene ' + url.original;\n\n\t\t\t\t\tif (err.message) {\n\t\t\t\t\t\terrMsg += ': ' + err.message;\n\n\t\t\t\t\t\tif (err.stack) {\n\t\t\t\t\t\t\terrMsg += '\\n' + err.stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrMsg += ': ' + err;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(errMsg);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tthis._app.systems.script.preloading = true;\n\t\t\tvar parser = new SceneParser(this._app, false);\n\t\t\tvar parent = parser.parse(data);\n\t\t\tthis._app.systems.script.preloading = false;\n\t\t\treturn parent;\n\t\t};\n\n\t\treturn HierarchyHandler;\n\t}();\n\n\tvar HtmlHandler = function () {\n\t\tfunction HtmlHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = HtmlHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading html resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn HtmlHandler;\n\t}();\n\n\tvar JsonHandler = function () {\n\t\tfunction JsonHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = JsonHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\n\t\t\tif (url.load.startsWith('blob:')) {\n\t\t\t\toptions.responseType = Http.ResponseType.JSON;\n\t\t\t}\n\n\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading JSON resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn JsonHandler;\n\t}();\n\n\tvar standardMaterialParameterTypes = {\n\t\tname: 'string',\n\t\tchunks: 'chunks',\n\t\tmappingFormat: 'string',\n\t\t_engine: 'boolean',\n\t\tambient: 'rgb',\n\t\tambientTint: 'boolean',\n\t\taoVertexColor: 'boolean',\n\t\taoVertexColorChannel: 'string',\n\t\taoMap: 'texture',\n\t\taoMapChannel: 'string',\n\t\taoMapUv: 'number',\n\t\taoMapTiling: 'vec2',\n\t\taoMapOffset: 'vec2',\n\t\tdiffuse: 'rgb',\n\t\tdiffuseTint: 'boolean',\n\t\tdiffuseVertexColor: 'boolean',\n\t\tdiffuseVertexColorChannel: 'string',\n\t\tdiffuseMap: 'texture',\n\t\tdiffuseMapChannel: 'string',\n\t\tdiffuseMapUv: 'number',\n\t\tdiffuseMapTiling: 'vec2',\n\t\tdiffuseMapOffset: 'vec2',\n\t\tdiffuseDetailMap: 'texture',\n\t\tdiffuseDetailMapChannel: 'string',\n\t\tdiffuseDetailMapUv: 'number',\n\t\tdiffuseDetailMapTiling: 'vec2',\n\t\tdiffuseDetailMapOffset: 'vec2',\n\t\tdiffuseDetailMode: 'string',\n\t\tspecular: 'rgb',\n\t\tspecularTint: 'boolean',\n\t\tspecularVertexColor: 'boolean',\n\t\tspecularVertexColorChannel: 'string',\n\t\tspecularMap: 'texture',\n\t\tspecularMapChannel: 'string',\n\t\tspecularMapUv: 'number',\n\t\tspecularMapTiling: 'vec2',\n\t\tspecularMapOffset: 'vec2',\n\t\tspecularAntialias: 'boolean',\n\t\toccludeSpecular: 'enum:occludeSpecular',\n\t\tuseMetalness: 'boolean',\n\t\tmetalness: 'number',\n\t\tenableGGXSpecular: 'boolean',\n\t\tanisotropy: 'number',\n\t\tmetalnessTint: 'boolean',\n\t\tmetalnessVertexColor: 'boolean',\n\t\tmetalnessVertexColorChannel: 'string',\n\t\tmetalnessMap: 'texture',\n\t\tmetalnessMapChannel: 'string',\n\t\tmetalnessMapUv: 'number',\n\t\tmetalnessMapTiling: 'vec2',\n\t\tmetalnessMapOffset: 'vec2',\n\t\tconserveEnergy: 'boolean',\n\t\tshininess: 'number',\n\t\tglossVertexColor: 'boolean',\n\t\tglossVertexColorChannel: 'string',\n\t\tglossMap: 'texture',\n\t\tglossMapChannel: 'string',\n\t\tglossMapUv: 'number',\n\t\tglossMapTiling: 'vec2',\n\t\tglossMapOffset: 'vec2',\n\t\tclearCoat: 'number',\n\t\tclearCoatVertexColor: 'boolean',\n\t\tclearCoatVertexColorChannel: 'string',\n\t\tclearCoatMap: 'texture',\n\t\tclearCoatMapChannel: 'string',\n\t\tclearCoatMapUv: 'number',\n\t\tclearCoatMapTiling: 'vec2',\n\t\tclearCoatMapOffset: 'vec2',\n\t\tclearCoatGlossiness: 'number',\n\t\tclearCoatGlossVertexColor: 'boolean',\n\t\tclearCoatGlossVertexColorChannel: 'string',\n\t\tclearCoatGlossMap: 'texture',\n\t\tclearCoatGlossMapChannel: 'string',\n\t\tclearCoatGlossMapUv: 'number',\n\t\tclearCoatGlossMapTiling: 'vec2',\n\t\tclearCoatGlossMapOffset: 'vec2',\n\t\tclearCoatBumpiness: 'number',\n\t\tclearCoatNormalMap: 'texture',\n\t\tclearCoatNormalMapUv: 'number',\n\t\tclearCoatNormalMapTiling: 'vec2',\n\t\tclearCoatNormalMapOffset: 'vec2',\n\t\tfresnelModel: 'number',\n\t\temissive: 'rgb',\n\t\temissiveTint: 'boolean',\n\t\temissiveVertexColor: 'boolean',\n\t\temissiveVertexColorChannel: 'string',\n\t\temissiveMap: 'texture',\n\t\temissiveMapChannel: 'string',\n\t\temissiveMapUv: 'number',\n\t\temissiveMapTiling: 'vec2',\n\t\temissiveMapOffset: 'vec2',\n\t\temissiveIntensity: 'number',\n\t\tnormalMap: 'texture',\n\t\tnormalMapTiling: 'vec2',\n\t\tnormalMapOffset: 'vec2',\n\t\tnormalMapUv: 'number',\n\t\tbumpiness: 'number',\n\t\tnormalDetailMap: 'texture',\n\t\tnormalDetailMapTiling: 'vec2',\n\t\tnormalDetailMapOffset: 'vec2',\n\t\tnormalDetailMapUv: 'number',\n\t\tnormalDetailMapBumpiness: 'number',\n\t\theightMap: 'texture',\n\t\theightMapChannel: 'string',\n\t\theightMapUv: 'number',\n\t\theightMapTiling: 'vec2',\n\t\theightMapOffset: 'vec2',\n\t\theightMapFactor: 'number',\n\t\talphaToCoverage: 'boolean',\n\t\talphaTest: 'number',\n\t\talphaFade: 'number',\n\t\topacity: 'number',\n\t\topacityVertexColor: 'boolean',\n\t\topacityVertexColorChannel: 'string',\n\t\topacityMap: 'texture',\n\t\topacityMapChannel: 'string',\n\t\topacityMapUv: 'number',\n\t\topacityMapTiling: 'vec2',\n\t\topacityMapOffset: 'vec2',\n\t\topacityFadesSpecular: 'boolean',\n\t\treflectivity: 'number',\n\t\trefraction: 'number',\n\t\trefractionIndex: 'number',\n\t\tsphereMap: 'texture',\n\t\tcubeMap: 'cubemap',\n\t\tcubeMapProjection: 'number',\n\t\tcubeMapProjectionBox: 'boundingbox',\n\t\tlightVertexColor: 'boolean',\n\t\tlightVertexColorChannel: 'string',\n\t\tlightMap: 'texture',\n\t\tlightMapChannel: 'string',\n\t\tlightMapUv: 'number',\n\t\tlightMapTiling: 'vec2',\n\t\tlightMapOffset: 'vec2',\n\t\tdepthTest: 'boolean',\n\t\tdepthWrite: 'boolean',\n\t\tdepthBias: 'number',\n\t\tslopeDepthBias: 'number',\n\t\tcull: 'enum:cull',\n\t\tblendType: 'enum:blendType',\n\t\tshadingModel: 'enum:shadingModel',\n\t\tuseFog: 'boolean',\n\t\tuseLighting: 'boolean',\n\t\tuseSkybox: 'boolean',\n\t\tuseGammaTonemap: 'boolean',\n\t\tprefilteredCubeMap128: 'texture',\n\t\tprefilteredCubeMap64: 'texture',\n\t\tprefilteredCubeMap32: 'texture',\n\t\tprefilteredCubeMap16: 'texture',\n\t\tprefilteredCubeMap8: 'texture',\n\t\tprefilteredCubeMap4: 'texture'\n\t};\n\tvar key, type$1;\n\tvar standardMaterialTextureParameters = [];\n\n\tfor (key in standardMaterialParameterTypes) {\n\t\ttype$1 = standardMaterialParameterTypes[key];\n\n\t\tif (type$1 === 'texture') {\n\t\t\tstandardMaterialTextureParameters.push(key);\n\t\t}\n\t}\n\n\tvar standardMaterialCubemapParameters = [];\n\n\tfor (key in standardMaterialParameterTypes) {\n\t\ttype$1 = standardMaterialParameterTypes[key];\n\n\t\tif (type$1 === 'cubemap') {\n\t\t\tstandardMaterialCubemapParameters.push(key);\n\t\t}\n\t}\n\n\tvar AssetReference = function () {\n\t\tfunction AssetReference(propertyName, parent, registry, callbacks, scope) {\n\t\t\tthis.propertyName = propertyName;\n\t\t\tthis.parent = parent;\n\t\t\tthis._scope = scope;\n\t\t\tthis._registry = registry;\n\t\t\tthis.id = null;\n\t\t\tthis.url = null;\n\t\t\tthis.asset = null;\n\t\t\tthis._onAssetLoad = callbacks.load;\n\t\t\tthis._onAssetAdd = callbacks.add;\n\t\t\tthis._onAssetRemove = callbacks.remove;\n\t\t\tthis._onAssetUnload = callbacks.unload;\n\t\t}\n\n\t\tvar _proto = AssetReference.prototype;\n\n\t\t_proto._bind = function _bind() {\n\t\t\tif (this.id) {\n\t\t\t\tif (this._onAssetLoad) this._registry.on(\"load:\" + this.id, this._onLoad, this);\n\t\t\t\tif (this._onAssetAdd) this._registry.once(\"add:\" + this.id, this._onAdd, this);\n\t\t\t\tif (this._onAssetRemove) this._registry.on(\"remove:\" + this.id, this._onRemove, this);\n\t\t\t\tif (this._onAssetUnload) this._registry.on(\"unload:\" + this.id, this._onUnload, this);\n\t\t\t}\n\n\t\t\tif (this.url) {\n\t\t\t\tif (this._onAssetLoad) this._registry.on(\"load:url:\" + this.url, this._onLoad, this);\n\t\t\t\tif (this._onAssetAdd) this._registry.once(\"add:url:\" + this.url, this._onAdd, this);\n\t\t\t\tif (this._onAssetRemove) this._registry.on(\"remove:url:\" + this.url, this._onRemove, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbind = function _unbind() {\n\t\t\tif (this.id) {\n\t\t\t\tif (this._onAssetLoad) this._registry.off('load:' + this.id, this._onLoad, this);\n\t\t\t\tif (this._onAssetAdd) this._registry.off('add:' + this.id, this._onAdd, this);\n\t\t\t\tif (this._onAssetRemove) this._registry.off('remove:' + this.id, this._onRemove, this);\n\t\t\t\tif (this._onAssetUnload) this._registry.off(\"unload:\" + this.id, this._onUnload, this);\n\t\t\t}\n\n\t\t\tif (this.url) {\n\t\t\t\tif (this._onAssetLoad) this._registry.off('load:' + this.url, this._onLoad, this);\n\t\t\t\tif (this._onAssetAdd) this._registry.off('add:' + this.url, this._onAdd, this);\n\t\t\t\tif (this._onAssetRemove) this._registry.off('remove:' + this.url, this._onRemove, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onLoad = function _onLoad(asset) {\n\t\t\tthis._onAssetLoad.call(this._scope, this.propertyName, this.parent, asset);\n\t\t};\n\n\t\t_proto._onAdd = function _onAdd(asset) {\n\t\t\tthis.asset = asset;\n\n\t\t\tthis._onAssetAdd.call(this._scope, this.propertyName, this.parent, asset);\n\t\t};\n\n\t\t_proto._onRemove = function _onRemove(asset) {\n\t\t\tthis._onAssetRemove.call(this._scope, this.propertyName, this.parent, asset);\n\n\t\t\tthis.asset = null;\n\t\t};\n\n\t\t_proto._onUnload = function _onUnload(asset) {\n\t\t\tthis._onAssetUnload.call(this._scope, this.propertyName, this.parent, asset);\n\t\t};\n\n\t\t_createClass(AssetReference, [{\n\t\t\tkey: \"id\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._id;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this.url) throw Error(\"Can't set id and url\");\n\n\t\t\t\tthis._unbind();\n\n\t\t\t\tthis._id = value;\n\t\t\t\tthis.asset = this._registry.get(this._id);\n\n\t\t\t\tthis._bind();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"url\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._url;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this.id) throw Error(\"Can't set id and url\");\n\n\t\t\t\tthis._unbind();\n\n\t\t\t\tthis._url = value;\n\t\t\t\tthis.asset = this._registry.getByUrl(this._url);\n\n\t\t\t\tthis._bind();\n\t\t\t}\n\t\t}]);\n\n\t\treturn AssetReference;\n\t}();\n\n\tfunction StandardMaterialValidator() {\n\t\tthis.removeInvalid = true;\n\t\tthis.valid = true;\n\t\tthis.enumValidators = {\n\t\t\toccludeSpecular: this._createEnumValidator([SPECOCC_NONE, SPECOCC_AO, SPECOCC_GLOSSDEPENDENT]),\n\t\t\tcull: this._createEnumValidator([CULLFACE_NONE, CULLFACE_BACK, CULLFACE_FRONT, CULLFACE_FRONTANDBACK]),\n\t\t\tblendType: this._createEnumValidator([BLEND_SUBTRACTIVE, BLEND_ADDITIVE, BLEND_NORMAL, BLEND_NONE, BLEND_PREMULTIPLIED, BLEND_MULTIPLICATIVE, BLEND_ADDITIVEALPHA, BLEND_MULTIPLICATIVE2X, BLEND_SCREEN, BLEND_MIN, BLEND_MAX]),\n\t\t\tshadingModel: this._createEnumValidator([SPECULAR_PHONG, SPECULAR_BLINN])\n\t\t};\n\t}\n\n\tStandardMaterialValidator.prototype.setInvalid = function (key, data) {\n\t\tthis.valid = false;\n\n\t\tif (this.removeInvalid) {\n\t\t\tdelete data[key];\n\t\t}\n\t};\n\n\tStandardMaterialValidator.prototype.validate = function (data) {\n\t\tvar TYPES = standardMaterialParameterTypes;\n\t\tvar type;\n\t\tvar i;\n\t\tvar pathMapping = data.mappingFormat === \"path\";\n\n\t\tfor (var key in data) {\n\t\t\ttype = TYPES[key];\n\n\t\t\tif (!type) {\n\t\t\t\tthis.valid = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (type.startsWith(\"enum\")) {\n\t\t\t\tvar enumType = type.split(\":\")[1];\n\n\t\t\t\tif (this.enumValidators[enumType]) {\n\t\t\t\t\tif (!this.enumValidators[enumType](data[key])) {\n\t\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (typeof data[key] !== 'number') {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\tif (typeof data[key] !== 'boolean') {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'string') {\n\t\t\t\tif (typeof data[key] !== 'string') {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'vec2') {\n\t\t\t\tif (!(data[key] instanceof Array && data[key].length === 2)) {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'rgb') {\n\t\t\t\tif (!(data[key] instanceof Array && data[key].length === 3)) {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'texture') {\n\t\t\t\tif (!pathMapping) {\n\t\t\t\t\tif (!(typeof data[key] === 'number' || data[key] === null)) {\n\t\t\t\t\t\tif (!(data[key] instanceof Texture)) {\n\t\t\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!(typeof data[key] === 'string' || data[key === null])) {\n\t\t\t\t\t\tif (!(data[key] instanceof Texture)) {\n\t\t\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boundingbox') {\n\t\t\t\tif (!(data[key].center && data[key].center instanceof Array && data[key].center.length === 3)) {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\n\t\t\t\tif (!(data[key].halfExtents && data[key].halfExtents instanceof Array && data[key].halfExtents.length === 3)) {\n\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t}\n\t\t\t} else if (type === 'cubemap') {\n\t\t\t\tif (!(typeof data[key] === 'number' || data[key] === null || data[key] === undefined)) {\n\t\t\t\t\tif (!(data[key] instanceof Texture && data[key].cubemap)) {\n\t\t\t\t\t\tthis.setInvalid(key, data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'chunks') {\n\t\t\t\tvar chunkNames = Object.keys(data[key]);\n\n\t\t\t\tfor (i = 0; i < chunkNames.length; i++) {\n\t\t\t\t\tif (typeof data[key][chunkNames[i]] !== 'string') {\n\t\t\t\t\t\tthis.setInvalid(chunkNames[i], data[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Unknown material type: \" + type);\n\t\t\t}\n\t\t}\n\n\t\tdata.validated = true;\n\t\treturn this.valid;\n\t};\n\n\tStandardMaterialValidator.prototype._createEnumValidator = function (values) {\n\t\treturn function (value) {\n\t\t\treturn values.indexOf(value) >= 0;\n\t\t};\n\t};\n\n\tvar JsonStandardMaterialParser = function () {\n\t\tfunction JsonStandardMaterialParser() {\n\t\t\tthis._validator = null;\n\t\t}\n\n\t\tvar _proto = JsonStandardMaterialParser.prototype;\n\n\t\t_proto.parse = function parse(input) {\n\t\t\tvar migrated = this.migrate(input);\n\n\t\t\tvar validated = this._validate(migrated);\n\n\t\t\tvar material = new StandardMaterial();\n\t\t\tthis.initialize(material, validated);\n\t\t\treturn material;\n\t\t};\n\n\t\t_proto.initialize = function initialize(material, data) {\n\t\t\tif (!data.validated) {\n\t\t\t\tif (!this._validator) {\n\t\t\t\t\tthis._validator = new StandardMaterialValidator();\n\t\t\t\t}\n\n\t\t\t\tthis._validator.validate(data);\n\t\t\t}\n\n\t\t\tif (data.chunks) {\n\t\t\t\tmaterial.chunks.copy(data.chunks);\n\t\t\t}\n\n\t\t\tfor (var key in data) {\n\t\t\t\tvar type = standardMaterialParameterTypes[key];\n\t\t\t\tvar value = data[key];\n\n\t\t\t\tif (type === 'vec2') {\n\t\t\t\t\tmaterial[key] = new Vec2(value[0], value[1]);\n\t\t\t\t} else if (type === 'rgb') {\n\t\t\t\t\tmaterial[key] = new Color(value[0], value[1], value[2]);\n\t\t\t\t} else if (type === 'texture') {\n\t\t\t\t\tif (value instanceof Texture) {\n\t\t\t\t\t\tmaterial[key] = value;\n\t\t\t\t\t} else if (!(material[key] instanceof Texture && typeof value === 'number' && value > 0)) {\n\t\t\t\t\t\tmaterial[key] = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'cubemap') {\n\t\t\t\t\tif (value instanceof Texture) {\n\t\t\t\t\t\tmaterial[key] = value;\n\t\t\t\t\t} else if (!(material[key] instanceof Texture && typeof value === 'number' && value > 0)) {\n\t\t\t\t\t\tmaterial[key] = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'boundingbox') {\n\t\t\t\t\tvar center = new Vec3(value.center[0], value.center[1], value.center[2]);\n\t\t\t\t\tvar halfExtents = new Vec3(value.halfExtents[0], value.halfExtents[1], value.halfExtents[2]);\n\t\t\t\t\tmaterial[key] = new BoundingBox(center, halfExtents);\n\t\t\t\t} else {\n\t\t\t\t\tmaterial[key] = data[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmaterial.update();\n\t\t};\n\n\t\t_proto.migrate = function migrate(data) {\n\t\t\tif (data.shadingModel === undefined) {\n\t\t\t\tif (data.shader === 'blinn') {\n\t\t\t\t\tdata.shadingModel = SPECULAR_BLINN;\n\t\t\t\t} else {\n\t\t\t\t\tdata.shadingModel = SPECULAR_PHONG;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.shader) delete data.shader;\n\n\t\t\tif (data.mapping_format) {\n\t\t\t\tdata.mappingFormat = data.mapping_format;\n\t\t\t\tdelete data.mapping_format;\n\t\t\t}\n\n\t\t\tvar i;\n\t\t\tvar RENAMED_PROPERTIES = [[\"bumpMapFactor\", \"bumpiness\"], [\"aoUvSet\", \"aoMapUv\"], [\"aoMapVertexColor\", \"aoVertexColor\"], [\"diffuseMapVertexColor\", \"diffuseVertexColor\"], [\"emissiveMapVertexColor\", \"emissiveVertexColor\"], [\"specularMapVertexColor\", \"specularVertexColor\"], [\"metalnessMapVertexColor\", \"metalnessVertexColor\"], [\"opacityMapVertexColor\", \"opacityVertexColor\"], [\"glossMapVertexColor\", \"glossVertexColor\"], [\"lightMapVertexColor\", \"lightVertexColor\"], [\"diffuseMapTint\", \"diffuseTint\"], [\"specularMapTint\", \"specularTint\"], [\"emissiveMapTint\", \"emissiveTint\"], [\"metalnessMapTint\", \"metalnessTint\"]];\n\n\t\t\tfor (i = 0; i < RENAMED_PROPERTIES.length; i++) {\n\t\t\t\tvar _old = RENAMED_PROPERTIES[i][0];\n\t\t\t\tvar _new = RENAMED_PROPERTIES[i][1];\n\n\t\t\t\tif (data[_old] !== undefined && !(data[_new] !== undefined)) {\n\t\t\t\t\tdata[_new] = data[_old];\n\t\t\t\t\tdelete data[_old];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar DEPRECATED_PROPERTIES = ['fresnelFactor', 'shadowSampleType'];\n\n\t\t\tfor (i = 0; i < DEPRECATED_PROPERTIES.length; i++) {\n\t\t\t\tvar name = DEPRECATED_PROPERTIES[i];\n\n\t\t\t\tif (data.hasOwnProperty(name)) {\n\t\t\t\t\tdelete data[name];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto._validate = function _validate(data) {\n\t\t\tif (!this._validator) {\n\t\t\t\tthis._validator = new StandardMaterialValidator();\n\t\t\t}\n\n\t\t\tthis._validator.validate(data);\n\n\t\t\treturn data;\n\t\t};\n\n\t\treturn JsonStandardMaterialParser;\n\t}();\n\n\tvar PLACEHOLDER_MAP = {\n\t\taoMap: 'white',\n\t\tdiffuseMap: 'gray',\n\t\tspecularMap: 'gray',\n\t\tmetalnessMap: 'black',\n\t\tglossMap: 'gray',\n\t\temissiveMap: 'gray',\n\t\tnormalMap: 'normal',\n\t\theightMap: 'gray',\n\t\topacityMap: 'gray',\n\t\tsphereMap: 'gray',\n\t\tlightMap: 'white'\n\t};\n\n\tvar MaterialHandler = function () {\n\t\tfunction MaterialHandler(app) {\n\t\t\tthis._assets = app.assets;\n\t\t\tthis._device = app.graphicsDevice;\n\t\t\tthis._placeholderTextures = null;\n\t\t\tthis._parser = new JsonStandardMaterialParser();\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = MaterialHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tresponse._engine = true;\n\t\t\t\t\t\tcallback(null, response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(\"Error loading material: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tvar material = this._parser.parse(data);\n\n\t\t\tif (data._engine) {\n\t\t\t\tmaterial._data = data;\n\t\t\t\tdelete data._engine;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t};\n\n\t\t_proto._createPlaceholders = function _createPlaceholders() {\n\t\t\tthis._placeholderTextures = {};\n\t\t\tvar textures = {\n\t\t\t\twhite: [255, 255, 255, 255],\n\t\t\t\tgray: [128, 128, 128, 255],\n\t\t\t\tblack: [0, 0, 0, 255],\n\t\t\t\tnormal: [128, 128, 255, 255]\n\t\t\t};\n\n\t\t\tfor (var key in textures) {\n\t\t\t\tif (!textures.hasOwnProperty(key)) continue;\n\t\t\t\tthis._placeholderTextures[key] = new Texture(this._device, {\n\t\t\t\t\twidth: 2,\n\t\t\t\t\theight: 2,\n\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8\n\t\t\t\t});\n\t\t\t\tthis._placeholderTextures[key].name = 'placeholder';\n\n\t\t\t\tvar pixels = this._placeholderTextures[key].lock();\n\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tfor (var c = 0; c < 4; c++) {\n\t\t\t\t\t\tpixels[i * 4 + c] = textures[key][c];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._placeholderTextures[key].unlock();\n\t\t\t}\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tif (asset.resource._data) {\n\t\t\t\tasset._data = asset.resource._data;\n\t\t\t\tdelete asset.resource._data;\n\t\t\t}\n\n\t\t\tasset.data.name = asset.name;\n\t\t\tasset.resource.name = asset.name;\n\n\t\t\tthis._bindAndAssignAssets(asset, assets);\n\n\t\t\tasset.off('unload', this._onAssetUnload, this);\n\t\t\tasset.on('unload', this._onAssetUnload, this);\n\t\t};\n\n\t\t_proto._onAssetUnload = function _onAssetUnload(asset) {\n\t\t\tdelete asset.data.parameters;\n\t\t\tdelete asset.data.chunks;\n\t\t\tdelete asset.data.name;\n\t\t};\n\n\t\t_proto._assignTexture = function _assignTexture(parameterName, materialAsset, texture) {\n\t\t\tmaterialAsset.data[parameterName] = texture;\n\t\t\tmaterialAsset.resource[parameterName] = texture;\n\t\t};\n\n\t\t_proto._assignPlaceholderTexture = function _assignPlaceholderTexture(parameterName, materialAsset) {\n\t\t\tif (!this._placeholderTextures) {\n\t\t\t\tthis._createPlaceholders();\n\t\t\t}\n\n\t\t\tvar placeholder = PLACEHOLDER_MAP[parameterName];\n\t\t\tvar texture = this._placeholderTextures[placeholder];\n\t\t\tmaterialAsset.resource[parameterName] = texture;\n\t\t};\n\n\t\t_proto._onTextureLoad = function _onTextureLoad(parameterName, materialAsset, textureAsset) {\n\t\t\tthis._assignTexture(parameterName, materialAsset, textureAsset.resource);\n\n\t\t\tmaterialAsset.resource.update();\n\t\t};\n\n\t\t_proto._onTextureAdd = function _onTextureAdd(parameterName, materialAsset, textureAsset) {\n\t\t\tthis._assets.load(textureAsset);\n\t\t};\n\n\t\t_proto._onTextureRemove = function _onTextureRemove(parameterName, materialAsset, textureAsset) {\n\t\t\tvar material = materialAsset.resource;\n\n\t\t\tif (material) {\n\t\t\t\tif (material[parameterName] === textureAsset.resource) {\n\t\t\t\t\tthis._assignTexture(parameterName, materialAsset, null);\n\n\t\t\t\t\tmaterial.update();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._assignCubemap = function _assignCubemap(parameterName, materialAsset, textures) {\n\t\t\tmaterialAsset.data[parameterName] = textures[0];\n\n\t\t\tif (textures.length === 7) {\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap128 = textures[1];\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap64 = textures[2];\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap32 = textures[3];\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap16 = textures[4];\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap8 = textures[5];\n\t\t\t\tmaterialAsset.data.prefilteredCubeMap4 = textures[6];\n\t\t\t}\n\t\t};\n\n\t\t_proto._onCubemapLoad = function _onCubemapLoad(parameterName, materialAsset, cubemapAsset) {\n\t\t\tthis._assignCubemap(parameterName, materialAsset, cubemapAsset.resources);\n\n\t\t\tthis._parser.initialize(materialAsset.resource, materialAsset.data);\n\t\t};\n\n\t\t_proto._onCubemapAdd = function _onCubemapAdd(parameterName, materialAsset, cubemapAsset) {\n\t\t\tif (materialAsset.data.shadingModel === SPECULAR_PHONG) {\n\t\t\t\tmaterialAsset.loadFaces = true;\n\t\t\t}\n\n\t\t\tthis._assets.load(cubemapAsset);\n\t\t};\n\n\t\t_proto._onCubemapRemove = function _onCubemapRemove(parameterName, materialAsset, cubemapAsset) {\n\t\t\tvar material = materialAsset.resource;\n\n\t\t\tif (material[parameterName] === cubemapAsset.resource) {\n\t\t\t\tthis._assignCubemap(parameterName, materialAsset, [null, null, null, null, null, null, null]);\n\n\t\t\t\tmaterial.update();\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindAndAssignAssets = function _bindAndAssignAssets(materialAsset, assets) {\n\t\t\tvar data = this._parser.migrate(materialAsset.data);\n\n\t\t\tvar material = materialAsset.resource;\n\t\t\tvar pathMapping = data.mappingFormat === \"path\";\n\t\t\tvar TEXTURES = standardMaterialTextureParameters;\n\t\t\tvar i, name, assetReference;\n\n\t\t\tfor (i = 0; i < TEXTURES.length; i++) {\n\t\t\t\tname = TEXTURES[i];\n\t\t\t\tassetReference = material._assetReferences[name];\n\n\t\t\t\tif (data[name] && !(data[name] instanceof Texture)) {\n\t\t\t\t\tif (!assetReference) {\n\t\t\t\t\t\tassetReference = new AssetReference(name, materialAsset, assets, {\n\t\t\t\t\t\t\tload: this._onTextureLoad,\n\t\t\t\t\t\t\tadd: this._onTextureAdd,\n\t\t\t\t\t\t\tremove: this._onTextureRemove\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tmaterial._assetReferences[name] = assetReference;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pathMapping) {\n\t\t\t\t\t\tassetReference.url = materialAsset.getAbsoluteUrl(data[name]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassetReference.id = data[name];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (assetReference.asset) {\n\t\t\t\t\t\tif (assetReference.asset.resource) {\n\t\t\t\t\t\t\tthis._assignTexture(name, materialAsset, assetReference.asset.resource);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._assignPlaceholderTexture(name, materialAsset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tassets.load(assetReference.asset);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (assetReference) {\n\t\t\t\t\t\tif (pathMapping) {\n\t\t\t\t\t\t\tassetReference.url = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassetReference.id = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar CUBEMAPS = standardMaterialCubemapParameters;\n\n\t\t\tfor (i = 0; i < CUBEMAPS.length; i++) {\n\t\t\t\tname = CUBEMAPS[i];\n\t\t\t\tassetReference = material._assetReferences[name];\n\n\t\t\t\tif (data[name] && !(data[name] instanceof Texture)) {\n\t\t\t\t\tif (!assetReference) {\n\t\t\t\t\t\tassetReference = new AssetReference(name, materialAsset, assets, {\n\t\t\t\t\t\t\tload: this._onCubemapLoad,\n\t\t\t\t\t\t\tadd: this._onCubemapAdd,\n\t\t\t\t\t\t\tremove: this._onCubemapRemove\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tmaterial._assetReferences[name] = assetReference;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pathMapping) {\n\t\t\t\t\t\tassetReference.url = data[name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassetReference.id = data[name];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (assetReference.asset) {\n\t\t\t\t\t\tif (assetReference.asset.loaded) {\n\t\t\t\t\t\t\tthis._assignCubemap(name, materialAsset, assetReference.asset.resources);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tassets.load(assetReference.asset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._parser.initialize(material, data);\n\t\t};\n\n\t\treturn MaterialHandler;\n\t}();\n\n\tvar GlbModelParser = function () {\n\t\tfunction GlbModelParser(device) {\n\t\t\tthis._device = device;\n\t\t}\n\n\t\tvar _proto = GlbModelParser.prototype;\n\n\t\t_proto.parse = function parse(data) {\n\t\t\tvar glb = GlbParser.parse(\"filename.glb\", data, this._device);\n\n\t\t\tif (!glb) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn GlbParser.createModel(glb, Material.defaultMaterial);\n\t\t};\n\n\t\treturn GlbModelParser;\n\t}();\n\n\tvar PartitionedVertex = function PartitionedVertex() {\n\t\tthis.index = 0;\n\t\tthis.boneIndices = [0, 0, 0, 0];\n\t};\n\n\tvar SkinPartition = function () {\n\t\tfunction SkinPartition() {\n\t\t\tthis.partition = 0;\n\t\t\tthis.vertexStart = 0;\n\t\t\tthis.vertexCount = 0;\n\t\t\tthis.indexStart = 0;\n\t\t\tthis.indexCount = 0;\n\t\t\tthis.boneIndices = [];\n\t\t\tthis.vertices = [];\n\t\t\tthis.indices = [];\n\t\t\tthis.indexMap = {};\n\t\t}\n\n\t\tvar _proto = SkinPartition.prototype;\n\n\t\t_proto.addVertex = function addVertex(vertex, idx, vertexArray) {\n\t\t\tvar remappedIndex = -1;\n\n\t\t\tif (this.indexMap[idx] !== undefined) {\n\t\t\t\tremappedIndex = this.indexMap[idx];\n\t\t\t\tthis.indices.push(remappedIndex);\n\t\t\t} else {\n\t\t\t\tfor (var influence = 0; influence < 4; influence++) {\n\t\t\t\t\tif (vertexArray.blendWeight.data[idx * 4 + influence] === 0) continue;\n\t\t\t\t\tvar originalBoneIndex = vertexArray.blendIndices.data[vertex.index * 4 + influence];\n\t\t\t\t\tvertex.boneIndices[influence] = this.getBoneRemap(originalBoneIndex);\n\t\t\t\t}\n\n\t\t\t\tremappedIndex = this.vertices.length;\n\t\t\t\tthis.indices.push(remappedIndex);\n\t\t\t\tthis.vertices.push(vertex);\n\t\t\t\tthis.indexMap[idx] = remappedIndex;\n\t\t\t}\n\t\t};\n\n\t\t_proto.addPrimitive = function addPrimitive(vertices, vertexIndices, vertexArray, boneLimit) {\n\t\t\tvar i, j;\n\t\t\tvar bonesToAdd = [];\n\t\t\tvar bonesToAddCount = 0;\n\t\t\tvar vertexCount = vertices.length;\n\n\t\t\tfor (i = 0; i < vertexCount; i++) {\n\t\t\t\tvar vertex = vertices[i];\n\t\t\t\tvar idx = vertex.index;\n\n\t\t\t\tfor (var influence = 0; influence < 4; influence++) {\n\t\t\t\t\tif (vertexArray.blendWeight.data[idx * 4 + influence] > 0) {\n\t\t\t\t\t\tvar boneIndex = vertexArray.blendIndices.data[idx * 4 + influence];\n\t\t\t\t\t\tvar needToAdd = true;\n\n\t\t\t\t\t\tfor (j = 0; j < bonesToAddCount; j++) {\n\t\t\t\t\t\t\tif (bonesToAdd[j] == boneIndex) {\n\t\t\t\t\t\t\t\tneedToAdd = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (needToAdd) {\n\t\t\t\t\t\t\tbonesToAdd[bonesToAddCount] = boneIndex;\n\t\t\t\t\t\t\tvar boneRemap = this.getBoneRemap(boneIndex);\n\t\t\t\t\t\t\tbonesToAddCount += boneRemap === -1 ? 1 : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.boneIndices.length + bonesToAddCount > boneLimit) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < bonesToAddCount; i++) {\n\t\t\t\tthis.boneIndices.push(bonesToAdd[i]);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < vertexCount; i++) {\n\t\t\t\tthis.addVertex(vertices[i], vertexIndices[i], vertexArray);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.getBoneRemap = function getBoneRemap(boneIndex) {\n\t\t\tfor (var i = 0; i < this.boneIndices.length; i++) {\n\t\t\t\tif (this.boneIndices[i] === boneIndex) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t};\n\n\t\treturn SkinPartition;\n\t}();\n\n\tfunction indicesToReferences(model) {\n\t\tvar i;\n\t\tvar vertices = model.vertices;\n\t\tvar skins = model.skins;\n\t\tvar meshes = model.meshes;\n\t\tvar meshInstances = model.meshInstances;\n\n\t\tfor (i = 0; i < meshes.length; i++) {\n\t\t\tmeshes[i].vertices = vertices[meshes[i].vertices];\n\n\t\t\tif (meshes[i].skin !== undefined) {\n\t\t\t\tmeshes[i].skin = skins[meshes[i].skin];\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\tmeshInstances[i].mesh = meshes[meshInstances[i].mesh];\n\t\t}\n\t}\n\n\tfunction referencesToIndices(model) {\n\t\tvar i;\n\t\tvar vertices = model.vertices;\n\t\tvar skins = model.skins;\n\t\tvar meshes = model.meshes;\n\t\tvar meshInstances = model.meshInstances;\n\n\t\tfor (i = 0; i < meshes.length; i++) {\n\t\t\tmeshes[i].vertices = vertices.indexOf(meshes[i].vertices);\n\n\t\t\tif (meshes[i].skin !== undefined) {\n\t\t\t\tmeshes[i].skin = skins.indexOf(meshes[i].skin);\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\tmeshInstances[i].mesh = meshes.indexOf(meshInstances[i].mesh);\n\t\t}\n\t}\n\n\tfunction partitionSkin(model, materialMappings, boneLimit) {\n\t\tvar i, j, k, index;\n\t\tindicesToReferences(model);\n\t\tvar vertexArrays = model.vertices;\n\t\tvar skins = model.skins;\n\t\tvar mesh;\n\t\tvar meshes = model.meshes;\n\t\tvar meshInstances = model.meshInstances;\n\n\t\tvar getVertex = function getVertex(idx) {\n\t\t\tvar vert = new PartitionedVertex();\n\t\t\tvert.index = idx;\n\t\t\treturn vert;\n\t\t};\n\n\t\tfor (i = skins.length - 1; i >= 0; i--) {\n\t\t\tif (skins[i].boneNames.length > boneLimit) {\n\t\t\t\tvar skin = skins.splice(i, 1)[0];\n\t\t\t\tvar meshesToSplit = [];\n\n\t\t\t\tfor (j = 0; j < meshes.length; j++) {\n\t\t\t\t\tif (meshes[j].skin === skin) {\n\t\t\t\t\t\tmeshesToSplit.push(meshes[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0; j < meshesToSplit.length; j++) {\n\t\t\t\t\tindex = meshes.indexOf(meshesToSplit[j]);\n\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tmeshes.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (meshesToSplit.length === 0) {\n\t\t\t\t\tthrow new Error('partitionSkin: There should be at least one mesh that references a skin');\n\t\t\t\t}\n\n\t\t\t\tvar vertexArray = meshesToSplit[0].vertices;\n\n\t\t\t\tfor (j = 1; j < meshesToSplit.length; j++) {\n\t\t\t\t\tif (meshesToSplit[j].vertices !== vertexArray) {\n\t\t\t\t\t\tthrow new Error('partitionSkin: All meshes that share a skin should also share the same vertex buffer');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar partition;\n\t\t\t\tvar partitions = [];\n\t\t\t\tvar primitiveVertices = [];\n\t\t\t\tvar primitiveIndices = [];\n\t\t\t\tvar basePartition = 0;\n\n\t\t\t\tfor (j = 0; j < meshesToSplit.length; j++) {\n\t\t\t\t\tmesh = meshesToSplit[j];\n\t\t\t\t\tvar indices = mesh.indices;\n\n\t\t\t\t\tfor (var iIndex = mesh.base; iIndex < mesh.base + mesh.count;) {\n\t\t\t\t\t\tindex = indices[iIndex++];\n\t\t\t\t\t\tprimitiveVertices[0] = getVertex(index);\n\t\t\t\t\t\tprimitiveIndices[0] = index;\n\t\t\t\t\t\tindex = indices[iIndex++];\n\t\t\t\t\t\tprimitiveVertices[1] = getVertex(index);\n\t\t\t\t\t\tprimitiveIndices[1] = index;\n\t\t\t\t\t\tindex = indices[iIndex++];\n\t\t\t\t\t\tprimitiveVertices[2] = getVertex(index);\n\t\t\t\t\t\tprimitiveIndices[2] = index;\n\t\t\t\t\t\tvar added = false;\n\n\t\t\t\t\t\tfor (var iBonePartition = basePartition; iBonePartition < partitions.length; iBonePartition++) {\n\t\t\t\t\t\t\tpartition = partitions[iBonePartition];\n\n\t\t\t\t\t\t\tif (partition.addPrimitive(primitiveVertices, primitiveIndices, vertexArray, boneLimit)) {\n\t\t\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!added) {\n\t\t\t\t\t\t\tpartition = new SkinPartition();\n\t\t\t\t\t\t\tpartition.originalMesh = mesh;\n\t\t\t\t\t\t\tpartition.addPrimitive(primitiveVertices, primitiveIndices, vertexArray, boneLimit);\n\t\t\t\t\t\t\tpartitions.push(partition);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbasePartition = partitions.length;\n\t\t\t\t}\n\n\t\t\t\tvar partitionedVertices = [];\n\t\t\t\tvar partitionedIndices = [];\n\n\t\t\t\tfor (j = 0; j < partitions.length; j++) {\n\t\t\t\t\tpartition = partitions[j];\n\n\t\t\t\t\tif (partition.vertices.length && partition.indices.length) {\n\t\t\t\t\t\tvar vertexStart = partitionedVertices.length;\n\t\t\t\t\t\tvar vertexCount = partition.vertices.length;\n\t\t\t\t\t\tvar indexStart = partitionedIndices.length;\n\t\t\t\t\t\tvar indexCount = partition.indices.length;\n\t\t\t\t\t\tpartition.partition = j;\n\t\t\t\t\t\tpartition.vertexStart = vertexStart;\n\t\t\t\t\t\tpartition.vertexCount = vertexCount;\n\t\t\t\t\t\tpartition.indexStart = indexStart;\n\t\t\t\t\t\tpartition.indexCount = indexCount;\n\t\t\t\t\t\tvar iSour;\n\t\t\t\t\t\tvar iDest;\n\t\t\t\t\t\tiSour = 0;\n\t\t\t\t\t\tiDest = vertexStart;\n\n\t\t\t\t\t\twhile (iSour < vertexCount) {\n\t\t\t\t\t\t\tpartitionedVertices[iDest++] = partition.vertices[iSour++];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tiSour = 0;\n\t\t\t\t\t\tiDest = indexStart;\n\n\t\t\t\t\t\twhile (iSour < indexCount) {\n\t\t\t\t\t\t\tpartitionedIndices[iDest++] = partition.indices[iSour++] + vertexStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar splitSkins = [];\n\n\t\t\t\tfor (j = 0; j < partitions.length; j++) {\n\t\t\t\t\tpartition = partitions[j];\n\t\t\t\t\tvar ibp = [];\n\t\t\t\t\tvar boneNames = [];\n\n\t\t\t\t\tfor (k = 0; k < partition.boneIndices.length; k++) {\n\t\t\t\t\t\tibp.push(skin.inverseBindMatrices[partition.boneIndices[k]]);\n\t\t\t\t\t\tboneNames.push(skin.boneNames[partition.boneIndices[k]]);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar splitSkin = {\n\t\t\t\t\t\tinverseBindMatrices: ibp,\n\t\t\t\t\t\tboneNames: boneNames\n\t\t\t\t\t};\n\t\t\t\t\tsplitSkins.push(splitSkin);\n\t\t\t\t\tskins.push(splitSkin);\n\t\t\t\t}\n\n\t\t\t\tvar attrib, attribName, data, components;\n\t\t\t\tvar splitVertexArray = {};\n\n\t\t\t\tfor (attribName in vertexArray) {\n\t\t\t\t\tsplitVertexArray[attribName] = {\n\t\t\t\t\t\tcomponents: vertexArray[attribName].components,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\ttype: vertexArray[attribName].type\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tfor (attribName in vertexArray) {\n\t\t\t\t\tif (attribName === 'blendIndices') {\n\t\t\t\t\t\tvar dstBoneIndices = splitVertexArray[attribName].data;\n\n\t\t\t\t\t\tfor (j = 0; j < partitionedVertices.length; j++) {\n\t\t\t\t\t\t\tvar srcBoneIndices = partitionedVertices[j].boneIndices;\n\t\t\t\t\t\t\tdstBoneIndices.push(srcBoneIndices[0], srcBoneIndices[1], srcBoneIndices[2], srcBoneIndices[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattrib = vertexArray[attribName];\n\t\t\t\t\t\tdata = attrib.data;\n\t\t\t\t\t\tcomponents = attrib.components;\n\n\t\t\t\t\t\tfor (j = 0; j < partitionedVertices.length; j++) {\n\t\t\t\t\t\t\tindex = partitionedVertices[j].index;\n\n\t\t\t\t\t\t\tfor (k = 0; k < components; k++) {\n\t\t\t\t\t\t\t\tsplitVertexArray[attribName].data.push(data[index * components + k]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvertexArrays[vertexArrays.indexOf(vertexArray)] = splitVertexArray;\n\n\t\t\t\tfor (j = 0; j < partitions.length; j++) {\n\t\t\t\t\tpartition = partitions[j];\n\t\t\t\t\tmesh = {\n\t\t\t\t\t\taabb: {\n\t\t\t\t\t\t\tmin: [0, 0, 0],\n\t\t\t\t\t\t\tmax: [0, 0, 0]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvertices: splitVertexArray,\n\t\t\t\t\t\tskin: splitSkins[j],\n\t\t\t\t\t\tindices: partitionedIndices.splice(0, partition.indexCount),\n\t\t\t\t\t\ttype: 'triangles',\n\t\t\t\t\t\tbase: 0,\n\t\t\t\t\t\tcount: partition.indexCount\n\t\t\t\t\t};\n\t\t\t\t\tmeshes.push(mesh);\n\n\t\t\t\t\tfor (k = meshInstances.length - 1; k >= 0; k--) {\n\t\t\t\t\t\tif (meshInstances[k].mesh === partition.originalMesh) {\n\t\t\t\t\t\t\tmeshInstances.push({\n\t\t\t\t\t\t\t\tmesh: mesh,\n\t\t\t\t\t\t\t\tnode: meshInstances[k].node\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (materialMappings) {\n\t\t\t\t\t\t\t\tmaterialMappings.push({\n\t\t\t\t\t\t\t\t\tmaterial: materialMappings[k].material,\n\t\t\t\t\t\t\t\t\tpath: materialMappings[k].path\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0; j < partitions.length; j++) {\n\t\t\t\t\tpartition = partitions[j];\n\n\t\t\t\t\tfor (k = meshInstances.length - 1; k >= 0; k--) {\n\t\t\t\t\t\tif (meshInstances[k].mesh === partition.originalMesh) {\n\t\t\t\t\t\t\tmeshInstances.splice(k, 1);\n\n\t\t\t\t\t\t\tif (materialMappings) {\n\t\t\t\t\t\t\t\tmaterialMappings.splice(k, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treferencesToIndices(model);\n\t}\n\n\tvar JSON_PRIMITIVE_TYPE = {\n\t\t\"points\": PRIMITIVE_POINTS,\n\t\t\"lines\": PRIMITIVE_LINES,\n\t\t\"lineloop\": PRIMITIVE_LINELOOP,\n\t\t\"linestrip\": PRIMITIVE_LINESTRIP,\n\t\t\"triangles\": PRIMITIVE_TRIANGLES,\n\t\t\"trianglestrip\": PRIMITIVE_TRISTRIP,\n\t\t\"trianglefan\": PRIMITIVE_TRIFAN\n\t};\n\tvar JSON_VERTEX_ELEMENT_TYPE = {\n\t\t\"int8\": TYPE_INT8,\n\t\t\"uint8\": TYPE_UINT8,\n\t\t\"int16\": TYPE_INT16,\n\t\t\"uint16\": TYPE_UINT16,\n\t\t\"int32\": TYPE_INT32,\n\t\t\"uint32\": TYPE_UINT32,\n\t\t\"float32\": TYPE_FLOAT32\n\t};\n\n\tvar JsonModelParser = function () {\n\t\tfunction JsonModelParser(device) {\n\t\t\tthis._device = device;\n\t\t}\n\n\t\tvar _proto = JsonModelParser.prototype;\n\n\t\t_proto.parse = function parse(data) {\n\t\t\tvar modelData = data.model;\n\n\t\t\tif (!modelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (modelData.version <= 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar nodes = this._parseNodes(data);\n\n\t\t\tvar skins = this._parseSkins(data, nodes);\n\n\t\t\tvar vertexBuffers = this._parseVertexBuffers(data);\n\n\t\t\tvar indices = this._parseIndexBuffers(data, vertexBuffers);\n\n\t\t\tvar morphs = this._parseMorphs(data, nodes, vertexBuffers);\n\n\t\t\tvar meshes = this._parseMeshes(data, skins.skins, morphs.morphs, vertexBuffers, indices.buffer, indices.data);\n\n\t\t\tvar meshInstances = this._parseMeshInstances(data, nodes, meshes, skins.skins, skins.instances, morphs.morphs, morphs.instances);\n\n\t\t\tvar model = new Model();\n\t\t\tmodel.graph = nodes[0];\n\t\t\tmodel.meshInstances = meshInstances;\n\t\t\tmodel.skinInstances = skins.instances;\n\t\t\tmodel.morphInstances = morphs.instances;\n\t\t\tmodel.getGraph().syncHierarchy();\n\t\t\treturn model;\n\t\t};\n\n\t\t_proto._parseNodes = function _parseNodes(data) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar nodes = [];\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < modelData.nodes.length; i++) {\n\t\t\t\tvar nodeData = modelData.nodes[i];\n\t\t\t\tvar node = new GraphNode(nodeData.name);\n\t\t\t\tnode.setLocalPosition(nodeData.position[0], nodeData.position[1], nodeData.position[2]);\n\t\t\t\tnode.setLocalEulerAngles(nodeData.rotation[0], nodeData.rotation[1], nodeData.rotation[2]);\n\t\t\t\tnode.setLocalScale(nodeData.scale[0], nodeData.scale[1], nodeData.scale[2]);\n\t\t\t\tnode.scaleCompensation = !!nodeData.scaleCompensation;\n\t\t\t\tnodes.push(node);\n\t\t\t}\n\n\t\t\tfor (i = 1; i < modelData.parents.length; i++) {\n\t\t\t\tnodes[modelData.parents[i]].addChild(nodes[i]);\n\t\t\t}\n\n\t\t\treturn nodes;\n\t\t};\n\n\t\t_proto._parseSkins = function _parseSkins(data, nodes) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar skins = [];\n\t\t\tvar skinInstances = [];\n\t\t\tvar i, j;\n\n\t\t\tif (!this._device.supportsBoneTextures && modelData.skins.length > 0) {\n\t\t\t\tvar boneLimit = this._device.getBoneLimit();\n\n\t\t\t\tpartitionSkin(modelData, null, boneLimit);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < modelData.skins.length; i++) {\n\t\t\t\tvar skinData = modelData.skins[i];\n\t\t\t\tvar inverseBindMatrices = [];\n\n\t\t\t\tfor (j = 0; j < skinData.inverseBindMatrices.length; j++) {\n\t\t\t\t\tvar ibm = skinData.inverseBindMatrices[j];\n\t\t\t\t\tinverseBindMatrices[j] = new Mat4().set(ibm);\n\t\t\t\t}\n\n\t\t\t\tvar skin = new Skin(this._device, inverseBindMatrices, skinData.boneNames);\n\t\t\t\tskins.push(skin);\n\t\t\t\tvar skinInstance = new SkinInstance(skin);\n\t\t\t\tvar bones = [];\n\n\t\t\t\tfor (j = 0; j < skin.boneNames.length; j++) {\n\t\t\t\t\tvar boneName = skin.boneNames[j];\n\t\t\t\t\tvar bone = nodes[0].findByName(boneName);\n\t\t\t\t\tbones.push(bone);\n\t\t\t\t}\n\n\t\t\t\tskinInstance.bones = bones;\n\t\t\t\tskinInstances.push(skinInstance);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tskins: skins,\n\t\t\t\tinstances: skinInstances\n\t\t\t};\n\t\t};\n\n\t\t_proto._getMorphVertexCount = function _getMorphVertexCount(modelData, morphIndex, vertexBuffers) {\n\t\t\tfor (var i = 0; i < modelData.meshes.length; i++) {\n\t\t\t\tvar meshData = modelData.meshes[i];\n\n\t\t\t\tif (meshData.morph === morphIndex) {\n\t\t\t\t\tvar vertexBuffer = vertexBuffers[meshData.vertices];\n\t\t\t\t\treturn vertexBuffer.numVertices;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_proto._parseMorphs = function _parseMorphs(data, nodes, vertexBuffers) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar morphs = [];\n\t\t\tvar morphInstances = [];\n\t\t\tvar i, j, vertexCount;\n\t\t\tvar targets, morphTarget, morphTargetArray;\n\n\t\t\tif (modelData.morphs) {\n\t\t\t\tvar sparseToFull = function sparseToFull(data, indices, totalCount) {\n\t\t\t\t\tvar full = new Float32Array(totalCount * 3);\n\n\t\t\t\t\tfor (var s = 0; s < indices.length; s++) {\n\t\t\t\t\t\tvar dstIndex = indices[s] * 3;\n\t\t\t\t\t\tfull[dstIndex] = data[s * 3];\n\t\t\t\t\t\tfull[dstIndex + 1] = data[s * 3 + 1];\n\t\t\t\t\t\tfull[dstIndex + 2] = data[s * 3 + 2];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn full;\n\t\t\t\t};\n\n\t\t\t\tfor (i = 0; i < modelData.morphs.length; i++) {\n\t\t\t\t\ttargets = modelData.morphs[i].targets;\n\t\t\t\t\tmorphTargetArray = [];\n\t\t\t\t\tvertexCount = this._getMorphVertexCount(modelData, i, vertexBuffers);\n\n\t\t\t\t\tfor (j = 0; j < targets.length; j++) {\n\t\t\t\t\t\tvar targetAabb = targets[j].aabb;\n\t\t\t\t\t\tvar min = targetAabb.min;\n\t\t\t\t\t\tvar max = targetAabb.max;\n\t\t\t\t\t\tvar aabb = new BoundingBox(new Vec3((max[0] + min[0]) * 0.5, (max[1] + min[1]) * 0.5, (max[2] + min[2]) * 0.5), new Vec3((max[0] - min[0]) * 0.5, (max[1] - min[1]) * 0.5, (max[2] - min[2]) * 0.5));\n\t\t\t\t\t\tvar indices = targets[j].indices;\n\t\t\t\t\t\tvar deltaPositions = targets[j].deltaPositions;\n\t\t\t\t\t\tvar deltaNormals = targets[j].deltaNormals;\n\n\t\t\t\t\t\tif (indices) {\n\t\t\t\t\t\t\tdeltaPositions = sparseToFull(deltaPositions, indices, vertexCount);\n\t\t\t\t\t\t\tdeltaNormals = sparseToFull(deltaNormals, indices, vertexCount);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphTarget = new MorphTarget({\n\t\t\t\t\t\t\tdeltaPositions: deltaPositions,\n\t\t\t\t\t\t\tdeltaNormals: deltaNormals,\n\t\t\t\t\t\t\tname: targets[j].name,\n\t\t\t\t\t\t\taabb: aabb\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmorphTargetArray.push(morphTarget);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar morph = new Morph(morphTargetArray, this._device);\n\t\t\t\t\tmorphs.push(morph);\n\t\t\t\t\tvar morphInstance = new MorphInstance(morph);\n\t\t\t\t\tmorphInstances.push(morphInstance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmorphs: morphs,\n\t\t\t\tinstances: morphInstances\n\t\t\t};\n\t\t};\n\n\t\t_proto._parseVertexBuffers = function _parseVertexBuffers(data) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar vertexBuffers = [];\n\t\t\tvar attribute, attributeName;\n\t\t\tvar attributeMap = {\n\t\t\t\tposition: SEMANTIC_POSITION,\n\t\t\t\tnormal: SEMANTIC_NORMAL,\n\t\t\t\ttangent: SEMANTIC_TANGENT,\n\t\t\t\tblendWeight: SEMANTIC_BLENDWEIGHT,\n\t\t\t\tblendIndices: SEMANTIC_BLENDINDICES,\n\t\t\t\tcolor: SEMANTIC_COLOR,\n\t\t\t\ttexCoord0: SEMANTIC_TEXCOORD0,\n\t\t\t\ttexCoord1: SEMANTIC_TEXCOORD1,\n\t\t\t\ttexCoord2: SEMANTIC_TEXCOORD2,\n\t\t\t\ttexCoord3: SEMANTIC_TEXCOORD3,\n\t\t\t\ttexCoord4: SEMANTIC_TEXCOORD4,\n\t\t\t\ttexCoord5: SEMANTIC_TEXCOORD5,\n\t\t\t\ttexCoord6: SEMANTIC_TEXCOORD6,\n\t\t\t\ttexCoord7: SEMANTIC_TEXCOORD7\n\t\t\t};\n\t\t\tvar i, j;\n\n\t\t\tfor (i = 0; i < modelData.vertices.length; i++) {\n\t\t\t\tvar vertexData = modelData.vertices[i];\n\t\t\t\tvar formatDesc = [];\n\n\t\t\t\tfor (attributeName in vertexData) {\n\t\t\t\t\tattribute = vertexData[attributeName];\n\t\t\t\t\tformatDesc.push({\n\t\t\t\t\t\tsemantic: attributeMap[attributeName],\n\t\t\t\t\t\tcomponents: attribute.components,\n\t\t\t\t\t\ttype: JSON_VERTEX_ELEMENT_TYPE[attribute.type],\n\t\t\t\t\t\tnormalize: attributeMap[attributeName] === SEMANTIC_COLOR\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar vertexFormat = new VertexFormat(this._device, formatDesc);\n\t\t\t\tvar numVertices = vertexData.position.data.length / vertexData.position.components;\n\t\t\t\tvar vertexBuffer = new VertexBuffer(this._device, vertexFormat, numVertices);\n\t\t\t\tvar iterator = new VertexIterator(vertexBuffer);\n\n\t\t\t\tfor (j = 0; j < numVertices; j++) {\n\t\t\t\t\tfor (attributeName in vertexData) {\n\t\t\t\t\t\tattribute = vertexData[attributeName];\n\n\t\t\t\t\t\tswitch (attribute.components) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\titerator.element[attributeMap[attributeName]].set(attribute.data[j]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\titerator.element[attributeMap[attributeName]].set(attribute.data[j * 2], attribute.data[j * 2 + 1]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\titerator.element[attributeMap[attributeName]].set(attribute.data[j * 3], attribute.data[j * 3 + 1], attribute.data[j * 3 + 2]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\titerator.element[attributeMap[attributeName]].set(attribute.data[j * 4], attribute.data[j * 4 + 1], attribute.data[j * 4 + 2], attribute.data[j * 4 + 3]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\titerator.next();\n\t\t\t\t}\n\n\t\t\t\titerator.end();\n\t\t\t\tvertexBuffers.push(vertexBuffer);\n\t\t\t}\n\n\t\t\treturn vertexBuffers;\n\t\t};\n\n\t\t_proto._parseIndexBuffers = function _parseIndexBuffers(data, vertexBuffers) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar indexBuffer = null;\n\t\t\tvar indexData = null;\n\t\t\tvar i;\n\t\t\tvar numIndices = 0;\n\n\t\t\tfor (i = 0; i < modelData.meshes.length; i++) {\n\t\t\t\tvar meshData = modelData.meshes[i];\n\n\t\t\t\tif (meshData.indices !== undefined) {\n\t\t\t\t\tnumIndices += meshData.indices.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar maxVerts = 0;\n\n\t\t\tfor (i = 0; i < vertexBuffers.length; i++) {\n\t\t\t\tmaxVerts = Math.max(maxVerts, vertexBuffers[i].numVertices);\n\t\t\t}\n\n\t\t\tif (numIndices > 0) {\n\t\t\t\tif (maxVerts > 0xFFFF && this._device.extUintElement) {\n\t\t\t\t\tindexBuffer = new IndexBuffer(this._device, INDEXFORMAT_UINT32, numIndices);\n\t\t\t\t\tindexData = new Uint32Array(indexBuffer.lock());\n\t\t\t\t} else {\n\t\t\t\t\tindexBuffer = new IndexBuffer(this._device, INDEXFORMAT_UINT16, numIndices);\n\t\t\t\t\tindexData = new Uint16Array(indexBuffer.lock());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: indexBuffer,\n\t\t\t\tdata: indexData\n\t\t\t};\n\t\t};\n\n\t\t_proto._parseMeshes = function _parseMeshes(data, skins, morphs, vertexBuffers, indexBuffer, indexData) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar meshes = [];\n\t\t\tvar indexBase = 0;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < modelData.meshes.length; i++) {\n\t\t\t\tvar meshData = modelData.meshes[i];\n\t\t\t\tvar meshAabb = meshData.aabb;\n\t\t\t\tvar min = meshAabb.min;\n\t\t\t\tvar max = meshAabb.max;\n\t\t\t\tvar aabb = new BoundingBox(new Vec3((max[0] + min[0]) * 0.5, (max[1] + min[1]) * 0.5, (max[2] + min[2]) * 0.5), new Vec3((max[0] - min[0]) * 0.5, (max[1] - min[1]) * 0.5, (max[2] - min[2]) * 0.5));\n\t\t\t\tvar indexed = meshData.indices !== undefined;\n\t\t\t\tvar mesh = new Mesh(this._device);\n\t\t\t\tmesh.vertexBuffer = vertexBuffers[meshData.vertices];\n\t\t\t\tmesh.indexBuffer[0] = indexed ? indexBuffer : null;\n\t\t\t\tmesh.primitive[0].type = JSON_PRIMITIVE_TYPE[meshData.type];\n\t\t\t\tmesh.primitive[0].base = indexed ? meshData.base + indexBase : meshData.base;\n\t\t\t\tmesh.primitive[0].count = meshData.count;\n\t\t\t\tmesh.primitive[0].indexed = indexed;\n\t\t\t\tmesh.skin = meshData.skin !== undefined ? skins[meshData.skin] : null;\n\t\t\t\tmesh.morph = meshData.morph !== undefined ? morphs[meshData.morph] : null;\n\t\t\t\tmesh.aabb = aabb;\n\n\t\t\t\tif (indexed) {\n\t\t\t\t\tindexData.set(meshData.indices, indexBase);\n\t\t\t\t\tindexBase += meshData.indices.length;\n\t\t\t\t}\n\n\t\t\t\tmeshes.push(mesh);\n\t\t\t}\n\n\t\t\tif (indexBuffer !== null) {\n\t\t\t\tindexBuffer.unlock();\n\t\t\t}\n\n\t\t\treturn meshes;\n\t\t};\n\n\t\t_proto._parseMeshInstances = function _parseMeshInstances(data, nodes, meshes, skins, skinInstances, morphs, morphInstances) {\n\t\t\tvar modelData = data.model;\n\t\t\tvar meshInstances = [];\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < modelData.meshInstances.length; i++) {\n\t\t\t\tvar meshInstanceData = modelData.meshInstances[i];\n\t\t\t\tvar node = nodes[meshInstanceData.node];\n\t\t\t\tvar mesh = meshes[meshInstanceData.mesh];\n\t\t\t\tvar meshInstance = new MeshInstance(node, mesh, Material.defaultMaterial);\n\n\t\t\t\tif (mesh.skin) {\n\t\t\t\t\tvar skinIndex = skins.indexOf(mesh.skin);\n\t\t\t\t\tmeshInstance.skinInstance = skinInstances[skinIndex];\n\t\t\t\t}\n\n\t\t\t\tif (mesh.morph) {\n\t\t\t\t\tvar morphIndex = morphs.indexOf(mesh.morph);\n\t\t\t\t\tmeshInstance.morphInstance = morphInstances[morphIndex];\n\t\t\t\t}\n\n\t\t\t\tmeshInstances.push(meshInstance);\n\t\t\t}\n\n\t\t\treturn meshInstances;\n\t\t};\n\n\t\treturn JsonModelParser;\n\t}();\n\n\tvar ModelHandler = function () {\n\t\tfunction ModelHandler(device, defaultMaterial) {\n\t\t\tthis._device = device;\n\t\t\tthis._parsers = [];\n\t\t\tthis._defaultMaterial = defaultMaterial;\n\t\t\tthis.maxRetries = 0;\n\t\t\tthis.addParser(new JsonModelParser(this._device), function (url, data) {\n\t\t\t\treturn path.getExtension(url) === '.json';\n\t\t\t});\n\t\t\tthis.addParser(new GlbModelParser(this._device), function (url, data) {\n\t\t\t\treturn path.getExtension(url) === '.glb';\n\t\t\t});\n\t\t}\n\n\t\tvar _proto = ModelHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\n\t\t\tif (url.load.startsWith('blob:') || url.load.startsWith('data:')) {\n\t\t\t\tif (path.getExtension(url.original).toLowerCase() === '.glb') {\n\t\t\t\t\toptions.responseType = Http.ResponseType.ARRAY_BUFFER;\n\t\t\t\t} else {\n\t\t\t\t\toptions.responseType = Http.ResponseType.JSON;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thttp.get(url.load, options, function (err, response) {\n\t\t\t\tif (!callback) return;\n\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading model: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tfor (var i = 0; i < this._parsers.length; i++) {\n\t\t\t\tvar p = this._parsers[i];\n\n\t\t\t\tif (p.decider(url, data)) {\n\t\t\t\t\treturn p.parser.parse(data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tif (!asset.resource) return;\n\t\t\tvar data = asset.data;\n\t\t\tvar self = this;\n\t\t\tasset.resource.meshInstances.forEach(function (meshInstance, i) {\n\t\t\t\tif (data.mapping) {\n\t\t\t\t\tvar handleMaterial = function handleMaterial(asset) {\n\t\t\t\t\t\tif (asset.resource) {\n\t\t\t\t\t\t\tmeshInstance.material = asset.resource;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tasset.once('load', handleMaterial);\n\t\t\t\t\t\t\tassets.load(asset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tasset.once('remove', function (asset) {\n\t\t\t\t\t\t\tif (meshInstance.material === asset.resource) {\n\t\t\t\t\t\t\t\tmeshInstance.material = self._defaultMaterial;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!data.mapping[i]) {\n\t\t\t\t\t\tmeshInstance.material = self._defaultMaterial;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar id = data.mapping[i].material;\n\t\t\t\t\tvar url = data.mapping[i].path;\n\t\t\t\t\tvar material;\n\n\t\t\t\t\tif (id !== undefined) {\n\t\t\t\t\t\tif (!id) {\n\t\t\t\t\t\t\tmeshInstance.material = self._defaultMaterial;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmaterial = assets.get(id);\n\n\t\t\t\t\t\t\tif (material) {\n\t\t\t\t\t\t\t\thandleMaterial(material);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tassets.once('add:' + id, handleMaterial);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (url) {\n\t\t\t\t\t\tvar path = asset.getAbsoluteUrl(data.mapping[i].path);\n\t\t\t\t\t\tmaterial = assets.getByUrl(path);\n\n\t\t\t\t\t\tif (material) {\n\t\t\t\t\t\t\thandleMaterial(material);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassets.once('add:url:' + path, handleMaterial);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.addParser = function addParser(parser, decider) {\n\t\t\tthis._parsers.push({\n\t\t\t\tparser: parser,\n\t\t\t\tdecider: decider\n\t\t\t});\n\t\t};\n\n\t\treturn ModelHandler;\n\t}();\n\n\tvar Render = function (_EventHandler) {\n\t\t_inheritsLoose(Render, _EventHandler);\n\n\t\tfunction Render() {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._meshes = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\t_createClass(Render, [{\n\t\t\tkey: \"meshes\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._meshes;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._meshes = value;\n\t\t\t\tthis.fire('set:meshes', value);\n\t\t\t}\n\t\t}]);\n\n\t\treturn Render;\n\t}(EventHandler);\n\n\tfunction onContainerAssetLoaded(containerAsset) {\n\t\tvar renderAsset = this;\n\t\tif (!renderAsset.resource) return;\n\t\tvar containerResource = containerAsset.resource;\n\t\tvar render = containerResource.renders && containerResource.renders[renderAsset.data.renderIndex];\n\n\t\tif (render) {\n\t\t\trenderAsset.resource.meshes = render.resource;\n\t\t}\n\t}\n\n\tfunction onContainerAssetAdded(containerAsset) {\n\t\tvar renderAsset = this;\n\t\trenderAsset.registry.off('load:' + containerAsset.id, onContainerAssetLoaded, renderAsset);\n\t\trenderAsset.registry.on('load:' + containerAsset.id, onContainerAssetLoaded, renderAsset);\n\t\trenderAsset.registry.off('remove:' + containerAsset.id, onContainerAssetRemoved, renderAsset);\n\t\trenderAsset.registry.once('remove:' + containerAsset.id, onContainerAssetRemoved, renderAsset);\n\n\t\tif (!containerAsset.resource) {\n\t\t\trenderAsset.registry.load(containerAsset);\n\t\t} else {\n\t\t\tonContainerAssetLoaded.call(renderAsset, containerAsset);\n\t\t}\n\t}\n\n\tfunction onContainerAssetRemoved(containerAsset) {\n\t\tvar renderAsset = this;\n\t\trenderAsset.registry.off('load:' + containerAsset.id, onContainerAssetLoaded, renderAsset);\n\n\t\tif (renderAsset.resource) {\n\t\t\trenderAsset.resource.meshes = null;\n\t\t}\n\t}\n\n\tvar RenderHandler = function () {\n\t\tfunction RenderHandler(assets) {\n\t\t\tthis._registry = assets;\n\t\t}\n\n\t\tvar _proto = RenderHandler.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn new Render();\n\t\t};\n\n\t\t_proto.patch = function patch(asset, registry) {\n\t\t\tif (!asset.data.containerAsset) return;\n\t\t\tvar containerAsset = registry.get(asset.data.containerAsset);\n\n\t\t\tif (!containerAsset) {\n\t\t\t\tregistry.once('add:' + asset.data.containerAsset, onContainerAssetAdded, asset);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonContainerAssetAdded.call(asset, containerAsset);\n\t\t};\n\n\t\treturn RenderHandler;\n\t}();\n\n\tvar ResourceLoader = function () {\n\t\tfunction ResourceLoader(app) {\n\t\t\tthis._handlers = {};\n\t\t\tthis._requests = {};\n\t\t\tthis._cache = {};\n\t\t\tthis._app = app;\n\t\t}\n\n\t\tvar _proto = ResourceLoader.prototype;\n\n\t\t_proto.addHandler = function addHandler(type, handler) {\n\t\t\tthis._handlers[type] = handler;\n\t\t\thandler._loader = this;\n\t\t};\n\n\t\t_proto.removeHandler = function removeHandler(type) {\n\t\t\tdelete this._handlers[type];\n\t\t};\n\n\t\t_proto.getHandler = function getHandler(type) {\n\t\t\treturn this._handlers[type];\n\t\t};\n\n\t\t_proto.load = function load(url, type, callback, asset) {\n\t\t\tvar handler = this._handlers[type];\n\n\t\t\tif (!handler) {\n\t\t\t\tvar err = \"No handler for asset type: \" + type;\n\t\t\t\tcallback(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!url) {\n\t\t\t\tthis._loadNull(handler, callback, asset);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar key = url + type;\n\n\t\t\tif (this._cache[key] !== undefined) {\n\t\t\t\tcallback(null, this._cache[key]);\n\t\t\t} else if (this._requests[key]) {\n\t\t\t\tthis._requests[key].push(callback);\n\t\t\t} else {\n\t\t\t\tthis._requests[key] = [callback];\n\t\t\t\tvar self = this;\n\n\t\t\t\tvar handleLoad = function handleLoad(err, urlObj) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tself._onFailure(key, err);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\thandler.load(urlObj, function (err, data, extra) {\n\t\t\t\t\t\tif (!self._requests[key]) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tself._onFailure(key, err);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tself._onSuccess(key, handler.open(urlObj.original, data, asset), extra);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tself._onFailure(key, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, asset);\n\t\t\t\t};\n\n\t\t\t\tvar normalizedUrl = url.split('?')[0];\n\n\t\t\t\tif (this._app.enableBundles && this._app.bundles.hasUrl(normalizedUrl)) {\n\t\t\t\t\tif (!this._app.bundles.canLoadUrl(normalizedUrl)) {\n\t\t\t\t\t\thandleLoad('Bundle for ' + url + ' not loaded yet');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._app.bundles.loadUrl(normalizedUrl, function (err, fileUrlFromBundle) {\n\t\t\t\t\t\thandleLoad(err, {\n\t\t\t\t\t\t\tload: fileUrlFromBundle,\n\t\t\t\t\t\t\toriginal: normalizedUrl\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\thandleLoad(null, {\n\t\t\t\t\t\tload: url,\n\t\t\t\t\t\toriginal: asset && asset.getPreferredFile().filename || url\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadNull = function _loadNull(handler, callback, asset) {\n\t\t\tvar onLoad = function onLoad(err, data, extra) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcallback(null, handler.open(null, data, asset), extra);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tcallback(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\thandler.load(null, onLoad, asset);\n\t\t};\n\n\t\t_proto._onSuccess = function _onSuccess(key, result, extra) {\n\t\t\tthis._cache[key] = result;\n\n\t\t\tfor (var i = 0; i < this._requests[key].length; i++) {\n\t\t\t\tthis._requests[key][i](null, result, extra);\n\t\t\t}\n\n\t\t\tdelete this._requests[key];\n\t\t};\n\n\t\t_proto._onFailure = function _onFailure(key, err) {\n\t\t\tconsole.error(err);\n\n\t\t\tif (this._requests[key]) {\n\t\t\t\tfor (var i = 0; i < this._requests[key].length; i++) {\n\t\t\t\t\tthis._requests[key][i](err);\n\t\t\t\t}\n\n\t\t\t\tdelete this._requests[key];\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(type, data) {\n\t\t\tvar handler = this._handlers[type];\n\n\t\t\tif (!handler) {\n\t\t\t\tconsole.warn(\"No resource handler found for: \" + type);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\treturn handler.open(null, data);\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tvar handler = this._handlers[asset.type];\n\n\t\t\tif (!handler) {\n\t\t\t\tconsole.warn(\"No resource handler found for: \" + asset.type);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (handler.patch) {\n\t\t\t\thandler.patch(asset, assets);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clearCache = function clearCache(url, type) {\n\t\t\tdelete this._cache[url + type];\n\t\t};\n\n\t\t_proto.getFromCache = function getFromCache(url, type) {\n\t\t\tif (this._cache[url + type]) {\n\t\t\t\treturn this._cache[url + type];\n\t\t\t}\n\t\t};\n\n\t\t_proto.enableRetry = function enableRetry(maxRetries) {\n\t\t\tif (maxRetries === void 0) {\n\t\t\t\tmaxRetries = 5;\n\t\t\t}\n\n\t\t\tmaxRetries = Math.max(0, maxRetries) || 0;\n\n\t\t\tfor (var key in this._handlers) {\n\t\t\t\tthis._handlers[key].maxRetries = maxRetries;\n\t\t\t}\n\t\t};\n\n\t\t_proto.disableRetry = function disableRetry() {\n\t\t\tfor (var key in this._handlers) {\n\t\t\t\tthis._handlers[key].maxRetries = 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._handlers = {};\n\t\t\tthis._requests = {};\n\t\t\tthis._cache = {};\n\t\t};\n\n\t\treturn ResourceLoader;\n\t}();\n\n\tvar SceneHandler = function () {\n\t\tfunction SceneHandler(app) {\n\t\t\tthis._app = app;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = SceneHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar assets = this._app.assets;\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tTemplateUtils.waitForTemplatesInScene(response, assets, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar errMsg = 'Error while loading scene ' + url.original;\n\n\t\t\t\t\tif (err.message) {\n\t\t\t\t\t\terrMsg += ': ' + err.message;\n\n\t\t\t\t\t\tif (err.stack) {\n\t\t\t\t\t\t\terrMsg += '\\n' + err.stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrMsg += ': ' + err;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(errMsg);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tthis._app.systems.script.preloading = true;\n\t\t\tvar parser = new SceneParser(this._app, false);\n\t\t\tvar parent = parser.parse(data);\n\t\t\tvar scene = this._app.scene;\n\t\t\tscene.root = parent;\n\n\t\t\tthis._app.applySceneSettings(data.settings);\n\n\t\t\tthis._app.systems.script.preloading = false;\n\t\t\treturn scene;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn SceneHandler;\n\t}();\n\n\tvar SceneSettingsHandler = function () {\n\t\tfunction SceneSettingsHandler(app) {\n\t\t\tthis._app = app;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = SceneSettingsHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tvar errMsg = 'Error while loading scene settings ' + url.original;\n\n\t\t\t\t\tif (err.message) {\n\t\t\t\t\t\terrMsg += ': ' + err.message;\n\n\t\t\t\t\t\tif (err.stack) {\n\t\t\t\t\t\t\terrMsg += '\\n' + err.stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrMsg += ': ' + err;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(errMsg);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data.settings;\n\t\t};\n\n\t\treturn SceneSettingsHandler;\n\t}();\n\n\tvar _legacy = false;\n\tvar _createdLoadingScreen = false;\n\tvar script = {\n\t\tapp: null,\n\t\tcreate: function create(name, callback) {\n\t\t\tif (!_legacy) return;\n\t\t\tvar ScriptType = callback(script.app);\n\t\t\tScriptType._pcScriptName = name;\n\n\t\t\tScriptHandler._push(ScriptType);\n\n\t\t\tthis.fire(\"created\", name, callback);\n\t\t},\n\t\tattribute: function attribute(name, type, defaultValue, options) {},\n\t\tcreateLoadingScreen: function createLoadingScreen(callback) {\n\t\t\tif (_createdLoadingScreen) return;\n\t\t\t_createdLoadingScreen = true;\n\t\t\tvar app = Application.getApplication();\n\t\t\tcallback(app);\n\t\t}\n\t};\n\tObject.defineProperty(script, 'legacy', {\n\t\tget: function get() {\n\t\t\treturn _legacy;\n\t\t},\n\t\tset: function set(value) {\n\t\t\t_legacy = value;\n\t\t}\n\t});\n\tevents.attach(script);\n\n\tvar ScriptHandler = function () {\n\t\tfunction ScriptHandler(app) {\n\t\t\tthis._app = app;\n\t\t\tthis._scripts = {};\n\t\t\tthis._cache = {};\n\t\t}\n\n\t\tScriptHandler._push = function _push(Type) {\n\t\t\tif (script.legacy && ScriptHandler._types.length > 0) {\n\t\t\t\tconsole.assert(\"Script Ordering Error. Contact support@playcanvas.com\");\n\t\t\t} else {\n\t\t\t\tScriptHandler._types.push(Type);\n\t\t\t}\n\t\t};\n\n\t\tvar _proto = ScriptHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tscript.app = this._app;\n\n\t\t\tthis._loadScript(url.load, function (err, url, extra) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tif (script.legacy) {\n\t\t\t\t\t\tvar Type = null;\n\n\t\t\t\t\t\tif (ScriptHandler._types.length) {\n\t\t\t\t\t\t\tType = ScriptHandler._types.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Type) {\n\t\t\t\t\t\t\tthis._scripts[url] = Type;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tType = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallback(null, Type, extra);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar obj = {};\n\n\t\t\t\t\t\tfor (var i = 0; i < ScriptHandler._types.length; i++) {\n\t\t\t\t\t\t\tobj[ScriptHandler._types[i].name] = ScriptHandler._types[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tScriptHandler._types.length = 0;\n\t\t\t\t\t\tcallback(null, obj, extra);\n\t\t\t\t\t\tdelete self._loader._cache[url + 'script'];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\t_proto._loadScript = function _loadScript(url, callback) {\n\t\t\tvar head = document.head;\n\t\t\tvar element = document.createElement('script');\n\t\t\tthis._cache[url] = element;\n\t\t\telement.async = false;\n\t\t\telement.addEventListener('error', function (e) {\n\t\t\t\tcallback(\"Script: \" + e.target.src + \" failed to load\");\n\t\t\t}, false);\n\t\t\tvar done = false;\n\n\t\t\telement.onload = element.onreadystatechange = function () {\n\t\t\t\tif (!done && (!this.readyState || this.readyState == \"loaded\" || this.readyState == \"complete\")) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tcallback(null, url, element);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\telement.src = url;\n\t\t\thead.appendChild(element);\n\t\t};\n\n\t\treturn ScriptHandler;\n\t}();\n\n\tScriptHandler._types = [];\n\n\tvar ShaderHandler = function () {\n\t\tfunction ShaderHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = ShaderHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading shader resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn ShaderHandler;\n\t}();\n\n\tvar spriteNormals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n\tvar spriteIndices = [0, 1, 3, 2, 3, 1];\n\n\tvar Sprite = function (_EventHandler) {\n\t\t_inheritsLoose(Sprite, _EventHandler);\n\n\t\tfunction Sprite(device, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._device = device;\n\t\t\t_this._pixelsPerUnit = options && options.pixelsPerUnit !== undefined ? options.pixelsPerUnit : 1;\n\t\t\t_this._renderMode = options && options.renderMode !== undefined ? options.renderMode : SPRITE_RENDERMODE_SIMPLE;\n\t\t\t_this._atlas = options && options.atlas !== undefined ? options.atlas : null;\n\t\t\t_this._frameKeys = options && options.frameKeys !== undefined ? options.frameKeys : null;\n\t\t\t_this._meshes = [];\n\t\t\t_this._updatingProperties = false;\n\t\t\t_this._meshesDirty = false;\n\n\t\t\tif (_this._atlas && _this._frameKeys) {\n\t\t\t\t_this._createMeshes();\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Sprite.prototype;\n\n\t\t_proto._createMeshes = function _createMeshes() {\n\t\t\tvar i, len;\n\n\t\t\tfor (i = 0, len = this._meshes.length; i < len; i++) {\n\t\t\t\tvar mesh = this._meshes[i];\n\n\t\t\t\tif (mesh) {\n\t\t\t\t\tmesh.destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar count = this._frameKeys.length;\n\t\t\tthis._meshes = new Array(count);\n\t\t\tvar createMeshFunc = this.renderMode === SPRITE_RENDERMODE_SLICED || this._renderMode === SPRITE_RENDERMODE_TILED ? this._create9SliceMesh : this._createSimpleMesh;\n\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\tvar frame = this._atlas.frames[this._frameKeys[i]];\n\t\t\t\tthis._meshes[i] = frame ? createMeshFunc.call(this, frame) : null;\n\t\t\t}\n\n\t\t\tthis.fire('set:meshes');\n\t\t};\n\n\t\t_proto._createSimpleMesh = function _createSimpleMesh(frame) {\n\t\t\tvar rect = frame.rect;\n\t\t\tvar texWidth = this._atlas.texture.width;\n\t\t\tvar texHeight = this._atlas.texture.height;\n\t\t\tvar w = rect.z / this._pixelsPerUnit;\n\t\t\tvar h = rect.w / this._pixelsPerUnit;\n\t\t\tvar hp = frame.pivot.x;\n\t\t\tvar vp = frame.pivot.y;\n\t\t\tvar positions = [-hp * w, -vp * h, 0, (1 - hp) * w, -vp * h, 0, (1 - hp) * w, (1 - vp) * h, 0, -hp * w, (1 - vp) * h, 0];\n\t\t\tvar lu = rect.x / texWidth;\n\t\t\tvar bv = rect.y / texHeight;\n\t\t\tvar ru = (rect.x + rect.z) / texWidth;\n\t\t\tvar tv = (rect.y + rect.w) / texHeight;\n\t\t\tvar uvs = [lu, bv, ru, bv, ru, tv, lu, tv];\n\t\t\tvar mesh = createMesh(this._device, positions, {\n\t\t\t\tuvs: uvs,\n\t\t\t\tnormals: spriteNormals,\n\t\t\t\tindices: spriteIndices\n\t\t\t});\n\t\t\treturn mesh;\n\t\t};\n\n\t\t_proto._create9SliceMesh = function _create9SliceMesh() {\n\t\t\tvar he = Vec2.ONE;\n\t\t\tvar ws = 3;\n\t\t\tvar ls = 3;\n\t\t\tvar i, j;\n\t\t\tvar x, y, z, u, v;\n\t\t\tvar positions = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\t\tvar indices = [];\n\t\t\tvar vcounter = 0;\n\n\t\t\tfor (i = 0; i <= ws; i++) {\n\t\t\t\tu = i === 0 || i === ws ? 0 : 1;\n\n\t\t\t\tfor (j = 0; j <= ls; j++) {\n\t\t\t\t\tx = -he.x + 2.0 * he.x * (i <= 1 ? 0 : 3) / ws;\n\t\t\t\t\ty = 0.0;\n\t\t\t\t\tz = -(-he.y + 2.0 * he.y * (j <= 1 ? 0 : 3) / ls);\n\t\t\t\t\tv = j === 0 || j === ls ? 0 : 1;\n\t\t\t\t\tpositions.push(-x, y, z);\n\t\t\t\t\tnormals.push(0.0, 1.0, 0.0);\n\t\t\t\t\tuvs.push(u, v);\n\n\t\t\t\t\tif (i < ws && j < ls) {\n\t\t\t\t\t\tindices.push(vcounter + ls + 1, vcounter + 1, vcounter);\n\t\t\t\t\t\tindices.push(vcounter + ls + 1, vcounter + ls + 2, vcounter + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvcounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar options = {\n\t\t\t\tnormals: normals,\n\t\t\t\tuvs: uvs,\n\t\t\t\tindices: indices\n\t\t\t};\n\t\t\treturn createMesh(this._device, positions, options);\n\t\t};\n\n\t\t_proto._onSetFrames = function _onSetFrames(frames) {\n\t\t\tif (this._updatingProperties) {\n\t\t\t\tthis._meshesDirty = true;\n\t\t\t} else {\n\t\t\t\tthis._createMeshes();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onFrameChanged = function _onFrameChanged(frameKey, frame) {\n\t\t\tvar idx = this._frameKeys.indexOf(frameKey);\n\n\t\t\tif (idx < 0) return;\n\n\t\t\tif (frame) {\n\t\t\t\tif (this.renderMode === SPRITE_RENDERMODE_SIMPLE) {\n\t\t\t\t\tthis._meshes[idx] = this._createSimpleMesh(frame);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._meshes[idx] = null;\n\t\t\t}\n\n\t\t\tthis.fire('set:meshes');\n\t\t};\n\n\t\t_proto._onFrameRemoved = function _onFrameRemoved(frameKey) {\n\t\t\tvar idx = this._frameKeys.indexOf(frameKey);\n\n\t\t\tif (idx < 0) return;\n\t\t\tthis._meshes[idx] = null;\n\t\t\tthis.fire('set:meshes');\n\t\t};\n\n\t\t_proto.startUpdate = function startUpdate() {\n\t\t\tthis._updatingProperties = true;\n\t\t\tthis._meshesDirty = false;\n\t\t};\n\n\t\t_proto.endUpdate = function endUpdate() {\n\t\t\tthis._updatingProperties = false;\n\n\t\t\tif (this._meshesDirty && this._atlas && this._frameKeys) {\n\t\t\t\tthis._createMeshes();\n\t\t\t}\n\n\t\t\tthis._meshesDirty = false;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tfor (var _iterator = _createForOfIteratorHelperLoose(this._meshes), _step; !(_step = _iterator()).done;) {\n\t\t\t\tvar mesh = _step.value;\n\t\t\t\tif (mesh) mesh.destroy();\n\t\t\t}\n\n\t\t\tthis._meshes.length = 0;\n\t\t};\n\n\t\t_createClass(Sprite, [{\n\t\t\tkey: \"frameKeys\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._frameKeys;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._frameKeys = value;\n\n\t\t\t\tif (this._atlas && this._frameKeys) {\n\t\t\t\t\tif (this._updatingProperties) {\n\t\t\t\t\t\tthis._meshesDirty = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._createMeshes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fire('set:frameKeys', value);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"atlas\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._atlas;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === this._atlas) return;\n\n\t\t\t\tif (this._atlas) {\n\t\t\t\t\tthis._atlas.off('set:frames', this._onSetFrames, this);\n\n\t\t\t\t\tthis._atlas.off('set:frame', this._onFrameChanged, this);\n\n\t\t\t\t\tthis._atlas.off('remove:frame', this._onFrameRemoved, this);\n\t\t\t\t}\n\n\t\t\t\tthis._atlas = value;\n\n\t\t\t\tif (this._atlas && this._frameKeys) {\n\t\t\t\t\tthis._atlas.on('set:frames', this._onSetFrames, this);\n\n\t\t\t\t\tthis._atlas.on('set:frame', this._onFrameChanged, this);\n\n\t\t\t\t\tthis._atlas.on('remove:frame', this._onFrameRemoved, this);\n\n\t\t\t\t\tif (this._updatingProperties) {\n\t\t\t\t\t\tthis._meshesDirty = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._createMeshes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fire('set:atlas', value);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pixelsPerUnit\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._pixelsPerUnit;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._pixelsPerUnit === value) return;\n\t\t\t\tthis._pixelsPerUnit = value;\n\t\t\t\tthis.fire('set:pixelsPerUnit', value);\n\n\t\t\t\tif (this._atlas && this._frameKeys && this.renderMode === SPRITE_RENDERMODE_SIMPLE) {\n\t\t\t\t\tif (this._updatingProperties) {\n\t\t\t\t\t\tthis._meshesDirty = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._createMeshes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"renderMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._renderMode;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._renderMode === value) return;\n\t\t\t\tvar prev = this._renderMode;\n\t\t\t\tthis._renderMode = value;\n\t\t\t\tthis.fire('set:renderMode', value);\n\n\t\t\t\tif (prev === SPRITE_RENDERMODE_SIMPLE || value === SPRITE_RENDERMODE_SIMPLE) {\n\t\t\t\t\tif (this._atlas && this._frameKeys) {\n\t\t\t\t\t\tif (this._updatingProperties) {\n\t\t\t\t\t\t\tthis._meshesDirty = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._createMeshes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"meshes\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._meshes;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Sprite;\n\t}(EventHandler);\n\n\tfunction onTextureAtlasLoaded(atlasAsset) {\n\t\tvar spriteAsset = this;\n\n\t\tif (spriteAsset.resource) {\n\t\t\tspriteAsset.resource.atlas = atlasAsset.resource;\n\t\t}\n\t}\n\n\tfunction onTextureAtlasAdded(atlasAsset) {\n\t\tvar spriteAsset = this;\n\t\tspriteAsset.registry.load(atlasAsset);\n\t}\n\n\tvar SpriteHandler = function () {\n\t\tfunction SpriteHandler(assets, device) {\n\t\t\tthis._assets = assets;\n\t\t\tthis._device = device;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = SpriteHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (path.getExtension(url.original) === '.json') {\n\t\t\t\thttp.get(url.load, {\n\t\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t\t}, function (err, response) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tcallback(null, response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tvar sprite = new Sprite(this._device);\n\n\t\t\tif (url) {\n\t\t\t\tsprite.__data = data;\n\t\t\t}\n\n\t\t\treturn sprite;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tvar sprite = asset.resource;\n\n\t\t\tif (sprite.__data) {\n\t\t\t\tasset.data.pixelsPerUnit = sprite.__data.pixelsPerUnit;\n\t\t\t\tasset.data.renderMode = sprite.__data.renderMode;\n\t\t\t\tasset.data.frameKeys = sprite.__data.frameKeys;\n\n\t\t\t\tif (sprite.__data.textureAtlasAsset) {\n\t\t\t\t\tvar atlas = assets.getByUrl(sprite.__data.textureAtlasAsset);\n\n\t\t\t\t\tif (atlas) {\n\t\t\t\t\t\tasset.data.textureAtlasAsset = atlas.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Could not find textureatlas with url: \" + sprite.__data.textureAtlasAsset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsprite.startUpdate();\n\t\t\tsprite.renderMode = asset.data.renderMode;\n\t\t\tsprite.pixelsPerUnit = asset.data.pixelsPerUnit;\n\t\t\tsprite.frameKeys = asset.data.frameKeys;\n\n\t\t\tthis._updateAtlas(asset);\n\n\t\t\tsprite.endUpdate();\n\t\t\tasset.off('change', this._onAssetChange, this);\n\t\t\tasset.on('change', this._onAssetChange, this);\n\t\t};\n\n\t\t_proto._updateAtlas = function _updateAtlas(asset) {\n\t\t\tvar sprite = asset.resource;\n\n\t\t\tif (!asset.data.textureAtlasAsset) {\n\t\t\t\tsprite.atlas = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._assets.off('load:' + asset.data.textureAtlasAsset, onTextureAtlasLoaded, asset);\n\n\t\t\tthis._assets.on('load:' + asset.data.textureAtlasAsset, onTextureAtlasLoaded, asset);\n\n\t\t\tvar atlasAsset = this._assets.get(asset.data.textureAtlasAsset);\n\n\t\t\tif (atlasAsset && atlasAsset.resource) {\n\t\t\t\tsprite.atlas = atlasAsset.resource;\n\t\t\t} else {\n\t\t\t\tif (!atlasAsset) {\n\t\t\t\t\tthis._assets.off('add:' + asset.data.textureAtlasAsset, onTextureAtlasAdded, asset);\n\n\t\t\t\t\tthis._assets.on('add:' + asset.data.textureAtlasAsset, onTextureAtlasAdded, asset);\n\t\t\t\t} else {\n\t\t\t\t\tthis._assets.load(atlasAsset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onAssetChange = function _onAssetChange(asset, attribute, value, oldValue) {\n\t\t\tif (attribute === 'data') {\n\t\t\t\tif (value && value.textureAtlasAsset && oldValue && value.textureAtlasAsset !== oldValue.textureAtlasAsset) {\n\t\t\t\t\tthis._assets.off('load:' + oldValue.textureAtlasAsset, onTextureAtlasLoaded, asset);\n\n\t\t\t\t\tthis._assets.off('add:' + oldValue.textureAtlasAsset, onTextureAtlasAdded, asset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn SpriteHandler;\n\t}();\n\n\tvar Template = function () {\n\t\tfunction Template(app, data) {\n\t\t\tthis._app = app;\n\t\t\tthis._data = data;\n\t\t\tthis._templateRoot = null;\n\t\t}\n\n\t\tvar _proto = Template.prototype;\n\n\t\t_proto.instantiate = function instantiate() {\n\t\t\tif (!this._templateRoot) {\n\t\t\t\tthis._parseTemplate();\n\t\t\t}\n\n\t\t\treturn this._templateRoot.clone();\n\t\t};\n\n\t\t_proto._parseTemplate = function _parseTemplate() {\n\t\t\tvar parser = new SceneParser(this._app, true);\n\t\t\tthis._templateRoot = parser.parse(this._data);\n\t\t};\n\n\t\treturn Template;\n\t}();\n\n\tvar TemplateHandler = function () {\n\t\tfunction TemplateHandler(app) {\n\t\t\tthis._app = app;\n\t\t}\n\n\t\tvar _proto = TemplateHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar assets = this._app.assets;\n\t\t\thttp.get(url.load, function (err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(\"Error requesting template: \" + url.original);\n\t\t\t\t} else {\n\t\t\t\t\tTemplateUtils.waitForTemplateAssets(response.entities, assets, callback, response);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn new Template(this._app, data);\n\t\t};\n\n\t\treturn TemplateHandler;\n\t}();\n\n\tvar TextHandler = function () {\n\t\tfunction TextHandler() {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = TextHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\thttp.get(url.load, {\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t}, function (err, response) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading text resource: \" + url.original + \" [\" + err + \"]\");\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\treturn data;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn TextHandler;\n\t}();\n\n\tvar TextureAtlas = function (_EventHandler) {\n\t\t_inheritsLoose(TextureAtlas, _EventHandler);\n\n\t\tfunction TextureAtlas() {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._texture = null;\n\t\t\t_this._frames = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = TextureAtlas.prototype;\n\n\t\t_proto.setFrame = function setFrame(key, data) {\n\t\t\tvar frame = this._frames[key];\n\n\t\t\tif (!frame) {\n\t\t\t\tframe = {\n\t\t\t\t\trect: data.rect.clone(),\n\t\t\t\t\tpivot: data.pivot.clone(),\n\t\t\t\t\tborder: data.border.clone()\n\t\t\t\t};\n\t\t\t\tthis._frames[key] = frame;\n\t\t\t} else {\n\t\t\t\tframe.rect.copy(data.rect);\n\t\t\t\tframe.pivot.copy(data.pivot);\n\t\t\t\tframe.border.copy(data.border);\n\t\t\t}\n\n\t\t\tthis.fire('set:frame', key.toString(), frame);\n\t\t};\n\n\t\t_proto.removeFrame = function removeFrame(key) {\n\t\t\tvar frame = this._frames[key];\n\n\t\t\tif (frame) {\n\t\t\t\tdelete this._frames[key];\n\t\t\t\tthis.fire('remove:frame', key.toString(), frame);\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this._texture) {\n\t\t\t\tthis._texture.destroy();\n\t\t\t}\n\t\t};\n\n\t\t_createClass(TextureAtlas, [{\n\t\t\tkey: \"texture\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._texture;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._texture = value;\n\t\t\t\tthis.fire('set:texture', value);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"frames\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._frames;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._frames = value;\n\t\t\t\tthis.fire('set:frames', value);\n\t\t\t}\n\t\t}]);\n\n\t\treturn TextureAtlas;\n\t}(EventHandler);\n\n\tvar JSON_ADDRESS_MODE = {\n\t\t\"repeat\": ADDRESS_REPEAT,\n\t\t\"clamp\": ADDRESS_CLAMP_TO_EDGE,\n\t\t\"mirror\": ADDRESS_MIRRORED_REPEAT\n\t};\n\tvar JSON_FILTER_MODE = {\n\t\t\"nearest\": FILTER_NEAREST,\n\t\t\"linear\": FILTER_LINEAR,\n\t\t\"nearest_mip_nearest\": FILTER_NEAREST_MIPMAP_NEAREST,\n\t\t\"linear_mip_nearest\": FILTER_LINEAR_MIPMAP_NEAREST,\n\t\t\"nearest_mip_linear\": FILTER_NEAREST_MIPMAP_LINEAR,\n\t\t\"linear_mip_linear\": FILTER_LINEAR_MIPMAP_LINEAR\n\t};\n\tvar regexFrame = /^data\\.frames\\.(\\d+)$/;\n\n\tvar TextureAtlasHandler = function () {\n\t\tfunction TextureAtlasHandler(loader) {\n\t\t\tthis._loader = loader;\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = TextureAtlasHandler.prototype;\n\n\t\t_proto.load = function load(url, callback) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar self = this;\n\n\t\t\tvar handler = this._loader.getHandler(\"texture\");\n\n\t\t\tif (path.getExtension(url.original) === '.json') {\n\t\t\t\thttp.get(url.load, {\n\t\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t\t}, function (err, response) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tvar textureUrl = url.original.replace('.json', '.png');\n\n\t\t\t\t\t\tself._loader.load(textureUrl, \"texture\", function (err, texture) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\tdata: response,\n\t\t\t\t\t\t\t\t\ttexture: texture\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn handler.load(url, callback);\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data) {\n\t\t\tvar resource = new TextureAtlas();\n\n\t\t\tif (data.texture && data.data) {\n\t\t\t\tresource.texture = data.texture;\n\t\t\t\tresource.__data = data.data;\n\t\t\t} else {\n\t\t\t\tvar handler = this._loader.getHandler(\"texture\");\n\n\t\t\t\tvar texture = handler.open(url, data);\n\t\t\t\tif (!texture) return null;\n\t\t\t\tresource.texture = texture;\n\t\t\t}\n\n\t\t\treturn resource;\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {\n\t\t\tif (asset.resource.__data) {\n\t\t\t\tif (asset.resource.__data.minfilter !== undefined) asset.data.minfilter = asset.resource.__data.minfilter;\n\t\t\t\tif (asset.resource.__data.magfilter !== undefined) asset.data.magfilter = asset.resource.__data.magfilter;\n\t\t\t\tif (asset.resource.__data.addressu !== undefined) asset.data.addressu = asset.resource.__data.addressu;\n\t\t\t\tif (asset.resource.__data.addressv !== undefined) asset.data.addressv = asset.resource.__data.addressv;\n\t\t\t\tif (asset.resource.__data.mipmaps !== undefined) asset.data.mipmaps = asset.resource.__data.mipmaps;\n\t\t\t\tif (asset.resource.__data.anisotropy !== undefined) asset.data.anisotropy = asset.resource.__data.anisotropy;\n\t\t\t\tif (asset.resource.__data.rgbm !== undefined) asset.data.rgbm = !!asset.resource.__data.rgbm;\n\t\t\t\tasset.data.frames = asset.resource.__data.frames;\n\t\t\t\tdelete asset.resource.__data;\n\t\t\t}\n\n\t\t\tvar texture = asset.resource.texture;\n\n\t\t\tif (texture) {\n\t\t\t\ttexture.name = asset.name;\n\t\t\t\tif (asset.data.hasOwnProperty('minfilter') && texture.minFilter !== JSON_FILTER_MODE[asset.data.minfilter]) texture.minFilter = JSON_FILTER_MODE[asset.data.minfilter];\n\t\t\t\tif (asset.data.hasOwnProperty('magfilter') && texture.magFilter !== JSON_FILTER_MODE[asset.data.magfilter]) texture.magFilter = JSON_FILTER_MODE[asset.data.magfilter];\n\t\t\t\tif (asset.data.hasOwnProperty('addressu') && texture.addressU !== JSON_ADDRESS_MODE[asset.data.addressu]) texture.addressU = JSON_ADDRESS_MODE[asset.data.addressu];\n\t\t\t\tif (asset.data.hasOwnProperty('addressv') && texture.addressV !== JSON_ADDRESS_MODE[asset.data.addressv]) texture.addressV = JSON_ADDRESS_MODE[asset.data.addressv];\n\t\t\t\tif (asset.data.hasOwnProperty('mipmaps') && texture.mipmaps !== asset.data.mipmaps) texture.mipmaps = asset.data.mipmaps;\n\t\t\t\tif (asset.data.hasOwnProperty('anisotropy') && texture.anisotropy !== asset.data.anisotropy) texture.anisotropy = asset.data.anisotropy;\n\n\t\t\t\tif (asset.data.hasOwnProperty('rgbm')) {\n\t\t\t\t\tvar type = asset.data.rgbm ? TEXTURETYPE_RGBM : TEXTURETYPE_DEFAULT;\n\n\t\t\t\t\tif (texture.type !== type) {\n\t\t\t\t\t\ttexture.type = type;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tasset.resource.texture = texture;\n\t\t\tvar frames = {};\n\n\t\t\tfor (var key in asset.data.frames) {\n\t\t\t\tvar frame = asset.data.frames[key];\n\t\t\t\tframes[key] = {\n\t\t\t\t\trect: new Vec4(frame.rect),\n\t\t\t\t\tpivot: new Vec2(frame.pivot),\n\t\t\t\t\tborder: new Vec4(frame.border)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasset.resource.frames = frames;\n\t\t\tasset.off('change', this._onAssetChange, this);\n\t\t\tasset.on('change', this._onAssetChange, this);\n\t\t};\n\n\t\t_proto._onAssetChange = function _onAssetChange(asset, attribute, value) {\n\t\t\tvar frame;\n\n\t\t\tif (attribute === 'data' || attribute === 'data.frames') {\n\t\t\t\tvar frames = {};\n\n\t\t\t\tfor (var key in value.frames) {\n\t\t\t\t\tframe = value.frames[key];\n\t\t\t\t\tframes[key] = {\n\t\t\t\t\t\trect: new Vec4(frame.rect),\n\t\t\t\t\t\tpivot: new Vec2(frame.pivot),\n\t\t\t\t\t\tborder: new Vec4(frame.border)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tasset.resource.frames = frames;\n\t\t\t} else {\n\t\t\t\tvar match = attribute.match(regexFrame);\n\n\t\t\t\tif (match) {\n\t\t\t\t\tvar frameKey = match[1];\n\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tif (!asset.resource.frames[frameKey]) {\n\t\t\t\t\t\t\tasset.resource.frames[frameKey] = {\n\t\t\t\t\t\t\t\trect: new Vec4(value.rect),\n\t\t\t\t\t\t\t\tpivot: new Vec2(value.pivot),\n\t\t\t\t\t\t\t\tborder: new Vec4(value.border)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tframe = asset.resource.frames[frameKey];\n\t\t\t\t\t\t\tframe.rect.set(value.rect[0], value.rect[1], value.rect[2], value.rect[3]);\n\t\t\t\t\t\t\tframe.pivot.set(value.pivot[0], value.pivot[1]);\n\t\t\t\t\t\t\tframe.border.set(value.border[0], value.border[1], value.border[2], value.border[3]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tasset.resource.fire('set:frame', frameKey, asset.resource.frames[frameKey]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (asset.resource.frames[frameKey]) {\n\t\t\t\t\t\t\tdelete asset.resource.frames[frameKey];\n\t\t\t\t\t\t\tasset.resource.fire('remove:frame', frameKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn TextureAtlasHandler;\n\t}();\n\n\tfunction BasisWorker() {\n\t\tvar BASIS_FORMAT = {\n\t\t\tcTFETC1: 0,\n\t\t\tcTFETC2: 1,\n\t\t\tcTFBC1: 2,\n\t\t\tcTFBC3: 3,\n\t\t\tcTFPVRTC1_4_RGB: 8,\n\t\t\tcTFPVRTC1_4_RGBA: 9,\n\t\t\tcTFASTC_4x4: 10,\n\t\t\tcTFATC_RGB: 11,\n\t\t\tcTFATC_RGBA_INTERPOLATED_ALPHA: 12,\n\t\t\tcTFRGBA32: 13,\n\t\t\tcTFRGB565: 14,\n\t\t\tcTFRGBA4444: 16\n\t\t};\n\t\tvar opaqueMapping = {\n\t\t\tastc: BASIS_FORMAT.cTFASTC_4x4,\n\t\t\tdxt: BASIS_FORMAT.cTFBC1,\n\t\t\tetc2: BASIS_FORMAT.cTFETC1,\n\t\t\tetc1: BASIS_FORMAT.cTFETC1,\n\t\t\tpvr: BASIS_FORMAT.cTFPVRTC1_4_RGB,\n\t\t\tatc: BASIS_FORMAT.cTFATC_RGB,\n\t\t\tnone: BASIS_FORMAT.cTFRGB565\n\t\t};\n\t\tvar alphaMapping = {\n\t\t\tastc: BASIS_FORMAT.cTFASTC_4x4,\n\t\t\tdxt: BASIS_FORMAT.cTFBC3,\n\t\t\tetc2: BASIS_FORMAT.cTFETC2,\n\t\t\tetc1: BASIS_FORMAT.cTFRGBA4444,\n\t\t\tpvr: BASIS_FORMAT.cTFPVRTC1_4_RGBA,\n\t\t\tatc: BASIS_FORMAT.cTFATC_RGBA_INTERPOLATED_ALPHA,\n\t\t\tnone: BASIS_FORMAT.cTFRGBA4444\n\t\t};\n\t\tvar basisToEngineMapping = {};\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFETC1] = 21;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFETC2] = 23;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFBC1] = 8;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFBC3] = 10;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFPVRTC1_4_RGB] = 26;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFPVRTC1_4_RGBA] = 27;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFASTC_4x4] = 28;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFATC_RGB] = 29;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFATC_RGBA_INTERPOLATED_ALPHA] = 30;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFRGBA32] = 7;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFRGB565] = 3;\n\t\tbasisToEngineMapping[BASIS_FORMAT.cTFRGBA4444] = 5;\n\t\tvar hasPerformance = typeof performance !== 'undefined';\n\n\t\tvar unswizzleGGGR = function unswizzleGGGR(data) {\n\t\t\tvar genB = function genB(R, G) {\n\t\t\t\tvar r = R * (2.0 / 255.0) - 1.0;\n\t\t\t\tvar g = G * (2.0 / 255.0) - 1.0;\n\t\t\t\tvar b = Math.sqrt(1.0 - Math.min(1.0, r * r + g * g));\n\t\t\t\treturn Math.max(0, Math.min(255, Math.floor((b + 1.0) * 0.5 * 255.0)));\n\t\t\t};\n\n\t\t\tfor (var offset = 0; offset < data.length; offset += 4) {\n\t\t\t\tvar R = data[offset + 3];\n\t\t\t\tvar G = data[offset + 1];\n\t\t\t\tdata[offset + 0] = R;\n\t\t\t\tdata[offset + 2] = genB(R, G);\n\t\t\t\tdata[offset + 3] = 255;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar pack565 = function pack565(data) {\n\t\t\tvar result = new Uint16Array(data.length / 4);\n\n\t\t\tfor (var offset = 0; offset < data.length; offset += 4) {\n\t\t\t\tvar R = data[offset + 0];\n\t\t\t\tvar G = data[offset + 1];\n\t\t\t\tvar B = data[offset + 2];\n\t\t\t\tresult[offset / 4] = (R & 0xf8) << 8 | (G & 0xfc) << 3 | B >> 3;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tvar transcode = function transcode(basis, url, format, data, options) {\n\t\t\tvar funcStart = hasPerformance ? performance.now() : 0;\n\t\t\tvar basisFile = new basis.BasisFile(new Uint8Array(data));\n\t\t\tvar width = basisFile.getImageWidth(0, 0);\n\t\t\tvar height = basisFile.getImageHeight(0, 0);\n\t\t\tvar images = basisFile.getNumImages();\n\t\t\tvar levels = basisFile.getNumLevels(0);\n\t\t\tvar hasAlpha = !!basisFile.getHasAlpha();\n\n\t\t\tif (!width || !height || !images || !levels) {\n\t\t\t\tbasisFile.close();\n\t\t\t\tbasisFile.delete();\n\t\t\t\tthrow new Error('Invalid image dimensions url=' + url + ' width=' + width + ' height=' + height + ' images=' + images + ' levels=' + levels);\n\t\t\t}\n\n\t\t\tvar basisFormat = hasAlpha ? alphaMapping[format] : opaqueMapping[format];\n\n\t\t\tif (basisFormat === BASIS_FORMAT.cTFPVRTC1_4_RGB || basisFormat === BASIS_FORMAT.cTFPVRTC1_4_RGBA) {\n\t\t\t\tif ((width & width - 1) !== 0 || width !== height) {\n\t\t\t\t\tbasisFormat = basisFormat === BASIS_FORMAT.cTFPVRTC1_4_RGB ? BASIS_FORMAT.cTFRGB565 : BASIS_FORMAT.cTFRGBA32;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.unswizzleGGGR) {\n\t\t\t\tbasisFormat = BASIS_FORMAT.cTFRGBA32;\n\t\t\t}\n\n\t\t\tif (!basisFile.startTranscoding()) {\n\t\t\t\tbasisFile.close();\n\t\t\t\tbasisFile.delete();\n\t\t\t\tthrow new Error('Failed to start transcoding url=' + url);\n\t\t\t}\n\n\t\t\tvar i;\n\t\t\tvar levelData = [];\n\n\t\t\tfor (var mip = 0; mip < levels; ++mip) {\n\t\t\t\tvar dstSize = basisFile.getImageTranscodedSizeInBytes(0, mip, basisFormat);\n\t\t\t\tvar dst = new Uint8Array(dstSize);\n\n\t\t\t\tif (!basisFile.transcodeImage(dst, 0, mip, basisFormat, 1, 0)) {\n\t\t\t\t\tbasisFile.close();\n\t\t\t\t\tbasisFile.delete();\n\t\t\t\t\tthrow new Error('Failed to transcode image url=' + url);\n\t\t\t\t}\n\n\t\t\t\tif (basisFormat === BASIS_FORMAT.cTFRGB565 || basisFormat === BASIS_FORMAT.cTFRGBA4444) {\n\t\t\t\t\tvar dst16 = new Uint16Array(dstSize / 2);\n\n\t\t\t\t\tfor (i = 0; i < dstSize / 2; ++i) {\n\t\t\t\t\t\tdst16[i] = dst[i * 2] + dst[i * 2 + 1] * 256;\n\t\t\t\t\t}\n\n\t\t\t\t\tdst = dst16;\n\t\t\t\t}\n\n\t\t\t\tlevelData.push(dst);\n\t\t\t}\n\n\t\t\tbasisFile.close();\n\t\t\tbasisFile.delete();\n\n\t\t\tif (options && options.unswizzleGGGR) {\n\t\t\t\tbasisFormat = BASIS_FORMAT.cTFRGB565;\n\n\t\t\t\tfor (i = 0; i < levelData.length; ++i) {\n\t\t\t\t\tlevelData[i] = pack565(unswizzleGGGR(levelData[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tformat: basisToEngineMapping[basisFormat],\n\t\t\t\twidth: width + 3 & ~3,\n\t\t\t\theight: height + 3 & ~3,\n\t\t\t\tlevels: levelData,\n\t\t\t\tcubemap: false,\n\t\t\t\tmipmaps: true,\n\t\t\t\ttranscodeTime: hasPerformance ? performance.now() - funcStart : 0,\n\t\t\t\turl: url\n\t\t\t};\n\t\t};\n\n\t\tvar basis = null;\n\t\tvar queue = [];\n\n\t\tvar workerTranscode = function workerTranscode(url, format, data, options) {\n\t\t\ttry {\n\t\t\t\tvar result = transcode(basis, url, format, data, options);\n\t\t\t\tresult.levels = result.levels.map(function (v) {\n\t\t\t\t\treturn v.buffer;\n\t\t\t\t});\n\t\t\t\tself.postMessage({\n\t\t\t\t\turl: url,\n\t\t\t\t\tdata: result\n\t\t\t\t}, result.levels);\n\t\t\t} catch (err) {\n\t\t\t\tself.postMessage({\n\t\t\t\t\turl: url.toString(),\n\t\t\t\t\terr: err.toString()\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tvar workerInit = function workerInit(basisModule) {\n\t\t\tvar instantiateWasmFunc = function instantiateWasmFunc(imports, successCallback) {\n\t\t\t\tWebAssembly.instantiate(basisModule, imports).then(function (result) {\n\t\t\t\t\tsuccessCallback(result);\n\t\t\t\t});\n\t\t\t\treturn {};\n\t\t\t};\n\n\t\t\tself.BASIS(basisModule ? {\n\t\t\t\tinstantiateWasm: instantiateWasmFunc\n\t\t\t} : null).then(function (instance) {\n\t\t\t\tbasis = instance;\n\t\t\t\tbasis.initializeBasis();\n\n\t\t\t\tfor (var i = 0; i < queue.length; ++i) {\n\t\t\t\t\tworkerTranscode(queue[i].url, queue[i].format, queue[i].data, queue[i].options);\n\t\t\t\t}\n\n\t\t\t\tqueue = [];\n\t\t\t});\n\t\t};\n\n\t\tself.onmessage = function (message) {\n\t\t\tvar data = message.data;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'init':\n\t\t\t\t\tworkerInit(data.module);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'transcode':\n\t\t\t\t\tif (basis) {\n\t\t\t\t\t\tworkerTranscode(data.url, data.format, data.data, data.options);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqueue.push(data);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t}\n\n\tvar wasmSupported = function () {\n\t\ttry {\n\t\t\tif (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n\t\t\t\tvar module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n\t\t\t\tif (module instanceof WebAssembly.Module) return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n\t\t\t}\n\t\t} catch (e) {}\n\n\t\treturn false;\n\t}();\n\n\tfunction chooseTargetFormat(device) {\n\t\tif (device.extCompressedTextureASTC) {\n\t\t\treturn 'astc';\n\t\t} else if (device.extCompressedTextureS3TC) {\n\t\t\treturn 'dxt';\n\t\t} else if (device.extCompressedTextureETC) {\n\t\t\treturn 'etc2';\n\t\t} else if (device.extCompressedTextureETC1) {\n\t\t\treturn 'etc1';\n\t\t} else if (device.extCompressedTexturePVRTC) {\n\t\t\treturn 'pvr';\n\t\t} else if (device.extCompressedTextureATC) {\n\t\t\treturn 'atc';\n\t\t}\n\n\t\treturn 'none';\n\t}\n\n\tvar downloadInitiated = false;\n\tvar worker = null;\n\tvar callbacks = {};\n\tvar format = null;\n\tvar transcodeQueue = [];\n\tvar downloadConfig = null;\n\n\tfunction basisTargetFormat() {\n\t\tif (!format) {\n\t\t\tformat = chooseTargetFormat(Application.getApplication().graphicsDevice);\n\t\t}\n\n\t\treturn format;\n\t}\n\n\tfunction handleWorkerResponse(message) {\n\t\tvar url = message.data.url;\n\t\tvar err = message.data.err;\n\t\tvar data = message.data.data;\n\t\tvar callback = callbacks[url];\n\n\t\tif (!callback) {\n\t\t\tconsole.error('internal logical error encountered in basis transcoder');\n\t\t\treturn;\n\t\t}\n\n\t\tvar i;\n\n\t\tif (err) {\n\t\t\tfor (i = 0; i < callback.length; ++i) {\n\t\t\t\tcallback[i](err);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (data.format === PIXELFORMAT_R5_G6_B5 || data.format === PIXELFORMAT_R4_G4_B4_A4) {\n\t\t\tdata.levels = data.levels.map(function (v) {\n\t\t\t\treturn new Uint16Array(v);\n\t\t\t});\n\t\t} else {\n\t\t\tdata.levels = data.levels.map(function (v) {\n\t\t\t\treturn new Uint8Array(v);\n\t\t\t});\n\t\t}\n\n\t\tfor (i = 0; i < callback.length; ++i) {\n\t\t\tcallback[i](null, data);\n\t\t}\n\n\t\tdelete callbacks[url];\n\t}\n\n\tfunction transcode(url, data, callback, options) {\n\t\tif (!callbacks.hasOwnProperty(url)) {\n\t\t\tcallbacks[url] = [callback];\n\t\t\tworker.postMessage({\n\t\t\t\ttype: 'transcode',\n\t\t\t\turl: url,\n\t\t\t\tformat: basisTargetFormat(),\n\t\t\t\tdata: data,\n\t\t\t\toptions: options\n\t\t\t}, [data]);\n\t\t} else {\n\t\t\tcallbacks[url].push(callback);\n\t\t}\n\t}\n\n\tfunction basisInitialize(basisCode, basisModule, callback) {\n\t\tvar code = [\"/* basis.js */\", basisCode, \"\", \"/* worker */\", '(' + BasisWorker.toString() + ')()\\n\\n'].join('\\n');\n\t\tvar blob = new Blob([code], {\n\t\t\ttype: 'application/javascript'\n\t\t});\n\t\tvar url = URL.createObjectURL(blob);\n\t\tworker = new Worker(url);\n\t\tworker.addEventListener('message', handleWorkerResponse);\n\t\tworker.postMessage({\n\t\t\ttype: 'init',\n\t\t\tmodule: basisModule\n\t\t});\n\n\t\tif (callback) {\n\t\t\tcallback();\n\t\t}\n\n\t\tfor (var i = 0; i < transcodeQueue.length; ++i) {\n\t\t\tvar entry = transcodeQueue[i];\n\t\t\ttranscode(entry.url, entry.data, entry.callback, entry.options);\n\t\t}\n\t}\n\n\tfunction basisDownload(glueUrl, wasmUrl, fallbackUrl, callback) {\n\t\tif (downloadInitiated) {\n\t\t\tconsole.warn('basis module is being downloaded more than once');\n\t\t}\n\n\t\tdownloadInitiated = true;\n\n\t\tif (wasmSupported) {\n\t\t\tvar glueCode = null;\n\t\t\tvar compiledModule = null;\n\n\t\t\tvar downloadCompleted = function downloadCompleted() {\n\t\t\t\tif (glueCode && compiledModule) {\n\t\t\t\t\tbasisInitialize(glueCode, compiledModule, callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar performHttpDownload = function performHttpDownload() {\n\t\t\t\thttp.get(wasmUrl, {\n\t\t\t\t\tcache: true,\n\t\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\t\tretry: false\n\t\t\t\t}, function (err, result) {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tWebAssembly.compile(result).then(function (result) {\n\t\t\t\t\t\t\tcompiledModule = result;\n\t\t\t\t\t\t\tdownloadCompleted();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (WebAssembly.compileStreaming) {\n\t\t\t\tWebAssembly.compileStreaming(fetch(wasmUrl)).then(function (result) {\n\t\t\t\t\tcompiledModule = result;\n\t\t\t\t\tdownloadCompleted();\n\t\t\t\t}).catch(function (reason) {\n\t\t\t\t\tconsole.error(reason);\n\t\t\t\t\tconsole.warn('compileStreaming() failed for ' + wasmUrl + ', falling back to arraybuffer download...');\n\t\t\t\t\tperformHttpDownload();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tperformHttpDownload();\n\t\t\t}\n\n\t\t\thttp.get(glueUrl, {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"text\",\n\t\t\t\tretry: false\n\t\t\t}, function (err, result) {\n\t\t\t\tglueCode = result;\n\t\t\t\tdownloadCompleted();\n\t\t\t});\n\t\t} else {\n\t\t\thttp.get(fallbackUrl, {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"text\",\n\t\t\t\tretry: false\n\t\t\t}, function (err, result) {\n\t\t\t\tif (result) {\n\t\t\t\t\tbasisInitialize(result, null, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction basisSetDownloadConfig(glueUrl, wasmUrl, fallbackUrl) {\n\t\tdownloadConfig = {\n\t\t\tglueUrl: glueUrl,\n\t\t\twasmUrl: wasmUrl,\n\t\t\tfallbackUrl: fallbackUrl\n\t\t};\n\t}\n\n\tfunction basisDownloadFromConfig(callback) {\n\t\tif (downloadConfig) {\n\t\t\tbasisDownload(downloadConfig.glueUrl, downloadConfig.wasmUrl, downloadConfig.fallbackUrl, callback);\n\t\t} else {\n\t\t\tvar modules = (window.config ? window.config.wasmModules : window.PRELOAD_MODULES) || [];\n\t\t\tvar wasmModule = modules.find(function (m) {\n\t\t\t\treturn m.moduleName === 'BASIS';\n\t\t\t});\n\n\t\t\tif (wasmModule) {\n\t\t\t\tvar urlBase = window.ASSET_PREFIX ? window.ASSET_PREFIX : \"\";\n\t\t\t\tbasisDownload(urlBase + wasmModule.glueUrl, urlBase + wasmModule.wasmUrl, urlBase + wasmModule.fallbackUrl, callback);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction basisTranscode(url, data, callback, options) {\n\t\tif (!worker) {\n\t\t\ttranscodeQueue.push({\n\t\t\t\turl: url,\n\t\t\t\tdata: data,\n\t\t\t\tcallback: callback,\n\t\t\t\toptions: options\n\t\t\t});\n\n\t\t\tif (!downloadInitiated) {\n\t\t\t\tbasisDownloadFromConfig();\n\t\t\t}\n\t\t} else {\n\t\t\ttranscode(url, data, callback, options);\n\t\t}\n\t}\n\n\tvar BasisParser = function () {\n\t\tfunction BasisParser(registry) {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = BasisParser.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tvar options = {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\t\t\thttp.get(url.load, options, function (err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar unswizzleGGGR = basisTargetFormat() === 'pvr' && asset && asset.file && asset.file.variants && asset.file.variants.basis && (asset.file.variants.basis.opt & 8) !== 0;\n\n\t\t\t\t\tif (unswizzleGGGR) {\n\t\t\t\t\t\tasset.file.variants.basis.opt &= ~8;\n\t\t\t\t\t}\n\n\t\t\t\t\tbasisTranscode(url.load, result, callback, {\n\t\t\t\t\t\tunswizzleGGGR: unswizzleGGGR\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.open = function open(url, data, device) {\n\t\t\tvar texture = new Texture(device, {\n\t\t\t\tname: url,\n\t\t\t\taddressU: data.cubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\taddressV: data.cubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\twidth: data.width,\n\t\t\t\theight: data.height,\n\t\t\t\tformat: data.format,\n\t\t\t\tcubemap: data.cubemap,\n\t\t\t\tlevels: data.levels\n\t\t\t});\n\t\t\ttexture.upload();\n\t\t\treturn texture;\n\t\t};\n\n\t\treturn BasisParser;\n\t}();\n\n\tvar ImgParser = function () {\n\t\tfunction ImgParser(registry) {\n\t\t\tthis.crossOrigin = registry.prefix ? 'anonymous' : null;\n\t\t\tthis.maxRetries = 0;\n\t\t\tthis.useImageBitmap = false  ;\n\t\t}\n\n\t\tvar _proto = ImgParser.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tvar crossOrigin;\n\n\t\t\tif (asset && asset.options && asset.options.hasOwnProperty('crossOrigin')) {\n\t\t\t\tcrossOrigin = asset.options.crossOrigin;\n\t\t\t} else if (ABSOLUTE_URL.test(url.load)) {\n\t\t\t\tcrossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tif (this.useImageBitmap) {\n\t\t\t\tthis._loadImageBitmap(url.load, url.original, crossOrigin, callback);\n\t\t\t} else {\n\t\t\t\tthis._loadImage(url.load, url.original, crossOrigin, callback);\n\t\t\t}\n\t\t};\n\n\t\t_proto.open = function open(url, data, device) {\n\t\t\tvar ext = path.getExtension(url).toLowerCase();\n\t\t\tvar format = ext === \".jpg\" || ext === \".jpeg\" ? PIXELFORMAT_R8_G8_B8 : PIXELFORMAT_R8_G8_B8_A8;\n\t\t\tvar texture = new Texture(device, {\n\t\t\t\tname: url,\n\t\t\t\twidth: data.width,\n\t\t\t\theight: data.height,\n\t\t\t\tformat: format\n\t\t\t});\n\t\t\ttexture.setSource(data);\n\t\t\treturn texture;\n\t\t};\n\n\t\t_proto._loadImage = function _loadImage(url, originalUrl, crossOrigin, callback) {\n\t\t\tvar image = new Image();\n\n\t\t\tif (crossOrigin) {\n\t\t\t\timage.crossOrigin = crossOrigin;\n\t\t\t}\n\n\t\t\tvar retries = 0;\n\t\t\tvar maxRetries = this.maxRetries;\n\t\t\tvar retryTimeout;\n\n\t\t\timage.onload = function () {\n\t\t\t\tcallback(null, image);\n\t\t\t};\n\n\t\t\timage.onerror = function () {\n\t\t\t\tif (retryTimeout) return;\n\n\t\t\t\tif (maxRetries > 0 && ++retries <= maxRetries) {\n\t\t\t\t\tvar retryDelay = Math.pow(2, retries) * 100;\n\t\t\t\t\tconsole.log(\"Error loading Texture from: '\" + originalUrl + \"' - Retrying in \" + retryDelay + \"ms...\");\n\t\t\t\t\tvar idx = url.indexOf('?');\n\t\t\t\t\tvar separator = idx >= 0 ? '&' : '?';\n\t\t\t\t\tretryTimeout = setTimeout(function () {\n\t\t\t\t\t\timage.src = url + separator + 'retry=' + Date.now();\n\t\t\t\t\t\tretryTimeout = null;\n\t\t\t\t\t}, retryDelay);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(\"Error loading Texture from: '\" + originalUrl + \"'\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\timage.src = url;\n\t\t};\n\n\t\t_proto._loadImageBitmap = function _loadImageBitmap(url, originalUrl, crossOrigin, callback) {\n\t\t\tvar options = {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"blob\",\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\t\t\thttp.get(url, options, function (err, blob) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else {\n\t\t\t\t\tcreateImageBitmap(blob, {\n\t\t\t\t\t\tpremultiplyAlpha: 'none',\n\t\t\t\t\t\timageOrientation: 'flipY'\n\t\t\t\t\t}).then(function (imageBitmap) {\n\t\t\t\t\t\tcallback(null, imageBitmap);\n\t\t\t\t\t}).catch(function (e) {\n\t\t\t\t\t\tcallback(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn ImgParser;\n\t}();\n\n\tvar IDENTIFIER = [0x58544BAB, 0xBB313120, 0x0A1A0A0D];\n\tvar KNOWN_FORMATS = {\n\t\t0x83F0: PIXELFORMAT_DXT1,\n\t\t0x83F2: PIXELFORMAT_DXT3,\n\t\t0x83F3: PIXELFORMAT_DXT5,\n\t\t0x8D64: PIXELFORMAT_ETC1,\n\t\t0x9274: PIXELFORMAT_ETC2_RGB,\n\t\t0x9278: PIXELFORMAT_ETC2_RGBA,\n\t\t0x8C00: PIXELFORMAT_PVRTC_4BPP_RGB_1,\n\t\t0x8C01: PIXELFORMAT_PVRTC_2BPP_RGB_1,\n\t\t0x8C02: PIXELFORMAT_PVRTC_4BPP_RGBA_1,\n\t\t0x8C03: PIXELFORMAT_PVRTC_2BPP_RGBA_1\n\t};\n\n\tvar KtxParser = function () {\n\t\tfunction KtxParser(registry) {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = KtxParser.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tvar options = {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\t\t\thttp.get(url.load, options, callback);\n\t\t};\n\n\t\t_proto.open = function open(url, data, device) {\n\t\t\tvar textureData = this.parse(data);\n\n\t\t\tif (!textureData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar texture = new Texture(device, {\n\t\t\t\tname: url,\n\t\t\t\taddressU: textureData.cubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\taddressV: textureData.cubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\twidth: textureData.width,\n\t\t\t\theight: textureData.height,\n\t\t\t\tformat: textureData.format,\n\t\t\t\tcubemap: textureData.cubemap,\n\t\t\t\tlevels: textureData.levels\n\t\t\t});\n\t\t\ttexture.upload();\n\t\t\treturn texture;\n\t\t};\n\n\t\t_proto.parse = function parse(data) {\n\t\t\tvar headerU32 = new Uint32Array(data, 0, 16);\n\n\t\t\tif (IDENTIFIER[0] !== headerU32[0] || IDENTIFIER[1] !== headerU32[1] || IDENTIFIER[2] !== headerU32[2]) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar header = {\n\t\t\t\tendianness: headerU32[3],\n\t\t\t\tglType: headerU32[4],\n\t\t\t\tglTypeSize: headerU32[5],\n\t\t\t\tglFormat: headerU32[6],\n\t\t\t\tglInternalFormat: headerU32[7],\n\t\t\t\tglBaseInternalFormat: headerU32[8],\n\t\t\t\tpixelWidth: headerU32[9],\n\t\t\t\tpixelHeight: headerU32[10],\n\t\t\t\tpixelDepth: headerU32[11],\n\t\t\t\tnumberOfArrayElements: headerU32[12],\n\t\t\t\tnumberOfFaces: headerU32[13],\n\t\t\t\tnumberOfMipmapLevels: headerU32[14],\n\t\t\t\tbytesOfKeyValueData: headerU32[15]\n\t\t\t};\n\n\t\t\tif (header.pixelDepth > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (header.numberOfArrayElements > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (header.glFormat !== 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!KNOWN_FORMATS[header.glInternalFormat]) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar offset = 16 * 4 + header.bytesOfKeyValueData;\n\t\t\tvar levels = [];\n\t\t\tvar isCubeMap = false;\n\n\t\t\tfor (var mipmapLevel = 0; mipmapLevel < (header.numberOfMipmapLevels || 1); mipmapLevel++) {\n\t\t\t\tvar imageSizeInBytes = new Uint32Array(data.slice(offset, offset + 4))[0];\n\t\t\t\toffset += 4;\n\t\t\t\tvar faceSizeInBytes = imageSizeInBytes / (header.numberOfFaces || 1);\n\n\t\t\t\tif (header.numberOfFaces > 1) {\n\t\t\t\t\tisCubeMap = true;\n\t\t\t\t\tlevels.push([]);\n\t\t\t\t}\n\n\t\t\t\tfor (var face = 0; face < header.numberOfFaces; face++) {\n\t\t\t\t\tvar mipData = new Uint8Array(data, offset, faceSizeInBytes);\n\n\t\t\t\t\tif (header.numberOfFaces > 1) {\n\t\t\t\t\t\tlevels[mipmapLevel].push(mipData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlevels.push(mipData);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += faceSizeInBytes;\n\t\t\t\t}\n\n\t\t\t\toffset += 3 - (offset + 3) % 4;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tformat: KNOWN_FORMATS[header.glInternalFormat],\n\t\t\t\twidth: header.pixelWidth,\n\t\t\t\theight: header.pixelHeight,\n\t\t\t\tlevels: levels,\n\t\t\t\tcubemap: isCubeMap\n\t\t\t};\n\t\t};\n\n\t\treturn KtxParser;\n\t}();\n\n\tvar LegacyDdsParser = function () {\n\t\tfunction LegacyDdsParser(registry) {\n\t\t\tthis.maxRetries = 0;\n\t\t}\n\n\t\tvar _proto = LegacyDdsParser.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tvar options = {\n\t\t\t\tcache: true,\n\t\t\t\tresponseType: \"arraybuffer\",\n\t\t\t\tretry: this.maxRetries > 0,\n\t\t\t\tmaxRetries: this.maxRetries\n\t\t\t};\n\t\t\thttp.get(url.load, options, callback);\n\t\t};\n\n\t\t_proto.open = function open(url, data, device) {\n\t\t\tvar header = new Uint32Array(data, 0, 128 / 4);\n\t\t\tvar width = header[4];\n\t\t\tvar height = header[3];\n\t\t\tvar mips = Math.max(header[7], 1);\n\t\t\tvar isFourCc = header[20] === 4;\n\t\t\tvar fcc = header[21];\n\t\t\tvar bpp = header[22];\n\t\t\tvar isCubemap = header[28] === 65024;\n\t\t\tvar FCC_DXT1 = 827611204;\n\t\t\tvar FCC_DXT5 = 894720068;\n\t\t\tvar FCC_FP32 = 116;\n\t\t\tvar FCC_ETC1 = 826496069;\n\t\t\tvar FCC_PVRTC_2BPP_RGB_1 = 825438800;\n\t\t\tvar FCC_PVRTC_2BPP_RGBA_1 = 825504336;\n\t\t\tvar FCC_PVRTC_4BPP_RGB_1 = 825439312;\n\t\t\tvar FCC_PVRTC_4BPP_RGBA_1 = 825504848;\n\t\t\tvar compressed = false;\n\t\t\tvar floating = false;\n\t\t\tvar etc1 = false;\n\t\t\tvar pvrtc2 = false;\n\t\t\tvar pvrtc4 = false;\n\t\t\tvar format = null;\n\t\t\tvar texture;\n\n\t\t\tif (isFourCc) {\n\t\t\t\tif (fcc === FCC_DXT1) {\n\t\t\t\t\tformat = PIXELFORMAT_DXT1;\n\t\t\t\t\tcompressed = true;\n\t\t\t\t} else if (fcc === FCC_DXT5) {\n\t\t\t\t\tformat = PIXELFORMAT_DXT5;\n\t\t\t\t\tcompressed = true;\n\t\t\t\t} else if (fcc === FCC_FP32) {\n\t\t\t\t\tformat = PIXELFORMAT_RGBA32F;\n\t\t\t\t\tfloating = true;\n\t\t\t\t} else if (fcc === FCC_ETC1) {\n\t\t\t\t\tformat = PIXELFORMAT_ETC1;\n\t\t\t\t\tcompressed = true;\n\t\t\t\t\tetc1 = true;\n\t\t\t\t} else if (fcc === FCC_PVRTC_2BPP_RGB_1 || fcc === FCC_PVRTC_2BPP_RGBA_1) {\n\t\t\t\t\tformat = fcc === FCC_PVRTC_2BPP_RGB_1 ? PIXELFORMAT_PVRTC_2BPP_RGB_1 : PIXELFORMAT_PVRTC_2BPP_RGBA_1;\n\t\t\t\t\tcompressed = true;\n\t\t\t\t\tpvrtc2 = true;\n\t\t\t\t} else if (fcc === FCC_PVRTC_4BPP_RGB_1 || fcc === FCC_PVRTC_4BPP_RGBA_1) {\n\t\t\t\t\tformat = fcc === FCC_PVRTC_4BPP_RGB_1 ? PIXELFORMAT_PVRTC_4BPP_RGB_1 : PIXELFORMAT_PVRTC_4BPP_RGBA_1;\n\t\t\t\t\tcompressed = true;\n\t\t\t\t\tpvrtc4 = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (bpp === 32) {\n\t\t\t\t\tformat = PIXELFORMAT_R8_G8_B8_A8;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!format) {\n\t\t\t\ttexture = new Texture(device, {\n\t\t\t\t\twidth: 4,\n\t\t\t\t\theight: 4,\n\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8\n\t\t\t\t});\n\t\t\t\ttexture.name = 'dds-legacy-empty';\n\t\t\t\treturn texture;\n\t\t\t}\n\n\t\t\ttexture = new Texture(device, {\n\t\t\t\tname: url,\n\t\t\t\taddressU: isCubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\taddressV: isCubemap ? ADDRESS_CLAMP_TO_EDGE : ADDRESS_REPEAT,\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tformat: format,\n\t\t\t\tcubemap: isCubemap\n\t\t\t});\n\t\t\tvar offset = 128;\n\t\t\tvar faces = isCubemap ? 6 : 1;\n\t\t\tvar mipSize;\n\t\t\tvar DXT_BLOCK_WIDTH = 4;\n\t\t\tvar DXT_BLOCK_HEIGHT = 4;\n\t\t\tvar blockSize = fcc === FCC_DXT1 ? 8 : 16;\n\t\t\tvar numBlocksAcross, numBlocksDown, numBlocks;\n\n\t\t\tfor (var face = 0; face < faces; face++) {\n\t\t\t\tvar mipWidth = width;\n\t\t\t\tvar mipHeight = height;\n\n\t\t\t\tfor (var i = 0; i < mips; i++) {\n\t\t\t\t\tif (compressed) {\n\t\t\t\t\t\tif (etc1) {\n\t\t\t\t\t\t\tmipSize = Math.floor((mipWidth + 3) / 4) * Math.floor((mipHeight + 3) / 4) * 8;\n\t\t\t\t\t\t} else if (pvrtc2) {\n\t\t\t\t\t\t\tmipSize = Math.max(mipWidth, 16) * Math.max(mipHeight, 8) / 4;\n\t\t\t\t\t\t} else if (pvrtc4) {\n\t\t\t\t\t\t\tmipSize = Math.max(mipWidth, 8) * Math.max(mipHeight, 8) / 2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnumBlocksAcross = Math.floor((mipWidth + DXT_BLOCK_WIDTH - 1) / DXT_BLOCK_WIDTH);\n\t\t\t\t\t\t\tnumBlocksDown = Math.floor((mipHeight + DXT_BLOCK_HEIGHT - 1) / DXT_BLOCK_HEIGHT);\n\t\t\t\t\t\t\tnumBlocks = numBlocksAcross * numBlocksDown;\n\t\t\t\t\t\t\tmipSize = numBlocks * blockSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmipSize = mipWidth * mipHeight * 4;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mipBuff = floating ? new Float32Array(data, offset, mipSize) : new Uint8Array(data, offset, mipSize);\n\n\t\t\t\t\tif (!isCubemap) {\n\t\t\t\t\t\ttexture._levels[i] = mipBuff;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!texture._levels[i]) texture._levels[i] = [];\n\t\t\t\t\t\ttexture._levels[i][face] = mipBuff;\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += floating ? mipSize * 4 : mipSize;\n\t\t\t\t\tmipWidth = Math.max(mipWidth * 0.5, 1);\n\t\t\t\t\tmipHeight = Math.max(mipHeight * 0.5, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttexture.upload();\n\t\t\treturn texture;\n\t\t};\n\n\t\treturn LegacyDdsParser;\n\t}();\n\n\tvar JSON_ADDRESS_MODE$1 = {\n\t\t\"repeat\": ADDRESS_REPEAT,\n\t\t\"clamp\": ADDRESS_CLAMP_TO_EDGE,\n\t\t\"mirror\": ADDRESS_MIRRORED_REPEAT\n\t};\n\tvar JSON_FILTER_MODE$1 = {\n\t\t\"nearest\": FILTER_NEAREST,\n\t\t\"linear\": FILTER_LINEAR,\n\t\t\"nearest_mip_nearest\": FILTER_NEAREST_MIPMAP_NEAREST,\n\t\t\"linear_mip_nearest\": FILTER_LINEAR_MIPMAP_NEAREST,\n\t\t\"nearest_mip_linear\": FILTER_NEAREST_MIPMAP_LINEAR,\n\t\t\"linear_mip_linear\": FILTER_LINEAR_MIPMAP_LINEAR\n\t};\n\tvar JSON_TEXTURE_TYPE = {\n\t\t\"default\": TEXTURETYPE_DEFAULT,\n\t\t\"rgbm\": TEXTURETYPE_RGBM,\n\t\t\"rgbe\": TEXTURETYPE_RGBE,\n\t\t\"swizzleGGGR\": TEXTURETYPE_SWIZZLEGGGR\n\t};\n\n\tvar TextureParser = function () {\n\t\tfunction TextureParser() {}\n\n\t\tvar _proto = TextureParser.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tthrow new Error('not implemented');\n\t\t};\n\n\t\t_proto.open = function open(url, data, device) {\n\t\t\tthrow new Error('not implemented');\n\t\t};\n\n\t\treturn TextureParser;\n\t}();\n\n\tvar _completePartialMipmapChain = function _completePartialMipmapChain(texture) {\n\t\tvar requiredMipLevels = Math.log2(Math.max(texture._width, texture._height)) + 1;\n\n\t\tvar isHtmlElement = function isHtmlElement(object) {\n\t\t\treturn object instanceof HTMLCanvasElement || object instanceof HTMLImageElement || object instanceof HTMLVideoElement;\n\t\t};\n\n\t\tif (!(texture._format === PIXELFORMAT_R8_G8_B8_A8 || texture._format === PIXELFORMAT_RGBA32F) || texture._volume || texture._compressed || texture._levels.length === 1 || texture._levels.length === requiredMipLevels || isHtmlElement(texture._cubemap ? texture._levels[0][0] : texture._levels[0])) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar downsample = function downsample(width, height, data) {\n\t\t\tvar sampledWidth = Math.max(1, width >> 1);\n\t\t\tvar sampledHeight = Math.max(1, height >> 1);\n\t\t\tvar sampledData = new data.constructor(sampledWidth * sampledHeight * 4);\n\t\t\tvar xs = Math.floor(width / sampledWidth);\n\t\t\tvar ys = Math.floor(height / sampledHeight);\n\t\t\tvar xsys = xs * ys;\n\n\t\t\tfor (var y = 0; y < sampledHeight; ++y) {\n\t\t\t\tfor (var x = 0; x < sampledWidth; ++x) {\n\t\t\t\t\tfor (var e = 0; e < 4; ++e) {\n\t\t\t\t\t\tvar sum = 0;\n\n\t\t\t\t\t\tfor (var sy = 0; sy < ys; ++sy) {\n\t\t\t\t\t\t\tfor (var sx = 0; sx < xs; ++sx) {\n\t\t\t\t\t\t\t\tsum += data[(x * xs + sx + (y * ys + sy) * width) * 4 + e];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsampledData[(x + y * sampledWidth) * 4 + e] = sum / xsys;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn sampledData;\n\t\t};\n\n\t\tfor (var level = texture._levels.length; level < requiredMipLevels; ++level) {\n\t\t\tvar width = Math.max(1, texture._width >> level - 1);\n\t\t\tvar height = Math.max(1, texture._height >> level - 1);\n\n\t\t\tif (texture._cubemap) {\n\t\t\t\tvar mips = [];\n\n\t\t\t\tfor (var face = 0; face < 6; ++face) {\n\t\t\t\t\tmips.push(downsample(width, height, texture._levels[level - 1][face]));\n\t\t\t\t}\n\n\t\t\t\ttexture._levels.push(mips);\n\t\t\t} else {\n\t\t\t\ttexture._levels.push(downsample(width, height, texture._levels[level - 1]));\n\t\t\t}\n\t\t}\n\n\t\ttexture._levelsUpdated = texture._cubemap ? [[true, true, true, true, true, true]] : [true];\n\t};\n\n\tvar TextureHandler = function () {\n\t\tfunction TextureHandler(device, assets, loader) {\n\t\t\tthis._device = device;\n\t\t\tthis._assets = assets;\n\t\t\tthis._loader = loader;\n\t\t\tthis.imgParser = new ImgParser(assets);\n\t\t\tthis.parsers = {\n\t\t\t\tdds: new LegacyDdsParser(assets),\n\t\t\t\tktx: new KtxParser(assets),\n\t\t\t\tbasis: new BasisParser(assets)\n\t\t\t};\n\t\t}\n\n\t\tvar _proto2 = TextureHandler.prototype;\n\n\t\t_proto2._getUrlWithoutParams = function _getUrlWithoutParams(url) {\n\t\t\treturn url.indexOf('?') >= 0 ? url.split('?')[0] : url;\n\t\t};\n\n\t\t_proto2._getParser = function _getParser(url) {\n\t\t\tvar ext = path.getExtension(this._getUrlWithoutParams(url)).toLowerCase().replace('.', '');\n\t\t\treturn this.parsers[ext] || this.imgParser;\n\t\t};\n\n\t\t_proto2.load = function load(url, callback, asset) {\n\t\t\tif (typeof url === 'string') {\n\t\t\t\turl = {\n\t\t\t\t\tload: url,\n\t\t\t\t\toriginal: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._getParser(url.original).load(url, callback, asset);\n\t\t};\n\n\t\t_proto2.open = function open(url, data, asset) {\n\t\t\tif (!url) return;\n\n\t\t\tvar texture = this._getParser(url).open(url, data, this._device);\n\n\t\t\tif (texture === null) {\n\t\t\t\ttexture = new Texture(this._device, {\n\t\t\t\t\twidth: 4,\n\t\t\t\t\theight: 4,\n\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t_completePartialMipmapChain(texture);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t};\n\n\t\t_proto2.patch = function patch(asset, assets) {\n\t\t\tvar texture = asset.resource;\n\n\t\t\tif (!texture) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (asset.name && asset.name.length > 0) {\n\t\t\t\ttexture.name = asset.name;\n\t\t\t}\n\n\t\t\tvar assetData = asset.data;\n\n\t\t\tif (assetData.hasOwnProperty('minfilter')) {\n\t\t\t\ttexture.minFilter = JSON_FILTER_MODE$1[assetData.minfilter];\n\t\t\t}\n\n\t\t\tif (assetData.hasOwnProperty('magfilter')) {\n\t\t\t\ttexture.magFilter = JSON_FILTER_MODE$1[assetData.magfilter];\n\t\t\t}\n\n\t\t\tif (!texture.cubemap) {\n\t\t\t\tif (assetData.hasOwnProperty('addressu')) {\n\t\t\t\t\ttexture.addressU = JSON_ADDRESS_MODE$1[assetData.addressu];\n\t\t\t\t}\n\n\t\t\t\tif (assetData.hasOwnProperty('addressv')) {\n\t\t\t\t\ttexture.addressV = JSON_ADDRESS_MODE$1[assetData.addressv];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (assetData.hasOwnProperty('mipmaps')) {\n\t\t\t\ttexture.mipmaps = assetData.mipmaps;\n\t\t\t}\n\n\t\t\tif (assetData.hasOwnProperty('anisotropy')) {\n\t\t\t\ttexture.anisotropy = assetData.anisotropy;\n\t\t\t}\n\n\t\t\tif (assetData.hasOwnProperty('flipY')) {\n\t\t\t\ttexture.flipY = !!assetData.flipY;\n\t\t\t}\n\n\t\t\tif (assetData.hasOwnProperty('type')) {\n\t\t\t\ttexture.type = JSON_TEXTURE_TYPE[assetData.type];\n\t\t\t} else if (assetData.hasOwnProperty('rgbm') && assetData.rgbm) {\n\t\t\t\ttexture.type = TEXTURETYPE_RGBM;\n\t\t\t} else if (asset.file && asset.getPreferredFile) {\n\t\t\t\tvar preferredFile = asset.getPreferredFile();\n\n\t\t\t\tif (preferredFile) {\n\t\t\t\t\tif (preferredFile.opt && (preferredFile.opt & 8) !== 0) {\n\t\t\t\t\t\ttexture.type = TEXTURETYPE_SWIZZLEGGGR;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(TextureHandler, [{\n\t\t\tkey: \"crossOrigin\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.imgParser.crossOrigin;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.imgParser.crossOrigin = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"maxRetries\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.imgParser.maxRetries;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.imgParser.maxRetries = value;\n\n\t\t\t\tfor (var parser in this.parsers) {\n\t\t\t\t\tif (this.parsers.hasOwnProperty(parser)) {\n\t\t\t\t\t\tthis.parsers[parser].maxRetries = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn TextureHandler;\n\t}();\n\n\tvar TagsCache = function () {\n\t\tfunction TagsCache(key) {\n\t\t\tif (key === void 0) {\n\t\t\t\tkey = null;\n\t\t\t}\n\n\t\t\tthis._index = {};\n\t\t\tthis._key = key;\n\t\t}\n\n\t\tvar _proto = TagsCache.prototype;\n\n\t\t_proto.addItem = function addItem(item) {\n\t\t\tvar tags = item.tags._list;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tthis.add(tags[i], item);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeItem = function removeItem(item) {\n\t\t\tvar tags = item.tags._list;\n\n\t\t\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\tthis.remove(tags[i], item);\n\t\t\t}\n\t\t};\n\n\t\t_proto.add = function add(tag, item) {\n\t\t\tif (this._index[tag] && this._index[tag].list.indexOf(item) !== -1) return;\n\n\t\t\tif (!this._index[tag]) {\n\t\t\t\tthis._index[tag] = {\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\t\tif (this._key) this._index[tag].keys = {};\n\t\t\t}\n\n\t\t\tthis._index[tag].list.push(item);\n\n\t\t\tif (this._key) this._index[tag].keys[item[this._key]] = item;\n\t\t};\n\n\t\t_proto.remove = function remove(tag, item) {\n\t\t\tif (!this._index[tag]) return;\n\n\t\t\tif (this._key) {\n\t\t\t\tif (!this._index[tag].keys[item[this._key]]) return;\n\t\t\t}\n\n\t\t\tvar ind = this._index[tag].list.indexOf(item);\n\n\t\t\tif (ind === -1) return;\n\n\t\t\tthis._index[tag].list.splice(ind, 1);\n\n\t\t\tif (this._key) delete this._index[tag].keys[item[this._key]];\n\t\t\tif (this._index[tag].list.length === 0) delete this._index[tag];\n\t\t};\n\n\t\t_proto.find = function find(args) {\n\t\t\tvar self = this;\n\t\t\tvar index = {};\n\t\t\tvar items = [];\n\t\t\tvar i, n, t;\n\t\t\tvar item, tag, tags, tagsRest, missingIndex;\n\n\t\t\tvar sort = function sort(a, b) {\n\t\t\t\treturn self._index[a].list.length - self._index[b].list.length;\n\t\t\t};\n\n\t\t\tfor (i = 0; i < args.length; i++) {\n\t\t\t\ttag = args[i];\n\n\t\t\t\tif (tag instanceof Array) {\n\t\t\t\t\tif (tag.length === 0) continue;\n\n\t\t\t\t\tif (tag.length === 1) {\n\t\t\t\t\t\ttag = tag[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmissingIndex = false;\n\n\t\t\t\t\t\tfor (t = 0; t < tag.length; t++) {\n\t\t\t\t\t\t\tif (!this._index[tag[t]]) {\n\t\t\t\t\t\t\t\tmissingIndex = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (missingIndex) continue;\n\t\t\t\t\t\ttags = tag.slice(0).sort(sort);\n\t\t\t\t\t\ttagsRest = tags.slice(1);\n\t\t\t\t\t\tif (tagsRest.length === 1) tagsRest = tagsRest[0];\n\n\t\t\t\t\t\tfor (n = 0; n < this._index[tags[0]].list.length; n++) {\n\t\t\t\t\t\t\titem = this._index[tags[0]].list[n];\n\n\t\t\t\t\t\t\tif ((this._key ? !index[item[this._key]] : items.indexOf(item) === -1) && item.tags.has(tagsRest)) {\n\t\t\t\t\t\t\t\tif (this._key) index[item[this._key]] = true;\n\t\t\t\t\t\t\t\titems.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (tag && typeof tag === 'string' && this._index[tag]) {\n\t\t\t\t\tfor (n = 0; n < this._index[tag].list.length; n++) {\n\t\t\t\t\t\titem = this._index[tag].list[n];\n\n\t\t\t\t\t\tif (this._key) {\n\t\t\t\t\t\t\tif (!index[item[this._key]]) {\n\t\t\t\t\t\t\t\tindex[item[this._key]] = true;\n\t\t\t\t\t\t\t\titems.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (items.indexOf(item) === -1) {\n\t\t\t\t\t\t\titems.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn items;\n\t\t};\n\n\t\treturn TagsCache;\n\t}();\n\n\tvar AssetRegistry = function (_EventHandler) {\n\t\t_inheritsLoose(AssetRegistry, _EventHandler);\n\n\t\tfunction AssetRegistry(loader) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._loader = loader;\n\t\t\t_this._assets = [];\n\t\t\t_this._cache = {};\n\t\t\t_this._names = {};\n\t\t\t_this._tags = new TagsCache('_id');\n\t\t\t_this._urls = {};\n\t\t\t_this.prefix = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AssetRegistry.prototype;\n\n\t\t_proto.list = function list(filters) {\n\t\t\tfilters = filters || {};\n\t\t\treturn this._assets.filter(function (asset) {\n\t\t\t\tvar include = true;\n\n\t\t\t\tif (filters.preload !== undefined) {\n\t\t\t\t\tinclude = asset.preload === filters.preload;\n\t\t\t\t}\n\n\t\t\t\treturn include;\n\t\t\t});\n\t\t};\n\n\t\t_proto.add = function add(asset) {\n\t\t\tvar index = this._assets.push(asset) - 1;\n\t\t\tvar url;\n\t\t\tthis._cache[asset.id] = index;\n\t\t\tif (!this._names[asset.name]) this._names[asset.name] = [];\n\n\t\t\tthis._names[asset.name].push(index);\n\n\t\t\tif (asset.file) {\n\t\t\t\turl = asset.file.url;\n\t\t\t\tthis._urls[url] = index;\n\t\t\t}\n\n\t\t\tasset.registry = this;\n\n\t\t\tthis._tags.addItem(asset);\n\n\t\t\tasset.tags.on('add', this._onTagAdd, this);\n\t\t\tasset.tags.on('remove', this._onTagRemove, this);\n\t\t\tthis.fire(\"add\", asset);\n\t\t\tthis.fire(\"add:\" + asset.id, asset);\n\t\t\tif (url) this.fire(\"add:url:\" + url, asset);\n\t\t\tif (asset.preload) this.load(asset);\n\t\t};\n\n\t\t_proto.remove = function remove(asset) {\n\t\t\tvar idx = this._cache[asset.id];\n\t\t\tvar url = asset.file ? asset.file.url : null;\n\n\t\t\tif (idx !== undefined) {\n\t\t\t\tthis._assets.splice(idx, 1);\n\n\t\t\t\tdelete this._cache[asset.id];\n\t\t\t\tthis._names = {};\n\t\t\t\tthis._urls = [];\n\n\t\t\t\tfor (var i = 0, l = this._assets.length; i < l; i++) {\n\t\t\t\t\tvar a = this._assets[i];\n\t\t\t\t\tthis._cache[a.id] = i;\n\n\t\t\t\t\tif (!this._names[a.name]) {\n\t\t\t\t\t\tthis._names[a.name] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._names[a.name].push(i);\n\n\t\t\t\t\tif (a.file) {\n\t\t\t\t\t\tthis._urls[a.file.url] = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._tags.removeItem(asset);\n\n\t\t\t\tasset.tags.off('add', this._onTagAdd, this);\n\t\t\t\tasset.tags.off('remove', this._onTagRemove, this);\n\t\t\t\tasset.fire(\"remove\", asset);\n\t\t\t\tthis.fire(\"remove\", asset);\n\t\t\t\tthis.fire(\"remove:\" + asset.id, asset);\n\t\t\t\tif (url) this.fire(\"remove:url:\" + url, asset);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.get = function get(id) {\n\t\t\tvar idx = this._cache[id];\n\t\t\treturn this._assets[idx];\n\t\t};\n\n\t\t_proto.getByUrl = function getByUrl(url) {\n\t\t\tvar idx = this._urls[url];\n\t\t\treturn this._assets[idx];\n\t\t};\n\n\t\t_proto.load = function load(asset) {\n\t\t\tif (asset.loading || asset.loaded) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tvar file = asset.getPreferredFile();\n\n\t\t\tvar _opened = function _opened(resource) {\n\t\t\t\tif (resource instanceof Array) {\n\t\t\t\t\tasset.resources = resource;\n\t\t\t\t} else {\n\t\t\t\t\tasset.resource = resource;\n\t\t\t\t}\n\n\t\t\t\tself._loader.patch(asset, self);\n\n\t\t\t\tself.fire(\"load\", asset);\n\t\t\t\tself.fire(\"load:\" + asset.id, asset);\n\t\t\t\tif (file && file.url) self.fire(\"load:url:\" + file.url, asset);\n\t\t\t\tasset.fire(\"load\", asset);\n\t\t\t};\n\n\t\t\tvar _loaded = function _loaded(err, resource, extra) {\n\t\t\t\tasset.loaded = true;\n\t\t\t\tasset.loading = false;\n\n\t\t\t\tif (err) {\n\t\t\t\t\tself.fire(\"error\", err, asset);\n\t\t\t\t\tself.fire(\"error:\" + asset.id, err, asset);\n\t\t\t\t\tasset.fire(\"error\", err, asset);\n\t\t\t\t} else {\n\t\t\t\t\tif (!script.legacy && asset.type === 'script') {\n\t\t\t\t\t\tvar handler = self._loader.getHandler('script');\n\n\t\t\t\t\t\tif (handler._cache[asset.id] && handler._cache[asset.id].parentNode === document.head) {\n\t\t\t\t\t\t\tdocument.head.removeChild(handler._cache[asset.id]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thandler._cache[asset.id] = extra;\n\t\t\t\t\t}\n\n\t\t\t\t\t_opened(resource);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (file || asset.type === 'cubemap') {\n\t\t\t\tthis.fire(\"load:start\", asset);\n\t\t\t\tthis.fire(\"load:\" + asset.id + \":start\", asset);\n\t\t\t\tasset.loading = true;\n\n\t\t\t\tself._loader.load(asset.getFileUrl(), asset.type, _loaded, asset);\n\t\t\t} else {\n\t\t\t\tvar resource = self._loader.open(asset.type, asset.data);\n\n\t\t\t\tasset.loaded = true;\n\n\t\t\t\t_opened(resource);\n\t\t\t}\n\t\t};\n\n\t\t_proto.loadFromUrl = function loadFromUrl(url, type, callback) {\n\t\t\tthis.loadFromUrlAndFilename(url, null, type, callback);\n\t\t};\n\n\t\t_proto.loadFromUrlAndFilename = function loadFromUrlAndFilename(url, filename, type, callback) {\n\t\t\tvar self = this;\n\t\t\tvar name = path.getBasename(filename || url);\n\t\t\tvar file = {\n\t\t\t\tfilename: filename || name,\n\t\t\t\turl: url\n\t\t\t};\n\t\t\tvar asset = self.getByUrl(url);\n\n\t\t\tif (!asset) {\n\t\t\t\tasset = new Asset(name, type, file);\n\t\t\t\tself.add(asset);\n\t\t\t}\n\n\t\t\tvar startLoad = function startLoad(asset) {\n\t\t\t\tasset.once(\"load\", function (loadedAsset) {\n\t\t\t\t\tif (type === 'material') {\n\t\t\t\t\t\tself._loadTextures(loadedAsset, function (err, textures) {\n\t\t\t\t\t\t\tcallback(err, loadedAsset);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, loadedAsset);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tasset.once(\"error\", function (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t\tself.load(asset);\n\t\t\t};\n\n\t\t\tif (asset.resource) {\n\t\t\t\tcallback(null, asset);\n\t\t\t} else if (type === 'model') {\n\t\t\t\tself._loadModel(asset, startLoad);\n\t\t\t} else {\n\t\t\t\tstartLoad(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadModel = function _loadModel(modelAsset, continuation) {\n\t\t\tvar self = this;\n\t\t\tvar url = modelAsset.getFileUrl();\n\t\t\tvar ext = path.getExtension(url);\n\n\t\t\tif (ext === '.json' || ext === '.glb') {\n\t\t\t\tvar dir = path.getDirectory(url);\n\t\t\t\tvar basename = path.getBasename(url);\n\t\t\t\tvar mappingUrl = path.join(dir, basename.replace(ext, \".mapping.json\"));\n\n\t\t\t\tthis._loader.load(mappingUrl, 'json', function (err, data) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tmodelAsset.data = {\n\t\t\t\t\t\t\tmapping: []\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcontinuation(modelAsset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself._loadMaterials(modelAsset, data, function (e, materials) {\n\t\t\t\t\t\t\tmodelAsset.data = data;\n\t\t\t\t\t\t\tcontinuation(modelAsset);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcontinuation(modelAsset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadMaterials = function _loadMaterials(modelAsset, mapping, callback) {\n\t\t\tvar self = this;\n\t\t\tvar materials = [];\n\t\t\tvar count = 0;\n\n\t\t\tvar onMaterialLoaded = function onMaterialLoaded(err, materialAsset) {\n\t\t\t\tself._loadTextures(materialAsset, function (err, textures) {\n\t\t\t\t\tmaterials.push(materialAsset);\n\n\t\t\t\t\tif (materials.length === count) {\n\t\t\t\t\t\tcallback(null, materials);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < mapping.mapping.length; i++) {\n\t\t\t\tvar path = mapping.mapping[i].path;\n\n\t\t\t\tif (path) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tself.loadFromUrl(modelAsset.getAbsoluteUrl(path), \"material\", onMaterialLoaded);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (count === 0) {\n\t\t\t\tcallback(null, materials);\n\t\t\t}\n\t\t};\n\n\t\t_proto._loadTextures = function _loadTextures(materialAsset, callback) {\n\t\t\tvar self = this;\n\t\t\tvar textures = [];\n\t\t\tvar count = 0;\n\t\t\tvar data = materialAsset.data;\n\n\t\t\tif (data.mappingFormat !== 'path') {\n\t\t\t\tcallback(null, textures);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar onTextureLoaded = function onTextureLoaded(err, texture) {\n\t\t\t\tif (err) console.error(err);\n\t\t\t\ttextures.push(texture);\n\n\t\t\t\tif (textures.length === count) {\n\t\t\t\t\tcallback(null, textures);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar texParams = standardMaterialTextureParameters;\n\n\t\t\tfor (var i = 0; i < texParams.length; i++) {\n\t\t\t\tvar path = data[texParams[i]];\n\n\t\t\t\tif (path && typeof path === 'string') {\n\t\t\t\t\tcount++;\n\t\t\t\t\tself.loadFromUrl(materialAsset.getAbsoluteUrl(path), \"texture\", onTextureLoaded);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (count === 0) {\n\t\t\t\tcallback(null, textures);\n\t\t\t}\n\t\t};\n\n\t\t_proto.findAll = function findAll(name, type) {\n\t\t\tvar self = this;\n\t\t\tvar idxs = this._names[name];\n\n\t\t\tif (idxs) {\n\t\t\t\tvar assets = idxs.map(function (idx) {\n\t\t\t\t\treturn self._assets[idx];\n\t\t\t\t});\n\n\t\t\t\tif (type) {\n\t\t\t\t\treturn assets.filter(function (asset) {\n\t\t\t\t\t\treturn asset.type === type;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn assets;\n\t\t\t}\n\n\t\t\treturn [];\n\t\t};\n\n\t\t_proto._onTagAdd = function _onTagAdd(tag, asset) {\n\t\t\tthis._tags.add(tag, asset);\n\t\t};\n\n\t\t_proto._onTagRemove = function _onTagRemove(tag, asset) {\n\t\t\tthis._tags.remove(tag, asset);\n\t\t};\n\n\t\t_proto.findByTag = function findByTag() {\n\t\t\treturn this._tags.find(arguments);\n\t\t};\n\n\t\t_proto.filter = function filter(callback) {\n\t\t\tvar items = [];\n\n\t\t\tfor (var i = 0, len = this._assets.length; i < len; i++) {\n\t\t\t\tif (callback(this._assets[i])) items.push(this._assets[i]);\n\t\t\t}\n\n\t\t\treturn items;\n\t\t};\n\n\t\t_proto.find = function find(name, type) {\n\t\t\tvar asset = this.findAll(name, type);\n\t\t\treturn asset.length > 0 ? asset[0] : null;\n\t\t};\n\n\t\treturn AssetRegistry;\n\t}(EventHandler);\n\n\tvar BundleRegistry = function () {\n\t\tfunction BundleRegistry(assets) {\n\t\t\tthis._assets = assets;\n\t\t\tthis._bundleAssets = {};\n\t\t\tthis._assetsInBundles = {};\n\t\t\tthis._urlsInBundles = {};\n\t\t\tthis._fileRequests = {};\n\n\t\t\tthis._assets.on('add', this._onAssetAdded, this);\n\n\t\t\tthis._assets.on('remove', this._onAssetRemoved, this);\n\t\t}\n\n\t\tvar _proto = BundleRegistry.prototype;\n\n\t\t_proto._onAssetAdded = function _onAssetAdded(asset) {\n\t\t\tif (asset.type === 'bundle') {\n\t\t\t\tthis._bundleAssets[asset.id] = asset;\n\n\t\t\t\tthis._registerBundleEventListeners(asset.id);\n\n\t\t\t\tfor (var i = 0, len = asset.data.assets.length; i < len; i++) {\n\t\t\t\t\tthis._indexAssetInBundle(asset.data.assets[i], asset);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._assetsInBundles[asset.id]) {\n\t\t\t\t\tthis._indexAssetFileUrls(asset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._registerBundleEventListeners = function _registerBundleEventListeners(bundleAssetId) {\n\t\t\tthis._assets.on('load:' + bundleAssetId, this._onBundleLoaded, this);\n\n\t\t\tthis._assets.on('error:' + bundleAssetId, this._onBundleError, this);\n\t\t};\n\n\t\t_proto._unregisterBundleEventListeners = function _unregisterBundleEventListeners(bundleAssetId) {\n\t\t\tthis._assets.off('load:' + bundleAssetId, this._onBundleLoaded, this);\n\n\t\t\tthis._assets.off('error:' + bundleAssetId, this._onBundleError, this);\n\t\t};\n\n\t\t_proto._indexAssetInBundle = function _indexAssetInBundle(assetId, bundleAsset) {\n\t\t\tif (!this._assetsInBundles[assetId]) {\n\t\t\t\tthis._assetsInBundles[assetId] = [bundleAsset];\n\t\t\t} else {\n\t\t\t\tvar bundles = this._assetsInBundles[assetId];\n\t\t\t\tvar idx = bundles.indexOf(bundleAsset);\n\n\t\t\t\tif (idx === -1) {\n\t\t\t\t\tbundles.push(bundleAsset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar asset = this._assets.get(assetId);\n\n\t\t\tif (asset) {\n\t\t\t\tthis._indexAssetFileUrls(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._indexAssetFileUrls = function _indexAssetFileUrls(asset) {\n\t\t\tvar urls = this._getAssetFileUrls(asset);\n\n\t\t\tif (!urls) return;\n\n\t\t\tfor (var i = 0, len = urls.length; i < len; i++) {\n\t\t\t\tvar url = urls[i];\n\t\t\t\tthis._urlsInBundles[url] = this._assetsInBundles[asset.id];\n\t\t\t}\n\t\t};\n\n\t\t_proto._getAssetFileUrls = function _getAssetFileUrls(asset) {\n\t\t\tvar url = asset.getFileUrl();\n\t\t\tif (!url) return null;\n\t\t\turl = this._normalizeUrl(url);\n\t\t\tvar urls = [url];\n\n\t\t\tif (asset.type === 'font') {\n\t\t\t\tvar numFiles = asset.data.info.maps.length;\n\n\t\t\t\tfor (var i = 1; i < numFiles; i++) {\n\t\t\t\t\turls.push(url.replace('.png', i + '.png'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn urls;\n\t\t};\n\n\t\t_proto._normalizeUrl = function _normalizeUrl(url) {\n\t\t\treturn url && url.split('?')[0];\n\t\t};\n\n\t\t_proto._onAssetRemoved = function _onAssetRemoved(asset) {\n\t\t\tif (asset.type === 'bundle') {\n\t\t\t\tdelete this._bundleAssets[asset.id];\n\n\t\t\t\tthis._unregisterBundleEventListeners(asset.id);\n\n\t\t\t\tvar idx, id;\n\n\t\t\t\tfor (id in this._assetsInBundles) {\n\t\t\t\t\tvar array = this._assetsInBundles[id];\n\t\t\t\t\tidx = array.indexOf(asset);\n\n\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\tarray.splice(idx, 1);\n\n\t\t\t\t\t\tif (!array.length) {\n\t\t\t\t\t\t\tdelete this._assetsInBundles[id];\n\n\t\t\t\t\t\t\tfor (var url in this._urlsInBundles) {\n\t\t\t\t\t\t\t\tif (this._urlsInBundles[url] === array) {\n\t\t\t\t\t\t\t\t\tdelete this._urlsInBundles[url];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._onBundleError('Bundle ' + asset.id + ' was removed', asset);\n\t\t\t} else if (this._assetsInBundles[asset.id]) {\n\t\t\t\tdelete this._assetsInBundles[asset.id];\n\n\t\t\t\tvar urls = this._getAssetFileUrls(asset);\n\n\t\t\t\tfor (var i = 0, len = urls.length; i < len; i++) {\n\t\t\t\t\tdelete this._urlsInBundles[urls[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onBundleLoaded = function _onBundleLoaded(bundleAsset) {\n\t\t\tif (!bundleAsset.resource) {\n\t\t\t\tthis._onBundleError('Bundle ' + bundleAsset.id + ' failed to load', bundleAsset);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tif (!this._fileRequests) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var url in this._fileRequests) {\n\t\t\t\t\tvar bundles = this._urlsInBundles[url];\n\t\t\t\t\tif (!bundles || bundles.indexOf(bundleAsset) === -1) continue;\n\t\t\t\t\tvar decodedUrl = decodeURIComponent(url);\n\t\t\t\t\tvar err = null;\n\n\t\t\t\t\tif (!bundleAsset.resource.hasBlobUrl(decodedUrl)) {\n\t\t\t\t\t\terr = 'Bundle ' + bundleAsset.id + ' does not contain URL ' + url;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar requests = this._fileRequests[url];\n\n\t\t\t\t\tfor (var i = 0, len = requests.length; i < len; i++) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\trequests[i](err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trequests[i](null, bundleAsset.resource.getBlobUrl(decodedUrl));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete this._fileRequests[url];\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t};\n\n\t\t_proto._onBundleError = function _onBundleError(err, bundleAsset) {\n\t\t\tfor (var url in this._fileRequests) {\n\t\t\t\tvar bundle = this._findLoadedOrLoadingBundleForUrl(url);\n\n\t\t\t\tif (!bundle) {\n\t\t\t\t\tvar requests = this._fileRequests[url];\n\n\t\t\t\t\tfor (var i = 0, len = requests.length; i < len; i++) {\n\t\t\t\t\t\trequests[i](err);\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete this._fileRequests[url];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._findLoadedOrLoadingBundleForUrl = function _findLoadedOrLoadingBundleForUrl(url) {\n\t\t\tvar bundles = this._urlsInBundles[url];\n\t\t\tif (!bundles) return null;\n\t\t\tvar len = bundles.length;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (bundles[i].loaded && bundles[i].resource) {\n\t\t\t\t\treturn bundles[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (bundles[i].loading) {\n\t\t\t\t\treturn bundles[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.listBundlesForAsset = function listBundlesForAsset(asset) {\n\t\t\treturn this._assetsInBundles[asset.id] || null;\n\t\t};\n\n\t\t_proto.list = function list() {\n\t\t\tvar result = [];\n\n\t\t\tfor (var id in this._bundleAssets) {\n\t\t\t\tresult.push(this._bundleAssets[id]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.hasUrl = function hasUrl(url) {\n\t\t\treturn !!this._urlsInBundles[url];\n\t\t};\n\n\t\t_proto.canLoadUrl = function canLoadUrl(url) {\n\t\t\treturn !!this._findLoadedOrLoadingBundleForUrl(url);\n\t\t};\n\n\t\t_proto.loadUrl = function loadUrl(url, callback) {\n\t\t\tvar bundle = this._findLoadedOrLoadingBundleForUrl(url);\n\n\t\t\tif (!bundle) {\n\t\t\t\tcallback('URL ' + url + ' not found in any bundles');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (bundle.loaded) {\n\t\t\t\tvar decodedUrl = decodeURIComponent(url);\n\n\t\t\t\tif (!bundle.resource.hasBlobUrl(decodedUrl)) {\n\t\t\t\t\tcallback('Bundle ' + bundle.id + ' does not contain URL ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcallback(null, bundle.resource.getBlobUrl(decodedUrl));\n\t\t\t} else if (this._fileRequests.hasOwnProperty(url)) {\n\t\t\t\tthis._fileRequests[url].push(callback);\n\t\t\t} else {\n\t\t\t\tthis._fileRequests[url] = [callback];\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._assets.off('add', this._onAssetAdded, this);\n\n\t\t\tthis._assets.off('remove', this._onAssetRemoved, this);\n\n\t\t\tfor (var id in this._bundleAssets) {\n\t\t\t\tthis._unregisterBundleEventListeners(id);\n\t\t\t}\n\n\t\t\tthis._assets = null;\n\t\t\tthis._bundleAssets = null;\n\t\t\tthis._assetsInBundles = null;\n\t\t\tthis._urlsInBundles = null;\n\t\t\tthis._fileRequests = null;\n\t\t};\n\n\t\treturn BundleRegistry;\n\t}();\n\n\tvar ScriptRegistry = function (_EventHandler) {\n\t\t_inheritsLoose(ScriptRegistry, _EventHandler);\n\n\t\tfunction ScriptRegistry(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this.list = function () {\n\t\t\t\treturn this._list;\n\t\t\t};\n\n\t\t\t_this.app = app;\n\t\t\t_this._scripts = {};\n\t\t\t_this._list = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScriptRegistry.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.app = null;\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto.add = function add(script) {\n\t\t\tvar self = this;\n\t\t\tvar scriptName = script.__name;\n\n\t\t\tif (this._scripts.hasOwnProperty(scriptName)) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (script.prototype.swap) {\n\t\t\t\t\t\tvar old = self._scripts[scriptName];\n\n\t\t\t\t\t\tvar ind = self._list.indexOf(old);\n\n\t\t\t\t\t\tself._list[ind] = script;\n\t\t\t\t\t\tself._scripts[scriptName] = script;\n\t\t\t\t\t\tself.fire('swap', scriptName, script);\n\t\t\t\t\t\tself.fire('swap:' + scriptName, script);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('script registry already has \\'' + scriptName + '\\' script, define \\'swap\\' method for new script type to enable code hot swapping');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis._scripts[scriptName] = script;\n\n\t\t\tthis._list.push(script);\n\n\t\t\tthis.fire('add', scriptName, script);\n\t\t\tthis.fire('add:' + scriptName, script);\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (!self._scripts.hasOwnProperty(scriptName)) return;\n\n\t\t\t\tif (!self.app || !self.app.systems || !self.app.systems.script) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar components = self.app.systems.script._components;\n\t\t\t\tvar i, scriptInstance, attributes;\n\t\t\t\tvar scriptInstances = [];\n\t\t\t\tvar scriptInstancesInitialized = [];\n\n\t\t\t\tfor (components.loopIndex = 0; components.loopIndex < components.length; components.loopIndex++) {\n\t\t\t\t\tvar component = components.items[components.loopIndex];\n\n\t\t\t\t\tif (component._scriptsIndex[scriptName] && component._scriptsIndex[scriptName].awaiting) {\n\t\t\t\t\t\tif (component._scriptsData && component._scriptsData[scriptName]) attributes = component._scriptsData[scriptName].attributes;\n\t\t\t\t\t\tscriptInstance = component.create(scriptName, {\n\t\t\t\t\t\t\tpreloading: true,\n\t\t\t\t\t\t\tind: component._scriptsIndex[scriptName].ind,\n\t\t\t\t\t\t\tattributes: attributes\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (scriptInstance) scriptInstances.push(scriptInstance);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < scriptInstances.length; i++) {\n\t\t\t\t\tscriptInstances[i].__initializeAttributes();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < scriptInstances.length; i++) {\n\t\t\t\t\tif (scriptInstances[i].enabled) {\n\t\t\t\t\t\tscriptInstances[i]._initialized = true;\n\t\t\t\t\t\tscriptInstancesInitialized.push(scriptInstances[i]);\n\t\t\t\t\t\tif (scriptInstances[i].initialize) scriptInstances[i].initialize();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < scriptInstancesInitialized.length; i++) {\n\t\t\t\t\tif (!scriptInstancesInitialized[i].enabled || scriptInstancesInitialized[i]._postInitialized) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tscriptInstancesInitialized[i]._postInitialized = true;\n\t\t\t\t\tif (scriptInstancesInitialized[i].postInitialize) scriptInstancesInitialized[i].postInitialize();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.remove = function remove(nameOrType) {\n\t\t\tvar scriptType = nameOrType;\n\t\t\tvar scriptName = nameOrType;\n\n\t\t\tif (typeof scriptName !== 'string') {\n\t\t\t\tscriptName = scriptType.__name;\n\t\t\t} else {\n\t\t\t\tscriptType = this.get(scriptName);\n\t\t\t}\n\n\t\t\tif (this.get(scriptName) !== scriptType) return false;\n\t\t\tdelete this._scripts[scriptName];\n\n\t\t\tvar ind = this._list.indexOf(scriptType);\n\n\t\t\tthis._list.splice(ind, 1);\n\n\t\t\tthis.fire('remove', scriptName, scriptType);\n\t\t\tthis.fire('remove:' + scriptName, scriptType);\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.get = function get(name) {\n\t\t\treturn this._scripts[name] || null;\n\t\t};\n\n\t\t_proto.has = function has(nameOrType) {\n\t\t\tif (typeof nameOrType === 'string') {\n\t\t\t\treturn this._scripts.hasOwnProperty(nameOrType);\n\t\t\t}\n\n\t\t\tif (!nameOrType) return false;\n\t\t\tvar scriptName = nameOrType.__name;\n\t\t\treturn this._scripts[scriptName] === nameOrType;\n\t\t};\n\n\t\treturn ScriptRegistry;\n\t}(EventHandler);\n\n\tvar I18nParser = function () {\n\t\tfunction I18nParser() {}\n\n\t\tvar _proto = I18nParser.prototype;\n\n\t\t_proto._validate = function _validate(data) {\n\t\t\tif (!data.header) {\n\t\t\t\tthrow new Error('pc.I18n#addData: Missing \"header\" field');\n\t\t\t}\n\n\t\t\tif (!data.header.version) {\n\t\t\t\tthrow new Error('pc.I18n#addData: Missing \"header.version\" field');\n\t\t\t}\n\n\t\t\tif (data.header.version !== 1) {\n\t\t\t\tthrow new Error('pc.I18n#addData: Invalid \"header.version\" field');\n\t\t\t}\n\n\t\t\tif (!data.data) {\n\t\t\t\tthrow new Error('pc.I18n#addData: Missing \"data\" field');\n\t\t\t} else if (!Array.isArray(data.data)) {\n\t\t\t\tthrow new Error('pc.I18n#addData: \"data\" field must be an array');\n\t\t\t}\n\n\t\t\tfor (var i = 0, len = data.data.length; i < len; i++) {\n\t\t\t\tvar entry = data.data[i];\n\n\t\t\t\tif (!entry.info) {\n\t\t\t\t\tthrow new Error('pc.I18n#addData: missing \"data[' + i + '].info\" field');\n\t\t\t\t}\n\n\t\t\t\tif (!entry.info.locale) {\n\t\t\t\t\tthrow new Error('pc.I18n#addData: missing \"data[' + i + '].info.locale\" field');\n\t\t\t\t}\n\n\t\t\t\tif (typeof entry.info.locale !== 'string') {\n\t\t\t\t\tthrow new Error('pc.I18n#addData: \"data[' + i + '].info.locale\" must be a string');\n\t\t\t\t}\n\n\t\t\t\tif (!entry.messages) {\n\t\t\t\t\tthrow new Error('pc.I18n#addData: missing \"data[' + i + '].messages\" field');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.parse = function parse(data) {\n\t\t\treturn data.data;\n\t\t};\n\n\t\treturn I18nParser;\n\t}();\n\n\tvar I18n = function (_EventHandler) {\n\t\t_inheritsLoose(I18n, _EventHandler);\n\n\t\tfunction I18n(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this.destroy = function () {\n\t\t\t\tthis._translations = null;\n\t\t\t\tthis._availableLangs = null;\n\t\t\t\tthis._assets = null;\n\t\t\t\tthis._parser = null;\n\t\t\t\tthis.off();\n\t\t\t};\n\n\t\t\t_this.locale = DEFAULT_LOCALE;\n\t\t\t_this._translations = {};\n\t\t\t_this._availableLangs = {};\n\t\t\t_this._app = app;\n\t\t\t_this._assets = [];\n\t\t\t_this._parser = new I18nParser();\n\t\t\treturn _this;\n\t\t}\n\n\t\tI18n.findAvailableLocale = function findAvailableLocale$1(desiredLocale, availableLocales) {\n\t\t\treturn findAvailableLocale(desiredLocale, availableLocales);\n\t\t};\n\n\t\tvar _proto = I18n.prototype;\n\n\t\t_proto.getText = function getText(key, locale) {\n\t\t\tvar result = key;\n\t\t\tvar lang;\n\n\t\t\tif (!locale) {\n\t\t\t\tlocale = this._locale;\n\t\t\t\tlang = this._lang;\n\t\t\t}\n\n\t\t\tvar translations = this._translations[locale];\n\n\t\t\tif (!translations) {\n\t\t\t\tif (!lang) {\n\t\t\t\t\tlang = getLang(locale);\n\t\t\t\t}\n\n\t\t\t\tlocale = this._findFallbackLocale(locale, lang);\n\t\t\t\ttranslations = this._translations[locale];\n\t\t\t}\n\n\t\t\tif (translations && translations.hasOwnProperty(key)) {\n\t\t\t\tresult = translations[key];\n\n\t\t\t\tif (Array.isArray(result)) {\n\t\t\t\t\tresult = result[0];\n\t\t\t\t}\n\n\t\t\t\tif (result === null || result === undefined) {\n\t\t\t\t\tresult = key;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.getPluralText = function getPluralText(key, n, locale) {\n\t\t\tvar result = key;\n\t\t\tvar pluralFn;\n\t\t\tvar lang;\n\n\t\t\tif (!locale) {\n\t\t\t\tlocale = this._locale;\n\t\t\t\tlang = this._lang;\n\t\t\t\tpluralFn = this._pluralFn;\n\t\t\t} else {\n\t\t\t\tlang = getLang(locale);\n\t\t\t\tpluralFn = getPluralFn(lang);\n\t\t\t}\n\n\t\t\tvar translations = this._translations[locale];\n\n\t\t\tif (!translations) {\n\t\t\t\tlocale = this._findFallbackLocale(locale, lang);\n\t\t\t\tlang = getLang(locale);\n\t\t\t\tpluralFn = getPluralFn(lang);\n\t\t\t\ttranslations = this._translations[locale];\n\t\t\t}\n\n\t\t\tif (translations && translations[key] && pluralFn) {\n\t\t\t\tvar index = pluralFn(n);\n\t\t\t\tresult = translations[key][index];\n\n\t\t\t\tif (result === null || result === undefined) {\n\t\t\t\t\tresult = key;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.addData = function addData(data) {\n\t\t\tvar parsed;\n\n\t\t\ttry {\n\t\t\t\tparsed = this._parser.parse(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, len = parsed.length; i < len; i++) {\n\t\t\t\tvar entry = parsed[i];\n\t\t\t\tvar locale = entry.info.locale;\n\t\t\t\tvar messages = entry.messages;\n\n\t\t\t\tif (!this._translations[locale]) {\n\t\t\t\t\tthis._translations[locale] = {};\n\t\t\t\t\tvar lang = getLang(locale);\n\n\t\t\t\t\tif (!this._availableLangs[lang]) {\n\t\t\t\t\t\tthis._availableLangs[lang] = locale;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tObject.assign(this._translations[locale], messages);\n\t\t\t\tthis.fire('data:add', locale, messages);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeData = function removeData(data) {\n\t\t\tvar parsed;\n\t\t\tvar key;\n\n\t\t\ttry {\n\t\t\t\tparsed = this._parser.parse(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, len = parsed.length; i < len; i++) {\n\t\t\t\tvar entry = parsed[i];\n\t\t\t\tvar locale = entry.info.locale;\n\t\t\t\tvar translations = this._translations[locale];\n\t\t\t\tif (!translations) continue;\n\t\t\t\tvar messages = entry.messages;\n\n\t\t\t\tfor (key in messages) {\n\t\t\t\t\tdelete translations[key];\n\t\t\t\t}\n\n\t\t\t\tvar hasAny = false;\n\n\t\t\t\tfor (key in translations) {\n\t\t\t\t\thasAny = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (!hasAny) {\n\t\t\t\t\tdelete this._translations[locale];\n\t\t\t\t\tdelete this._availableLangs[getLang(locale)];\n\t\t\t\t}\n\n\t\t\t\tthis.fire('data:remove', locale, messages);\n\t\t\t}\n\t\t};\n\n\t\t_proto._findFallbackLocale = function _findFallbackLocale(locale, lang) {\n\t\t\tvar result = DEFAULT_LOCALE_FALLBACKS[locale];\n\n\t\t\tif (result && this._translations[result]) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresult = DEFAULT_LOCALE_FALLBACKS[lang];\n\n\t\t\tif (result && this._translations[result]) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresult = this._availableLangs[lang];\n\n\t\t\tif (result && this._translations[result]) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn DEFAULT_LOCALE;\n\t\t};\n\n\t\t_proto._onAssetAdd = function _onAssetAdd(asset) {\n\t\t\tasset.on('load', this._onAssetLoad, this);\n\t\t\tasset.on('change', this._onAssetChange, this);\n\t\t\tasset.on('remove', this._onAssetRemove, this);\n\t\t\tasset.on('unload', this._onAssetUnload, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onAssetLoad(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onAssetLoad = function _onAssetLoad(asset) {\n\t\t\tthis.addData(asset.resource);\n\t\t};\n\n\t\t_proto._onAssetChange = function _onAssetChange(asset) {\n\t\t\tif (asset.resource) {\n\t\t\t\tthis.addData(asset.resource);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onAssetRemove = function _onAssetRemove(asset) {\n\t\t\tasset.off('load', this._onAssetLoad, this);\n\t\t\tasset.off('change', this._onAssetChange, this);\n\t\t\tasset.off('remove', this._onAssetRemove, this);\n\t\t\tasset.off('unload', this._onAssetUnload, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis.removeData(asset.resource);\n\t\t\t}\n\n\t\t\tthis._app.assets.once('add:' + asset.id, this._onAssetAdd, this);\n\t\t};\n\n\t\t_proto._onAssetUnload = function _onAssetUnload(asset) {\n\t\t\tif (asset.resource) {\n\t\t\t\tthis.removeData(asset.resource);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(I18n, [{\n\t\t\tkey: \"locale\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._locale;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._locale === value) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lang = getLang(value);\n\n\t\t\t\tif (lang === 'in') {\n\t\t\t\t\tlang = 'id';\n\t\t\t\t\tvalue = replaceLang(value, lang);\n\n\t\t\t\t\tif (this._locale === value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = this._locale;\n\t\t\t\tthis._locale = value;\n\t\t\t\tthis._lang = lang;\n\t\t\t\tthis._pluralFn = getPluralFn(this._lang);\n\t\t\t\tthis.fire('set:locale', value, old);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"assets\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._assets;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i;\n\t\t\t\tvar len;\n\t\t\t\tvar id;\n\t\t\t\tvar asset;\n\t\t\t\tvar index = {};\n\n\t\t\t\tfor (i = 0, len = value.length; i < len; i++) {\n\t\t\t\t\tid = value[i] instanceof Asset ? value[i].id : value[i];\n\t\t\t\t\tindex[id] = true;\n\t\t\t\t}\n\n\t\t\t\ti = this._assets.length;\n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tid = this._assets[i];\n\n\t\t\t\t\tif (!index[id]) {\n\t\t\t\t\t\tthis._app.assets.off('add:' + id, this._onAssetAdd, this);\n\n\t\t\t\t\t\tasset = this._app.assets.get(id);\n\n\t\t\t\t\t\tif (asset) {\n\t\t\t\t\t\t\tthis._onAssetRemove(asset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._assets.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (id in index) {\n\t\t\t\t\tid = parseInt(id, 10);\n\t\t\t\t\tif (this._assets.indexOf(id) !== -1) continue;\n\n\t\t\t\t\tthis._assets.push(id);\n\n\t\t\t\t\tasset = this._app.assets.get(id);\n\n\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\tthis._app.assets.once('add:' + id, this._onAssetAdd, this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._onAssetAdd(asset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn I18n;\n\t}(EventHandler);\n\n\tvar FILLMODE_NONE = 'NONE';\n\tvar FILLMODE_FILL_WINDOW = 'FILL_WINDOW';\n\tvar FILLMODE_KEEP_ASPECT = 'KEEP_ASPECT';\n\tvar RESOLUTION_AUTO = 'AUTO';\n\tvar RESOLUTION_FIXED = 'FIXED';\n\n\tvar VrDisplay = function (_EventHandler) {\n\t\t_inheritsLoose(VrDisplay, _EventHandler);\n\n\t\tfunction VrDisplay(app, display) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tvar self = _assertThisInitialized(_this);\n\n\t\t\t_this._app = app;\n\t\t\t_this._device = app.graphicsDevice;\n\t\t\t_this.id = display.displayId;\n\t\t\t_this._frameData = null;\n\n\t\t\tif (window.VRFrameData) {\n\t\t\t\t_this._frameData = new window.VRFrameData();\n\t\t\t}\n\n\t\t\t_this.display = display;\n\t\t\t_this._camera = null;\n\t\t\t_this.sitToStandInv = new Mat4();\n\t\t\t_this.leftView = new Mat4();\n\t\t\t_this.leftProj = new Mat4();\n\t\t\t_this.leftViewInv = new Mat4();\n\t\t\t_this.leftPos = new Vec3();\n\t\t\t_this.rightView = new Mat4();\n\t\t\t_this.rightProj = new Mat4();\n\t\t\t_this.rightViewInv = new Mat4();\n\t\t\t_this.rightPos = new Vec3();\n\t\t\t_this.combinedPos = new Vec3();\n\t\t\t_this.combinedView = new Mat4();\n\t\t\t_this.combinedProj = new Mat4();\n\t\t\t_this.combinedViewInv = new Mat4();\n\t\t\t_this.combinedFov = 0;\n\t\t\t_this.combinedAspect = 0;\n\t\t\t_this.presenting = false;\n\n\t\t\tself._presentChange = function (event) {\n\t\t\t\tvar display;\n\n\t\t\t\tif (event.display) {\n\t\t\t\t\tdisplay = event.display;\n\t\t\t\t} else if (event.detail && event.detail.display) {\n\t\t\t\t\tdisplay = event.detail.display;\n\t\t\t\t} else if (event.detail && event.detail.vrdisplay) {\n\t\t\t\t\tdisplay = event.detail.vrdisplay;\n\t\t\t\t} else {\n\t\t\t\t\tdisplay = self.display;\n\t\t\t\t}\n\n\t\t\t\tif (display === self.display) {\n\t\t\t\t\tself.presenting = self.display && self.display.isPresenting;\n\n\t\t\t\t\tif (self.presenting) {\n\t\t\t\t\t\tvar leftEye = self.display.getEyeParameters(\"left\");\n\t\t\t\t\t\tvar rightEye = self.display.getEyeParameters(\"right\");\n\t\t\t\t\t\tvar w = Math.max(leftEye.renderWidth, rightEye.renderWidth) * 2;\n\t\t\t\t\t\tvar h = Math.max(leftEye.renderHeight, rightEye.renderHeight);\n\n\t\t\t\t\t\tself._app.graphicsDevice.setResolution(w, h);\n\n\t\t\t\t\t\tself._app._allowResize = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself._app.setCanvasResolution(RESOLUTION_AUTO);\n\n\t\t\t\t\t\tself._app._allowResize = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.fire('beforepresentchange', self);\n\t\t\t\t\tself.fire('presentchange', self);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener('vrdisplaypresentchange', self._presentChange, false);\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = VrDisplay.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\twindow.removeEventListener('vrdisplaypresentchange', self._presentChange);\n\t\t\tif (this._camera) this._camera.vrDisplay = null;\n\t\t\tthis._camera = null;\n\t\t};\n\n\t\t_proto.poll = function poll() {\n\t\t\tif (this.display) {\n\t\t\t\tthis.display.getFrameData(this._frameData);\n\t\t\t\tthis.leftProj.data = this._frameData.leftProjectionMatrix;\n\t\t\t\tthis.rightProj.data = this._frameData.rightProjectionMatrix;\n\t\t\t\tvar stage = this.display.stageParameters;\n\n\t\t\t\tif (stage) {\n\t\t\t\t\tthis.sitToStandInv.set(stage.sittingToStandingTransform).invert();\n\t\t\t\t\tthis.combinedView.set(this._frameData.leftViewMatrix);\n\t\t\t\t\tthis.leftView.mul2(this.combinedView, this.sitToStandInv);\n\t\t\t\t\tthis.combinedView.set(this._frameData.rightViewMatrix);\n\t\t\t\t\tthis.rightView.mul2(this.combinedView, this.sitToStandInv);\n\t\t\t\t} else {\n\t\t\t\t\tthis.leftView.set(this._frameData.leftViewMatrix);\n\t\t\t\t\tthis.rightView.set(this._frameData.rightViewMatrix);\n\t\t\t\t}\n\n\t\t\t\tvar nx = this.leftProj.data[3] + this.leftProj.data[0];\n\t\t\t\tvar nz = this.leftProj.data[11] + this.leftProj.data[8];\n\t\t\t\tvar l = 1.0 / Math.sqrt(nx * nx + nz * nz);\n\t\t\t\tnx *= l;\n\t\t\t\tnz *= l;\n\t\t\t\tvar maxFov = -Math.atan2(nz, nx);\n\t\t\t\tnx = this.rightProj.data[3] + this.rightProj.data[0];\n\t\t\t\tnz = this.rightProj.data[11] + this.rightProj.data[8];\n\t\t\t\tl = 1.0 / Math.sqrt(nx * nx + nz * nz);\n\t\t\t\tnx *= l;\n\t\t\t\tnz *= l;\n\t\t\t\tmaxFov = Math.max(maxFov, -Math.atan2(nz, nx));\n\t\t\t\tmaxFov *= 2.0;\n\t\t\t\tthis.combinedFov = maxFov;\n\t\t\t\tvar aspect = this.rightProj.data[5] / this.rightProj.data[0];\n\t\t\t\tthis.combinedAspect = aspect;\n\t\t\t\tvar view = this.combinedView;\n\t\t\t\tview.copy(this.leftView);\n\t\t\t\tview.invert();\n\t\t\t\tthis.leftViewInv.copy(view);\n\t\t\t\tvar pos = this.combinedPos;\n\t\t\t\tpos.x = this.leftPos.x = view.data[12];\n\t\t\t\tpos.y = this.leftPos.y = view.data[13];\n\t\t\t\tpos.z = this.leftPos.z = view.data[14];\n\t\t\t\tview.copy(this.rightView);\n\t\t\t\tview.invert();\n\t\t\t\tthis.rightViewInv.copy(view);\n\t\t\t\tvar deltaX = pos.x - view.data[12];\n\t\t\t\tvar deltaY = pos.y - view.data[13];\n\t\t\t\tvar deltaZ = pos.z - view.data[14];\n\t\t\t\tvar dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ);\n\t\t\t\tthis.rightPos.x = view.data[12];\n\t\t\t\tthis.rightPos.y = view.data[13];\n\t\t\t\tthis.rightPos.z = view.data[14];\n\t\t\t\tpos.x += view.data[12];\n\t\t\t\tpos.y += view.data[13];\n\t\t\t\tpos.z += view.data[14];\n\t\t\t\tpos.x *= 0.5;\n\t\t\t\tpos.y *= 0.5;\n\t\t\t\tpos.z *= 0.5;\n\t\t\t\tvar b = Math.PI * 0.5;\n\t\t\t\tvar c = maxFov * 0.5;\n\t\t\t\tvar a = Math.PI - (b + c);\n\t\t\t\tvar offset = dist * 0.5 * Math.sin(a);\n\t\t\t\tvar fwdX = view.data[8];\n\t\t\t\tvar fwdY = view.data[9];\n\t\t\t\tvar fwdZ = view.data[10];\n\t\t\t\tview.data[12] = pos.x + fwdX * offset;\n\t\t\t\tview.data[13] = pos.y + fwdY * offset;\n\t\t\t\tview.data[14] = pos.z + fwdZ * offset;\n\t\t\t\tthis.combinedViewInv.copy(view);\n\t\t\t\tview.invert();\n\t\t\t\tthis.combinedProj.setPerspective(maxFov * math.RAD_TO_DEG, aspect, this.display.depthNear + offset, this.display.depthFar + offset, true);\n\t\t\t}\n\t\t};\n\n\t\t_proto.requestPresent = function requestPresent(callback) {\n\t\t\tif (!this.display) {\n\t\t\t\tif (callback) callback(new Error(\"No VrDisplay to requestPresent\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.presenting) {\n\t\t\t\tif (callback) callback(new Error(\"VrDisplay already presenting\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.display.requestPresent([{\n\t\t\t\tsource: this._device.canvas\n\t\t\t}]).then(function () {\n\t\t\t\tif (callback) callback();\n\t\t\t}, function (err) {\n\t\t\t\tif (callback) callback(err);\n\t\t\t});\n\t\t};\n\n\t\t_proto.exitPresent = function exitPresent(callback) {\n\t\t\tif (!this.display) {\n\t\t\t\tif (callback) callback(new Error(\"No VrDisplay to exitPresent\"));\n\t\t\t}\n\n\t\t\tif (!this.presenting) {\n\t\t\t\tif (callback) callback(new Error(\"VrDisplay not presenting\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.display.exitPresent().then(function () {\n\t\t\t\tif (callback) callback();\n\t\t\t}, function () {\n\t\t\t\tif (callback) callback(new Error(\"exitPresent failed\"));\n\t\t\t});\n\t\t};\n\n\t\t_proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n\t\t\tif (this.display) this.display.requestAnimationFrame(fn);\n\t\t};\n\n\t\t_proto.submitFrame = function submitFrame() {\n\t\t\tif (this.display) this.display.submitFrame();\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tif (this.display) this.display.resetPose();\n\t\t};\n\n\t\t_proto.setClipPlanes = function setClipPlanes(n, f) {\n\t\t\tif (this.display) {\n\t\t\t\tthis.display.depthNear = n;\n\t\t\t\tthis.display.depthFar = f;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getFrameData = function getFrameData() {\n\t\t\tif (this.display) return this._frameData;\n\t\t};\n\n\t\t_createClass(VrDisplay, [{\n\t\t\tkey: \"capabilities\",\n\t\t\tget: function get() {\n\t\t\t\tif (this.display) return this.display.capabilities;\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}]);\n\n\t\treturn VrDisplay;\n\t}(EventHandler);\n\n\tvar VrManager = function (_EventHandler) {\n\t\t_inheritsLoose(VrManager, _EventHandler);\n\n\t\tfunction VrManager(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tvar self = _assertThisInitialized(_this);\n\n\t\t\t_this.isSupported = VrManager.isSupported;\n\t\t\t_this._index = {};\n\t\t\t_this.displays = [];\n\t\t\t_this.display = null;\n\t\t\t_this._app = app;\n\t\t\t_this._onDisplayConnect = _this._onDisplayConnect.bind(_assertThisInitialized(_this));\n\t\t\t_this._onDisplayDisconnect = _this._onDisplayDisconnect.bind(_assertThisInitialized(_this));\n\n\t\t\tself._attach();\n\n\t\t\t_this._getDisplays(function (err, displays) {\n\t\t\t\tif (err) {\n\t\t\t\t\tself.fire('error', err);\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < displays.length; i++) {\n\t\t\t\t\t\tself._addDisplay(displays[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tself.fire('ready', self.displays);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = VrManager.prototype;\n\n\t\t_proto._attach = function _attach() {\n\t\t\twindow.addEventListener('vrdisplayconnect', this._onDisplayConnect);\n\t\t\twindow.addEventListener('vrdisplaydisconnect', this._onDisplayDisconnect);\n\t\t};\n\n\t\t_proto._detach = function _detach() {\n\t\t\twindow.removeEventListener('vrdisplayconnect', this._onDisplayConnect);\n\t\t\twindow.removeEventListener('vrdisplaydisconnect', this._onDisplayDisconnect);\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._detach();\n\t\t};\n\n\t\t_proto.poll = function poll() {\n\t\t\tvar l = this.displays.length;\n\t\t\tif (!l) return;\n\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tif (this.displays[i]._camera) this.displays[i].poll();\n\t\t\t}\n\t\t};\n\n\t\t_proto._getDisplays = function _getDisplays(callback) {\n\t\t\tif (navigator.getVRDisplays) {\n\t\t\t\tnavigator.getVRDisplays().then(function (displays) {\n\t\t\t\t\tif (callback) callback(null, displays);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (callback) callback(new Error('WebVR not supported'));\n\t\t\t}\n\t\t};\n\n\t\t_proto._addDisplay = function _addDisplay(vrDisplay) {\n\t\t\tif (this._index[vrDisplay.displayId]) return;\n\t\t\tvar display = new VrDisplay(this._app, vrDisplay);\n\t\t\tthis._index[display.id] = display;\n\t\t\tthis.displays.push(display);\n\t\t\tif (!this.display) this.display = display;\n\t\t\tthis.fire('displayconnect', display);\n\t\t};\n\n\t\t_proto._onDisplayConnect = function _onDisplayConnect(e) {\n\t\t\tif (e.detail && e.detail.display) {\n\t\t\t\tthis._addDisplay(e.detail.display);\n\t\t\t} else {\n\t\t\t\tthis._addDisplay(e.display);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onDisplayDisconnect = function _onDisplayDisconnect(e) {\n\t\t\tvar id;\n\n\t\t\tif (e.detail && e.detail.display) {\n\t\t\t\tid = e.detail.display.displayId;\n\t\t\t} else {\n\t\t\t\tid = e.display.displayId;\n\t\t\t}\n\n\t\t\tvar display = this._index[id];\n\t\t\tif (!display) return;\n\t\t\tdisplay.destroy();\n\t\t\tdelete this._index[display.id];\n\t\t\tvar ind = this.displays.indexOf(display);\n\t\t\tthis.displays.splice(ind, 1);\n\n\t\t\tif (this.display === display) {\n\t\t\t\tif (this.displays.length) {\n\t\t\t\t\tthis.display = this.displays[0];\n\t\t\t\t} else {\n\t\t\t\t\tthis.display = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.fire('displaydisconnect', display);\n\t\t};\n\n\t\treturn VrManager;\n\t}(EventHandler);\n\n\tVrManager.isSupported = typeof navigator !== 'undefined' ? !!navigator.getVRDisplays : false;\n\n\tvar XRTYPE_INLINE = 'inline';\n\tvar XRTYPE_VR = 'immersive-vr';\n\tvar XRTYPE_AR = 'immersive-ar';\n\tvar XRSPACE_VIEWER = 'viewer';\n\tvar XRSPACE_LOCAL = 'local';\n\tvar XRSPACE_LOCALFLOOR = 'local-floor';\n\tvar XRSPACE_BOUNDEDFLOOR = 'bounded-floor';\n\tvar XRSPACE_UNBOUNDED = 'unbounded';\n\tvar XRTARGETRAY_GAZE = 'gaze';\n\tvar XRTARGETRAY_SCREEN = 'screen';\n\tvar XRTARGETRAY_POINTER = 'tracked-pointer';\n\tvar XRHAND_NONE = 'none';\n\tvar XRHAND_LEFT = 'left';\n\tvar XRHAND_RIGHT = 'right';\n\tvar XRTRACKABLE_POINT = 'point';\n\tvar XRTRACKABLE_PLANE = 'plane';\n\tvar XRTRACKABLE_MESH = 'mesh';\n\n\tvar poolVec3 = [];\n\tvar poolQuat = [];\n\n\tvar XrHitTestSource = function (_EventHandler) {\n\t\t_inheritsLoose(XrHitTestSource, _EventHandler);\n\n\t\tfunction XrHitTestSource(manager, xrHitTestSource, transient) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.manager = manager;\n\t\t\t_this._xrHitTestSource = xrHitTestSource;\n\t\t\t_this._transient = transient;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrHitTestSource.prototype;\n\n\t\t_proto.remove = function remove() {\n\t\t\tif (!this._xrHitTestSource) return;\n\t\t\tvar sources = this.manager.hitTest.sources;\n\t\t\tvar ind = sources.indexOf(this);\n\t\t\tif (ind !== -1) sources.splice(ind, 1);\n\t\t\tthis.onStop();\n\t\t};\n\n\t\t_proto.onStop = function onStop() {\n\t\t\tthis._xrHitTestSource.cancel();\n\n\t\t\tthis._xrHitTestSource = null;\n\t\t\tthis.fire('remove');\n\t\t\tthis.manager.hitTest.fire('remove', this);\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tif (this._transient) {\n\t\t\t\tvar transientResults = frame.getHitTestResultsForTransientInput(this._xrHitTestSource);\n\n\t\t\t\tfor (var i = 0; i < transientResults.length; i++) {\n\t\t\t\t\tvar transientResult = transientResults[i];\n\t\t\t\t\tvar inputSource;\n\t\t\t\t\tif (transientResult.inputSource) inputSource = this.manager.input._getByInputSource(transientResult.inputSource);\n\t\t\t\t\tthis.updateHitResults(transientResult.results, inputSource);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.updateHitResults(frame.getHitTestResults(this._xrHitTestSource));\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateHitResults = function updateHitResults(results, inputSource) {\n\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\tvar pose = results[i].getPose(this.manager._referenceSpace);\n\t\t\t\tvar position = poolVec3.pop();\n\t\t\t\tif (!position) position = new Vec3();\n\t\t\t\tposition.copy(pose.transform.position);\n\t\t\t\tvar rotation = poolQuat.pop();\n\t\t\t\tif (!rotation) rotation = new Quat();\n\t\t\t\trotation.copy(pose.transform.orientation);\n\t\t\t\tthis.fire('result', position, rotation, inputSource);\n\t\t\t\tthis.manager.hitTest.fire('result', this, position, rotation, inputSource);\n\t\t\t\tpoolVec3.push(position);\n\t\t\t\tpoolQuat.push(rotation);\n\t\t\t}\n\t\t};\n\n\t\treturn XrHitTestSource;\n\t}(EventHandler);\n\n\tvar XrHitTest = function (_EventHandler) {\n\t\t_inheritsLoose(XrHitTest, _EventHandler);\n\n\t\tfunction XrHitTest(manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.manager = manager;\n\t\t\t_this._supported = !!(window.XRSession && window.XRSession.prototype.requestHitTestSource);\n\t\t\t_this._session = null;\n\t\t\t_this.sources = [];\n\n\t\t\tif (_this._supported) {\n\t\t\t\t_this.manager.on('start', _this._onSessionStart, _assertThisInitialized(_this));\n\n\t\t\t\t_this.manager.on('end', _this._onSessionEnd, _assertThisInitialized(_this));\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrHitTest.prototype;\n\n\t\t_proto._onSessionStart = function _onSessionStart() {\n\t\t\tif (this.manager.type !== XRTYPE_AR) return;\n\t\t\tthis._session = this.manager.session;\n\t\t};\n\n\t\t_proto._onSessionEnd = function _onSessionEnd() {\n\t\t\tif (!this._session) return;\n\t\t\tthis._session = null;\n\n\t\t\tfor (var i = 0; i < this.sources.length; i++) {\n\t\t\t\tthis.sources[i].onStop();\n\t\t\t}\n\n\t\t\tthis.sources = [];\n\t\t};\n\n\t\t_proto.isAvailable = function isAvailable(callback, fireError) {\n\t\t\tvar err;\n\t\t\tif (!this._supported) err = new Error('XR HitTest is not supported');\n\t\t\tif (!this._session) err = new Error('XR Session is not started (1)');\n\t\t\tif (this.manager.type !== XRTYPE_AR) err = new Error('XR HitTest is available only for AR');\n\n\t\t\tif (err) {\n\t\t\t\tif (callback) callback(err);\n\t\t\t\tif (fireError) fireError.fire('error', err);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.start = function start(options) {\n\t\t\tvar self = this;\n\t\t\toptions = options || {};\n\t\t\tif (!this.isAvailable(options.callback, this)) return;\n\t\t\tif (!options.profile && !options.spaceType) options.spaceType = XRSPACE_VIEWER;\n\t\t\tvar xrRay;\n\t\t\tvar offsetRay = options.offsetRay;\n\t\t\tif (offsetRay) xrRay = new XRRay(new DOMPoint(offsetRay.origin.x, offsetRay.origin.y, offsetRay.origin.z), new DOMPoint(offsetRay.direction.x, offsetRay.direction.y, offsetRay.direction.z));\n\t\t\tvar callback = options.callback;\n\n\t\t\tif (options.spaceType) {\n\t\t\t\tthis._session.requestReferenceSpace(options.spaceType).then(function (referenceSpace) {\n\t\t\t\t\tif (!self._session) {\n\t\t\t\t\t\tvar err = new Error('XR Session is not started (2)');\n\t\t\t\t\t\tif (callback) callback(err);\n\t\t\t\t\t\tself.fire('error', err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tself._session.requestHitTestSource({\n\t\t\t\t\t\tspace: referenceSpace,\n\t\t\t\t\t\tentityTypes: options.entityTypes || undefined,\n\t\t\t\t\t\toffsetRay: xrRay\n\t\t\t\t\t}).then(function (xrHitTestSource) {\n\t\t\t\t\t\tself._onHitTestSource(xrHitTestSource, false, callback);\n\t\t\t\t\t}).catch(function (ex) {\n\t\t\t\t\t\tif (callback) callback(ex);\n\t\t\t\t\t\tself.fire('error', ex);\n\t\t\t\t\t});\n\t\t\t\t}).catch(function (ex) {\n\t\t\t\t\tif (callback) callback(ex);\n\t\t\t\t\tself.fire('error', ex);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._session.requestHitTestSourceForTransientInput({\n\t\t\t\t\tprofile: options.profile,\n\t\t\t\t\tentityTypes: options.entityTypes || undefined,\n\t\t\t\t\toffsetRay: xrRay\n\t\t\t\t}).then(function (xrHitTestSource) {\n\t\t\t\t\tself._onHitTestSource(xrHitTestSource, true, callback);\n\t\t\t\t}).catch(function (ex) {\n\t\t\t\t\tif (callback) callback(ex);\n\t\t\t\t\tself.fire('error', ex);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto._onHitTestSource = function _onHitTestSource(xrHitTestSource, transient, callback) {\n\t\t\tif (!this._session) {\n\t\t\t\txrHitTestSource.cancel();\n\t\t\t\tvar err = new Error('XR Session is not started (3)');\n\t\t\t\tif (callback) callback(err);\n\t\t\t\tthis.fire('error', err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar hitTestSource = new XrHitTestSource(this.manager, xrHitTestSource, transient);\n\t\t\tthis.sources.push(hitTestSource);\n\t\t\tif (callback) callback(null, hitTestSource);\n\t\t\tthis.fire('add', hitTestSource);\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tfor (var i = 0; i < this.sources.length; i++) {\n\t\t\t\tthis.sources[i].update(frame);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(XrHitTest, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrHitTest;\n\t}(EventHandler);\n\n\tvar XrFinger = function () {\n\t\tfunction XrFinger(index, hand) {\n\t\t\tthis._index = index;\n\t\t\tthis._hand = hand;\n\n\t\t\tthis._hand._fingers.push(this);\n\n\t\t\tthis._joints = [];\n\t\t\tthis._tip = null;\n\t\t}\n\n\t\t_createClass(XrFinger, [{\n\t\t\tkey: \"index\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._index;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hand\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._hand;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"joints\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._joints;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"tip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._tip;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrFinger;\n\t}();\n\n\tvar tipJointIds = window.XRHand ? [XRHand.THUMB_PHALANX_TIP, XRHand.INDEX_PHALANX_TIP, XRHand.MIDDLE_PHALANX_TIP, XRHand.RING_PHALANX_TIP, XRHand.LITTLE_PHALANX_TIP] : [];\n\tvar tipJointIdsIndex = {};\n\n\tfor (var i = 0; i < tipJointIds.length; i++) {\n\t\ttipJointIdsIndex[tipJointIds[i]] = true;\n\t}\n\n\tvar XrJoint = function () {\n\t\tfunction XrJoint(index, id, hand, finger) {\n\t\t\tif (finger === void 0) {\n\t\t\t\tfinger = null;\n\t\t\t}\n\n\t\t\tthis._index = index;\n\t\t\tthis._id = id;\n\t\t\tthis._hand = hand;\n\n\t\t\tthis._hand._joints.push(this);\n\n\t\t\tthis._hand._jointsById[id] = this;\n\t\t\tthis._finger = finger;\n\t\t\tif (this._finger) this._finger._joints.push(this);\n\t\t\tthis._wrist = id === XRHand.WRIST;\n\t\t\tif (this._wrist) this._hand._wrist = this;\n\t\t\tthis._tip = this._finger && !!tipJointIdsIndex[id];\n\n\t\t\tif (this._tip) {\n\t\t\t\tthis._hand._tips.push(this);\n\n\t\t\t\tif (this._finger) this._finger._tip = this;\n\t\t\t}\n\n\t\t\tthis._radius = null;\n\t\t\tthis._localTransform = new Mat4();\n\t\t\tthis._worldTransform = new Mat4();\n\t\t\tthis._localPosition = new Vec3();\n\t\t\tthis._localRotation = new Quat();\n\t\t\tthis._position = new Vec3();\n\t\t\tthis._rotation = new Quat();\n\t\t\tthis._dirtyLocal = true;\n\t\t}\n\n\t\tvar _proto = XrJoint.prototype;\n\n\t\t_proto.update = function update(pose) {\n\t\t\tthis._dirtyLocal = true;\n\t\t\tthis._radius = pose.radius;\n\n\t\t\tthis._localPosition.copy(pose.transform.position);\n\n\t\t\tthis._localRotation.copy(pose.transform.orientation);\n\t\t};\n\n\t\t_proto._updateTransforms = function _updateTransforms() {\n\t\t\tif (this._dirtyLocal) {\n\t\t\t\tthis._dirtyLocal = false;\n\n\t\t\t\tthis._localTransform.setTRS(this._localPosition, this._localRotation, Vec3.ONE);\n\t\t\t}\n\n\t\t\tvar manager = this._hand._manager;\n\t\t\tvar parent = manager.camera.parent;\n\n\t\t\tif (parent) {\n\t\t\t\tthis._worldTransform.mul2(parent.getWorldTransform(), this._localTransform);\n\t\t\t} else {\n\t\t\t\tthis._worldTransform.copy(this._localTransform);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\tthis._updateTransforms();\n\n\t\t\tthis._worldTransform.getTranslation(this._position);\n\n\t\t\treturn this._position;\n\t\t};\n\n\t\t_proto.getRotation = function getRotation() {\n\t\t\tthis._updateTransforms();\n\n\t\t\tthis._rotation.setFromMat4(this._worldTransform);\n\n\t\t\treturn this._rotation;\n\t\t};\n\n\t\t_createClass(XrJoint, [{\n\t\t\tkey: \"index\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._index;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hand\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._hand;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"finger\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._finger;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"wrist\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._wrist;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"tip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._tip;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"radius\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._radius || 0.005;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrJoint;\n\t}();\n\n\tvar fingerJointIds = [];\n\tvar vecA = new Vec3();\n\tvar vecB = new Vec3();\n\tvar vecC = new Vec3();\n\n\tif (window.XRHand) {\n\t\tfingerJointIds = [[XRHand.THUMB_METACARPAL, XRHand.THUMB_PHALANX_PROXIMAL, XRHand.THUMB_PHALANX_DISTAL, XRHand.THUMB_PHALANX_TIP], [XRHand.INDEX_METACARPAL, XRHand.INDEX_PHALANX_PROXIMAL, XRHand.INDEX_PHALANX_INTERMEDIATE, XRHand.INDEX_PHALANX_DISTAL, XRHand.INDEX_PHALANX_TIP], [XRHand.MIDDLE_METACARPAL, XRHand.MIDDLE_PHALANX_PROXIMAL, XRHand.MIDDLE_PHALANX_INTERMEDIATE, XRHand.MIDDLE_PHALANX_DISTAL, XRHand.MIDDLE_PHALANX_TIP], [XRHand.RING_METACARPAL, XRHand.RING_PHALANX_PROXIMAL, XRHand.RING_PHALANX_INTERMEDIATE, XRHand.RING_PHALANX_DISTAL, XRHand.RING_PHALANX_TIP], [XRHand.LITTLE_METACARPAL, XRHand.LITTLE_PHALANX_PROXIMAL, XRHand.LITTLE_PHALANX_INTERMEDIATE, XRHand.LITTLE_PHALANX_DISTAL, XRHand.LITTLE_PHALANX_TIP]];\n\t}\n\n\tvar XrHand = function (_EventHandler) {\n\t\t_inheritsLoose(XrHand, _EventHandler);\n\n\t\tfunction XrHand(inputSource) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this.update = function (frame) {\n\t\t\t\tvar xrInputSource = this._inputSource._xrInputSource;\n\n\t\t\t\tfor (var j = 0; j < this._joints.length; j++) {\n\t\t\t\t\tvar joint = this._joints[j];\n\t\t\t\t\tvar jointSpace = xrInputSource.hand[joint._id];\n\n\t\t\t\t\tif (jointSpace) {\n\t\t\t\t\t\tvar pose = frame.getJointPose(jointSpace, this._manager._referenceSpace);\n\n\t\t\t\t\t\tif (pose) {\n\t\t\t\t\t\t\tjoint.update(pose);\n\n\t\t\t\t\t\t\tif (joint.wrist && !this._tracking) {\n\t\t\t\t\t\t\t\tthis._tracking = true;\n\t\t\t\t\t\t\t\tthis.fire('tracking');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (joint.wrist) {\n\t\t\t\t\t\t\tif (this._tracking) {\n\t\t\t\t\t\t\t\tthis._tracking = false;\n\t\t\t\t\t\t\t\tthis.fire('trackinglost');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar j1 = this._jointsById[XRHand.THUMB_METACARPAL];\n\t\t\t\tvar j4 = this._jointsById[XRHand.THUMB_PHALANX_TIP];\n\t\t\t\tvar j6 = this._jointsById[XRHand.INDEX_PHALANX_PROXIMAL];\n\t\t\t\tvar j9 = this._jointsById[XRHand.INDEX_PHALANX_TIP];\n\t\t\t\tvar j16 = this._jointsById[XRHand.RING_PHALANX_PROXIMAL];\n\t\t\t\tvar j21 = this._jointsById[XRHand.LITTLE_PHALANX_PROXIMAL];\n\n\t\t\t\tif (j1 && j4 && j6 && j9 && j16 && j21) {\n\t\t\t\t\tthis._inputSource._dirtyRay = true;\n\n\t\t\t\t\tthis._inputSource._rayLocal.origin.lerp(j4._localPosition, j9._localPosition, 0.5);\n\n\t\t\t\t\tvar jointL = j1;\n\t\t\t\t\tvar jointR = j21;\n\n\t\t\t\t\tif (this._inputSource.handedness === XRHAND_LEFT) {\n\t\t\t\t\t\tvar t = jointL;\n\t\t\t\t\t\tjointL = jointR;\n\t\t\t\t\t\tjointR = t;\n\t\t\t\t\t}\n\n\t\t\t\t\tvecA.sub2(jointL._localPosition, this._wrist._localPosition);\n\t\t\t\t\tvecB.sub2(jointR._localPosition, this._wrist._localPosition);\n\t\t\t\t\tvecC.cross(vecA, vecB).normalize();\n\t\t\t\t\tvecA.lerp(j6._localPosition, j16._localPosition, 0.5);\n\t\t\t\t\tvecA.sub(this._wrist._localPosition).normalize();\n\n\t\t\t\t\tthis._inputSource._rayLocal.direction.lerp(vecC, vecA, 0.5).normalize();\n\t\t\t\t}\n\n\t\t\t\tvar squeezing = this._fingerIsClosed(1) && this._fingerIsClosed(2) && this._fingerIsClosed(3) && this._fingerIsClosed(4);\n\n\t\t\t\tif (squeezing) {\n\t\t\t\t\tif (!this._inputSource._squeezing) {\n\t\t\t\t\t\tthis._inputSource._squeezing = true;\n\n\t\t\t\t\t\tthis._inputSource.fire('squeezestart');\n\n\t\t\t\t\t\tthis._manager.input.fire('squeezestart', this._inputSource);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this._inputSource._squeezing) {\n\t\t\t\t\t\tthis._inputSource._squeezing = false;\n\n\t\t\t\t\t\tthis._inputSource.fire('squeeze');\n\n\t\t\t\t\t\tthis._manager.input.fire('squeeze', this._inputSource);\n\n\t\t\t\t\t\tthis._inputSource.fire('squeezeend');\n\n\t\t\t\t\t\tthis._manager.input.fire('squeezeend', this._inputSource);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar xrHand = inputSource._xrInputSource.hand;\n\t\t\t_this._manager = inputSource._manager;\n\t\t\t_this._inputSource = inputSource;\n\t\t\t_this._tracking = false;\n\t\t\t_this._fingers = [];\n\t\t\t_this._joints = [];\n\t\t\t_this._jointsById = {};\n\t\t\t_this._tips = [];\n\t\t\t_this._wrist = null;\n\t\t\tif (xrHand[XRHand.WRIST]) _this._wrist = new XrJoint(0, XRHand.WRIST, _assertThisInitialized(_this), null);\n\n\t\t\tfor (var f = 0; f < fingerJointIds.length; f++) {\n\t\t\t\tvar finger = new XrFinger(f, _assertThisInitialized(_this));\n\n\t\t\t\tfor (var _j = 0; _j < fingerJointIds[f].length; _j++) {\n\t\t\t\t\tvar jointId = fingerJointIds[f][_j];\n\t\t\t\t\tif (!xrHand[jointId]) continue;\n\t\t\t\t\tnew XrJoint(_j, jointId, _assertThisInitialized(_this), finger);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrHand.prototype;\n\n\t\t_proto._fingerIsClosed = function _fingerIsClosed(index) {\n\t\t\tvar finger = this._fingers[index];\n\t\t\tvecA.sub2(finger.joints[0]._localPosition, finger.joints[1]._localPosition).normalize();\n\t\t\tvecB.sub2(finger.joints[2]._localPosition, finger.joints[3]._localPosition).normalize();\n\t\t\treturn vecA.dot(vecB) < -0.8;\n\t\t};\n\n\t\t_proto.getJointById = function getJointById(id) {\n\t\t\treturn this._jointsById[id] || null;\n\t\t};\n\n\t\t_createClass(XrHand, [{\n\t\t\tkey: \"fingers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fingers;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"joints\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._joints;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"tips\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._tips;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"wrist\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._wrist;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"tracking\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._tracking;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrHand;\n\t}(EventHandler);\n\n\tvar quat = new Quat();\n\tvar ids = 0;\n\n\tvar XrInputSource = function (_EventHandler) {\n\t\t_inheritsLoose(XrInputSource, _EventHandler);\n\n\t\tfunction XrInputSource(manager, xrInputSource) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this._updateRayTransforms = function () {\n\t\t\t\tvar dirty = this._dirtyRay;\n\t\t\t\tthis._dirtyRay = false;\n\t\t\t\tvar parent = this._manager.camera.parent;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tvar parentTransform = this._manager.camera.parent.getWorldTransform();\n\n\t\t\t\t\tparentTransform.getTranslation(this._position);\n\n\t\t\t\t\tthis._rotation.setFromMat4(parentTransform);\n\n\t\t\t\t\tthis._rotation.transformVector(this._rayLocal.origin, this._ray.origin);\n\n\t\t\t\t\tthis._ray.origin.add(this._position);\n\n\t\t\t\t\tthis._rotation.transformVector(this._rayLocal.direction, this._ray.direction);\n\t\t\t\t} else if (dirty) {\n\t\t\t\t\tthis._ray.origin.copy(this._rayLocal.origin);\n\n\t\t\t\t\tthis._ray.direction.copy(this._rayLocal.direction);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.getLocalRotation = function () {\n\t\t\t\treturn this._localRotation;\n\t\t\t};\n\n\t\t\t_this.getOrigin = function () {\n\t\t\t\tthis._updateRayTransforms();\n\n\t\t\t\treturn this._ray.origin;\n\t\t\t};\n\n\t\t\t_this._id = ++ids;\n\t\t\t_this._manager = manager;\n\t\t\t_this._xrInputSource = xrInputSource;\n\t\t\t_this._ray = new Ray();\n\t\t\t_this._rayLocal = new Ray();\n\t\t\t_this._grip = false;\n\t\t\t_this._hand = null;\n\t\t\tif (xrInputSource.hand) _this._hand = new XrHand(_assertThisInitialized(_this));\n\t\t\t_this._localTransform = null;\n\t\t\t_this._worldTransform = null;\n\t\t\t_this._position = new Vec3();\n\t\t\t_this._rotation = new Quat();\n\t\t\t_this._localPosition = null;\n\t\t\t_this._localRotation = null;\n\t\t\t_this._dirtyLocal = true;\n\t\t\t_this._selecting = false;\n\t\t\t_this._squeezing = false;\n\t\t\t_this._elementInput = true;\n\t\t\t_this._elementEntity = null;\n\t\t\t_this._hitTestSources = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrInputSource.prototype;\n\n\t\t_proto.update = function update(frame) {\n\t\t\tif (this._hand) {\n\t\t\t\tthis._hand.update(frame);\n\t\t\t} else {\n\t\t\t\tif (this._xrInputSource.gripSpace) {\n\t\t\t\t\tvar gripPose = frame.getPose(this._xrInputSource.gripSpace, this._manager._referenceSpace);\n\n\t\t\t\t\tif (gripPose) {\n\t\t\t\t\t\tif (!this._grip) {\n\t\t\t\t\t\t\tthis._grip = true;\n\t\t\t\t\t\t\tthis._localTransform = new Mat4();\n\t\t\t\t\t\t\tthis._worldTransform = new Mat4();\n\t\t\t\t\t\t\tthis._localPosition = new Vec3();\n\t\t\t\t\t\t\tthis._localRotation = new Quat();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._dirtyLocal = true;\n\n\t\t\t\t\t\tthis._localPosition.copy(gripPose.transform.position);\n\n\t\t\t\t\t\tthis._localRotation.copy(gripPose.transform.orientation);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar targetRayPose = frame.getPose(this._xrInputSource.targetRaySpace, this._manager._referenceSpace);\n\n\t\t\t\tif (targetRayPose) {\n\t\t\t\t\tthis._dirtyRay = true;\n\n\t\t\t\t\tthis._rayLocal.origin.copy(targetRayPose.transform.position);\n\n\t\t\t\t\tthis._rayLocal.direction.set(0, 0, -1);\n\n\t\t\t\t\tquat.copy(targetRayPose.transform.orientation);\n\t\t\t\t\tquat.transformVector(this._rayLocal.direction, this._rayLocal.direction);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateTransforms = function _updateTransforms() {\n\t\t\tif (this._dirtyLocal) {\n\t\t\t\tthis._dirtyLocal = false;\n\n\t\t\t\tthis._localTransform.setTRS(this._localPosition, this._localRotation, Vec3.ONE);\n\t\t\t}\n\n\t\t\tvar parent = this._manager.camera.parent;\n\n\t\t\tif (parent) {\n\t\t\t\tthis._worldTransform.mul2(parent.getWorldTransform(), this._localTransform);\n\t\t\t} else {\n\t\t\t\tthis._worldTransform.copy(this._localTransform);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\tif (!this._position) return null;\n\n\t\t\tthis._updateTransforms();\n\n\t\t\tthis._worldTransform.getTranslation(this._position);\n\n\t\t\treturn this._position;\n\t\t};\n\n\t\t_proto.getLocalPosition = function getLocalPosition() {\n\t\t\treturn this._localPosition;\n\t\t};\n\n\t\t_proto.getRotation = function getRotation() {\n\t\t\tif (!this._rotation) return null;\n\n\t\t\tthis._updateTransforms();\n\n\t\t\tthis._rotation.setFromMat4(this._worldTransform);\n\n\t\t\treturn this._rotation;\n\t\t};\n\n\t\t_proto.getDirection = function getDirection() {\n\t\t\tthis._updateRayTransforms();\n\n\t\t\treturn this._ray.direction;\n\t\t};\n\n\t\t_proto.hitTestStart = function hitTestStart(options) {\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\toptions.profile = this._xrInputSource.profiles[0];\n\t\t\tvar callback = options.callback;\n\n\t\t\toptions.callback = function (err, hitTestSource) {\n\t\t\t\tif (hitTestSource) self.onHitTestSourceAdd(hitTestSource);\n\t\t\t\tif (callback) callback(err, hitTestSource);\n\t\t\t};\n\n\t\t\tthis._manager.hitTest.start(options);\n\t\t};\n\n\t\t_proto.onHitTestSourceAdd = function onHitTestSourceAdd(hitTestSource) {\n\t\t\tthis._hitTestSources.push(hitTestSource);\n\n\t\t\tthis.fire('hittest:add', hitTestSource);\n\t\t\thitTestSource.on('result', function (position, rotation, inputSource) {\n\t\t\t\tif (inputSource !== this) return;\n\t\t\t\tthis.fire('hittest:result', hitTestSource, position, rotation);\n\t\t\t}, this);\n\t\t\thitTestSource.once('remove', function () {\n\t\t\t\tthis.onHitTestSourceRemove(hitTestSource);\n\t\t\t\tthis.fire('hittest:remove', hitTestSource);\n\t\t\t}, this);\n\t\t};\n\n\t\t_proto.onHitTestSourceRemove = function onHitTestSourceRemove(hitTestSource) {\n\t\t\tvar ind = this._hitTestSources.indexOf(hitTestSource);\n\n\t\t\tif (ind !== -1) this._hitTestSources.splice(ind, 1);\n\t\t};\n\n\t\t_createClass(XrInputSource, [{\n\t\t\tkey: \"id\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._id;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"inputSource\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._xrInputSource;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"targetRayMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._xrInputSource.targetRayMode;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"handedness\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._xrInputSource.handedness;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"profiles\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._xrInputSource.profiles;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"grip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._grip;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hand\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._hand;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"gamepad\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._xrInputSource.gamepad || null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"selecting\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._selecting;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"squeezing\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._squeezing;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"elementInput\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._elementInput;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._elementInput === value) return;\n\t\t\t\tthis._elementInput = value;\n\t\t\t\tif (!this._elementInput) this._elementEntity = null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"elementEntity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._elementEntity;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hitTestSources\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._hitTestSources;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrInputSource;\n\t}(EventHandler);\n\n\tvar XrInput = function (_EventHandler) {\n\t\t_inheritsLoose(XrInput, _EventHandler);\n\n\t\tfunction XrInput(manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tvar self = _assertThisInitialized(_this);\n\n\t\t\t_this.manager = manager;\n\t\t\t_this._session = null;\n\t\t\t_this._inputSources = [];\n\n\t\t\t_this._onInputSourcesChangeEvt = function (evt) {\n\t\t\t\tself._onInputSourcesChange(evt);\n\t\t\t};\n\n\t\t\t_this.manager.on('start', _this._onSessionStart, _assertThisInitialized(_this));\n\n\t\t\t_this.manager.on('end', _this._onSessionEnd, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrInput.prototype;\n\n\t\t_proto._onSessionStart = function _onSessionStart() {\n\t\t\tthis._session = this.manager.session;\n\n\t\t\tthis._session.addEventListener('inputsourceschange', this._onInputSourcesChangeEvt);\n\n\t\t\tvar self = this;\n\n\t\t\tthis._session.addEventListener('select', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource.fire('select', evt);\n\t\t\t\tself.fire('select', inputSource, evt);\n\t\t\t});\n\n\t\t\tthis._session.addEventListener('selectstart', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource._selecting = true;\n\t\t\t\tinputSource.fire('selectstart', evt);\n\t\t\t\tself.fire('selectstart', inputSource, evt);\n\t\t\t});\n\n\t\t\tthis._session.addEventListener('selectend', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource._selecting = false;\n\t\t\t\tinputSource.fire('selectend', evt);\n\t\t\t\tself.fire('selectend', inputSource, evt);\n\t\t\t});\n\n\t\t\tthis._session.addEventListener('squeeze', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource.fire('squeeze', evt);\n\t\t\t\tself.fire('squeeze', inputSource, evt);\n\t\t\t});\n\n\t\t\tthis._session.addEventListener('squeezestart', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource._squeezing = true;\n\t\t\t\tinputSource.fire('squeezestart', evt);\n\t\t\t\tself.fire('squeezestart', inputSource, evt);\n\t\t\t});\n\n\t\t\tthis._session.addEventListener('squeezeend', function (evt) {\n\t\t\t\tvar inputSource = self._getByInputSource(evt.inputSource);\n\n\t\t\t\tinputSource.update(evt.frame);\n\t\t\t\tinputSource._squeezing = false;\n\t\t\t\tinputSource.fire('squeezeend', evt);\n\t\t\t\tself.fire('squeezeend', inputSource, evt);\n\t\t\t});\n\n\t\t\tvar inputSources = this._session.inputSources;\n\n\t\t\tfor (var i = 0; i < inputSources.length; i++) {\n\t\t\t\tthis._addInputSource(inputSources[i]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSessionEnd = function _onSessionEnd() {\n\t\t\tvar i = this._inputSources.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tvar inputSource = this._inputSources[i];\n\n\t\t\t\tthis._inputSources.splice(i, 1);\n\n\t\t\t\tinputSource.fire('remove');\n\t\t\t\tthis.fire('remove', inputSource);\n\t\t\t}\n\n\t\t\tthis._session.removeEventListener('inputsourceschange', this._onInputSourcesChangeEvt);\n\n\t\t\tthis._session = null;\n\t\t};\n\n\t\t_proto._onInputSourcesChange = function _onInputSourcesChange(evt) {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < evt.removed.length; i++) {\n\t\t\t\tthis._removeInputSource(evt.removed[i]);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < evt.added.length; i++) {\n\t\t\t\tthis._addInputSource(evt.added[i]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._getByInputSource = function _getByInputSource(xrInputSource) {\n\t\t\tfor (var i = 0; i < this._inputSources.length; i++) {\n\t\t\t\tif (this._inputSources[i].inputSource === xrInputSource) {\n\t\t\t\t\treturn this._inputSources[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._addInputSource = function _addInputSource(xrInputSource) {\n\t\t\tif (this._getByInputSource(xrInputSource)) return;\n\t\t\tvar inputSource = new XrInputSource(this.manager, xrInputSource);\n\n\t\t\tthis._inputSources.push(inputSource);\n\n\t\t\tthis.fire('add', inputSource);\n\t\t};\n\n\t\t_proto._removeInputSource = function _removeInputSource(xrInputSource) {\n\t\t\tfor (var i = 0; i < this._inputSources.length; i++) {\n\t\t\t\tif (this._inputSources[i].inputSource !== xrInputSource) continue;\n\t\t\t\tvar inputSource = this._inputSources[i];\n\n\t\t\t\tthis._inputSources.splice(i, 1);\n\n\t\t\t\tvar h = inputSource.hitTestSources.length;\n\n\t\t\t\twhile (h--) {\n\t\t\t\t\tinputSource.hitTestSources[h].remove();\n\t\t\t\t}\n\n\t\t\t\tinputSource.fire('remove');\n\t\t\t\tthis.fire('remove', inputSource);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tfor (var i = 0; i < this._inputSources.length; i++) {\n\t\t\t\tthis._inputSources[i].update(frame);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(XrInput, [{\n\t\t\tkey: \"inputSources\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._inputSources;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrInput;\n\t}(EventHandler);\n\n\tvar vec3A = new Vec3();\n\tvar vec3B = new Vec3();\n\tvar mat4A = new Mat4();\n\tvar mat4B = new Mat4();\n\n\tvar XrLightEstimation = function (_EventHandler) {\n\t\t_inheritsLoose(XrLightEstimation, _EventHandler);\n\n\t\tfunction XrLightEstimation(manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._manager = manager;\n\t\t\t_this._supported = false;\n\t\t\t_this._available = false;\n\t\t\t_this._lightProbeRequested = false;\n\t\t\t_this._lightProbe = null;\n\t\t\t_this._intensity = 0;\n\t\t\t_this._rotation = new Quat();\n\t\t\t_this._color = new Color();\n\t\t\t_this._sphericalHarmonics = new Float32Array(27);\n\n\t\t\t_this._manager.on('start', _this._onSessionStart, _assertThisInitialized(_this));\n\n\t\t\t_this._manager.on('end', _this._onSessionEnd, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrLightEstimation.prototype;\n\n\t\t_proto._onSessionStart = function _onSessionStart() {\n\t\t\tvar supported = !!this._manager.session.requestLightProbe;\n\t\t\tif (!supported) return;\n\t\t\tthis._supported = true;\n\t\t};\n\n\t\t_proto._onSessionEnd = function _onSessionEnd() {\n\t\t\tthis._supported = false;\n\t\t\tthis._available = false;\n\t\t\tthis._lightProbeRequested = false;\n\t\t\tthis._lightProbe = null;\n\t\t};\n\n\t\t_proto.start = function start() {\n\t\t\tvar err;\n\t\t\tif (!this._manager.session) err = new Error('XR session is not running');\n\t\t\tif (!err && this._manager.type !== XRTYPE_AR) err = new Error('XR session type is not AR');\n\t\t\tif (!err && !this._supported) err = new Error('light-estimation is not supported');\n\t\t\tif (!err && this._lightProbe || this._lightProbeRequested) err = new Error('light estimation is already requested');\n\n\t\t\tif (err) {\n\t\t\t\tthis.fire('error', err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tthis._lightProbeRequested = true;\n\n\t\t\tthis._manager.session.requestLightProbe().then(function (lightProbe) {\n\t\t\t\tvar wasRequested = self._lightProbeRequested;\n\t\t\t\tself._lightProbeRequested = false;\n\n\t\t\t\tif (self._manager.active) {\n\t\t\t\t\tif (wasRequested) {\n\t\t\t\t\t\tself._lightProbe = lightProbe;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tself.fire('error', new Error('XR session is not active'));\n\t\t\t\t}\n\t\t\t}).catch(function (ex) {\n\t\t\t\tself._lightProbeRequested = false;\n\t\t\t\tself.fire('error', ex);\n\t\t\t});\n\t\t};\n\n\t\t_proto.end = function end() {\n\t\t\tthis._lightProbeRequested = false;\n\t\t\tthis._lightProbe = null;\n\t\t\tthis._available = false;\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tif (!this._lightProbe) return;\n\t\t\tvar lightEstimate = frame.getLightEstimate(this._lightProbe);\n\t\t\tif (!lightEstimate) return;\n\n\t\t\tif (!this._available) {\n\t\t\t\tthis._available = true;\n\t\t\t\tthis.fire('available');\n\t\t\t}\n\n\t\t\tvar pli = lightEstimate.primaryLightIntensity;\n\t\t\tthis._intensity = Math.max(1.0, Math.max(pli.x, Math.max(pli.y, pli.z)));\n\t\t\tvec3A.copy(pli).scale(1 / this._intensity);\n\n\t\t\tthis._color.set(vec3A.x, vec3A.y, vec3A.z);\n\n\t\t\tvec3A.set(0, 0, 0);\n\t\t\tvec3B.copy(lightEstimate.primaryLightDirection);\n\t\t\tmat4A.setLookAt(vec3B, vec3A, Vec3.UP);\n\t\t\tmat4B.setFromAxisAngle(Vec3.RIGHT, 90);\n\t\t\tmat4A.mul(mat4B);\n\n\t\t\tthis._rotation.setFromMat4(mat4A);\n\n\t\t\tthis._sphericalHarmonics.set(lightEstimate.sphericalHarmonicsCoefficients);\n\t\t};\n\n\t\t_createClass(XrLightEstimation, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"available\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"intensity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available ? this._intensity : null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"color\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available ? this._color : null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rotation\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available ? this._rotation : null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"sphericalHarmonics\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available ? this._sphericalHarmonics : null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrLightEstimation;\n\t}(EventHandler);\n\n\tvar XrTrackedImage = function (_EventHandler) {\n\t\t_inheritsLoose(XrTrackedImage, _EventHandler);\n\n\t\tfunction XrTrackedImage(image, width) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\t_this.destroy = function () {\n\t\t\t\tthis._image = null;\n\t\t\t\tthis._pose = null;\n\n\t\t\t\tif (this._bitmap) {\n\t\t\t\t\tthis._bitmap.close();\n\n\t\t\t\t\tthis._bitmap = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.getRotation = function () {\n\t\t\t\tif (this._pose) this._rotation.copy(this._pose.transform.orientation);\n\t\t\t\treturn this._rotation;\n\t\t\t};\n\n\t\t\t_this._image = image;\n\t\t\t_this._bitmap = null;\n\t\t\t_this._width = width;\n\t\t\t_this._measuredWidth = 0;\n\t\t\t_this._trackable = false;\n\t\t\t_this._tracking = false;\n\t\t\t_this._emulated = false;\n\t\t\t_this._pose = null;\n\t\t\t_this._position = new Vec3();\n\t\t\t_this._rotation = new Quat();\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrTrackedImage.prototype;\n\n\t\t_proto.prepare = function prepare() {\n\t\t\tvar self = this;\n\n\t\t\tif (this._bitmap) {\n\t\t\t\treturn {\n\t\t\t\t\timage: this._bitmap,\n\t\t\t\t\twidthInMeters: this._width\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn createImageBitmap(this._image).then(function (bitmap) {\n\t\t\t\tself._bitmap = bitmap;\n\t\t\t\treturn {\n\t\t\t\t\timage: self._bitmap,\n\t\t\t\t\twidthInMeters: self._width\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\n\t\t_proto.getPosition = function getPosition() {\n\t\t\tif (this._pose) this._position.copy(this._pose.transform.position);\n\t\t\treturn this._position;\n\t\t};\n\n\t\t_createClass(XrTrackedImage, [{\n\t\t\tkey: \"image\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._image;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._width;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._width = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"trackable\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._trackable;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"tracking\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._tracking;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"emulated\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._emulated;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrTrackedImage;\n\t}(EventHandler);\n\n\tvar XrImageTracking = function (_EventHandler) {\n\t\t_inheritsLoose(XrImageTracking, _EventHandler);\n\n\t\tfunction XrImageTracking(manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._manager = manager;\n\t\t\t_this._supported = !!window.XRImageTrackingResult;\n\t\t\t_this._available = false;\n\t\t\t_this._images = [];\n\n\t\t\tif (_this._supported) {\n\t\t\t\t_this._manager.on('start', _this._onSessionStart, _assertThisInitialized(_this));\n\n\t\t\t\t_this._manager.on('end', _this._onSessionEnd, _assertThisInitialized(_this));\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrImageTracking.prototype;\n\n\t\t_proto.add = function add(image, width) {\n\t\t\tif (!this._supported || this._manager.active) return null;\n\t\t\tvar trackedImage = new XrTrackedImage(image, width);\n\n\t\t\tthis._images.push(trackedImage);\n\n\t\t\treturn trackedImage;\n\t\t};\n\n\t\t_proto.remove = function remove(trackedImage) {\n\t\t\tif (this._manager.active) return;\n\n\t\t\tvar ind = this._images.indexOf(trackedImage);\n\n\t\t\tif (ind !== -1) {\n\t\t\t\ttrackedImage.destroy();\n\n\t\t\t\tthis._images.splice(ind, 1);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSessionStart = function _onSessionStart() {\n\t\t\tvar self = this;\n\n\t\t\tthis._manager.session.getTrackedImageScores().then(function (images) {\n\t\t\t\tself._available = true;\n\n\t\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\t\tself._images[i]._trackable = images[i] === 'trackable';\n\t\t\t\t}\n\t\t\t}).catch(function (err) {\n\t\t\t\tself._available = false;\n\t\t\t\tself.fire('error', err);\n\t\t\t});\n\t\t};\n\n\t\t_proto._onSessionEnd = function _onSessionEnd() {\n\t\t\tthis._available = false;\n\n\t\t\tfor (var i = 0; i < this._images.length; i++) {\n\t\t\t\tthis._images[i]._pose = null;\n\t\t\t\tthis._images[i]._measuredWidth = 0;\n\n\t\t\t\tif (this._images[i]._tracking) {\n\t\t\t\t\tthis._images[i]._tracking = false;\n\n\t\t\t\t\tthis._images[i].fire('untracked');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.prepareImages = function prepareImages(callback) {\n\t\t\tif (this._images.length) {\n\t\t\t\tPromise.all(this._images.map(function (trackedImage) {\n\t\t\t\t\treturn trackedImage.prepare();\n\t\t\t\t})).then(function (bitmaps) {\n\t\t\t\t\tcallback(null, bitmaps);\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\tcallback(err, null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcallback(null, null);\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tif (!this._available) return;\n\t\t\tvar results = frame.getImageTrackingResults();\n\t\t\tvar index = {};\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < results.length; i++) {\n\t\t\t\tindex[results[i].index] = results[i];\n\t\t\t\tvar trackedImage = this._images[results[i].index];\n\t\t\t\ttrackedImage._emulated = results[i].trackingState === 'emulated';\n\t\t\t\ttrackedImage._measuredWidth = results[i].measuredWidthInMeters;\n\t\t\t\ttrackedImage._dirtyTransform = true;\n\t\t\t\ttrackedImage._pose = frame.getPose(results[i].imageSpace, this._manager._referenceSpace);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._images.length; i++) {\n\t\t\t\tif (this._images[i]._tracking && !index[i]) {\n\t\t\t\t\tthis._images[i]._tracking = false;\n\n\t\t\t\t\tthis._images[i].fire('untracked');\n\t\t\t\t} else if (!this._images[i]._tracking && index[i]) {\n\t\t\t\t\tthis._images[i]._tracking = true;\n\n\t\t\t\t\tthis._images[i].fire('tracked');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(XrImageTracking, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"available\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"images\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._images;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrImageTracking;\n\t}(EventHandler);\n\n\tvar XrDomOverlay = function () {\n\t\tfunction XrDomOverlay(manager) {\n\t\t\tthis._manager = manager;\n\t\t\tthis._supported = !!window.XRDOMOverlayState;\n\t\t\tthis._root = null;\n\t\t}\n\n\t\t_createClass(XrDomOverlay, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"available\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported && this._manager.active && this._manager._session.domOverlayState !== null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"state\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._supported || !this._manager.active || !this._manager._session.domOverlayState) return null;\n\t\t\t\treturn this._manager._session.domOverlayState.type;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"root\",\n\t\t\tset: function set(value) {\n\t\t\t\tif (!this._supported || this._manager.active) return;\n\t\t\t\tthis._root = value;\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrDomOverlay;\n\t}();\n\n\tvar XrDepthSensing = function (_EventHandler) {\n\t\t_inheritsLoose(XrDepthSensing, _EventHandler);\n\n\t\tfunction XrDepthSensing(manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._manager = manager;\n\t\t\t_this._depthInfo = null;\n\t\t\t_this._available = false;\n\t\t\t_this._matrixDirty = false;\n\t\t\t_this._matrix = new Mat4();\n\t\t\t_this._emptyBuffer = new Uint8Array(32);\n\t\t\t_this._depthBuffer = null;\n\t\t\t_this._texture = new Texture(_this._manager.app.graphicsDevice, {\n\t\t\t\tformat: PIXELFORMAT_L8_A8,\n\t\t\t\tmipmaps: false,\n\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\tminFilter: FILTER_LINEAR,\n\t\t\t\tmagFilter: FILTER_LINEAR\n\t\t\t});\n\n\t\t\t_this._manager.on('end', _this._onSessionEnd, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrDepthSensing.prototype;\n\n\t\t_proto._onSessionEnd = function _onSessionEnd() {\n\t\t\tthis._depthInfo = null;\n\n\t\t\tif (this._available) {\n\t\t\t\tthis._available = false;\n\t\t\t\tthis.fire('unavailable');\n\t\t\t}\n\n\t\t\tthis._depthBuffer = null;\n\t\t\tthis._texture._width = 4;\n\t\t\tthis._texture._height = 4;\n\t\t\tthis._texture._levels[0] = this._emptyBuffer;\n\n\t\t\tthis._texture.upload();\n\t\t};\n\n\t\t_proto._updateTexture = function _updateTexture() {\n\t\t\tif (this._depthInfo) {\n\t\t\t\tvar resized = false;\n\n\t\t\t\tif (this._depthInfo.width !== this._texture.width || this._depthInfo.height !== this._texture.height) {\n\t\t\t\t\tthis._texture._width = this._depthInfo.width;\n\t\t\t\t\tthis._texture._height = this._depthInfo.height;\n\t\t\t\t\tthis._matrixDirty = true;\n\t\t\t\t\tresized = true;\n\t\t\t\t}\n\n\t\t\t\tvar dataBuffer = this._depthInfo.data;\n\t\t\t\tthis._depthBuffer = new Uint8Array(dataBuffer.buffer, dataBuffer.byteOffset, dataBuffer.byteLength);\n\t\t\t\tthis._texture._levels[0] = this._depthBuffer;\n\n\t\t\t\tthis._texture.upload();\n\n\t\t\t\tif (resized) this.fire('resize', this._depthInfo.width, this._depthInfo.height);\n\t\t\t} else if (this._depthBuffer) {\n\t\t\t\tthis._depthBuffer = null;\n\t\t\t\tthis._texture._width = 4;\n\t\t\t\tthis._texture._height = 4;\n\t\t\t\tthis._texture._levels[0] = this._emptyBuffer;\n\n\t\t\t\tthis._texture.upload();\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update(frame, view) {\n\t\t\tif (view) {\n\t\t\t\tif (!this._depthInfo) this._matrixDirty = true;\n\t\t\t\tthis._depthInfo = frame.getDepthInformation(view);\n\t\t\t} else {\n\t\t\t\tif (this._depthInfo) this._matrixDirty = true;\n\t\t\t\tthis._depthInfo = null;\n\t\t\t}\n\n\t\t\tthis._updateTexture();\n\n\t\t\tif (this._matrixDirty) {\n\t\t\t\tthis._matrixDirty = false;\n\n\t\t\t\tif (this._depthInfo) {\n\t\t\t\t\tthis._matrix.data.set(this._depthInfo.normTextureFromNormView.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis._matrix.setIdentity();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._depthInfo && !this._available) {\n\t\t\t\tthis._available = true;\n\t\t\t\tthis.fire('available');\n\t\t\t} else if (!this._depthInfo && this._available) {\n\t\t\t\tthis._available = false;\n\t\t\t\tthis.fire('unavailable');\n\t\t\t}\n\t\t};\n\n\t\t_proto.getDepth = function getDepth(x, y) {\n\t\t\tif (!this._depthInfo) return null;\n\t\t\treturn this._depthInfo.getDepth(x, y);\n\t\t};\n\n\t\t_createClass(XrDepthSensing, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!window.XRDepthInformation;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"available\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._available;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._depthInfo && this._depthInfo.width || 0;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._depthInfo && this._depthInfo.height || 0;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"texture\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._texture;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"uvMatrix\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._matrix;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrDepthSensing;\n\t}(EventHandler);\n\n\tvar XrManager = function (_EventHandler) {\n\t\t_inheritsLoose(XrManager, _EventHandler);\n\n\t\tfunction XrManager(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tvar self = _assertThisInitialized(_this);\n\n\t\t\t_this.app = app;\n\t\t\t_this._supported = !!navigator.xr;\n\t\t\t_this._available = {};\n\t\t\t_this._available[XRTYPE_INLINE] = false;\n\t\t\t_this._available[XRTYPE_VR] = false;\n\t\t\t_this._available[XRTYPE_AR] = false;\n\t\t\t_this._type = null;\n\t\t\t_this._spaceType = null;\n\t\t\t_this._session = null;\n\t\t\t_this._baseLayer = null;\n\t\t\t_this._referenceSpace = null;\n\t\t\t_this.depthSensing = new XrDepthSensing(_assertThisInitialized(_this));\n\t\t\t_this.domOverlay = new XrDomOverlay(_assertThisInitialized(_this));\n\t\t\t_this.hitTest = new XrHitTest(_assertThisInitialized(_this));\n\t\t\t_this.imageTracking = new XrImageTracking(_assertThisInitialized(_this));\n\t\t\t_this.input = new XrInput(_assertThisInitialized(_this));\n\t\t\t_this.lightEstimation = new XrLightEstimation(_assertThisInitialized(_this));\n\t\t\t_this._camera = null;\n\t\t\t_this.views = [];\n\t\t\t_this.viewsPool = [];\n\t\t\t_this._localPosition = new Vec3();\n\t\t\t_this._localRotation = new Quat();\n\t\t\t_this._depthNear = 0.1;\n\t\t\t_this._depthFar = 1000;\n\t\t\t_this._width = 0;\n\t\t\t_this._height = 0;\n\n\t\t\tif (_this._supported) {\n\t\t\t\tnavigator.xr.addEventListener('devicechange', function () {\n\t\t\t\t\tself._deviceAvailabilityCheck();\n\t\t\t\t});\n\n\t\t\t\t_this._deviceAvailabilityCheck();\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = XrManager.prototype;\n\n\t\t_proto.start = function start(camera, type, spaceType, options) {\n\t\t\tvar self = this;\n\t\t\tvar callback = options;\n\t\t\tif (typeof options === 'object') callback = options.callback;\n\n\t\t\tif (!this._available[type]) {\n\t\t\t\tif (callback) callback(new Error('XR is not available'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._session) {\n\t\t\t\tif (callback) callback(new Error('XR session is already started'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._camera = camera;\n\t\t\tthis._camera.camera.xr = this;\n\t\t\tthis._type = type;\n\t\t\tthis._spaceType = spaceType;\n\n\t\t\tthis._setClipPlanes(camera.nearClip, camera.farClip);\n\n\t\t\tvar opts = {\n\t\t\t\trequiredFeatures: [spaceType],\n\t\t\t\toptionalFeatures: []\n\t\t\t};\n\n\t\t\tif (type === XRTYPE_AR) {\n\t\t\t\topts.optionalFeatures.push('light-estimation');\n\t\t\t\topts.optionalFeatures.push('hit-test');\n\t\t\t\topts.optionalFeatures.push('depth-sensing');\n\n\t\t\t\tif (options && options.imageTracking) {\n\t\t\t\t\topts.optionalFeatures.push('image-tracking');\n\t\t\t\t}\n\n\t\t\t\tif (this.domOverlay.root) {\n\t\t\t\t\topts.optionalFeatures.push('dom-overlay');\n\t\t\t\t\topts.domOverlay = {\n\t\t\t\t\t\troot: this.domOverlay.root\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (type === XRTYPE_VR) {\n\t\t\t\topts.optionalFeatures.push('hand-tracking');\n\t\t\t}\n\n\t\t\tif (options && options.optionalFeatures) opts.optionalFeatures = opts.optionalFeatures.concat(options.optionalFeatures);\n\n\t\t\tif (this.imageTracking.images.length) {\n\t\t\t\tthis.imageTracking.prepareImages(function (err, trackedImages) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (callback) callback(err);\n\t\t\t\t\t\tself.fire('error', err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (trackedImages !== null) opts.trackedImages = trackedImages;\n\n\t\t\t\t\tself._onStartOptionsReady(type, spaceType, opts, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself._onStartOptionsReady(type, spaceType, opts, callback);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onStartOptionsReady = function _onStartOptionsReady(type, spaceType, options, callback) {\n\t\t\tvar self = this;\n\t\t\tnavigator.xr.requestSession(type, options).then(function (session) {\n\t\t\t\tself._onSessionStart(session, spaceType, callback);\n\t\t\t}).catch(function (ex) {\n\t\t\t\tself._camera.camera.xr = null;\n\t\t\t\tself._camera = null;\n\t\t\t\tself._type = null;\n\t\t\t\tself._spaceType = null;\n\t\t\t\tif (callback) callback(ex);\n\t\t\t\tself.fire('error', ex);\n\t\t\t});\n\t\t};\n\n\t\t_proto.end = function end(callback) {\n\t\t\tif (!this._session) {\n\t\t\t\tif (callback) callback(new Error('XR Session is not initialized'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (callback) this.once('end', callback);\n\n\t\t\tthis._session.end();\n\t\t};\n\n\t\t_proto.isAvailable = function isAvailable(type) {\n\t\t\treturn this._available[type];\n\t\t};\n\n\t\t_proto._deviceAvailabilityCheck = function _deviceAvailabilityCheck() {\n\t\t\tfor (var key in this._available) {\n\t\t\t\tthis._sessionSupportCheck(key);\n\t\t\t}\n\t\t};\n\n\t\t_proto._sessionSupportCheck = function _sessionSupportCheck(type) {\n\t\t\tvar self = this;\n\t\t\tnavigator.xr.isSessionSupported(type).then(function (available) {\n\t\t\t\tif (self._available[type] === available) return;\n\t\t\t\tself._available[type] = available;\n\t\t\t\tself.fire('available', type, available);\n\t\t\t\tself.fire('available:' + type, available);\n\t\t\t}).catch(function (ex) {\n\t\t\t\tself.fire('error', ex);\n\t\t\t});\n\t\t};\n\n\t\t_proto._onSessionStart = function _onSessionStart(session, spaceType, callback) {\n\t\t\tvar self = this;\n\t\t\tvar failed = false;\n\t\t\tthis._session = session;\n\n\t\t\tvar onVisibilityChange = function onVisibilityChange() {\n\t\t\t\tself.fire('visibility:change', session.visibilityState);\n\t\t\t};\n\n\t\t\tvar onClipPlanesChange = function onClipPlanesChange() {\n\t\t\t\tself._setClipPlanes(self._camera.nearClip, self._camera.farClip);\n\t\t\t};\n\n\t\t\tvar onEnd = function onEnd() {\n\t\t\t\tself._session = null;\n\t\t\t\tself._referenceSpace = null;\n\t\t\t\tself.views = [];\n\t\t\t\tself._width = 0;\n\t\t\t\tself._height = 0;\n\t\t\t\tself._type = null;\n\t\t\t\tself._spaceType = null;\n\n\t\t\t\tif (self._camera) {\n\t\t\t\t\tself._camera.off('set_nearClip', onClipPlanesChange);\n\n\t\t\t\t\tself._camera.off('set_farClip', onClipPlanesChange);\n\n\t\t\t\t\tself._camera.camera.xr = null;\n\t\t\t\t\tself._camera = null;\n\t\t\t\t}\n\n\t\t\t\tsession.removeEventListener('end', onEnd);\n\t\t\t\tsession.removeEventListener('visibilitychange', onVisibilityChange);\n\t\t\t\tif (!failed) self.fire('end');\n\t\t\t\tself.app.tick();\n\t\t\t};\n\n\t\t\tsession.addEventListener('end', onEnd);\n\t\t\tsession.addEventListener('visibilitychange', onVisibilityChange);\n\n\t\t\tthis._camera.on('set_nearClip', onClipPlanesChange);\n\n\t\t\tthis._camera.on('set_farClip', onClipPlanesChange);\n\n\t\t\tthis._baseLayer = new XRWebGLLayer(session, this.app.graphicsDevice.gl);\n\t\t\tsession.updateRenderState({\n\t\t\t\tbaseLayer: this._baseLayer,\n\t\t\t\tdepthNear: this._depthNear,\n\t\t\t\tdepthFar: this._depthFar\n\t\t\t});\n\t\t\tsession.requestReferenceSpace(spaceType).then(function (referenceSpace) {\n\t\t\t\tself._referenceSpace = referenceSpace;\n\t\t\t\tself.app.tick();\n\t\t\t\tif (callback) callback(null);\n\t\t\t\tself.fire('start');\n\t\t\t}).catch(function (ex) {\n\t\t\t\tfailed = true;\n\t\t\t\tsession.end();\n\t\t\t\tif (callback) callback(ex);\n\t\t\t\tself.fire('error', ex);\n\t\t\t});\n\t\t};\n\n\t\t_proto._setClipPlanes = function _setClipPlanes(near, far) {\n\t\t\tif (this._depthNear === near && this._depthFar === far) return;\n\t\t\tthis._depthNear = near;\n\t\t\tthis._depthFar = far;\n\t\t\tif (!this._session) return;\n\n\t\t\tthis._session.updateRenderState({\n\t\t\t\tdepthNear: this._depthNear,\n\t\t\t\tdepthFar: this._depthFar\n\t\t\t});\n\t\t};\n\n\t\t_proto.update = function update(frame) {\n\t\t\tif (!this._session) return;\n\t\t\tvar i, view, viewRaw, layer, viewport;\n\t\t\tvar lengthNew;\n\t\t\tvar width = frame.session.renderState.baseLayer.framebufferWidth;\n\t\t\tvar height = frame.session.renderState.baseLayer.framebufferHeight;\n\n\t\t\tif (this._width !== width || this._height !== height) {\n\t\t\t\tthis._width = width;\n\t\t\t\tthis._height = height;\n\t\t\t\tthis.app.graphicsDevice.setResolution(width, height);\n\t\t\t}\n\n\t\t\tvar pose = frame.getViewerPose(this._referenceSpace);\n\t\t\tlengthNew = pose ? pose.views.length : 0;\n\n\t\t\tif (lengthNew > this.views.length) {\n\t\t\t\tfor (i = 0; i <= lengthNew - this.views.length; i++) {\n\t\t\t\t\tview = this.viewsPool.pop();\n\n\t\t\t\t\tif (!view) {\n\t\t\t\t\t\tview = {\n\t\t\t\t\t\t\tviewport: new Vec4(),\n\t\t\t\t\t\t\tprojMat: new Mat4(),\n\t\t\t\t\t\t\tviewMat: new Mat4(),\n\t\t\t\t\t\t\tviewOffMat: new Mat4(),\n\t\t\t\t\t\t\tviewInvMat: new Mat4(),\n\t\t\t\t\t\t\tviewInvOffMat: new Mat4(),\n\t\t\t\t\t\t\tprojViewOffMat: new Mat4(),\n\t\t\t\t\t\t\tviewMat3: new Mat3(),\n\t\t\t\t\t\t\tposition: new Float32Array(3),\n\t\t\t\t\t\t\trotation: new Quat()\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.views.push(view);\n\t\t\t\t}\n\t\t\t} else if (lengthNew <= this.views.length) {\n\t\t\t\tfor (i = 0; i < this.views.length - lengthNew; i++) {\n\t\t\t\t\tthis.viewsPool.push(this.views.pop());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pose) {\n\t\t\t\tvar posePosition = pose.transform.position;\n\t\t\t\tvar poseOrientation = pose.transform.orientation;\n\n\t\t\t\tthis._localPosition.set(posePosition.x, posePosition.y, posePosition.z);\n\n\t\t\t\tthis._localRotation.set(poseOrientation.x, poseOrientation.y, poseOrientation.z, poseOrientation.w);\n\n\t\t\t\tlayer = frame.session.renderState.baseLayer;\n\n\t\t\t\tfor (i = 0; i < pose.views.length; i++) {\n\t\t\t\t\tviewRaw = pose.views[i];\n\t\t\t\t\tview = this.views[i];\n\t\t\t\t\tviewport = layer.getViewport(viewRaw);\n\t\t\t\t\tview.viewport.x = viewport.x;\n\t\t\t\t\tview.viewport.y = viewport.y;\n\t\t\t\t\tview.viewport.z = viewport.width;\n\t\t\t\t\tview.viewport.w = viewport.height;\n\t\t\t\t\tview.projMat.set(viewRaw.projectionMatrix);\n\t\t\t\t\tview.viewMat.set(viewRaw.transform.inverse.matrix);\n\t\t\t\t\tview.viewInvMat.set(viewRaw.transform.matrix);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._camera.camera._node.setLocalPosition(this._localPosition);\n\n\t\t\tthis._camera.camera._node.setLocalRotation(this._localRotation);\n\n\t\t\tthis.input.update(frame);\n\n\t\t\tif (this._type === XRTYPE_AR) {\n\t\t\t\tif (this.hitTest.supported) this.hitTest.update(frame);\n\t\t\t\tif (this.lightEstimation.supported) this.lightEstimation.update(frame);\n\t\t\t\tif (this.depthSensing.supported) this.depthSensing.update(frame, pose && pose.views[0]);\n\t\t\t\tif (this.imageTracking.supported) this.imageTracking.update(frame);\n\t\t\t}\n\n\t\t\tthis.fire('update', frame);\n\t\t};\n\n\t\t_createClass(XrManager, [{\n\t\t\tkey: \"supported\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._supported;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"active\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!this._session;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"spaceType\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._spaceType;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"session\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._session;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"visibilityState\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._session) return null;\n\t\t\t\treturn this._session.visibilityState;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"camera\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._camera ? this._camera.entity : null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn XrManager;\n\t}(EventHandler);\n\n\tvar Component = function (_EventHandler) {\n\t\t_inheritsLoose(Component, _EventHandler);\n\n\t\tfunction Component(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.system = system;\n\t\t\t_this.entity = entity;\n\n\t\t\tif (_this.system.schema && !_this._accessorsBuilt) {\n\t\t\t\t_this.buildAccessors(_this.system.schema);\n\t\t\t}\n\n\t\t\t_this.on(\"set\", function (name, oldValue, newValue) {\n\t\t\t\tthis.fire(\"set_\" + name, name, oldValue, newValue);\n\t\t\t});\n\n\t\t\t_this.on('set_enabled', _this.onSetEnabled, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tComponent._buildAccessors = function _buildAccessors(obj, schema) {\n\t\t\tschema.forEach(function (descriptor) {\n\t\t\t\tvar name = typeof descriptor === 'object' ? descriptor.name : descriptor;\n\t\t\t\tObject.defineProperty(obj, name, {\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this.data[name];\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tvar data = this.data;\n\t\t\t\t\t\tvar oldValue = data[name];\n\t\t\t\t\t\tdata[name] = value;\n\t\t\t\t\t\tthis.fire('set', name, oldValue, value);\n\t\t\t\t\t},\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\t\t\t});\n\t\t\tobj._accessorsBuilt = true;\n\t\t};\n\n\t\tvar _proto = Component.prototype;\n\n\t\t_proto.buildAccessors = function buildAccessors(schema) {\n\t\t\tComponent._buildAccessors(this, schema);\n\t\t};\n\n\t\t_proto.onSetEnabled = function onSetEnabled(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tif (this.entity.enabled) {\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\tthis.onEnable();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.onDisable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {};\n\n\t\t_proto.onDisable = function onDisable() {};\n\n\t\t_proto.onPostStateChange = function onPostStateChange() {};\n\n\t\t_createClass(Component, [{\n\t\t\tkey: \"data\",\n\t\t\tget: function get() {\n\t\t\t\tvar record = this.system.store[this.entity.getGuid()];\n\t\t\t\treturn record ? record.data : null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Component;\n\t}(EventHandler);\n\n\tvar ComponentSystem = function (_EventHandler) {\n\t\t_inheritsLoose(ComponentSystem, _EventHandler);\n\n\t\tfunction ComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.app = app;\n\t\t\t_this.store = {};\n\t\t\t_this.schema = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tComponentSystem._helper = function _helper(a, p) {\n\t\t\tfor (var i = 0, l = a.length; i < l; i++) {\n\t\t\t\ta[i].f.call(a[i].s, p);\n\t\t\t}\n\t\t};\n\n\t\tComponentSystem.initialize = function initialize(root) {\n\t\t\tthis._helper(this._init, root);\n\t\t};\n\n\t\tComponentSystem.postInitialize = function postInitialize(root) {\n\t\t\tthis._helper(this._postInit, root);\n\n\t\t\tthis.fire('postinitialize', root);\n\t\t};\n\n\t\tComponentSystem.update = function update(dt, inTools) {\n\t\t\tthis._helper(inTools ? this._toolsUpdate : this._update, dt);\n\t\t};\n\n\t\tComponentSystem.animationUpdate = function animationUpdate(dt, inTools) {\n\t\t\tthis._helper(this._animationUpdate, dt);\n\t\t};\n\n\t\tComponentSystem.fixedUpdate = function fixedUpdate(dt, inTools) {\n\t\t\tthis._helper(this._fixedUpdate, dt);\n\t\t};\n\n\t\tComponentSystem.postUpdate = function postUpdate(dt, inTools) {\n\t\t\tthis._helper(this._postUpdate, dt);\n\t\t};\n\n\t\tComponentSystem.bind = function bind(event, func, scope) {\n\t\t\tswitch (event) {\n\t\t\t\tcase 'initialize':\n\t\t\t\t\tthis._init.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'postInitialize':\n\t\t\t\t\tthis._postInit.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'update':\n\t\t\t\t\tthis._update.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animationUpdate':\n\t\t\t\t\tthis._animationUpdate.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'postUpdate':\n\t\t\t\t\tthis._postUpdate.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'fixedUpdate':\n\t\t\t\t\tthis._fixedUpdate.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'toolsUpdate':\n\t\t\t\t\tthis._toolsUpdate.push({\n\t\t\t\t\t\tf: func,\n\t\t\t\t\t\ts: scope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('Component System does not support event', event);\n\t\t\t}\n\t\t};\n\n\t\tComponentSystem._erase = function _erase(a, f, s) {\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i].f === f && a[i].s === s) {\n\t\t\t\t\ta.splice(i--, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tComponentSystem.unbind = function unbind(event, func, scope) {\n\t\t\tswitch (event) {\n\t\t\t\tcase 'initialize':\n\t\t\t\t\tthis._erase(this._init, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'postInitialize':\n\t\t\t\t\tthis._erase(this._postInit, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'update':\n\t\t\t\t\tthis._erase(this._update, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animationUpdate':\n\t\t\t\t\tthis._erase(this._animationUpdate, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'postUpdate':\n\t\t\t\t\tthis._erase(this._postUpdate, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'fixedUpdate':\n\t\t\t\t\tthis._erase(this._fixedUpdate, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'toolsUpdate':\n\t\t\t\t\tthis._erase(this._toolsUpdate, func, scope);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('Component System does not support event', event);\n\t\t\t}\n\t\t};\n\n\t\tvar _proto = ComponentSystem.prototype;\n\n\t\t_proto.addComponent = function addComponent(entity, data) {\n\t\t\tvar component = new this.ComponentType(this, entity);\n\t\t\tvar componentData = new this.DataType();\n\t\t\tdata = data || {};\n\t\t\tthis.store[entity.getGuid()] = {\n\t\t\t\tentity: entity,\n\t\t\t\tdata: componentData\n\t\t\t};\n\t\t\tentity[this.id] = component;\n\t\t\tentity.c[this.id] = component;\n\t\t\tthis.initializeComponentData(component, data, []);\n\t\t\tthis.fire('add', entity, component);\n\t\t\treturn component;\n\t\t};\n\n\t\t_proto.removeComponent = function removeComponent(entity) {\n\t\t\tvar record = this.store[entity.getGuid()];\n\t\t\tvar component = entity.c[this.id];\n\t\t\tthis.fire('beforeremove', entity, component);\n\t\t\tdelete this.store[entity.getGuid()];\n\t\t\tdelete entity[this.id];\n\t\t\tdelete entity.c[this.id];\n\t\t\tthis.fire('remove', entity, record.data);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar src = this.store[entity.getGuid()];\n\t\t\treturn this.addComponent(clone, src.data);\n\t\t};\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data === void 0) {\n\t\t\t\tdata = {};\n\t\t\t}\n\n\t\t\tvar descriptor;\n\t\t\tvar name, type, value;\n\n\t\t\tfor (var i = 0, len = properties.length; i < len; i++) {\n\t\t\t\tdescriptor = properties[i];\n\n\t\t\t\tif (typeof descriptor === 'object') {\n\t\t\t\t\tname = descriptor.name;\n\t\t\t\t\ttype = descriptor.type;\n\t\t\t\t} else {\n\t\t\t\t\tname = descriptor;\n\t\t\t\t\ttype = undefined;\n\t\t\t\t}\n\n\t\t\t\tvalue = data[name];\n\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tif (type !== undefined) {\n\t\t\t\t\t\tvalue = convertValue(value, type);\n\t\t\t\t\t}\n\n\t\t\t\t\tcomponent[name] = value;\n\t\t\t\t} else {\n\t\t\t\t\tcomponent[name] = component.data[name];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (component.enabled && component.entity.enabled) {\n\t\t\t\tcomponent.onEnable();\n\t\t\t}\n\t\t};\n\n\t\t_proto.getPropertiesOfType = function getPropertiesOfType(type) {\n\t\t\tvar matchingProperties = [];\n\t\t\tvar schema = this.schema || [];\n\t\t\tschema.forEach(function (descriptor) {\n\t\t\t\tif (descriptor && typeof descriptor === 'object' && descriptor.type === type) {\n\t\t\t\t\tmatchingProperties.push(descriptor);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn matchingProperties;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.off();\n\t\t};\n\n\t\treturn ComponentSystem;\n\t}(EventHandler);\n\n\tComponentSystem._init = [];\n\tComponentSystem._postInit = [];\n\tComponentSystem._toolsUpdate = [];\n\tComponentSystem._update = [];\n\tComponentSystem._animationUpdate = [];\n\tComponentSystem._fixedUpdate = [];\n\tComponentSystem._postUpdate = [];\n\n\tfunction convertValue(value, type) {\n\t\tif (!value) {\n\t\t\treturn value;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'rgb':\n\t\t\t\tif (value instanceof Color) {\n\t\t\t\t\treturn value.clone();\n\t\t\t\t}\n\n\t\t\t\treturn new Color(value[0], value[1], value[2]);\n\n\t\t\tcase 'rgba':\n\t\t\t\tif (value instanceof Color) {\n\t\t\t\t\treturn value.clone();\n\t\t\t\t}\n\n\t\t\t\treturn new Color(value[0], value[1], value[2], value[3]);\n\n\t\t\tcase 'vec2':\n\t\t\t\tif (value instanceof Vec2) {\n\t\t\t\t\treturn value.clone();\n\t\t\t\t}\n\n\t\t\t\treturn new Vec2(value[0], value[1]);\n\n\t\t\tcase 'vec3':\n\t\t\t\tif (value instanceof Vec3) {\n\t\t\t\t\treturn value.clone();\n\t\t\t\t}\n\n\t\t\t\treturn new Vec3(value[0], value[1], value[2]);\n\n\t\t\tcase 'vec4':\n\t\t\t\tif (value instanceof Vec4) {\n\t\t\t\t\treturn value.clone();\n\t\t\t\t}\n\n\t\t\t\treturn new Vec4(value[0], value[1], value[2], value[3]);\n\n\t\t\tcase 'boolean':\n\t\t\tcase 'number':\n\t\t\tcase 'string':\n\t\t\t\treturn value;\n\n\t\t\tcase 'entity':\n\t\t\t\treturn value;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Could not convert unhandled type: ' + type);\n\t\t}\n\t}\n\n\tevents.attach(ComponentSystem);\n\n\tComponentSystem.destroy = function () {\n\t\tComponentSystem.off('initialize');\n\t\tComponentSystem.off('postInitialize');\n\t\tComponentSystem.off('toolsUpdate');\n\t\tComponentSystem.off('update');\n\t\tComponentSystem.off('animationUpdate');\n\t\tComponentSystem.off('fixedUpdate');\n\t\tComponentSystem.off('postUpdate');\n\t\tComponentSystem._init = [];\n\t\tComponentSystem._postInit = [];\n\t\tComponentSystem._toolsUpdate = [];\n\t\tComponentSystem._update = [];\n\t\tComponentSystem._animationUpdate = [];\n\t\tComponentSystem._fixedUpdate = [];\n\t\tComponentSystem._postUpdate = [];\n\t};\n\n\tvar AnimCache = function () {\n\t\tfunction AnimCache() {\n\t\t\tthis._left = Infinity;\n\t\t\tthis._right = -Infinity;\n\t\t\tthis._len = 0;\n\t\t\tthis._recip = 0;\n\t\t\tthis._p0 = 0;\n\t\t\tthis._p1 = 0;\n\t\t\tthis._t = 0;\n\t\t\tthis._hermite = {\n\t\t\t\tvalid: false,\n\t\t\t\tp0: 0,\n\t\t\t\tm0: 0,\n\t\t\t\tp1: 0,\n\t\t\t\tm1: 0\n\t\t\t};\n\t\t}\n\n\t\tvar _proto = AnimCache.prototype;\n\n\t\t_proto.update = function update(time, input) {\n\t\t\tif (time < this._left || time >= this._right) {\n\t\t\t\tvar len = input.length;\n\n\t\t\t\tif (!len) {\n\t\t\t\t\tthis._left = -Infinity;\n\t\t\t\t\tthis._right = Infinity;\n\t\t\t\t\tthis._len = 0;\n\t\t\t\t\tthis._recip = 0;\n\t\t\t\t\tthis._p0 = this._p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (time < input[0]) {\n\t\t\t\t\t\tthis._left = -Infinity;\n\t\t\t\t\t\tthis._right = input[0];\n\t\t\t\t\t\tthis._len = 0;\n\t\t\t\t\t\tthis._recip = 0;\n\t\t\t\t\t\tthis._p0 = this._p1 = 0;\n\t\t\t\t\t} else if (time >= input[len - 1]) {\n\t\t\t\t\t\tthis._left = input[len - 1];\n\t\t\t\t\t\tthis._right = Infinity;\n\t\t\t\t\t\tthis._len = 0;\n\t\t\t\t\t\tthis._recip = 0;\n\t\t\t\t\t\tthis._p0 = this._p1 = len - 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar index = this._findKey(time, input);\n\n\t\t\t\t\t\tthis._left = input[index];\n\t\t\t\t\t\tthis._right = input[index + 1];\n\t\t\t\t\t\tthis._len = this._right - this._left;\n\t\t\t\t\t\tvar diff = 1.0 / this._len;\n\t\t\t\t\t\tthis._recip = isFinite(diff) ? diff : 0;\n\t\t\t\t\t\tthis._p0 = index;\n\t\t\t\t\t\tthis._p1 = index + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._t = this._recip === 0 ? 0 : (time - this._left) * this._recip;\n\t\t\tthis._hermite.valid = false;\n\t\t};\n\n\t\t_proto._findKey = function _findKey(time, input) {\n\t\t\tvar index = 0;\n\n\t\t\twhile (time >= input[index + 1]) {\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\treturn index;\n\t\t};\n\n\t\t_proto.eval = function _eval(result, interpolation, output) {\n\t\t\tvar data = output._data;\n\t\t\tvar comp = output._components;\n\t\t\tvar idx0 = this._p0 * comp;\n\t\t\tvar i;\n\n\t\t\tif (interpolation === INTERPOLATION_STEP) {\n\t\t\t\tfor (i = 0; i < comp; ++i) {\n\t\t\t\t\tresult[i] = data[idx0 + i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar t = this._t;\n\t\t\t\tvar idx1 = this._p1 * comp;\n\n\t\t\t\tswitch (interpolation) {\n\t\t\t\t\tcase INTERPOLATION_LINEAR:\n\t\t\t\t\t\tfor (i = 0; i < comp; ++i) {\n\t\t\t\t\t\t\tresult[i] = math.lerp(data[idx0 + i], data[idx1 + i], t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase INTERPOLATION_CUBIC:\n\t\t\t\t\t\tvar hermite = this._hermite;\n\n\t\t\t\t\t\tif (!hermite.valid) {\n\t\t\t\t\t\t\tvar t2 = t * t;\n\t\t\t\t\t\t\tvar twot = t + t;\n\t\t\t\t\t\t\tvar omt = 1 - t;\n\t\t\t\t\t\t\tvar omt2 = omt * omt;\n\t\t\t\t\t\t\thermite.valid = true;\n\t\t\t\t\t\t\thermite.p0 = (1 + twot) * omt2;\n\t\t\t\t\t\t\thermite.m0 = t * omt2;\n\t\t\t\t\t\t\thermite.p1 = t2 * (3 - twot);\n\t\t\t\t\t\t\thermite.m1 = t2 * (t - 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar p0 = (this._p0 * 3 + 1) * comp;\n\t\t\t\t\t\tvar m0 = (this._p0 * 3 + 2) * comp;\n\t\t\t\t\t\tvar p1 = (this._p1 * 3 + 1) * comp;\n\t\t\t\t\t\tvar m1 = (this._p1 * 3 + 0) * comp;\n\n\t\t\t\t\t\tfor (i = 0; i < comp; ++i) {\n\t\t\t\t\t\t\tresult[i] = hermite.p0 * data[p0 + i] + hermite.m0 * data[m0 + i] * this._len + hermite.p1 * data[p1 + i] + hermite.m1 * data[m1 + i] * this._len;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn AnimCache;\n\t}();\n\n\tvar AnimSnapshot = function AnimSnapshot(animTrack) {\n\t\tthis._name = animTrack.name + 'Snapshot';\n\t\tthis._time = -1;\n\t\tthis._cache = [];\n\t\tthis._results = [];\n\t\tvar i;\n\n\t\tfor (i = 0; i < animTrack._inputs.length; ++i) {\n\t\t\tthis._cache[i] = new AnimCache();\n\t\t}\n\n\t\tvar curves = animTrack._curves;\n\t\tvar outputs = animTrack._outputs;\n\n\t\tfor (i = 0; i < curves.length; ++i) {\n\t\t\tvar curve = curves[i];\n\t\t\tvar output = outputs[curve._output];\n\t\t\tvar storage = [];\n\n\t\t\tfor (var j = 0; j < output._components; ++j) {\n\t\t\t\tstorage[j] = 0;\n\t\t\t}\n\n\t\t\tthis._results[i] = storage;\n\t\t}\n\t};\n\n\tvar AnimClip = function () {\n\t\tfunction AnimClip(track, time, speed, playing, loop) {\n\t\t\tthis._name = track.name;\n\t\t\tthis._track = track;\n\t\t\tthis._snapshot = new AnimSnapshot(track);\n\t\t\tthis._playing = playing;\n\t\t\tthis._time = time;\n\t\t\tthis._speed = speed;\n\t\t\tthis._loop = loop;\n\t\t\tthis._blendWeight = 1.0;\n\t\t\tthis._blendOrder = 0.0;\n\t\t}\n\n\t\tvar _proto = AnimClip.prototype;\n\n\t\t_proto._update = function _update(deltaTime) {\n\t\t\tif (this._playing) {\n\t\t\t\tvar time = this._time;\n\t\t\t\tvar duration = this._track.duration;\n\t\t\t\tvar speed = this._speed;\n\t\t\t\tvar loop = this._loop;\n\t\t\t\ttime += speed * deltaTime;\n\n\t\t\t\tif (speed >= 0) {\n\t\t\t\t\tif (time > duration) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\ttime = time % duration || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = this._track.duration;\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (time < 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\ttime = duration + (time % duration || 0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._time = time;\n\t\t\t}\n\n\t\t\tif (this._time != this._snapshot._time) {\n\t\t\t\tthis._track.eval(this._time, this._snapshot);\n\t\t\t}\n\t\t};\n\n\t\t_proto.play = function play() {\n\t\t\tthis._playing = true;\n\t\t\tthis._time = 0;\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tthis._playing = false;\n\t\t\tthis._time = 0;\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tthis._playing = false;\n\t\t};\n\n\t\t_proto.resume = function resume() {\n\t\t\tthis._playing = true;\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis._time = 0;\n\t\t};\n\n\t\t_createClass(AnimClip, [{\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t},\n\t\t\tset: function set(name) {\n\t\t\t\tthis._name = name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"track\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._track;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"snapshot\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._snapshot;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"time\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._time;\n\t\t\t},\n\t\t\tset: function set(time) {\n\t\t\t\tthis._time = time;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"speed\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._speed;\n\t\t\t},\n\t\t\tset: function set(speed) {\n\t\t\t\tthis._speed = speed;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"loop\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._loop;\n\t\t\t},\n\t\t\tset: function set(loop) {\n\t\t\t\tthis._loop = loop;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"blendWeight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._blendWeight;\n\t\t\t},\n\t\t\tset: function set(blendWeight) {\n\t\t\t\tthis._blendWeight = blendWeight;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"blendOrder\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._blendOrder;\n\t\t\t},\n\t\t\tset: function set(blendOrder) {\n\t\t\t\tthis._blendOrder = blendOrder;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimClip;\n\t}();\n\n\tvar AnimEvaluator = function () {\n\t\tfunction AnimEvaluator(binder) {\n\t\t\tthis._binder = binder;\n\t\t\tthis._clips = [];\n\t\t\tthis._inputs = [];\n\t\t\tthis._outputs = [];\n\t\t\tthis._targets = {};\n\t\t}\n\n\t\tAnimEvaluator._dot = function _dot(a, b) {\n\t\t\tvar len = a.length;\n\t\t\tvar result = 0;\n\n\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\tresult += a[i] * b[i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tAnimEvaluator._normalize = function _normalize(a) {\n\t\t\tvar l = AnimEvaluator._dot(a, a);\n\n\t\t\tif (l > 0) {\n\t\t\t\tl = 1.0 / Math.sqrt(l);\n\t\t\t\tvar len = a.length;\n\n\t\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\t\ta[i] *= l;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tAnimEvaluator._set = function _set(a, b, type) {\n\t\t\tvar len = a.length;\n\t\t\tvar i;\n\n\t\t\tif (type === 'quaternion') {\n\t\t\t\tvar l = AnimEvaluator._dot(b, b);\n\n\t\t\t\tif (l > 0) {\n\t\t\t\t\tl = 1.0 / Math.sqrt(l);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\t\ta[i] = b[i] * l;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\t\ta[i] = b[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tAnimEvaluator._blendVec = function _blendVec(a, b, t) {\n\t\t\tvar it = 1.0 - t;\n\t\t\tvar len = a.length;\n\n\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\ta[i] = a[i] * it + b[i] * t;\n\t\t\t}\n\t\t};\n\n\t\tAnimEvaluator._blendQuat = function _blendQuat(a, b, t) {\n\t\t\tvar len = a.length;\n\t\t\tvar it = 1.0 - t;\n\n\t\t\tif (AnimEvaluator._dot(a, b) < 0) {\n\t\t\t\tt = -t;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\ta[i] = a[i] * it + b[i] * t;\n\t\t\t}\n\n\t\t\tAnimEvaluator._normalize(a);\n\t\t};\n\n\t\tAnimEvaluator._blend = function _blend(a, b, t, type) {\n\t\t\tif (type === 'quaternion') {\n\t\t\t\tAnimEvaluator._blendQuat(a, b, t);\n\t\t\t} else {\n\t\t\t\tAnimEvaluator._blendVec(a, b, t);\n\t\t\t}\n\t\t};\n\n\t\tAnimEvaluator._stableSort = function _stableSort(a, lessFunc) {\n\t\t\tvar len = a.length;\n\n\t\t\tfor (var i = 0; i < len - 1; ++i) {\n\t\t\t\tfor (var j = i + 1; j < len; ++j) {\n\t\t\t\t\tif (lessFunc(a[j], a[i])) {\n\t\t\t\t\t\tvar tmp = a[i];\n\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\ta[j] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar _proto = AnimEvaluator.prototype;\n\n\t\t_proto.addClip = function addClip(clip) {\n\t\t\tvar targets = this._targets;\n\t\t\tvar curves = clip.track.curves;\n\t\t\tvar snapshot = clip.snapshot;\n\t\t\tvar inputs = [];\n\t\t\tvar outputs = [];\n\n\t\t\tfor (var i = 0; i < curves.length; ++i) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tvar paths = curve.paths;\n\n\t\t\t\tfor (var j = 0; j < paths.length; ++j) {\n\t\t\t\t\tvar path = paths[j];\n\t\t\t\t\tvar target = targets[path];\n\n\t\t\t\t\tif (!target) {\n\t\t\t\t\t\tvar resolved = this._binder.resolve(path);\n\n\t\t\t\t\t\tif (resolved) {\n\t\t\t\t\t\t\ttarget = {\n\t\t\t\t\t\t\t\ttarget: resolved,\n\t\t\t\t\t\t\t\tvalue: [],\n\t\t\t\t\t\t\t\tcurves: 0,\n\t\t\t\t\t\t\t\tblendCounter: 0\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (var k = 0; k < target.target.components; ++k) {\n\t\t\t\t\t\t\t\ttarget.value.push(0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttargets[path] = target;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttarget.curves++;\n\t\t\t\t\t\tinputs.push(snapshot._results[i]);\n\t\t\t\t\t\toutputs.push(target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._clips.push(clip);\n\n\t\t\tthis._inputs.push(inputs);\n\n\t\t\tthis._outputs.push(outputs);\n\t\t};\n\n\t\t_proto.removeClip = function removeClip(index) {\n\t\t\tvar targets = this._targets;\n\t\t\tvar clips = this._clips;\n\t\t\tvar clip = clips[index];\n\t\t\tvar curves = clip.track.curves;\n\n\t\t\tfor (var i = 0; i < curves.length; ++i) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tvar paths = curve.paths;\n\n\t\t\t\tfor (var j = 0; j < paths.length; ++j) {\n\t\t\t\t\tvar path = paths[j];\n\t\t\t\t\tvar target = targets[path];\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttarget.curves--;\n\n\t\t\t\t\t\tif (target.curves === 0) {\n\t\t\t\t\t\t\tthis._binder.unresolve(path);\n\n\t\t\t\t\t\t\tdelete targets[path];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclips.splice(index, 1);\n\n\t\t\tthis._inputs.splice(index, 1);\n\n\t\t\tthis._outputs.splice(index, 1);\n\t\t};\n\n\t\t_proto.removeClips = function removeClips() {\n\t\t\twhile (this._clips.length > 0) {\n\t\t\t\tthis.removeClip(0);\n\t\t\t}\n\t\t};\n\n\t\t_proto.findClip = function findClip(name) {\n\t\t\tvar clips = this._clips;\n\n\t\t\tfor (var i = 0; i < clips.length; ++i) {\n\t\t\t\tvar clip = clips[i];\n\n\t\t\t\tif (clip.name === name) {\n\t\t\t\t\treturn clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.update = function update(deltaTime) {\n\t\t\tvar clips = this._clips;\n\t\t\tvar order = clips.map(function (c, i) {\n\t\t\t\treturn i;\n\t\t\t});\n\n\t\t\tAnimEvaluator._stableSort(order, function (a, b) {\n\t\t\t\treturn clips[a].blendOrder < clips[b].blendOrder;\n\t\t\t});\n\n\t\t\tvar i, j;\n\n\t\t\tfor (i = 0; i < clips.length; ++i) {\n\t\t\t\tvar index = order[i];\n\t\t\t\tvar clip = clips[index];\n\t\t\t\tvar inputs = this._inputs[index];\n\t\t\t\tvar outputs = this._outputs[index];\n\t\t\t\tvar blendWeight = clip.blendWeight;\n\n\t\t\t\tif (blendWeight > 0.0) {\n\t\t\t\t\tclip._update(deltaTime);\n\t\t\t\t}\n\n\t\t\t\tvar input;\n\t\t\t\tvar output;\n\t\t\t\tvar value;\n\n\t\t\t\tif (blendWeight >= 1.0) {\n\t\t\t\t\tfor (j = 0; j < inputs.length; ++j) {\n\t\t\t\t\t\tinput = inputs[j];\n\t\t\t\t\t\toutput = outputs[j];\n\t\t\t\t\t\tvalue = output.value;\n\n\t\t\t\t\t\tAnimEvaluator._set(value, input, output.target.type);\n\n\t\t\t\t\t\toutput.blendCounter++;\n\t\t\t\t\t}\n\t\t\t\t} else if (blendWeight > 0.0) {\n\t\t\t\t\tfor (j = 0; j < inputs.length; ++j) {\n\t\t\t\t\t\tinput = inputs[j];\n\t\t\t\t\t\toutput = outputs[j];\n\t\t\t\t\t\tvalue = output.value;\n\n\t\t\t\t\t\tif (output.blendCounter === 0) {\n\t\t\t\t\t\t\tAnimEvaluator._set(value, input, output.target.type);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAnimEvaluator._blend(value, input, blendWeight, output.target.type);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput.blendCounter++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar targets = this._targets;\n\n\t\t\tfor (var path in targets) {\n\t\t\t\tif (targets.hasOwnProperty(path)) {\n\t\t\t\t\tvar target = targets[path];\n\t\t\t\t\ttarget.target.func(target.value);\n\t\t\t\t\ttarget.blendCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._binder.update(deltaTime);\n\t\t};\n\n\t\t_createClass(AnimEvaluator, [{\n\t\t\tkey: \"clips\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clips;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimEvaluator;\n\t}();\n\n\tvar AnimTarget = function () {\n\t\tfunction AnimTarget(func, type, components) {\n\t\t\tthis._func = func;\n\t\t\tthis._type = type;\n\t\t\tthis._components = components;\n\t\t}\n\n\t\t_createClass(AnimTarget, [{\n\t\t\tkey: \"func\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._func;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"components\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._components;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimTarget;\n\t}();\n\n\tvar DefaultAnimBinder = function () {\n\t\tfunction DefaultAnimBinder(graph) {\n\t\t\tthis.graph = graph;\n\t\t\tif (!graph) return;\n\t\t\tvar nodes = {};\n\n\t\t\tvar flatten = function flatten(node) {\n\t\t\t\tnodes[node.name] = node;\n\n\t\t\t\tfor (var i = 0; i < node.children.length; ++i) {\n\t\t\t\t\tflatten(node.children[i]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tflatten(graph);\n\t\t\tthis.nodes = nodes;\n\n\t\t\tvar findMeshInstances = function findMeshInstances(node) {\n\t\t\t\tvar object = node;\n\n\t\t\t\twhile (object && !(object instanceof Entity)) {\n\t\t\t\t\tobject = object.parent;\n\t\t\t\t}\n\n\t\t\t\tvar meshInstances;\n\n\t\t\t\tif (object) {\n\t\t\t\t\tif (object.render) {\n\t\t\t\t\t\tmeshInstances = object.render.meshInstances;\n\t\t\t\t\t} else if (object.model) {\n\t\t\t\t\t\tmeshInstances = object.model.meshInstances;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn meshInstances;\n\t\t\t};\n\n\t\t\tthis.nodeCounts = {};\n\t\t\tthis.activeNodes = [];\n\t\t\tthis.handlers = {\n\t\t\t\t'localPosition': function localPosition(node) {\n\t\t\t\t\tvar object = node.localPosition;\n\n\t\t\t\t\tvar func = function func(value) {\n\t\t\t\t\t\tobject.set.apply(object, value);\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new AnimTarget(func, 'vector', 3);\n\t\t\t\t},\n\t\t\t\t'localRotation': function localRotation(node) {\n\t\t\t\t\tvar object = node.localRotation;\n\n\t\t\t\t\tvar func = function func(value) {\n\t\t\t\t\t\tobject.set.apply(object, value);\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new AnimTarget(func, 'quaternion', 4);\n\t\t\t\t},\n\t\t\t\t'localScale': function localScale(node) {\n\t\t\t\t\tvar object = node.localScale;\n\n\t\t\t\t\tvar func = function func(value) {\n\t\t\t\t\t\tobject.set.apply(object, value);\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new AnimTarget(func, 'vector', 3);\n\t\t\t\t},\n\t\t\t\t'weights': function weights(node) {\n\t\t\t\t\tvar meshInstances = findMeshInstances(node);\n\n\t\t\t\t\tif (meshInstances) {\n\t\t\t\t\t\tvar morphInstance;\n\n\t\t\t\t\t\tfor (var i = 0; i < meshInstances.length; ++i) {\n\t\t\t\t\t\t\tif (meshInstances[i].node.name === node.name && meshInstances[i].morphInstance) {\n\t\t\t\t\t\t\t\tmorphInstance = meshInstances[i].morphInstance;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphInstance) {\n\t\t\t\t\t\t\tvar func = function func(value) {\n\t\t\t\t\t\t\t\tfor (var i = 0; i < value.length; ++i) {\n\t\t\t\t\t\t\t\t\tmorphInstance.setWeight(i, value[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn new AnimTarget(func, 'vector', morphInstance.morph._targets.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t\t'materialTexture': function (node, textureName) {\n\t\t\t\t\tvar meshInstances = findMeshInstances(node);\n\n\t\t\t\t\tif (meshInstances) {\n\t\t\t\t\t\tvar meshInstance;\n\n\t\t\t\t\t\tfor (var i = 0; i < meshInstances.length; ++i) {\n\t\t\t\t\t\t\tif (meshInstances[i].node.name === node.name) {\n\t\t\t\t\t\t\t\tmeshInstance = meshInstances[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (meshInstance) {\n\t\t\t\t\t\t\tvar func = function (value) {\n\t\t\t\t\t\t\t\tvar textureAsset = this.animComponent.system.app.assets.get(value[0]);\n\n\t\t\t\t\t\t\t\tif (textureAsset && textureAsset.resource && textureAsset.type === 'texture') {\n\t\t\t\t\t\t\t\t\tmeshInstance.material[textureName] = textureAsset.resource;\n\t\t\t\t\t\t\t\t\tmeshInstance.material.update();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.bind(this);\n\n\t\t\t\t\t\t\treturn new AnimTarget(func, 'vector', 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}.bind(this)\n\t\t\t};\n\t\t}\n\n\t\tvar _proto = DefaultAnimBinder.prototype;\n\n\t\t_proto.resolve = function resolve(path) {\n\t\t\tvar propertyLocation = AnimBinder.decode(path);\n\t\t\tvar node = this.graph.root.findByPath(this.graph.path + \"/\" + (propertyLocation.entityPath[0] || \"\"));\n\n\t\t\tif (!node) {\n\t\t\t\tvar entityPath = AnimBinder.splitPath(propertyLocation.entityPath[0], '/');\n\t\t\t\tnode = this.nodes[entityPath[entityPath.length - 1] || \"\"];\n\t\t\t}\n\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar handler = this.handlers[propertyLocation.propertyPath[0]];\n\n\t\t\tif (!handler) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar target = handler(node);\n\n\t\t\tif (!target) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!this.nodeCounts[node.path]) {\n\t\t\t\tthis.activeNodes.push(node);\n\t\t\t\tthis.nodeCounts[node.path] = 1;\n\t\t\t} else {\n\t\t\t\tthis.nodeCounts[node.path]++;\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.unresolve = function unresolve(path) {\n\t\t\tvar propertyLocation = AnimBinder.decode(path);\n\t\t\tif (propertyLocation.component !== 'graph') return;\n\t\t\tvar entityPath = AnimBinder.splitPath(propertyLocation.entityPath[0], '/');\n\t\t\tvar node = this.nodes[entityPath[entityPath.length - 1] || \"\"];\n\t\t\tthis.nodeCounts[node.path]--;\n\n\t\t\tif (this.nodeCounts[node.path] === 0) {\n\t\t\t\tvar activeNodes = this.activeNodes;\n\t\t\t\tvar i = activeNodes.indexOf(node.node);\n\t\t\t\tvar len = activeNodes.length;\n\n\t\t\t\tif (i < len - 1) {\n\t\t\t\t\tactiveNodes[i] = activeNodes[len - 1];\n\t\t\t\t}\n\n\t\t\t\tactiveNodes.pop();\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update(deltaTime) {\n\t\t\tvar activeNodes = this.activeNodes;\n\n\t\t\tfor (var i = 0; i < activeNodes.length; ++i) {\n\t\t\t\tactiveNodes[i]._dirtifyLocal();\n\t\t\t}\n\t\t};\n\n\t\treturn DefaultAnimBinder;\n\t}();\n\n\tvar InterpolatedKey = function () {\n\t\tfunction InterpolatedKey() {\n\t\t\tthis._written = false;\n\t\t\tthis._name = \"\";\n\t\t\tthis._keyFrames = [];\n\t\t\tthis._quat = new Quat();\n\t\t\tthis._pos = new Vec3();\n\t\t\tthis._scale = new Vec3();\n\t\t\tthis._targetNode = null;\n\t\t}\n\n\t\tvar _proto = InterpolatedKey.prototype;\n\n\t\t_proto.getTarget = function getTarget() {\n\t\t\treturn this._targetNode;\n\t\t};\n\n\t\t_proto.setTarget = function setTarget(node) {\n\t\t\tthis._targetNode = node;\n\t\t};\n\n\t\treturn InterpolatedKey;\n\t}();\n\n\tvar Skeleton = function () {\n\t\tfunction Skeleton(graph) {\n\t\t\tthis._animation = null;\n\t\t\tthis._time = 0;\n\t\t\tthis.looping = true;\n\t\t\tthis._interpolatedKeys = [];\n\t\t\tthis._interpolatedKeyDict = {};\n\t\t\tthis._currKeyIndices = {};\n\t\t\tthis.graph = null;\n\t\t\tvar self = this;\n\n\t\t\tfunction addInterpolatedKeys(node) {\n\t\t\t\tvar interpKey = new InterpolatedKey();\n\t\t\t\tinterpKey._name = node.name;\n\n\t\t\t\tself._interpolatedKeys.push(interpKey);\n\n\t\t\t\tself._interpolatedKeyDict[node.name] = interpKey;\n\t\t\t\tself._currKeyIndices[node.name] = 0;\n\n\t\t\t\tfor (var i = 0; i < node._children.length; i++) {\n\t\t\t\t\taddInterpolatedKeys(node._children[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taddInterpolatedKeys(graph);\n\t\t}\n\n\t\tvar _proto2 = Skeleton.prototype;\n\n\t\t_proto2.addTime = function addTime(delta) {\n\t\t\tif (this._animation !== null) {\n\t\t\t\tvar i;\n\t\t\t\tvar node, nodeName;\n\t\t\t\tvar keys, interpKey;\n\t\t\t\tvar k1, k2, alpha;\n\t\t\t\tvar nodes = this._animation._nodes;\n\t\t\t\tvar duration = this._animation.duration;\n\n\t\t\t\tif (this._time === duration && !this.looping) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._time += delta;\n\n\t\t\t\tif (this._time > duration) {\n\t\t\t\t\tthis._time = this.looping ? 0.0 : duration;\n\n\t\t\t\t\tfor (i = 0; i < nodes.length; i++) {\n\t\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\t\tnodeName = node._name;\n\t\t\t\t\t\tthis._currKeyIndices[nodeName] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\tthis._time = this.looping ? duration : 0.0;\n\n\t\t\t\t\tfor (i = 0; i < nodes.length; i++) {\n\t\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\t\tnodeName = node._name;\n\t\t\t\t\t\tthis._currKeyIndices[nodeName] = node._keys.length - 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar offset = delta >= 0 ? 1 : -1;\n\t\t\t\tvar foundKey;\n\n\t\t\t\tfor (i = 0; i < nodes.length; i++) {\n\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\tnodeName = node._name;\n\t\t\t\t\tkeys = node._keys;\n\t\t\t\t\tinterpKey = this._interpolatedKeyDict[nodeName];\n\n\t\t\t\t\tif (interpKey === undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfoundKey = false;\n\n\t\t\t\t\tif (keys.length !== 1) {\n\t\t\t\t\t\tfor (var currKeyIndex = this._currKeyIndices[nodeName]; currKeyIndex < keys.length - 1 && currKeyIndex >= 0; currKeyIndex += offset) {\n\t\t\t\t\t\t\tk1 = keys[currKeyIndex];\n\t\t\t\t\t\t\tk2 = keys[currKeyIndex + 1];\n\n\t\t\t\t\t\t\tif (k1.time <= this._time && k2.time >= this._time) {\n\t\t\t\t\t\t\t\talpha = (this._time - k1.time) / (k2.time - k1.time);\n\n\t\t\t\t\t\t\t\tinterpKey._pos.lerp(k1.position, k2.position, alpha);\n\n\t\t\t\t\t\t\t\tinterpKey._quat.slerp(k1.rotation, k2.rotation, alpha);\n\n\t\t\t\t\t\t\t\tinterpKey._scale.lerp(k1.scale, k2.scale, alpha);\n\n\t\t\t\t\t\t\t\tinterpKey._written = true;\n\t\t\t\t\t\t\t\tthis._currKeyIndices[nodeName] = currKeyIndex;\n\t\t\t\t\t\t\t\tfoundKey = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (keys.length === 1 || !foundKey && this._time === 0.0 && this.looping) {\n\t\t\t\t\t\tinterpKey._pos.copy(keys[0].position);\n\n\t\t\t\t\t\tinterpKey._quat.copy(keys[0].rotation);\n\n\t\t\t\t\t\tinterpKey._scale.copy(keys[0].scale);\n\n\t\t\t\t\t\tinterpKey._written = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.blend = function blend(skel1, skel2, alpha) {\n\t\t\tvar numNodes = this._interpolatedKeys.length;\n\n\t\t\tfor (var i = 0; i < numNodes; i++) {\n\t\t\t\tvar key1 = skel1._interpolatedKeys[i];\n\t\t\t\tvar key2 = skel2._interpolatedKeys[i];\n\t\t\t\tvar dstKey = this._interpolatedKeys[i];\n\n\t\t\t\tif (key1._written && key2._written) {\n\t\t\t\t\tdstKey._quat.slerp(key1._quat, skel2._interpolatedKeys[i]._quat, alpha);\n\n\t\t\t\t\tdstKey._pos.lerp(key1._pos, skel2._interpolatedKeys[i]._pos, alpha);\n\n\t\t\t\t\tdstKey._scale.lerp(key1._scale, key2._scale, alpha);\n\n\t\t\t\t\tdstKey._written = true;\n\t\t\t\t} else if (key1._written) {\n\t\t\t\t\tdstKey._quat.copy(key1._quat);\n\n\t\t\t\t\tdstKey._pos.copy(key1._pos);\n\n\t\t\t\t\tdstKey._scale.copy(key1._scale);\n\n\t\t\t\t\tdstKey._written = true;\n\t\t\t\t} else if (key2._written) {\n\t\t\t\t\tdstKey._quat.copy(key2._quat);\n\n\t\t\t\t\tdstKey._pos.copy(key2._pos);\n\n\t\t\t\t\tdstKey._scale.copy(key2._scale);\n\n\t\t\t\t\tdstKey._written = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.setGraph = function setGraph(graph) {\n\t\t\tvar i;\n\t\t\tthis.graph = graph;\n\n\t\t\tif (graph) {\n\t\t\t\tfor (i = 0; i < this._interpolatedKeys.length; i++) {\n\t\t\t\t\tvar interpKey = this._interpolatedKeys[i];\n\t\t\t\t\tvar graphNode = graph.findByName(interpKey._name);\n\n\t\t\t\t\tthis._interpolatedKeys[i].setTarget(graphNode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < this._interpolatedKeys.length; i++) {\n\t\t\t\t\tthis._interpolatedKeys[i].setTarget(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.updateGraph = function updateGraph() {\n\t\t\tif (this.graph) {\n\t\t\t\tfor (var i = 0; i < this._interpolatedKeys.length; i++) {\n\t\t\t\t\tvar interpKey = this._interpolatedKeys[i];\n\n\t\t\t\t\tif (interpKey._written) {\n\t\t\t\t\t\tvar transform = interpKey.getTarget();\n\t\t\t\t\t\ttransform.localPosition.copy(interpKey._pos);\n\t\t\t\t\t\ttransform.localRotation.copy(interpKey._quat);\n\t\t\t\t\t\ttransform.localScale.copy(interpKey._scale);\n\t\t\t\t\t\tif (!transform._dirtyLocal) transform._dirtifyLocal();\n\t\t\t\t\t\tinterpKey._written = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(Skeleton, [{\n\t\t\tkey: \"animation\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._animation;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._animation = value;\n\t\t\t\tthis.currentTime = 0;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"currentTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._time;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._time = value;\n\t\t\t\tvar numNodes = this._interpolatedKeys.length;\n\n\t\t\t\tfor (var i = 0; i < numNodes; i++) {\n\t\t\t\t\tvar node = this._interpolatedKeys[i];\n\t\t\t\t\tvar nodeName = node._name;\n\t\t\t\t\tthis._currKeyIndices[nodeName] = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.addTime(0);\n\t\t\t\tthis.updateGraph();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"numNodes\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._interpolatedKeys.length;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Skeleton;\n\t}();\n\n\tvar AnimationComponent = function (_Component) {\n\t\t_inheritsLoose(AnimationComponent, _Component);\n\n\t\tfunction AnimationComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this.animationsIndex = {};\n\n\t\t\t_this.on('set_animations', _this.onSetAnimations, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_assets', _this.onSetAssets, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_loop', _this.onSetLoop, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AnimationComponent.prototype;\n\n\t\t_proto.play = function play(name, blendTime) {\n\t\t\tif (!this.enabled || !this.entity.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar data = this.data;\n\n\t\t\tif (!data.animations[name]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tblendTime = blendTime || 0;\n\t\t\tdata.prevAnim = data.currAnim;\n\t\t\tdata.currAnim = name;\n\n\t\t\tif (data.model) {\n\t\t\t\tif (!data.skeleton && !data.animEvaluator) {\n\t\t\t\t\tthis._createAnimationController();\n\t\t\t\t}\n\n\t\t\t\tvar prevAnim = data.animations[data.prevAnim];\n\t\t\t\tvar currAnim = data.animations[data.currAnim];\n\t\t\t\tdata.blending = blendTime > 0 && data.prevAnim;\n\n\t\t\t\tif (data.blending) {\n\t\t\t\t\tdata.blend = 0;\n\t\t\t\t\tdata.blendSpeed = 1.0 / blendTime;\n\t\t\t\t}\n\n\t\t\t\tif (data.skeleton) {\n\t\t\t\t\tif (data.blending) {\n\t\t\t\t\t\tdata.fromSkel.animation = prevAnim;\n\t\t\t\t\t\tdata.fromSkel.addTime(data.skeleton._time);\n\t\t\t\t\t\tdata.toSkel.animation = currAnim;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.skeleton.animation = currAnim;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (data.animEvaluator) {\n\t\t\t\t\tvar animEvaluator = data.animEvaluator;\n\n\t\t\t\t\tif (data.blending) {\n\t\t\t\t\t\twhile (animEvaluator.clips.length > 1) {\n\t\t\t\t\t\t\tanimEvaluator.removeClip(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.animEvaluator.removeClips();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar clip = new AnimClip(data.animations[data.currAnim], 0, 1.0, true, data.loop);\n\t\t\t\t\tclip.name = data.currAnim;\n\t\t\t\t\tclip.blendWeight = data.blending ? 0 : 1;\n\t\t\t\t\tclip.reset();\n\t\t\t\t\tdata.animEvaluator.addClip(clip);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata.playing = true;\n\t\t};\n\n\t\t_proto.getAnimation = function getAnimation(name) {\n\t\t\treturn this.data.animations[name];\n\t\t};\n\n\t\t_proto.setModel = function setModel(model) {\n\t\t\tvar data = this.data;\n\n\t\t\tif (model !== data.model) {\n\t\t\t\tthis._resetAnimationController();\n\n\t\t\t\tdata.model = model;\n\n\t\t\t\tif (data.animations && data.currAnim && data.animations[data.currAnim]) {\n\t\t\t\t\tthis.play(data.currAnim);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._resetAnimationController = function _resetAnimationController() {\n\t\t\tvar data = this.data;\n\t\t\tdata.skeleton = null;\n\t\t\tdata.fromSkel = null;\n\t\t\tdata.toSkel = null;\n\t\t\tdata.animEvaluator = null;\n\t\t};\n\n\t\t_proto._createAnimationController = function _createAnimationController() {\n\t\t\tvar data = this.data;\n\t\t\tvar model = data.model;\n\t\t\tvar animations = data.animations;\n\t\t\tvar hasJson = false;\n\t\t\tvar hasGlb = false;\n\n\t\t\tfor (var animation in animations) {\n\t\t\t\tif (animations.hasOwnProperty(animation)) {\n\t\t\t\t\tvar anim = animations[animation];\n\n\t\t\t\t\tif (anim.constructor === AnimTrack) {\n\t\t\t\t\t\thasGlb = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thasJson = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar graph = model.getGraph();\n\n\t\t\tif (hasJson) {\n\t\t\t\tdata.fromSkel = new Skeleton(graph);\n\t\t\t\tdata.toSkel = new Skeleton(graph);\n\t\t\t\tdata.skeleton = new Skeleton(graph);\n\t\t\t\tdata.skeleton.looping = data.loop;\n\t\t\t\tdata.skeleton.setGraph(graph);\n\t\t\t} else if (hasGlb) {\n\t\t\t\tdata.animEvaluator = new AnimEvaluator(new DefaultAnimBinder(graph));\n\t\t\t}\n\t\t};\n\n\t\t_proto.loadAnimationAssets = function loadAnimationAssets(ids) {\n\t\t\tif (!ids || !ids.length) return;\n\t\t\tvar self = this;\n\t\t\tvar assets = this.system.app.assets;\n\t\t\tvar i,\n\t\t\t\t\tl = ids.length;\n\n\t\t\tvar onAssetReady = function onAssetReady(asset) {\n\t\t\t\tif (asset.resources.length > 1) {\n\t\t\t\t\tfor (var i = 0; i < asset.resources.length; i++) {\n\t\t\t\t\t\tself.animations[asset.resources[i].name] = asset.resources[i];\n\t\t\t\t\t\tself.animationsIndex[asset.id] = asset.resources[i].name;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tself.animations[asset.name] = asset.resource;\n\t\t\t\t\tself.animationsIndex[asset.id] = asset.name;\n\t\t\t\t}\n\n\t\t\t\tself.animations = self.animations;\n\t\t\t};\n\n\t\t\tvar onAssetAdd = function onAssetAdd(asset) {\n\t\t\t\tasset.off('change', self.onAssetChanged, self);\n\t\t\t\tasset.on('change', self.onAssetChanged, self);\n\t\t\t\tasset.off('remove', self.onAssetRemoved, self);\n\t\t\t\tasset.on('remove', self.onAssetRemoved, self);\n\n\t\t\t\tif (asset.resource) {\n\t\t\t\t\tonAssetReady(asset);\n\t\t\t\t} else {\n\t\t\t\t\tasset.once('load', onAssetReady, self);\n\t\t\t\t\tif (self.enabled && self.entity.enabled) assets.load(asset);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tvar asset = assets.get(ids[i]);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tonAssetAdd(asset);\n\t\t\t\t} else {\n\t\t\t\t\tassets.on('add:' + ids[i], onAssetAdd);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAssetChanged = function onAssetChanged(asset, attribute, newValue, oldValue) {\n\t\t\tvar i;\n\n\t\t\tif (attribute === 'resource' || attribute === 'resources') {\n\t\t\t\tif (attribute === 'resources' && newValue && newValue.length === 0) {\n\t\t\t\t\tnewValue = null;\n\t\t\t\t}\n\n\t\t\t\tif (newValue) {\n\t\t\t\t\tvar restarted = false;\n\n\t\t\t\t\tif (newValue.length > 1) {\n\t\t\t\t\t\tif (oldValue && oldValue.length > 1) {\n\t\t\t\t\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\t\t\t\t\tdelete this.animations[oldValue[i].name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete this.animations[asset.name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trestarted = false;\n\n\t\t\t\t\t\tfor (i = 0; i < newValue.length; i++) {\n\t\t\t\t\t\t\tthis.animations[newValue[i].name] = newValue[i];\n\n\t\t\t\t\t\t\tif (!restarted && this.data.currAnim === newValue[i].name) {\n\t\t\t\t\t\t\t\tif (this.data.playing && this.data.enabled && this.entity.enabled) {\n\t\t\t\t\t\t\t\t\trestarted = true;\n\t\t\t\t\t\t\t\t\tthis.play(newValue[i].name, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!restarted) {\n\t\t\t\t\t\t\tthis._stopCurrentAnimation();\n\n\t\t\t\t\t\t\tthis.onSetAnimations();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oldValue && oldValue.length > 1) {\n\t\t\t\t\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\t\t\t\t\tdelete this.animations[oldValue[i].name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.animations[asset.name] = newValue[0] || newValue;\n\t\t\t\t\t\trestarted = false;\n\n\t\t\t\t\t\tif (this.data.currAnim === asset.name) {\n\t\t\t\t\t\t\tif (this.data.playing && this.data.enabled && this.entity.enabled) {\n\t\t\t\t\t\t\t\trestarted = true;\n\t\t\t\t\t\t\t\tthis.play(asset.name, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!restarted) {\n\t\t\t\t\t\t\tthis._stopCurrentAnimation();\n\n\t\t\t\t\t\t\tthis.onSetAnimations();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.animationsIndex[asset.id] = asset.name;\n\t\t\t\t} else {\n\t\t\t\t\tif (oldValue.length > 1) {\n\t\t\t\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\t\t\t\tdelete this.animations[oldValue[i].name];\n\n\t\t\t\t\t\t\tif (this.data.currAnim === oldValue[i].name) {\n\t\t\t\t\t\t\t\tthis._stopCurrentAnimation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete this.animations[asset.name];\n\n\t\t\t\t\t\tif (this.data.currAnim === asset.name) {\n\t\t\t\t\t\t\tthis._stopCurrentAnimation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete this.animationsIndex[asset.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAssetRemoved = function onAssetRemoved(asset) {\n\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\n\t\t\tif (this.animations) {\n\t\t\t\tif (asset.resources.length > 1) {\n\t\t\t\t\tfor (var i = 0; i < asset.resources.length; i++) {\n\t\t\t\t\t\tdelete this.animations[asset.resources[i].name];\n\t\t\t\t\t\tif (this.data.currAnim === asset.resources[i].name) this._stopCurrentAnimation();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.animations[asset.name];\n\t\t\t\t\tif (this.data.currAnim === asset.name) this._stopCurrentAnimation();\n\t\t\t\t}\n\n\t\t\t\tdelete this.animationsIndex[asset.id];\n\t\t\t}\n\t\t};\n\n\t\t_proto._stopCurrentAnimation = function _stopCurrentAnimation() {\n\t\t\tvar data = this.data;\n\t\t\tdata.currAnim = null;\n\t\t\tdata.playing = false;\n\n\t\t\tif (data.skeleton) {\n\t\t\t\tdata.skeleton.currentTime = 0;\n\t\t\t\tdata.skeleton.animation = null;\n\t\t\t}\n\n\t\t\tif (data.animEvaluator) {\n\t\t\t\tfor (var i = 0; i < data.animEvaluator.clips.length; ++i) {\n\t\t\t\t\tdata.animEvaluator.clips[i].stop();\n\t\t\t\t}\n\n\t\t\t\tdata.animEvaluator.update(0);\n\t\t\t\tdata.animEvaluator.removeClips();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAnimations = function onSetAnimations(name, oldValue, newValue) {\n\t\t\tvar data = this.data;\n\t\t\tvar modelComponent = this.entity.model;\n\n\t\t\tif (modelComponent) {\n\t\t\t\tvar m = modelComponent.model;\n\n\t\t\t\tif (m && m !== data.model) {\n\t\t\t\t\tthis.setModel(m);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!data.currAnim && data.activate && data.enabled && this.entity.enabled) {\n\t\t\t\tfor (var animName in data.animations) {\n\t\t\t\t\tthis.play(animName, 0);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAssets = function onSetAssets(name, oldValue, newValue) {\n\t\t\tif (oldValue && oldValue.length) {\n\t\t\t\tfor (var i = 0; i < oldValue.length; i++) {\n\t\t\t\t\tif (oldValue[i]) {\n\t\t\t\t\t\tvar asset = this.system.app.assets.get(oldValue[i]);\n\n\t\t\t\t\t\tif (asset) {\n\t\t\t\t\t\t\tasset.off('change', this.onAssetChanged, this);\n\t\t\t\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\t\t\t\t\t\t\tvar animName = this.animationsIndex[asset.id];\n\t\t\t\t\t\t\tif (this.data.currAnim === animName) this._stopCurrentAnimation();\n\t\t\t\t\t\t\tdelete this.animations[animName];\n\t\t\t\t\t\t\tdelete this.animationsIndex[asset.id];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ids = newValue.map(function (value) {\n\t\t\t\treturn value instanceof Asset ? value.id : value;\n\t\t\t});\n\t\t\tthis.loadAnimationAssets(ids);\n\t\t};\n\n\t\t_proto.onSetLoop = function onSetLoop(name, oldValue, newValue) {\n\t\t\tvar data = this.data;\n\n\t\t\tif (data.skeleton) {\n\t\t\t\tdata.skeleton.looping = data.loop;\n\t\t\t}\n\n\t\t\tif (data.animEvaluator) {\n\t\t\t\tfor (var i = 0; i < data.animEvaluator.clips.length; ++i) {\n\t\t\t\t\tdata.animEvaluator.clips[i].loop = data.loop;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetCurrentTime = function onSetCurrentTime(name, oldValue, newValue) {\n\t\t\tvar data = this.data;\n\n\t\t\tif (data.skeleton) {\n\t\t\t\tvar skeleton = data.skeleton;\n\t\t\t\tskeleton.currentTime = newValue;\n\t\t\t\tskeleton.addTime(0);\n\t\t\t\tskeleton.updateGraph();\n\t\t\t}\n\n\t\t\tif (data.animEvaluator) {\n\t\t\t\tvar animEvaluator = data.animEvaluator;\n\n\t\t\t\tfor (var i = 0; i < animEvaluator.clips.length; ++i) {\n\t\t\t\t\tanimEvaluator.clips[i].time = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\t_Component.prototype.onEnable.call(this);\n\n\t\t\tvar data = this.data;\n\t\t\tvar assets = data.assets;\n\t\t\tvar registry = this.system.app.assets;\n\n\t\t\tif (assets) {\n\t\t\t\tfor (var i = 0, len = assets.length; i < len; i++) {\n\t\t\t\t\tvar asset = assets[i];\n\t\t\t\t\tif (!(asset instanceof Asset)) asset = registry.get(asset);\n\t\t\t\t\tif (asset && !asset.resource) registry.load(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.activate && !data.currAnim) {\n\t\t\t\tfor (var animName in data.animations) {\n\t\t\t\t\tthis.play(animName, 0);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove() {\n\t\t\tfor (var i = 0; i < this.assets.length; i++) {\n\t\t\t\tvar asset = this.assets[i];\n\n\t\t\t\tif (typeof asset === 'number') {\n\t\t\t\t\tasset = this.system.app.assets.get(asset);\n\t\t\t\t}\n\n\t\t\t\tif (!asset) continue;\n\t\t\t\tasset.off('change', this.onAssetChanged, this);\n\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\t\t\t}\n\n\t\t\tvar data = this.data;\n\t\t\tdelete data.animation;\n\t\t\tdelete data.skeleton;\n\t\t\tdelete data.fromSkel;\n\t\t\tdelete data.toSkel;\n\t\t\tdelete data.animEvaluator;\n\t\t};\n\n\t\t_createClass(AnimationComponent, [{\n\t\t\tkey: \"currentTime\",\n\t\t\tget: function get() {\n\t\t\t\tvar data = this.data;\n\n\t\t\t\tif (data.skeleton) {\n\t\t\t\t\treturn this.data.skeleton._time;\n\t\t\t\t}\n\n\t\t\t\tif (data.animEvaluator) {\n\t\t\t\t\tvar clips = data.animEvaluator.clips;\n\n\t\t\t\t\tif (clips.length > 0) {\n\t\t\t\t\t\treturn clips[clips.length - 1].time;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tset: function set(currentTime) {\n\t\t\t\tvar data = this.data;\n\n\t\t\t\tif (data.skeleton) {\n\t\t\t\t\tvar skeleton = data.skeleton;\n\t\t\t\t\tskeleton.currentTime = currentTime;\n\t\t\t\t\tskeleton.addTime(0);\n\t\t\t\t\tskeleton.updateGraph();\n\t\t\t\t}\n\n\t\t\t\tif (data.animEvaluator) {\n\t\t\t\t\tvar animEvaluator = data.animEvaluator;\n\n\t\t\t\t\tfor (var i = 0; i < animEvaluator.clips.length; ++i) {\n\t\t\t\t\t\tanimEvaluator.clips[i].time = currentTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.data.animations[this.data.currAnim].duration;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimationComponent;\n\t}(Component);\n\n\tvar AnimationComponentData = function AnimationComponentData() {\n\t\tthis.assets = [];\n\t\tthis.speed = 1.0;\n\t\tthis.loop = true;\n\t\tthis.activate = true;\n\t\tthis.enabled = true;\n\t\tthis.animations = {};\n\t\tthis.model = null;\n\t\tthis.prevAnim = null;\n\t\tthis.currAnim = null;\n\t\tthis.blending = false;\n\t\tthis.blend = 0;\n\t\tthis.blendSpeed = 0;\n\t\tthis.playing = false;\n\t\tthis.skeleton = null;\n\t\tthis.fromSkel = null;\n\t\tthis.toSkel = null;\n\t\tthis.animEvaluator = null;\n\t};\n\n\tvar _schema = ['enabled', 'assets', 'speed', 'loop', 'activate', 'animations', 'skeleton', 'model', 'prevAnim', 'currAnim', 'fromSkel', 'toSkel', 'blending', 'blendTimeRemaining', 'playing'];\n\n\tvar AnimationComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(AnimationComponentSystem, _ComponentSystem);\n\n\t\tfunction AnimationComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'animation';\n\t\t\t_this.ComponentType = AnimationComponent;\n\t\t\t_this.DataType = AnimationComponentData;\n\t\t\t_this.schema = _schema;\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\t_this.on('update', _this.onUpdate, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AnimationComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['activate', 'enabled', 'loop', 'speed', 'assets'];\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar key;\n\t\t\tthis.addComponent(clone, {});\n\t\t\tclone.animation.assets = entity.animation.assets.slice();\n\t\t\tclone.animation.data.speed = entity.animation.speed;\n\t\t\tclone.animation.data.loop = entity.animation.loop;\n\t\t\tclone.animation.data.activate = entity.animation.activate;\n\t\t\tclone.animation.data.enabled = entity.animation.enabled;\n\t\t\tvar clonedAnimations = {};\n\t\t\tvar animations = entity.animation.animations;\n\n\t\t\tfor (key in animations) {\n\t\t\t\tif (animations.hasOwnProperty(key)) {\n\t\t\t\t\tclonedAnimations[key] = animations[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclone.animation.animations = clonedAnimations;\n\t\t\tvar clonedAnimationsIndex = {};\n\t\t\tvar animationsIndex = entity.animation.animationsIndex;\n\n\t\t\tfor (key in animationsIndex) {\n\t\t\t\tif (animationsIndex.hasOwnProperty(key)) {\n\t\t\t\t\tclonedAnimationsIndex[key] = animationsIndex[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclone.animation.animationsIndex = clonedAnimationsIndex;\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tcomponent.onBeforeRemove();\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components.hasOwnProperty(id)) {\n\t\t\t\t\tvar component = components[id];\n\t\t\t\t\tvar componentData = component.data;\n\n\t\t\t\t\tif (componentData.enabled && component.entity.enabled) {\n\t\t\t\t\t\tif (componentData.blending) {\n\t\t\t\t\t\t\tcomponentData.blend += dt * componentData.blendSpeed;\n\n\t\t\t\t\t\t\tif (componentData.blend >= 1.0) {\n\t\t\t\t\t\t\t\tcomponentData.blend = 1.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (componentData.playing) {\n\t\t\t\t\t\t\tvar skeleton = componentData.skeleton;\n\n\t\t\t\t\t\t\tif (skeleton !== null && componentData.model !== null) {\n\t\t\t\t\t\t\t\tif (componentData.blending) {\n\t\t\t\t\t\t\t\t\tskeleton.blend(componentData.fromSkel, componentData.toSkel, componentData.blend);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar delta = dt * componentData.speed;\n\t\t\t\t\t\t\t\t\tskeleton.addTime(delta);\n\n\t\t\t\t\t\t\t\t\tif (componentData.speed > 0 && skeleton._time === skeleton._animation.duration && !componentData.loop) {\n\t\t\t\t\t\t\t\t\t\tcomponentData.playing = false;\n\t\t\t\t\t\t\t\t\t} else if (componentData.speed < 0 && skeleton._time === 0 && !componentData.loop) {\n\t\t\t\t\t\t\t\t\t\tcomponentData.playing = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (componentData.blending && componentData.blend === 1.0) {\n\t\t\t\t\t\t\t\t\tskeleton.animation = componentData.toSkel._animation;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tskeleton.updateGraph();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar animEvaluator = componentData.animEvaluator;\n\n\t\t\t\t\t\tif (animEvaluator) {\n\t\t\t\t\t\t\tfor (var i = 0; i < animEvaluator.clips.length; ++i) {\n\t\t\t\t\t\t\t\tvar clip = animEvaluator.clips[i];\n\t\t\t\t\t\t\t\tclip.speed = componentData.speed;\n\n\t\t\t\t\t\t\t\tif (!componentData.playing) {\n\t\t\t\t\t\t\t\t\tclip.pause();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tclip.resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (componentData.blending) {\n\t\t\t\t\t\t\t\tanimEvaluator.clips[1].blendWeight = componentData.blend;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tanimEvaluator.update(dt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (componentData.blending && componentData.blend === 1.0) {\n\t\t\t\t\t\t\tcomponentData.blending = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn AnimationComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(AnimationComponent.prototype, _schema);\n\n\tvar AnimNode = function () {\n\t\tfunction AnimNode(state, parent, name, point, speed) {\n\t\t\tif (speed === void 0) {\n\t\t\t\tspeed = 1;\n\t\t\t}\n\n\t\t\tthis._state = state;\n\t\t\tthis._parent = parent;\n\t\t\tthis._name = name;\n\t\t\tthis._point = Array.isArray(point) ? new pc.Vec2(point) : point;\n\t\t\tthis._speed = speed;\n\t\t\tthis._weight = 1.0;\n\t\t\tthis._animTrack = null;\n\t\t}\n\n\t\t_createClass(AnimNode, [{\n\t\t\tkey: \"parent\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._parent;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"path\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._parent ? this._parent.path + '.' + this._name : this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"point\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._point;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"weight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._parent ? this._parent.weight * this._weight : this._weight;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._weight = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"normalizedWeight\",\n\t\t\tget: function get() {\n\t\t\t\tvar totalWeight = this._state.totalWeight;\n\t\t\t\tif (totalWeight === 0.0) return 0.0;\n\t\t\t\treturn this.weight / totalWeight;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"speed\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._speed;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"animTrack\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._animTrack;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._animTrack = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimNode;\n\t}();\n\n\tvar ANIM_INTERRUPTION_NONE = 'NONE';\n\tvar ANIM_INTERRUPTION_PREV = 'PREV_STATE';\n\tvar ANIM_INTERRUPTION_NEXT = 'NEXT_STATE';\n\tvar ANIM_INTERRUPTION_PREV_NEXT = 'PREV_STATE_NEXT_STATE';\n\tvar ANIM_INTERRUPTION_NEXT_PREV = 'NEXT_STATE_PREV_STATE';\n\tvar ANIM_GREATER_THAN = 'GREATER_THAN';\n\tvar ANIM_LESS_THAN = 'LESS_THAN';\n\tvar ANIM_GREATER_THAN_EQUAL_TO = 'GREATER_THAN_EQUAL_TO';\n\tvar ANIM_LESS_THAN_EQUAL_TO = 'LESS_THAN_EQUAL_TO';\n\tvar ANIM_EQUAL_TO = 'EQUAL_TO';\n\tvar ANIM_NOT_EQUAL_TO = 'NOT_EQUAL_TO';\n\tvar ANIM_PARAMETER_INTEGER = 'INTEGER';\n\tvar ANIM_PARAMETER_FLOAT = 'FLOAT';\n\tvar ANIM_PARAMETER_BOOLEAN = 'BOOLEAN';\n\tvar ANIM_PARAMETER_TRIGGER = 'TRIGGER';\n\tvar ANIM_BLEND_1D = '1D';\n\tvar ANIM_BLEND_2D_DIRECTIONAL = '2D_DIRECTIONAL';\n\tvar ANIM_BLEND_2D_CARTESIAN = '2D_CARTESIAN';\n\tvar ANIM_BLEND_DIRECT = 'DIRECT';\n\tvar ANIM_STATE_START = 'START';\n\tvar ANIM_STATE_END = 'END';\n\tvar ANIM_STATE_ANY = 'ANY';\n\n\tfunction between(num, a, b, inclusive) {\n\t\tvar min = Math.min(a, b),\n\t\t\t\tmax = Math.max(a, b);\n\t\treturn inclusive ? num >= min && num <= max : num > min && num < max;\n\t}\n\n\tfunction getAngleRad(a, b) {\n\t\treturn Math.atan2(a.x * b.y - a.y * b.x, a.x * b.x + a.y * b.y);\n\t}\n\n\tfunction clamp(num, min, max) {\n\t\treturn num <= min ? min : num >= max ? max : num;\n\t}\n\n\tvar AnimBlendTree = function (_AnimNode) {\n\t\t_inheritsLoose(AnimBlendTree, _AnimNode);\n\n\t\tfunction AnimBlendTree(state, parent, name, point, type, parameters, children, findParameter) {\n\t\t\tvar _this;\n\n\t\t\t_this = _AnimNode.call(this, state, parent, name, point) || this;\n\t\t\t_this._type = type;\n\t\t\t_this._parameters = parameters;\n\t\t\t_this._parameterValues = null;\n\t\t\t_this._children = [];\n\t\t\t_this._findParameter = findParameter;\n\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i];\n\n\t\t\t\tif (child.children) {\n\t\t\t\t\t_this._children.push(new AnimBlendTree(state, _assertThisInitialized(_this), child.name, child.point, child.type, child.parameter ? [child.parameter] : child.parameters, child.children, findParameter));\n\t\t\t\t} else {\n\t\t\t\t\t_this._children.push(new AnimNode(state, _assertThisInitialized(_this), child.name, child.point, child.speed));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AnimBlendTree.prototype;\n\n\t\t_proto.getChild = function getChild(name) {\n\t\t\tfor (var i = 0; i < this._children.length; i++) {\n\t\t\t\tif (this._children[i].name === name) return this._children[i];\n\t\t\t}\n\t\t};\n\n\t\t_proto.calculateWeights = function calculateWeights() {\n\t\t\tvar i, j, p, pi, pj, pip, pipj, parameterValues, minj, result, weightSum;\n\n\t\t\tswitch (this._type) {\n\t\t\t\tcase ANIM_BLEND_1D:\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parameterValue = this._findParameter(this._parameters[0]).value;\n\n\t\t\t\t\t\tif (this._parameterValues && this._parameterValues[0] === parameterValue) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._parameterValues = [parameterValue];\n\t\t\t\t\t\tthis._children[0].weight = 0.0;\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length - 1; i++) {\n\t\t\t\t\t\t\tvar child1 = this._children[i];\n\t\t\t\t\t\t\tvar child2 = this._children[i + 1];\n\n\t\t\t\t\t\t\tif (between(parameterValue, child1.point, child2.point, true)) {\n\t\t\t\t\t\t\t\tvar child2Distance = Math.abs(child1.point - child2.point);\n\t\t\t\t\t\t\t\tvar parameterDistance = Math.abs(child1.point - parameterValue);\n\t\t\t\t\t\t\t\tvar weight = (child2Distance - parameterDistance) / child2Distance;\n\t\t\t\t\t\t\t\tchild1.weight = weight;\n\t\t\t\t\t\t\t\tchild2.weight = 1.0 - weight;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tchild2.weight = 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\tcase ANIM_BLEND_2D_CARTESIAN:\n\t\t\t\t\t{\n\t\t\t\t\t\tparameterValues = this._parameters.map(function (param) {\n\t\t\t\t\t\t\treturn this._findParameter(param).value;\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\tif (this._parameterValues && JSON.stringify(this._parameterValues) === JSON.stringify(parameterValues)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._parameterValues = parameterValues;\n\t\t\t\t\t\tp = new pc.Vec2(this._parameterValues);\n\t\t\t\t\t\tweightSum = 0.0;\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tpi = this._children[i].point.clone();\n\t\t\t\t\t\t\tminj = Number.MAX_VALUE;\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._children.length; j++) {\n\t\t\t\t\t\t\t\tif (i === j) continue;\n\t\t\t\t\t\t\t\tpj = this._children[j].point.clone();\n\t\t\t\t\t\t\t\tpipj = pj.clone().sub(pi);\n\t\t\t\t\t\t\t\tpip = p.clone().sub(pi);\n\t\t\t\t\t\t\t\tresult = clamp(1.0 - pip.clone().dot(pipj) / pipj.lengthSq(), 0.0, 1.0);\n\t\t\t\t\t\t\t\tif (result < minj) minj = result;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._children[i].weight = minj;\n\t\t\t\t\t\t\tweightSum += minj;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tthis._children[i].weight = this._children[i]._weight / weightSum;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\tcase ANIM_BLEND_2D_DIRECTIONAL:\n\t\t\t\t\t{\n\t\t\t\t\t\tparameterValues = this._parameters.map(function (param) {\n\t\t\t\t\t\t\treturn this._findParameter(param).value;\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\tif (this._parameterValues && JSON.stringify(this._parameterValues) === JSON.stringify(parameterValues)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._parameterValues = parameterValues;\n\t\t\t\t\t\tp = new pc.Vec2(this._parameterValues);\n\t\t\t\t\t\tweightSum = 0.0;\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tpi = this._children[i].point.clone();\n\t\t\t\t\t\t\tminj = Number.MAX_VALUE;\n\n\t\t\t\t\t\t\tfor (j = 0; j < this._children.length; j++) {\n\t\t\t\t\t\t\t\tif (i === j) continue;\n\t\t\t\t\t\t\t\tpj = this._children[j].point.clone();\n\t\t\t\t\t\t\t\tvar pipAngle = getAngleRad(pi, p);\n\t\t\t\t\t\t\t\tvar pipjAngle = getAngleRad(pi, pj);\n\t\t\t\t\t\t\t\tpipj = new pc.Vec2((pj.length() - pi.length()) / ((pj.length() + pi.length()) / 2), pipjAngle * 2.0);\n\t\t\t\t\t\t\t\tpip = new pc.Vec2((p.length() - pi.length()) / ((pj.length() + pi.length()) / 2), pipAngle * 2.0);\n\t\t\t\t\t\t\t\tresult = clamp(1.0 - Math.abs(pip.clone().dot(pipj) / pipj.lengthSq()), 0.0, 1.0);\n\t\t\t\t\t\t\t\tif (result < minj) minj = result;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._children[i].weight = minj;\n\t\t\t\t\t\t\tweightSum += minj;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tthis._children[i].weight = this._children[i]._weight / weightSum;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\tcase ANIM_BLEND_DIRECT:\n\t\t\t\t\t{\n\t\t\t\t\t\tparameterValues = this._parameters.map(function (param) {\n\t\t\t\t\t\t\treturn this._findParameter(param).value;\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\tif (this._parameterValues === parameterValues) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._parameterValues = parameterValues;\n\t\t\t\t\t\tweightSum = 0.0;\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tweightSum += clamp(this._parameterValues[i], 0.0, Number.MAX_VALUE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < this._children.length; i++) {\n\t\t\t\t\t\t\tthis._children[i].weight = clamp(this._parameterValues[i], 0.0, Number.MAX_VALUE) / weightSum;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.getNodeCount = function getNodeCount() {\n\t\t\tvar count = 0;\n\n\t\t\tfor (var i = 0; i < this._children.length; i++) {\n\t\t\t\tvar child = this._children[i];\n\n\t\t\t\tif (child.constructor === AnimBlendTree) {\n\t\t\t\t\tcount += this._children[i].getNodeCount();\n\t\t\t\t} else {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t};\n\n\t\t_createClass(AnimBlendTree, [{\n\t\t\tkey: \"parent\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._parent;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"point\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._point;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"weight\",\n\t\t\tget: function get() {\n\t\t\t\tthis.calculateWeights();\n\t\t\t\treturn this._parent ? this._parent.weight * this._weight : this._weight;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._weight = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"speed\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._speed;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimBlendTree;\n\t}(AnimNode);\n\n\tvar AnimState = function () {\n\t\tfunction AnimState(controller, name, speed, loop, blendTree) {\n\t\t\tthis._controller = controller;\n\t\t\tthis._name = name;\n\t\t\tthis._animations = {};\n\t\t\tthis._animationList = [];\n\t\t\tthis._speed = speed || 1.0;\n\t\t\tthis._loop = loop === undefined ? true : loop;\n\n\t\t\tvar findParameter = this._controller.findParameter.bind(this._controller);\n\n\t\t\tif (blendTree) {\n\t\t\t\tthis._blendTree = new AnimBlendTree(this, null, name, 1.0, blendTree.type, blendTree.parameter ? [blendTree.parameter] : blendTree.parameters, blendTree.children, findParameter);\n\t\t\t} else {\n\t\t\t\tthis._blendTree = new AnimNode(this, null, name, 1.0, speed);\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = AnimState.prototype;\n\n\t\t_proto._getNodeFromPath = function _getNodeFromPath(path) {\n\t\t\tvar currNode = this._blendTree;\n\n\t\t\tfor (var i = 1; i < path.length; i++) {\n\t\t\t\tcurrNode = currNode.getChild(path[i]);\n\t\t\t}\n\n\t\t\treturn currNode;\n\t\t};\n\n\t\t_proto.addAnimation = function addAnimation(path, animTrack) {\n\t\t\tvar indexOfAnimation = this._animationList.findIndex(function (animation) {\n\t\t\t\treturn animation.path === path;\n\t\t\t});\n\n\t\t\tif (indexOfAnimation >= 0) {\n\t\t\t\tthis._animationList[indexOfAnimation].animTrack = animTrack;\n\t\t\t} else {\n\t\t\t\tvar node = this._getNodeFromPath(path);\n\n\t\t\t\tnode.animTrack = animTrack;\n\n\t\t\t\tthis._animationList.push(node);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(AnimState, [{\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"animations\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._animationList;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._animationList = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"speed\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._speed;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"loop\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._loop;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"nodeCount\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._blendTree || !(this._blendTree.constructor === AnimBlendTree)) return 1;\n\t\t\t\treturn this._blendTree.getNodeCount();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playable\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.name === ANIM_STATE_START || this.name === ANIM_STATE_END || this.name === ANIM_STATE_ANY || this.animations.length === this.nodeCount;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"looping\",\n\t\t\tget: function get() {\n\t\t\t\tif (this.animations.length > 0) {\n\t\t\t\t\tvar trackClipName = this.name + '.' + this.animations[0].animTrack.name;\n\n\t\t\t\t\tvar trackClip = this._controller.animEvaluator.findClip(trackClipName);\n\n\t\t\t\t\tif (trackClip) {\n\t\t\t\t\t\treturn trackClip.loop;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"totalWeight\",\n\t\t\tget: function get() {\n\t\t\t\tvar sum = 0;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tsum += this.animations[i].weight;\n\t\t\t\t}\n\n\t\t\t\treturn sum;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"timelineDuration\",\n\t\t\tget: function get() {\n\t\t\t\tvar duration = 0;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tvar animation = this.animations[i];\n\n\t\t\t\t\tif (animation.animTrack.duration > duration) {\n\t\t\t\t\t\tduration = animation.animTrack.duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn duration;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimState;\n\t}();\n\n\tvar AnimTransition = function () {\n\t\tfunction AnimTransition(controller, from, to, time, priority, conditions, exitTime, transitionOffset, interruptionSource) {\n\t\t\tif (interruptionSource === void 0) {\n\t\t\t\tinterruptionSource = ANIM_INTERRUPTION_NONE;\n\t\t\t}\n\n\t\t\tthis._controller = controller;\n\t\t\tthis._from = from;\n\t\t\tthis._to = to;\n\t\t\tthis._time = time;\n\t\t\tthis._priority = priority;\n\t\t\tthis._conditions = conditions || [];\n\t\t\tthis._exitTime = exitTime || null;\n\t\t\tthis._transitionOffset = transitionOffset || null;\n\t\t\tthis._interruptionSource = interruptionSource;\n\t\t}\n\n\t\t_createClass(AnimTransition, [{\n\t\t\tkey: \"from\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._from;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"to\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._to;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"time\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"priority\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._priority;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"conditions\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._conditions;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"exitTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._exitTime;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"transitionOffset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._transitionOffset;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"interruptionSource\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._interruptionSource;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hasExitTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!this.exitTime;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"hasConditionsMet\",\n\t\t\tget: function get() {\n\t\t\t\tvar conditionsMet = true;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < this.conditions.length; i++) {\n\t\t\t\t\tvar condition = this.conditions[i];\n\n\t\t\t\t\tvar parameter = this._controller.findParameter(condition.parameterName);\n\n\t\t\t\t\tswitch (condition.predicate) {\n\t\t\t\t\t\tcase ANIM_GREATER_THAN:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value > condition.value;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_LESS_THAN:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value < condition.value;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_GREATER_THAN_EQUAL_TO:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value >= condition.value;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_LESS_THAN_EQUAL_TO:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value <= condition.value;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_EQUAL_TO:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value === condition.value;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_NOT_EQUAL_TO:\n\t\t\t\t\t\t\tconditionsMet = conditionsMet && parameter.value !== condition.value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!conditionsMet) return conditionsMet;\n\t\t\t\t}\n\n\t\t\t\treturn conditionsMet;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimTransition;\n\t}();\n\n\tvar AnimController = function () {\n\t\tfunction AnimController(animEvaluator, states, transitions, parameters, activate) {\n\t\t\tthis._animEvaluator = animEvaluator;\n\t\t\tthis._states = {};\n\t\t\tthis._stateNames = [];\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < states.length; i++) {\n\t\t\t\tthis._states[states[i].name] = new AnimState(this, states[i].name, states[i].speed, states[i].loop, states[i].blendTree);\n\n\t\t\t\tthis._stateNames.push(states[i].name);\n\t\t\t}\n\n\t\t\tthis._transitions = transitions.map(function (transition) {\n\t\t\t\treturn new AnimTransition(this, transition.from, transition.to, transition.time, transition.priority, transition.conditions, transition.exitTime, transition.transitionOffset, transition.interruptionSource);\n\t\t\t}.bind(this));\n\t\t\tthis._findTransitionsFromStateCache = {};\n\t\t\tthis._findTransitionsBetweenStatesCache = {};\n\t\t\tthis._parameters = parameters;\n\t\t\tthis._previousStateName = null;\n\t\t\tthis._activeStateName = ANIM_STATE_START;\n\t\t\tthis._playing = false;\n\t\t\tthis._activate = activate;\n\t\t\tthis._currTransitionTime = 1.0;\n\t\t\tthis._totalTransitionTime = 1.0;\n\t\t\tthis._isTransitioning = false;\n\t\t\tthis._transitionInterruptionSource = ANIM_INTERRUPTION_NONE;\n\t\t\tthis._transitionPreviousStates = [];\n\t\t\tthis._timeInState = 0;\n\t\t\tthis._timeInStateBefore = 0;\n\t\t}\n\n\t\tvar _proto = AnimController.prototype;\n\n\t\t_proto._findState = function _findState(stateName) {\n\t\t\treturn this._states[stateName];\n\t\t};\n\n\t\t_proto._getActiveStateProgressForTime = function _getActiveStateProgressForTime(time) {\n\t\t\tif (this.activeStateName === ANIM_STATE_START || this.activeStateName === ANIM_STATE_END || this.activeStateName === ANIM_STATE_ANY) return 1.0;\n\n\t\t\tvar activeClip = this._animEvaluator.findClip(this.activeStateAnimations[0].name);\n\n\t\t\tif (activeClip) {\n\t\t\t\treturn time / activeClip.track.duration;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._findTransitionsFromState = function _findTransitionsFromState(stateName) {\n\t\t\tvar transitions = this._findTransitionsFromStateCache[stateName];\n\n\t\t\tif (!transitions) {\n\t\t\t\ttransitions = this._transitions.filter(function (transition) {\n\t\t\t\t\treturn transition.from === stateName;\n\t\t\t\t});\n\t\t\t\ttransitions.sort(function (a, b) {\n\t\t\t\t\treturn a.priority < b.priority;\n\t\t\t\t});\n\t\t\t\tthis._findTransitionsFromStateCache[stateName] = transitions;\n\t\t\t}\n\n\t\t\treturn transitions;\n\t\t};\n\n\t\t_proto._findTransitionsBetweenStates = function _findTransitionsBetweenStates(sourceStateName, destinationStateName) {\n\t\t\tvar transitions = this._findTransitionsBetweenStatesCache[sourceStateName + '->' + destinationStateName];\n\n\t\t\tif (!transitions) {\n\t\t\t\ttransitions = this._transitions.filter(function (transition) {\n\t\t\t\t\treturn transition.from === sourceStateName && transition.to === destinationStateName;\n\t\t\t\t});\n\t\t\t\ttransitions.sort(function (a, b) {\n\t\t\t\t\treturn a.priority < b.priority;\n\t\t\t\t});\n\t\t\t\tthis._findTransitionsBetweenStatesCache[sourceStateName + '->' + destinationStateName] = transitions;\n\t\t\t}\n\n\t\t\treturn transitions;\n\t\t};\n\n\t\t_proto._findTransition = function _findTransition(from, to) {\n\t\t\tvar transitions = [];\n\n\t\t\tif (from && to) {\n\t\t\t\ttransitions.concat(this._findTransitionsBetweenStates(from, to));\n\t\t\t} else {\n\t\t\t\tif (!this._isTransitioning) {\n\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._activeStateName));\n\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(ANIM_STATE_ANY));\n\t\t\t\t} else {\n\t\t\t\t\tswitch (this._transitionInterruptionSource) {\n\t\t\t\t\t\tcase ANIM_INTERRUPTION_PREV:\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._previousStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(ANIM_STATE_ANY));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_INTERRUPTION_NEXT:\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._activeStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(ANIM_STATE_ANY));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_INTERRUPTION_PREV_NEXT:\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._previousStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._activeStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(ANIM_STATE_ANY));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ANIM_INTERRUPTION_NEXT_PREV:\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._activeStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(this._previousStateName));\n\t\t\t\t\t\t\ttransitions = transitions.concat(this._findTransitionsFromState(ANIM_STATE_ANY));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttransitions = transitions.filter(function (transition) {\n\t\t\t\tif (transition.to === this.activeStateName) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (transition.hasExitTime) {\n\t\t\t\t\tvar progressBefore = this._getActiveStateProgressForTime(this._timeInStateBefore);\n\n\t\t\t\t\tvar progress = this._getActiveStateProgressForTime(this._timeInState);\n\n\t\t\t\t\tif (transition.exitTime < 1.0 && this.activeState.looping) {\n\t\t\t\t\t\tprogressBefore -= Math.floor(progressBefore);\n\t\t\t\t\t\tprogress -= Math.floor(progress);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!(transition.exitTime > progressBefore && transition.exitTime <= progress)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn transition.hasConditionsMet;\n\t\t\t}.bind(this));\n\n\t\t\tif (transitions.length > 0) {\n\t\t\t\treturn transitions[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._updateStateFromTransition = function _updateStateFromTransition(transition) {\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar state;\n\t\t\tvar animation;\n\t\t\tvar clip;\n\t\t\tthis.previousState = transition.from;\n\t\t\tthis.activeState = transition.to;\n\n\t\t\tfor (i = 0; i < transition.conditions.length; i++) {\n\t\t\t\tvar condition = transition.conditions[i];\n\t\t\t\tvar parameter = this.findParameter(condition.parameterName);\n\n\t\t\t\tif (parameter.type === ANIM_PARAMETER_TRIGGER) {\n\t\t\t\t\tparameter.value = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.previousState) {\n\t\t\t\tif (!this._isTransitioning) {\n\t\t\t\t\tthis._transitionPreviousStates = [];\n\t\t\t\t}\n\n\t\t\t\tthis._transitionPreviousStates.push({\n\t\t\t\t\tname: this._previousStateName,\n\t\t\t\t\tweight: 1\n\t\t\t\t});\n\n\t\t\t\tvar interpolatedTime = Math.min(this._currTransitionTime / this._totalTransitionTime, 1.0);\n\n\t\t\t\tfor (i = 0; i < this._transitionPreviousStates.length; i++) {\n\t\t\t\t\tif (!this._isTransitioning) {\n\t\t\t\t\t\tthis._transitionPreviousStates[i].weight = 1.0;\n\t\t\t\t\t} else if (i !== this._transitionPreviousStates.length - 1) {\n\t\t\t\t\t\tthis._transitionPreviousStates[i].weight *= 1.0 - interpolatedTime;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._transitionPreviousStates[i].weight = interpolatedTime;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = this._findState(this._transitionPreviousStates[i].name);\n\n\t\t\t\t\tfor (j = 0; j < state.animations.length; j++) {\n\t\t\t\t\t\tanimation = state.animations[j];\n\t\t\t\t\t\tclip = this._animEvaluator.findClip(animation.name + '.previous.' + i);\n\n\t\t\t\t\t\tif (!clip) {\n\t\t\t\t\t\t\tclip = this._animEvaluator.findClip(animation.name);\n\t\t\t\t\t\t\tclip.name = animation.name + '.previous.' + i;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i !== this._transitionPreviousStates.length - 1) {\n\t\t\t\t\t\t\tclip.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._isTransitioning = true;\n\t\t\tthis._totalTransitionTime = transition.time;\n\t\t\tthis._currTransitionTime = 0;\n\t\t\tthis._transitionInterruptionSource = transition.interruptionSource;\n\t\t\tvar hasTransitionOffset = transition.transitionOffset && transition.transitionOffset > 0.0 && transition.transitionOffset < 1.0;\n\t\t\tvar activeState = this.activeState;\n\n\t\t\tfor (i = 0; i < activeState.animations.length; i++) {\n\t\t\t\tclip = this._animEvaluator.findClip(activeState.animations[i].name);\n\n\t\t\t\tif (!clip) {\n\t\t\t\t\tvar speed = Number.isFinite(activeState.animations[i].speed) ? activeState.animations[i].speed : activeState.speed;\n\t\t\t\t\tclip = new AnimClip(activeState.animations[i].animTrack, 0, speed, true, activeState.loop);\n\t\t\t\t\tclip.name = activeState.animations[i].name;\n\n\t\t\t\t\tthis._animEvaluator.addClip(clip);\n\t\t\t\t} else {\n\t\t\t\t\tclip.reset();\n\t\t\t\t}\n\n\t\t\t\tif (transition.time > 0) {\n\t\t\t\t\tclip.blendWeight = 0.0;\n\t\t\t\t} else {\n\t\t\t\t\tclip.blendWeight = activeState.animations[i].normalizedWeight;\n\t\t\t\t}\n\n\t\t\t\tclip.play();\n\n\t\t\t\tif (hasTransitionOffset) {\n\t\t\t\t\tclip.time = activeState.timelineDuration * transition.transitionOffset;\n\t\t\t\t} else {\n\t\t\t\t\tvar startTime = activeState.speed >= 0 ? 0 : this.activeStateDuration;\n\t\t\t\t\tclip.time = startTime;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar timeInState = 0;\n\t\t\tvar timeInStateBefore = 0;\n\n\t\t\tif (hasTransitionOffset) {\n\t\t\t\tvar offsetTime = activeState.timelineDuration * transition.transitionOffset;\n\t\t\t\ttimeInState = offsetTime;\n\t\t\t\ttimeInStateBefore = offsetTime;\n\t\t\t}\n\n\t\t\tthis._timeInState = timeInState;\n\t\t\tthis._timeInStateBefore = timeInStateBefore;\n\t\t};\n\n\t\t_proto._transitionToState = function _transitionToState(newStateName) {\n\t\t\tif (newStateName === this._activeStateName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._findState(newStateName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar transition = this._findTransition(this._activeStateName, newStateName);\n\n\t\t\tif (!transition) {\n\t\t\t\tthis._animEvaluator.removeClips();\n\n\t\t\t\ttransition = new AnimTransition(this, null, newStateName, 0, 0);\n\t\t\t}\n\n\t\t\tthis._updateStateFromTransition(transition);\n\t\t};\n\n\t\t_proto.assignAnimation = function assignAnimation(pathString, animTrack) {\n\t\t\tvar path = pathString.split('.');\n\n\t\t\tvar state = this._findState(path[0]);\n\n\t\t\tif (!state) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.addAnimation(path, animTrack);\n\n\t\t\tif (!this._playing && this._activate && this.playable) {\n\t\t\t\tthis.play();\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeNodeAnimations = function removeNodeAnimations(nodeName) {\n\t\t\tvar state = this._findState(nodeName);\n\n\t\t\tif (!state) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.animations = [];\n\t\t};\n\n\t\t_proto.play = function play(stateName) {\n\t\t\tif (stateName) {\n\t\t\t\tthis._transitionToState(stateName);\n\t\t\t}\n\n\t\t\tthis._playing = true;\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tthis._playing = false;\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis._previousStateName = null;\n\t\t\tthis._activeStateName = ANIM_STATE_START;\n\t\t\tthis._playing = false;\n\t\t\tthis._currTransitionTime = 1.0;\n\t\t\tthis._totalTransitionTime = 1.0;\n\t\t\tthis._isTransitioning = false;\n\t\t\tthis._timeInState = 0;\n\t\t\tthis._timeInStateBefore = 0;\n\n\t\t\tthis._animEvaluator.removeClips();\n\t\t};\n\n\t\t_proto.update = function update(dt) {\n\t\t\tif (!this._playing) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar state;\n\t\t\tvar animation;\n\t\t\tvar clip;\n\t\t\tthis._timeInStateBefore = this._timeInState;\n\t\t\tthis._timeInState += dt;\n\n\t\t\tvar transition = this._findTransition(this._activeStateName);\n\n\t\t\tif (transition) this._updateStateFromTransition(transition);\n\n\t\t\tif (this._isTransitioning) {\n\t\t\t\tthis._currTransitionTime += dt;\n\n\t\t\t\tif (this._currTransitionTime <= this._totalTransitionTime) {\n\t\t\t\t\tvar interpolatedTime = this._currTransitionTime / this._totalTransitionTime;\n\n\t\t\t\t\tfor (i = 0; i < this._transitionPreviousStates.length; i++) {\n\t\t\t\t\t\tstate = this._findState(this._transitionPreviousStates[i].name);\n\t\t\t\t\t\tvar stateWeight = this._transitionPreviousStates[i].weight;\n\n\t\t\t\t\t\tfor (j = 0; j < state.animations.length; j++) {\n\t\t\t\t\t\t\tanimation = state.animations[j];\n\t\t\t\t\t\t\tclip = this._animEvaluator.findClip(animation.name + '.previous.' + i);\n\n\t\t\t\t\t\t\tif (clip) {\n\t\t\t\t\t\t\t\tclip.blendWeight = (1.0 - interpolatedTime) * animation.normalizedWeight * stateWeight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = this.activeState;\n\n\t\t\t\t\tfor (i = 0; i < state.animations.length; i++) {\n\t\t\t\t\t\tanimation = state.animations[i];\n\t\t\t\t\t\tthis._animEvaluator.findClip(animation.name).blendWeight = interpolatedTime * animation.normalizedWeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._isTransitioning = false;\n\t\t\t\t\tvar activeClips = this.activeStateAnimations.length;\n\t\t\t\t\tvar totalClips = this._animEvaluator.clips.length;\n\n\t\t\t\t\tfor (i = 0; i < totalClips - activeClips; i++) {\n\t\t\t\t\t\tthis._animEvaluator.removeClip(0);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._transitionPreviousStates = [];\n\t\t\t\t\tstate = this.activeState;\n\n\t\t\t\t\tfor (i = 0; i < state.animations.length; i++) {\n\t\t\t\t\t\tanimation = state.animations[i];\n\t\t\t\t\t\tclip = this._animEvaluator.findClip(animation.name);\n\n\t\t\t\t\t\tif (clip) {\n\t\t\t\t\t\t\tclip.blendWeight = animation.normalizedWeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.activeState._blendTree.constructor === AnimBlendTree) {\n\t\t\t\t\tstate = this.activeState;\n\n\t\t\t\t\tfor (i = 0; i < state.animations.length; i++) {\n\t\t\t\t\t\tanimation = state.animations[i];\n\t\t\t\t\t\tclip = this._animEvaluator.findClip(animation.name);\n\n\t\t\t\t\t\tif (clip) {\n\t\t\t\t\t\t\tclip.blendWeight = animation.normalizedWeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._animEvaluator.update(dt);\n\t\t};\n\n\t\t_proto.findParameter = function findParameter(name) {\n\t\t\treturn this._parameters[name];\n\t\t};\n\n\t\t_createClass(AnimController, [{\n\t\t\tkey: \"animEvaluator\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._animEvaluator;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeState\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._findState(this._activeStateName);\n\t\t\t},\n\t\t\tset: function set(stateName) {\n\t\t\t\tthis._activeStateName = stateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateName\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._activeStateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateAnimations\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.activeState.animations;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"previousState\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._findState(this._previousStateName);\n\t\t\t},\n\t\t\tset: function set(stateName) {\n\t\t\t\tthis._previousStateName = stateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"previousStateName\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._previousStateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playable\",\n\t\t\tget: function get() {\n\t\t\t\tvar playable = true;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < this._stateNames.length; i++) {\n\t\t\t\t\tif (!this._states[this._stateNames[i]].playable) {\n\t\t\t\t\t\tplayable = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn playable;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playing\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._playing;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._playing = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateProgress\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._getActiveStateProgressForTime(this._timeInState);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateDuration\",\n\t\t\tget: function get() {\n\t\t\t\tif (this.activeStateName === ANIM_STATE_START || this.activeStateName === ANIM_STATE_END) return 0.0;\n\t\t\t\tvar maxDuration = 0.0;\n\n\t\t\t\tfor (var i = 0; i < this.activeStateAnimations.length; i++) {\n\t\t\t\t\tvar activeClip = this._animEvaluator.findClip(this.activeStateAnimations[i].name);\n\n\t\t\t\t\tmaxDuration = Math.max(maxDuration, activeClip.track.duration);\n\t\t\t\t}\n\n\t\t\t\treturn maxDuration;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateCurrentTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._timeInState;\n\t\t\t},\n\t\t\tset: function set(time) {\n\t\t\t\tthis._timeInStateBefore = time;\n\t\t\t\tthis._timeInState = time;\n\n\t\t\t\tfor (var i = 0; i < this.activeStateAnimations.length; i++) {\n\t\t\t\t\tvar clip = this.animEvaluator.findClip(this.activeStateAnimations[i].name);\n\n\t\t\t\t\tif (clip) {\n\t\t\t\t\t\tclip.time = time;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"transitioning\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._isTransitioning;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"transitionProgress\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._currTransitionTime / this._totalTransitionTime;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"states\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._stateNames;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimController;\n\t}();\n\n\tvar v2 = new Vec2();\n\tvar v3 = new Vec3();\n\tvar v4 = new Vec4();\n\tvar c = new Color();\n\tvar q = new Quat();\n\n\tvar AnimComponentBinder = function (_DefaultAnimBinder) {\n\t\t_inheritsLoose(AnimComponentBinder, _DefaultAnimBinder);\n\n\t\tfunction AnimComponentBinder(animComponent, graph) {\n\t\t\tvar _this;\n\n\t\t\t_this = _DefaultAnimBinder.call(this, graph) || this;\n\t\t\t_this.animComponent = animComponent;\n\t\t\treturn _this;\n\t\t}\n\n\t\tAnimComponentBinder._packFloat = function _packFloat(values) {\n\t\t\treturn values[0];\n\t\t};\n\n\t\tAnimComponentBinder._packBoolean = function _packBoolean(values) {\n\t\t\treturn !!values[0];\n\t\t};\n\n\t\tAnimComponentBinder._packVec2 = function _packVec2(values) {\n\t\t\tv2.x = values[0];\n\t\t\tv2.y = values[1];\n\t\t\treturn v2;\n\t\t};\n\n\t\tAnimComponentBinder._packVec3 = function _packVec3(values) {\n\t\t\tv3.x = values[0];\n\t\t\tv3.y = values[1];\n\t\t\tv3.z = values[2];\n\t\t\treturn v3;\n\t\t};\n\n\t\tAnimComponentBinder._packVec4 = function _packVec4(values) {\n\t\t\tv4.x = values[0];\n\t\t\tv4.y = values[1];\n\t\t\tv4.z = values[2];\n\t\t\tv4.w = values[3];\n\t\t\treturn v4;\n\t\t};\n\n\t\tAnimComponentBinder._packColor = function _packColor(values) {\n\t\t\tc.r = values[0];\n\t\t\tc.g = values[1];\n\t\t\tc.b = values[2];\n\t\t\tc.a = values[3];\n\t\t\treturn c;\n\t\t};\n\n\t\tAnimComponentBinder._packQuat = function _packQuat(values) {\n\t\t\tq.x = values[0];\n\t\t\tq.y = values[1];\n\t\t\tq.z = values[2];\n\t\t\tq.w = values[3];\n\t\t\treturn q;\n\t\t};\n\n\t\tvar _proto = AnimComponentBinder.prototype;\n\n\t\t_proto.resolve = function resolve(path) {\n\t\t\tvar propertyLocation = AnimBinder.decode(path);\n\n\t\t\tvar entity = this._getEntityFromHierarchy(propertyLocation.entityPath);\n\n\t\t\tif (!entity) return null;\n\t\t\tvar propertyComponent;\n\n\t\t\tswitch (propertyLocation.component) {\n\t\t\t\tcase 'entity':\n\t\t\t\t\tpropertyComponent = entity;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'graph':\n\t\t\t\t\tif (entity.model && entity.model.model && entity.model.model.graph) {\n\t\t\t\t\t\tpropertyComponent = pc.app.root.findByPath(entity.model.model.graph.path + \"/\" + propertyLocation.entityPath[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!propertyComponent) {\n\t\t\t\t\t\tvar entityPath = AnimBinder.splitPath(propertyLocation.entityPath[0], '/');\n\t\t\t\t\t\tpropertyComponent = this.nodes[entityPath[entityPath.length - 1] || \"\"];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!propertyComponent) return null;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tpropertyComponent = entity.findComponent(propertyLocation.component);\n\t\t\t\t\tif (!propertyComponent) return null;\n\t\t\t}\n\n\t\t\treturn this._createAnimTargetForProperty(propertyComponent, propertyLocation.propertyPath);\n\t\t};\n\n\t\t_proto.update = function update(deltaTime) {\n\t\t\tvar activeNodes = this.activeNodes;\n\n\t\t\tif (activeNodes) {\n\t\t\t\tfor (var i = 0; i < activeNodes.length; i++) {\n\t\t\t\t\tactiveNodes[i]._dirtifyLocal();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._getEntityFromHierarchy = function _getEntityFromHierarchy(entityHierarchy) {\n\t\t\tif (!this.animComponent.entity.name === entityHierarchy[0]) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar currEntity = this.animComponent.entity;\n\n\t\t\tif (entityHierarchy.length === 1) {\n\t\t\t\treturn currEntity;\n\t\t\t}\n\n\t\t\treturn currEntity._parent.findByPath(entityHierarchy.join('/'));\n\t\t};\n\n\t\t_proto._resolvePath = function _resolvePath(object, path, resolveLeaf) {\n\t\t\tvar steps = path.length - (resolveLeaf ? 0 : 1);\n\n\t\t\tfor (var i = 0; i < steps; i++) {\n\t\t\t\tobject = object[path[i]];\n\t\t\t}\n\n\t\t\treturn object;\n\t\t};\n\n\t\t_proto._setter = function _setter(object, path, packFunc) {\n\t\t\tvar obj = this._resolvePath(object, path);\n\n\t\t\tvar key = path[path.length - 1];\n\t\t\tvar setterFunc = \"set\" + key.substring(0, 1).toUpperCase() + key.substring(1);\n\n\t\t\tif (obj[setterFunc]) {\n\t\t\t\tvar func = obj[setterFunc].bind(obj);\n\t\t\t\treturn function (values) {\n\t\t\t\t\tfunc(packFunc(values));\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar prop = obj[key];\n\n\t\t\tif (typeof prop === 'object' && prop.hasOwnProperty('copy')) {\n\t\t\t\treturn function (values) {\n\t\t\t\t\tprop.copy(packFunc(values));\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ([Vec2, Vec3, Vec4, Color, Quat].indexOf(obj.constructor) !== -1 && path.length > 1) {\n\t\t\t\tvar parent = path.length > 2 ? this._resolvePath(object, path.slice(0, -1)) : object;\n\t\t\t\tvar objKey = path[path.length - 2];\n\t\t\t\treturn function (values) {\n\t\t\t\t\tobj[key] = packFunc(values);\n\t\t\t\t\tparent[objKey] = obj;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function (values) {\n\t\t\t\tobj[key] = packFunc(values);\n\t\t\t};\n\t\t};\n\n\t\t_proto._createAnimTargetForProperty = function _createAnimTargetForProperty(propertyComponent, propertyHierarchy) {\n\t\t\tif (this.handlers && propertyHierarchy[0] === 'weights') {\n\t\t\t\treturn this.handlers.weights(propertyComponent);\n\t\t\t} else if (this.handlers && propertyHierarchy[0] === 'material' && propertyHierarchy.length === 2) {\n\t\t\t\tvar materialPropertyName = propertyHierarchy[1];\n\n\t\t\t\tif (materialPropertyName.indexOf('Map') === materialPropertyName.length - 3) {\n\t\t\t\t\treturn this.handlers.materialTexture(propertyComponent, materialPropertyName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar property = this._resolvePath(propertyComponent, propertyHierarchy, true);\n\n\t\t\tif (typeof property === 'undefined') return null;\n\t\t\tvar setter;\n\t\t\tvar animDataType;\n\t\t\tvar animDataComponents;\n\n\t\t\tif (typeof property === 'number') {\n\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packFloat);\n\t\t\t\tanimDataType = 'vector';\n\t\t\t\tanimDataComponents = 1;\n\t\t\t} else if (typeof property === 'boolean') {\n\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packBoolean);\n\t\t\t\tanimDataType = 'vector';\n\t\t\t\tanimDataComponents = 1;\n\t\t\t} else if (typeof property === 'object') {\n\t\t\t\tswitch (property.constructor) {\n\t\t\t\t\tcase Vec2:\n\t\t\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packVec2);\n\t\t\t\t\t\tanimDataType = 'vector';\n\t\t\t\t\t\tanimDataComponents = 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase Vec3:\n\t\t\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packVec3);\n\t\t\t\t\t\tanimDataType = 'vector';\n\t\t\t\t\t\tanimDataComponents = 3;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase Vec4:\n\t\t\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packVec4);\n\t\t\t\t\t\tanimDataType = 'vector';\n\t\t\t\t\t\tanimDataComponents = 4;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase Color:\n\t\t\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packColor);\n\t\t\t\t\t\tanimDataType = 'vector';\n\t\t\t\t\t\tanimDataComponents = 4;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase Quat:\n\t\t\t\t\t\tsetter = this._setter(propertyComponent, propertyHierarchy, AnimComponentBinder._packQuat);\n\t\t\t\t\t\tanimDataType = 'quaternion';\n\t\t\t\t\t\tanimDataComponents = 4;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (propertyHierarchy.indexOf('material') !== -1) {\n\t\t\t\treturn new AnimTarget(function (values) {\n\t\t\t\t\tsetter(values);\n\t\t\t\t\tpropertyComponent.material.update();\n\t\t\t\t}, animDataType, animDataComponents);\n\t\t\t}\n\n\t\t\treturn new AnimTarget(setter, animDataType, animDataComponents);\n\t\t};\n\n\t\treturn AnimComponentBinder;\n\t}(DefaultAnimBinder);\n\n\tvar AnimComponentLayer = function () {\n\t\tfunction AnimComponentLayer(name, controller, component) {\n\t\t\tthis._name = name;\n\t\t\tthis._controller = controller;\n\t\t\tthis._component = component;\n\t\t}\n\n\t\tvar _proto = AnimComponentLayer.prototype;\n\n\t\t_proto.play = function play(name) {\n\t\t\tthis._controller.play(name);\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tthis._controller.pause();\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis._controller.reset();\n\t\t};\n\n\t\t_proto.update = function update(dt) {\n\t\t\tthis._controller.update(dt);\n\t\t};\n\n\t\t_proto.assignAnimation = function assignAnimation(nodeName, animTrack) {\n\t\t\tif (animTrack.constructor !== AnimTrack) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._controller.assignAnimation(nodeName, animTrack);\n\n\t\t\tif (this._component.activate && this._component.playable) {\n\t\t\t\tthis._component.playing = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeNodeAnimations = function removeNodeAnimations(nodeName) {\n\t\t\tthis._controller.removeNodeAnimations(nodeName);\n\n\t\t\tthis._component.playing = false;\n\t\t};\n\n\t\t_createClass(AnimComponentLayer, [{\n\t\t\tkey: \"name\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playing\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.playing;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._controller.playing = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playable\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.playable;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeState\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.activeStateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"previousState\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.previousStateName;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateProgress\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.activeStateProgress;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateDuration\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.activeStateDuration;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"activeStateCurrentTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.activeStateCurrentTime;\n\t\t\t},\n\t\t\tset: function set(time) {\n\t\t\t\tthis._controller.activeStateCurrentTime = time;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"transitioning\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.transitioning;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"transitionProgress\",\n\t\t\tget: function get() {\n\t\t\t\tif (this.transitioning) {\n\t\t\t\t\treturn this._controller.transitionProgress;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"states\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._controller.states;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimComponentLayer;\n\t}();\n\n\tvar AnimComponent = function (_Component) {\n\t\t_inheritsLoose(AnimComponent, _Component);\n\n\t\tfunction AnimComponent(system, entity) {\n\t\t\treturn _Component.call(this, system, entity) || this;\n\t\t}\n\n\t\tvar _proto = AnimComponent.prototype;\n\n\t\t_proto.loadStateGraph = function loadStateGraph(stateGraph) {\n\t\t\tvar i;\n\t\t\tvar data = this.data;\n\t\t\tdata.stateGraph = stateGraph;\n\t\t\tdata.parameters = {};\n\t\t\tvar paramKeys = Object.keys(stateGraph.parameters);\n\n\t\t\tfor (i = 0; i < paramKeys.length; i++) {\n\t\t\t\tvar paramKey = paramKeys[i];\n\t\t\t\tdata.parameters[paramKey] = {\n\t\t\t\t\ttype: stateGraph.parameters[paramKey].type,\n\t\t\t\t\tvalue: stateGraph.parameters[paramKey].value\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdata.layers = [];\n\t\t\tvar graph;\n\n\t\t\tif (this.entity.model) {\n\t\t\t\tvar m = this.entity.model.model;\n\n\t\t\t\tif (m) {\n\t\t\t\t\tgraph = m.getGraph();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgraph = this.entity;\n\t\t\t}\n\n\t\t\tfunction addLayer(name, states, transitions, order) {\n\t\t\t\tvar animBinder = new AnimComponentBinder(this, graph);\n\t\t\t\tvar animEvaluator = new AnimEvaluator(animBinder);\n\t\t\t\tvar controller = new AnimController(animEvaluator, states, transitions, data.parameters, data.activate);\n\t\t\t\tdata.layers.push(new AnimComponentLayer(name, controller, this));\n\t\t\t\tdata.layerIndices[name] = order;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < stateGraph.layers.length; i++) {\n\t\t\t\tvar layer = stateGraph.layers[i];\n\t\t\t\taddLayer.bind(this)(layer.name, layer.states, layer.transitions, i);\n\t\t\t}\n\n\t\t\tthis.setupAnimationAssets();\n\t\t};\n\n\t\t_proto.setupAnimationAssets = function setupAnimationAssets() {\n\t\t\tfor (var i = 0; i < this.data.layers.length; i++) {\n\t\t\t\tvar layer = this.data.layers[i];\n\t\t\t\tvar layerName = layer.name;\n\n\t\t\t\tfor (var j = 0; j < layer.states.length; j++) {\n\t\t\t\t\tvar stateName = layer.states[j];\n\n\t\t\t\t\tif (stateName !== ANIM_STATE_START && stateName !== ANIM_STATE_END && stateName !== ANIM_STATE_ANY) {\n\t\t\t\t\t\tvar stateKey = layerName + ':' + stateName;\n\n\t\t\t\t\t\tif (!this.data.animationAssets[stateKey]) {\n\t\t\t\t\t\t\tthis.data.animationAssets[stateKey] = {\n\t\t\t\t\t\t\t\tasset: null\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loadAnimationAssets();\n\t\t};\n\n\t\t_proto.loadAnimationAssets = function loadAnimationAssets() {\n\t\t\tfor (var i = 0; i < this.data.layers.length; i++) {\n\t\t\t\tvar layer = this.data.layers[i];\n\n\t\t\t\tfor (var j = 0; j < layer.states.length; j++) {\n\t\t\t\t\tvar stateName = layer.states[j];\n\t\t\t\t\tvar animationAsset = this.data.animationAssets[layer.name + ':' + stateName];\n\n\t\t\t\t\tif (!animationAsset || !animationAsset.asset) {\n\t\t\t\t\t\tthis.removeNodeAnimations(stateName, layer.name);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar assetId = animationAsset.asset;\n\t\t\t\t\tvar asset = this.system.app.assets.get(assetId);\n\n\t\t\t\t\tif (asset) {\n\t\t\t\t\t\tif (asset.resource) {\n\t\t\t\t\t\t\tthis.assignAnimation(stateName, asset.resource, layer.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tasset.once('load', function (layerName, stateName) {\n\t\t\t\t\t\t\t\treturn function (asset) {\n\t\t\t\t\t\t\t\t\tthis.assignAnimation(stateName, asset.resource, layerName);\n\t\t\t\t\t\t\t\t}.bind(this);\n\t\t\t\t\t\t\t}.bind(this)(layer.name, stateName));\n\t\t\t\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeStateGraph = function removeStateGraph() {\n\t\t\tthis.data.stateGraph = null;\n\t\t\tthis.data.stateGraphAsset = null;\n\t\t\tthis.data.animationAssets = {};\n\t\t\tthis.data.layers = [];\n\t\t\tthis.data.layerIndices = {};\n\t\t\tthis.data.parameters = {};\n\t\t\tthis.data.playing = false;\n\t\t};\n\n\t\t_proto.resetStateGraph = function resetStateGraph() {\n\t\t\tif (this.stateGraphAsset) {\n\t\t\t\tvar stateGraph = this.system.app.assets.get(this.stateGraphAsset).resource;\n\t\t\t\tthis.loadStateGraph(stateGraph);\n\t\t\t} else {\n\t\t\t\tthis.removeStateGraph();\n\t\t\t}\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis.data.parameters = Object.assign({}, this.data.stateGraph.parameters);\n\n\t\t\tfor (var i = 0; i < this.data.layers.length; i++) {\n\t\t\t\tvar layerPlaying = this.data.layers[i].playing;\n\t\t\t\tthis.data.layers[i].reset();\n\t\t\t\tthis.data.layers[i].playing = layerPlaying;\n\t\t\t}\n\t\t};\n\n\t\t_proto.findAnimationLayer = function findAnimationLayer(layerName) {\n\t\t\tvar layerIndex = this.data.layerIndices[layerName];\n\t\t\treturn this.data.layers[layerIndex] || null;\n\t\t};\n\n\t\t_proto.assignAnimation = function assignAnimation(nodeName, animTrack, layerName) {\n\t\t\tif (!this.data.stateGraph) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar layer = layerName ? this.findAnimationLayer(layerName) : this.baseLayer;\n\n\t\t\tif (!layer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayer.assignAnimation(nodeName, animTrack);\n\t\t};\n\n\t\t_proto.removeNodeAnimations = function removeNodeAnimations(nodeName, layerName) {\n\t\t\tvar layer = layerName ? this.findAnimationLayer(layerName) : this.baseLayer;\n\n\t\t\tif (!layer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayer.removeNodeAnimations(nodeName);\n\t\t};\n\n\t\t_proto.getParameterValue = function getParameterValue(name, type) {\n\t\t\tvar param = this.data.parameters[name];\n\n\t\t\tif (param && param.type === type) {\n\t\t\t\treturn param.value;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setParameterValue = function setParameterValue(name, type, value) {\n\t\t\tvar param = this.data.parameters[name];\n\n\t\t\tif (param && param.type === type) {\n\t\t\t\tparam.value = value;\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getFloat = function getFloat(name) {\n\t\t\treturn this.getParameterValue(name, ANIM_PARAMETER_FLOAT);\n\t\t};\n\n\t\t_proto.setFloat = function setFloat(name, value) {\n\t\t\tthis.setParameterValue(name, ANIM_PARAMETER_FLOAT, value);\n\t\t};\n\n\t\t_proto.getInteger = function getInteger(name) {\n\t\t\treturn this.getParameterValue(name, ANIM_PARAMETER_INTEGER);\n\t\t};\n\n\t\t_proto.setInteger = function setInteger(name, value) {\n\t\t\tif (typeof value === 'number' && value % 1 === 0) {\n\t\t\t\tthis.setParameterValue(name, ANIM_PARAMETER_INTEGER, value);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getBoolean = function getBoolean(name) {\n\t\t\treturn this.getParameterValue(name, ANIM_PARAMETER_BOOLEAN);\n\t\t};\n\n\t\t_proto.setBoolean = function setBoolean(name, value) {\n\t\t\tthis.setParameterValue(name, ANIM_PARAMETER_BOOLEAN, !!value);\n\t\t};\n\n\t\t_proto.getTrigger = function getTrigger(name) {\n\t\t\treturn this.getParameterValue(name, ANIM_PARAMETER_TRIGGER);\n\t\t};\n\n\t\t_proto.setTrigger = function setTrigger(name) {\n\t\t\tthis.setParameterValue(name, ANIM_PARAMETER_TRIGGER, true);\n\t\t};\n\n\t\t_proto.resetTrigger = function resetTrigger(name) {\n\t\t\tthis.setParameterValue(name, ANIM_PARAMETER_TRIGGER, false);\n\t\t};\n\n\t\t_createClass(AnimComponent, [{\n\t\t\tkey: \"stateGraphAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.data.stateGraphAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === null) {\n\t\t\t\t\tthis.removeStateGraph();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar _id;\n\n\t\t\t\tvar _asset;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t\t_asset = this.system.app.assets.get(_id);\n\n\t\t\t\t\tif (!_asset) {\n\t\t\t\t\t\tthis.system.app.assets.add(value);\n\t\t\t\t\t\t_asset = this.system.app.assets.get(_id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_id = value;\n\t\t\t\t\t_asset = this.system.app.assets.get(_id);\n\t\t\t\t}\n\n\t\t\t\tif (!_asset || this.data.stateGraphAsset === _id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (_asset.resource) {\n\t\t\t\t\tthis.data.stateGraph = _asset.resource;\n\t\t\t\t\tthis.loadStateGraph(this.data.stateGraph);\n\n\t\t\t\t\t_asset.on('change', function (asset) {\n\t\t\t\t\t\tthis.data.stateGraph = new AnimStateGraph(asset._data);\n\t\t\t\t\t\tthis.loadStateGraph(this.data.stateGraph);\n\t\t\t\t\t}.bind(this));\n\t\t\t\t} else {\n\t\t\t\t\t_asset.once('load', function (asset) {\n\t\t\t\t\t\tthis.data.stateGraph = asset.resource;\n\t\t\t\t\t\tthis.loadStateGraph(this.data.stateGraph);\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t_asset.on('change', function (asset) {\n\t\t\t\t\t\tthis.data.stateGraph = new AnimStateGraph(asset._data);\n\t\t\t\t\t\tthis.loadStateGraph(this.data.stateGraph);\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\tthis.system.app.assets.load(_asset);\n\t\t\t\t}\n\n\t\t\t\tthis.data.stateGraphAsset = _id;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"animationAssets\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.data.animationAssets;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.data.animationAssets = value;\n\t\t\t\tthis.loadAnimationAssets();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"playable\",\n\t\t\tget: function get() {\n\t\t\t\tfor (var i = 0; i < this.data.layers.length; i++) {\n\t\t\t\t\tif (!this.data.layers[i].playable) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"baseLayer\",\n\t\t\tget: function get() {\n\t\t\t\tif (this.data.layers.length > 0) {\n\t\t\t\t\treturn this.data.layers[0];\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn AnimComponent;\n\t}(Component);\n\n\tvar AnimComponentData = function AnimComponentData() {\n\t\tthis.stateGraphAsset = null;\n\t\tthis.animationAssets = {};\n\t\tthis.speed = 1.0;\n\t\tthis.activate = true;\n\t\tthis.enabled = true;\n\t\tthis.playing = false;\n\t\tthis.stateGraph = null;\n\t\tthis.layers = [];\n\t\tthis.layerIndices = {};\n\t\tthis.parameters = {};\n\t};\n\n\tvar _schema$1 = ['enabled', 'speed', 'activate', 'playing'];\n\n\tvar AnimComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(AnimComponentSystem, _ComponentSystem);\n\n\t\tfunction AnimComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'anim';\n\t\t\t_this.ComponentType = AnimComponent;\n\t\t\t_this.DataType = AnimComponentData;\n\t\t\t_this.schema = _schema$1;\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('animationUpdate', _this.onAnimationUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AnimComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['activate', 'enabled', 'speed', 'playing'];\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\n\t\t\tif (data.stateGraphAsset) {\n\t\t\t\tcomponent.stateGraphAsset = data.stateGraphAsset;\n\t\t\t}\n\n\t\t\tif (data.animationAssets) {\n\t\t\t\tcomponent.animationAssets = Object.assign(component.data.animationAssets, data.animationAssets);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAnimationUpdate = function onAnimationUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components.hasOwnProperty(id)) {\n\t\t\t\t\tvar component = components[id];\n\t\t\t\t\tvar componentData = component.data;\n\n\t\t\t\t\tif (componentData.enabled && component.entity.enabled && componentData.playing) {\n\t\t\t\t\t\tfor (var i = 0; i < componentData.layers.length; i++) {\n\t\t\t\t\t\t\tcomponentData.layers[i].update(dt * componentData.speed);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn AnimComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(AnimComponent.prototype, _schema$1);\n\n\tvar AudioListenerComponent = function (_Component) {\n\t\t_inheritsLoose(AudioListenerComponent, _Component);\n\n\t\tfunction AudioListenerComponent(system, entity) {\n\t\t\treturn _Component.call(this, system, entity) || this;\n\t\t}\n\n\t\tvar _proto = AudioListenerComponent.prototype;\n\n\t\t_proto.setCurrentListener = function setCurrentListener() {\n\t\t\tif (this.enabled && this.entity.audiolistener && this.entity.enabled) {\n\t\t\t\tthis.system.current = this.entity;\n\t\t\t\tvar position = this.system.current.getPosition();\n\t\t\t\tthis.system.manager.listener.setPosition(position);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis.setCurrentListener();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tif (this.system.current === this.entity) {\n\t\t\t\tthis.system.current = null;\n\t\t\t}\n\t\t};\n\n\t\treturn AudioListenerComponent;\n\t}(Component);\n\n\tvar AudioListenerComponentData = function AudioListenerComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$2 = ['enabled'];\n\n\tvar AudioListenerComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(AudioListenerComponentSystem, _ComponentSystem);\n\n\t\tfunction AudioListenerComponentSystem(app, manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = \"audiolistener\";\n\t\t\t_this.ComponentType = AudioListenerComponent;\n\t\t\t_this.DataType = AudioListenerComponentData;\n\t\t\t_this.schema = _schema$2;\n\t\t\t_this.manager = manager;\n\t\t\t_this.current = null;\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AudioListenerComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['enabled'];\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tif (this.current) {\n\t\t\t\tvar position = this.current.getPosition();\n\t\t\t\tthis.manager.listener.setPosition(position);\n\t\t\t\tvar wtm = this.current.getWorldTransform();\n\t\t\t\tthis.manager.listener.setOrientation(wtm);\n\t\t\t}\n\t\t};\n\n\t\treturn AudioListenerComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(AudioListenerComponent.prototype, _schema$2);\n\n\tvar AudioSourceComponent = function (_Component) {\n\t\t_inheritsLoose(AudioSourceComponent, _Component);\n\n\t\tfunction AudioSourceComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\n\t\t\t_this.on(\"set_assets\", _this.onSetAssets, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_loop\", _this.onSetLoop, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_volume\", _this.onSetVolume, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_pitch\", _this.onSetPitch, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_minDistance\", _this.onSetMinDistance, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_maxDistance\", _this.onSetMaxDistance, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_rollOffFactor\", _this.onSetRollOffFactor, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_distanceModel\", _this.onSetDistanceModel, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_3d\", _this.onSet3d, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AudioSourceComponent.prototype;\n\n\t\t_proto.play = function play(name) {\n\t\t\tif (!this.enabled || !this.entity.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.channel) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tvar channel;\n\t\t\tvar componentData = this.data;\n\n\t\t\tif (componentData.sources[name]) {\n\t\t\t\tif (!componentData['3d']) {\n\t\t\t\t\tchannel = this.system.manager.playSound(componentData.sources[name], componentData);\n\t\t\t\t\tcomponentData.currentSource = name;\n\t\t\t\t\tcomponentData.channel = channel;\n\t\t\t\t} else {\n\t\t\t\t\tvar pos = this.entity.getPosition();\n\t\t\t\t\tchannel = this.system.manager.playSound3d(componentData.sources[name], pos, componentData);\n\t\t\t\t\tcomponentData.currentSource = name;\n\t\t\t\t\tcomponentData.channel = channel;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tif (this.channel) {\n\t\t\t\tthis.channel.pause();\n\t\t\t}\n\t\t};\n\n\t\t_proto.unpause = function unpause() {\n\t\t\tif (this.channel && this.channel.paused) {\n\t\t\t\tthis.channel.unpause();\n\t\t\t}\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tif (this.channel) {\n\t\t\t\tthis.channel.stop();\n\t\t\t\tthis.channel = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAssets = function onSetAssets(name, oldValue, newValue) {\n\t\t\tvar newAssets = [];\n\t\t\tvar i,\n\t\t\t\t\tlen = newValue.length;\n\n\t\t\tif (oldValue && oldValue.length) {\n\t\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\t\tif (oldValue[i]) {\n\t\t\t\t\t\tvar asset = this.system.app.assets.get(oldValue[i]);\n\n\t\t\t\t\t\tif (asset) {\n\t\t\t\t\t\t\tasset.off('change', this.onAssetChanged, this);\n\t\t\t\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\n\t\t\t\t\t\t\tif (this.currentSource === asset.name) {\n\t\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (len) {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (oldValue.indexOf(newValue[i]) < 0) {\n\t\t\t\t\t\tif (newValue[i] instanceof Asset) {\n\t\t\t\t\t\t\tnewAssets.push(newValue[i].id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewAssets.push(newValue[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.system._inTools && newAssets.length) {\n\t\t\t\tthis.loadAudioSourceAssets(newAssets);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAssetChanged = function onAssetChanged(asset, attribute, newValue, oldValue) {\n\t\t\tif (attribute === 'resource') {\n\t\t\t\tvar sources = this.data.sources;\n\n\t\t\t\tif (sources) {\n\t\t\t\t\tthis.data.sources[asset.name] = newValue;\n\n\t\t\t\t\tif (this.data.currentSource === asset.name) {\n\t\t\t\t\t\tif (this.channel) {\n\t\t\t\t\t\t\tif (this.channel.paused) {\n\t\t\t\t\t\t\t\tthis.play(asset.name);\n\t\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.play(asset.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAssetRemoved = function onAssetRemoved(asset) {\n\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\n\t\t\tif (this.data.sources[asset.name]) {\n\t\t\t\tdelete this.data.sources[asset.name];\n\n\t\t\t\tif (this.data.currentSource === asset.name) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t\tthis.data.currentSource = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetLoop = function onSetLoop(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel) {\n\t\t\t\t\tthis.channel.setLoop(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetVolume = function onSetVolume(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel) {\n\t\t\t\t\tthis.channel.setVolume(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetPitch = function onSetPitch(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel) {\n\t\t\t\t\tthis.channel.setPitch(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetMaxDistance = function onSetMaxDistance(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel instanceof Channel3d) {\n\t\t\t\t\tthis.channel.setMaxDistance(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetMinDistance = function onSetMinDistance(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel instanceof Channel3d) {\n\t\t\t\t\tthis.channel.setMinDistance(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetRollOffFactor = function onSetRollOffFactor(name, oldValue, newValue) {\n\t\t\tif (oldValue != newValue) {\n\t\t\t\tif (this.channel instanceof Channel3d) {\n\t\t\t\t\tthis.channel.setRollOffFactor(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetDistanceModel = function onSetDistanceModel(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tif (this.channel instanceof Channel3d) {\n\t\t\t\t\tthis.channel.setDistanceModel(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSet3d = function onSet3d(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tif (this.system.initialized && this.currentSource) {\n\t\t\t\t\tvar paused = false;\n\t\t\t\t\tvar suspended = false;\n\n\t\t\t\t\tif (this.channel) {\n\t\t\t\t\t\tpaused = this.channel.paused;\n\t\t\t\t\t\tsuspended = this.channel.suspended;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.play(this.currentSource);\n\n\t\t\t\t\tif (this.channel) {\n\t\t\t\t\t\tthis.channel.paused = paused;\n\t\t\t\t\t\tthis.channel.suspended = suspended;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar assets = this.data.assets;\n\n\t\t\tif (assets) {\n\t\t\t\tvar registry = this.system.app.assets;\n\n\t\t\t\tfor (var i = 0, len = assets.length; i < len; i++) {\n\t\t\t\t\tvar asset = assets[i];\n\t\t\t\t\tif (!(asset instanceof Asset)) asset = registry.get(asset);\n\n\t\t\t\t\tif (asset && !asset.resource) {\n\t\t\t\t\t\tregistry.load(asset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.system.initialized) {\n\t\t\t\tif (this.data.activate && !this.channel) {\n\t\t\t\t\tthis.play(this.currentSource);\n\t\t\t\t} else {\n\t\t\t\t\tthis.unpause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.pause();\n\t\t};\n\n\t\t_proto.loadAudioSourceAssets = function loadAudioSourceAssets(ids) {\n\t\t\tvar self = this;\n\t\t\tvar assets = ids.map(function (id) {\n\t\t\t\treturn this.system.app.assets.get(id);\n\t\t\t}, this);\n\t\t\tvar sources = {};\n\t\t\tvar currentSource = null;\n\t\t\tvar count = assets.length;\n\n\t\t\tvar _error = function _error(e) {\n\t\t\t\tcount--;\n\t\t\t};\n\n\t\t\tvar _done = function () {\n\t\t\t\tthis.data.sources = sources;\n\t\t\t\tthis.data.currentSource = currentSource;\n\n\t\t\t\tif (this.enabled && this.activate && currentSource) {\n\t\t\t\t\tthis.onEnable();\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tassets.forEach(function (asset, index) {\n\t\t\t\tif (asset) {\n\t\t\t\t\tcurrentSource = currentSource || asset.name;\n\t\t\t\t\tasset.off('change', this.onAssetChanged, this);\n\t\t\t\t\tasset.on('change', this.onAssetChanged, this);\n\t\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\t\t\t\t\tasset.on('remove', this.onAssetRemoved, this);\n\t\t\t\t\tasset.off('error', _error, this);\n\t\t\t\t\tasset.on('error', _error, this);\n\t\t\t\t\tasset.ready(function (asset) {\n\t\t\t\t\t\tsources[asset.name] = asset.resource;\n\t\t\t\t\t\tcount--;\n\n\t\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!asset.resource && self.enabled && self.entity.enabled) this.system.app.assets.load(asset);\n\t\t\t\t} else {\n\t\t\t\t\tcount--;\n\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\t_done();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.system.app.assets.on(\"add:\" + ids[index], function (asset) {\n\t\t\t\t\t\tasset.ready(function (asset) {\n\t\t\t\t\t\t\tself.data.sources[asset.name] = asset.resource;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!asset.resource) self.system.app.assets.load(asset);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, this);\n\t\t};\n\n\t\treturn AudioSourceComponent;\n\t}(Component);\n\n\tvar AudioSourceComponentData = function AudioSourceComponentData() {\n\t\tthis.enabled = true;\n\t\tthis.assets = [];\n\t\tthis.activate = true;\n\t\tthis.volume = 1;\n\t\tthis.pitch = 1;\n\t\tthis.loop = false;\n\t\tthis['3d'] = true;\n\t\tthis.minDistance = 1;\n\t\tthis.maxDistance = 10000;\n\t\tthis.rollOffFactor = 1;\n\t\tthis.distanceModel = DISTANCE_INVERSE;\n\t\tthis.paused = true;\n\t\tthis.sources = {};\n\t\tthis.currentSource = null;\n\t\tthis.channel = null;\n\t};\n\n\tvar _schema$3 = ['enabled', 'assets', 'volume', 'pitch', 'loop', 'activate', '3d', 'minDistance', 'maxDistance', 'rollOffFactor', 'distanceModel', 'sources', 'currentSource', 'channel'];\n\n\tvar AudioSourceComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(AudioSourceComponentSystem, _ComponentSystem);\n\n\t\tfunction AudioSourceComponentSystem(app, manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = \"audiosource\";\n\t\t\t_this.ComponentType = AudioSourceComponent;\n\t\t\t_this.DataType = AudioSourceComponentData;\n\t\t\t_this.schema = _schema$3;\n\t\t\t_this.manager = manager;\n\t\t\t_this.initialized = false;\n\t\t\tComponentSystem.bind('initialize', _this.onInitialize, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\n\t\t\t_this.on('remove', _this.onRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AudioSourceComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['activate', 'volume', 'pitch', 'loop', '3d', 'minDistance', 'maxDistance', 'rollOffFactor', 'distanceModel', 'enabled', 'assets'];\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\n\t\t\tcomponent.paused = !(component.enabled && component.activate);\n\t\t};\n\n\t\t_proto.onInitialize = function onInitialize(root) {\n\t\t\tif (root.audiosource && root.enabled && root.audiosource.enabled && root.audiosource.activate) {\n\t\t\t\troot.audiosource.play(root.audiosource.currentSource);\n\t\t\t}\n\n\t\t\tvar children = root._children;\n\t\t\tvar i,\n\t\t\t\t\tlen = children.length;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (children[i] instanceof Entity) {\n\t\t\t\t\tthis.onInitialize(children[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.initialized = true;\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components.hasOwnProperty(id)) {\n\t\t\t\t\tvar component = components[id];\n\t\t\t\t\tvar entity = component.entity;\n\t\t\t\t\tvar componentData = component.data;\n\n\t\t\t\t\tif (componentData.enabled && entity.enabled && componentData.channel instanceof Channel3d) {\n\t\t\t\t\t\tvar pos = entity.getPosition();\n\t\t\t\t\t\tcomponentData.channel.setPosition(pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemove = function onRemove(entity, data) {\n\t\t\tif (data.channel) {\n\t\t\t\tdata.channel.stop();\n\t\t\t\tdata.channel = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setVolume = function setVolume(volume) {\n\t\t\tthis.manager.setVolume(volume);\n\t\t};\n\n\t\treturn AudioSourceComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(AudioSourceComponent.prototype, _schema$3);\n\n\tvar EntityReference = function (_EventHandler) {\n\t\t_inheritsLoose(EntityReference, _EventHandler);\n\n\t\tfunction EntityReference(parentComponent, entityPropertyName, eventConfig) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tif (!parentComponent || !(parentComponent instanceof Component)) {\n\t\t\t\tthrow new Error('The parentComponent argument is required and must be a Component');\n\t\t\t} else if (!entityPropertyName || typeof entityPropertyName !== 'string') {\n\t\t\t\tthrow new Error('The propertyName argument is required and must be a string');\n\t\t\t} else if (eventConfig && typeof eventConfig !== 'object') {\n\t\t\t\tthrow new Error('If provided, the eventConfig argument must be an object');\n\t\t\t}\n\n\t\t\t_this._parentComponent = parentComponent;\n\t\t\t_this._entityPropertyName = entityPropertyName;\n\t\t\t_this._entity = null;\n\t\t\t_this._app = parentComponent.system.app;\n\n\t\t\t_this._configureEventListeners(eventConfig || {}, {\n\t\t\t\t'entity#destroy': _this._onEntityDestroy\n\t\t\t});\n\n\t\t\t_this._toggleLifecycleListeners('on');\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = EntityReference.prototype;\n\n\t\t_proto._configureEventListeners = function _configureEventListeners(externalEventConfig, internalEventConfig) {\n\t\t\tvar externalEventListenerConfigs = this._parseEventListenerConfig(externalEventConfig, 'external', this._parentComponent);\n\n\t\t\tvar internalEventListenerConfigs = this._parseEventListenerConfig(internalEventConfig, 'internal', this);\n\n\t\t\tthis._eventListenerConfigs = externalEventListenerConfigs.concat(internalEventListenerConfigs);\n\t\t\tthis._listenerStatusFlags = {};\n\t\t\tthis._gainListeners = {};\n\t\t\tthis._loseListeners = {};\n\t\t};\n\n\t\t_proto._parseEventListenerConfig = function _parseEventListenerConfig(eventConfig, prefix, scope) {\n\t\t\treturn Object.keys(eventConfig).map(function (listenerDescription, index) {\n\t\t\t\tvar listenerDescriptionParts = listenerDescription.split('#');\n\t\t\t\tvar sourceName = listenerDescriptionParts[0];\n\t\t\t\tvar eventName = listenerDescriptionParts[1];\n\t\t\t\tvar callback = eventConfig[listenerDescription];\n\n\t\t\t\tif (listenerDescriptionParts.length !== 2 || typeof sourceName !== 'string' || sourceName.length === 0 || typeof eventName !== 'string' || eventName.length === 0) {\n\t\t\t\t\tthrow new Error('Invalid event listener description: `' + listenerDescription + '`');\n\t\t\t\t}\n\n\t\t\t\tif (typeof callback !== 'function') {\n\t\t\t\t\tthrow new Error('Invalid or missing callback for event listener `' + listenerDescription + '`');\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tid: prefix + '_' + index + '_' + listenerDescription,\n\t\t\t\t\tsourceName: sourceName,\n\t\t\t\t\teventName: eventName,\n\t\t\t\t\tcallback: callback,\n\t\t\t\t\tscope: scope\n\t\t\t\t};\n\t\t\t}, this);\n\t\t};\n\n\t\t_proto._toggleLifecycleListeners = function _toggleLifecycleListeners(onOrOff) {\n\t\t\tthis._parentComponent[onOrOff]('set_' + this._entityPropertyName, this._onSetEntity, this);\n\n\t\t\tthis._parentComponent.system[onOrOff]('beforeremove', this._onParentComponentRemove, this);\n\n\t\t\tComponentSystem[onOrOff]('postinitialize', this._onPostInitialize, this);\n\n\t\t\tthis._app[onOrOff]('tools:sceneloaded', this._onSceneLoaded, this);\n\n\t\t\tvar allComponentSystems = [];\n\n\t\t\tfor (var i = 0; i < this._eventListenerConfigs.length; ++i) {\n\t\t\t\tvar config = this._eventListenerConfigs[i];\n\t\t\t\tvar componentSystem = this._app.systems[config.sourceName];\n\n\t\t\t\tif (componentSystem) {\n\t\t\t\t\tif (allComponentSystems.indexOf(componentSystem) === -1) {\n\t\t\t\t\t\tallComponentSystems.push(componentSystem);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (componentSystem && config.eventName === 'gain') {\n\t\t\t\t\t\tthis._gainListeners[config.sourceName] = config;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (componentSystem && config.eventName === 'lose') {\n\t\t\t\t\t\tthis._loseListeners[config.sourceName] = config;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < allComponentSystems.length; ++j) {\n\t\t\t\tallComponentSystems[j][onOrOff]('add', this._onComponentAdd, this);\n\t\t\t\tallComponentSystems[j][onOrOff]('beforeremove', this._onComponentRemove, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetEntity = function _onSetEntity(name, oldValue, newValue) {\n\t\t\tif (newValue instanceof Entity) {\n\t\t\t\tthis._updateEntityReference();\n\t\t\t} else {\n\t\t\t\tif (newValue !== null && newValue !== undefined && typeof newValue !== 'string') {\n\t\t\t\t\tconsole.warn(\"Entity field `\" + this._entityPropertyName + \"` was set to unexpected type '\" + typeof newValue + \"'\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (oldValue !== newValue) {\n\t\t\t\t\tthis._updateEntityReference();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onPostInitialize = function _onPostInitialize() {\n\t\t\tthis._updateEntityReference();\n\t\t};\n\n\t\t_proto.onParentComponentEnable = function onParentComponentEnable() {\n\t\t\tif (!this._entity) {\n\t\t\t\tthis._updateEntityReference();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSceneLoaded = function _onSceneLoaded() {\n\t\t\tthis._updateEntityReference();\n\t\t};\n\n\t\t_proto._updateEntityReference = function _updateEntityReference() {\n\t\t\tvar nextEntityGuid = this._parentComponent.data[this._entityPropertyName];\n\t\t\tvar nextEntity;\n\n\t\t\tif (nextEntityGuid instanceof Entity) {\n\t\t\t\tnextEntity = nextEntityGuid;\n\t\t\t\tnextEntityGuid = nextEntity.getGuid();\n\t\t\t\tthis._parentComponent.data[this._entityPropertyName] = nextEntityGuid;\n\t\t\t} else {\n\t\t\t\tvar root = this._parentComponent.system.app.root;\n\n\t\t\t\tvar isOnSceneGraph = this._parentComponent.entity.isDescendantOf(root);\n\n\t\t\t\tnextEntity = isOnSceneGraph && nextEntityGuid ? root.findByGuid(nextEntityGuid) : null;\n\t\t\t}\n\n\t\t\tvar hasChanged = this._entity !== nextEntity;\n\n\t\t\tif (hasChanged) {\n\t\t\t\tif (this._entity) {\n\t\t\t\t\tthis._onBeforeEntityChange();\n\t\t\t\t}\n\n\t\t\t\tthis._entity = nextEntity;\n\n\t\t\t\tif (this._entity) {\n\t\t\t\t\tthis._onAfterEntityChange();\n\t\t\t\t}\n\n\t\t\t\tthis.fire('set:entity', this._entity);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onBeforeEntityChange = function _onBeforeEntityChange() {\n\t\t\tthis._toggleEntityListeners('off');\n\n\t\t\tthis._callAllGainOrLoseListeners(this._loseListeners);\n\t\t};\n\n\t\t_proto._onAfterEntityChange = function _onAfterEntityChange() {\n\t\t\tthis._toggleEntityListeners('on');\n\n\t\t\tthis._callAllGainOrLoseListeners(this._gainListeners);\n\t\t};\n\n\t\t_proto._onComponentAdd = function _onComponentAdd(entity, component) {\n\t\t\tvar componentName = component.system.id;\n\n\t\t\tif (entity === this._entity) {\n\t\t\t\tthis._callGainOrLoseListener(componentName, this._gainListeners);\n\n\t\t\t\tthis._toggleComponentListeners('on', componentName);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onComponentRemove = function _onComponentRemove(entity, component) {\n\t\t\tvar componentName = component.system.id;\n\n\t\t\tif (entity === this._entity) {\n\t\t\t\tthis._callGainOrLoseListener(componentName, this._loseListeners);\n\n\t\t\t\tthis._toggleComponentListeners('off', componentName, true);\n\t\t\t}\n\t\t};\n\n\t\t_proto._callAllGainOrLoseListeners = function _callAllGainOrLoseListeners(listenerMap) {\n\t\t\tfor (var componentName in this._entity.c) {\n\t\t\t\tthis._callGainOrLoseListener(componentName, listenerMap);\n\t\t\t}\n\t\t};\n\n\t\t_proto._callGainOrLoseListener = function _callGainOrLoseListener(componentName, listenerMap) {\n\t\t\tif (this._entity.c.hasOwnProperty(componentName) && listenerMap[componentName]) {\n\t\t\t\tvar config = listenerMap[componentName];\n\t\t\t\tconfig.callback.call(config.scope);\n\t\t\t}\n\t\t};\n\n\t\t_proto._toggleEntityListeners = function _toggleEntityListeners(onOrOff, isDestroying) {\n\t\t\tif (this._entity) {\n\t\t\t\tfor (var i = 0; i < this._eventListenerConfigs.length; ++i) {\n\t\t\t\t\tthis._safeToggleListener(onOrOff, this._eventListenerConfigs[i], isDestroying);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._toggleComponentListeners = function _toggleComponentListeners(onOrOff, componentName, isDestroying) {\n\t\t\tfor (var i = 0; i < this._eventListenerConfigs.length; ++i) {\n\t\t\t\tvar config = this._eventListenerConfigs[i];\n\n\t\t\t\tif (config.sourceName === componentName) {\n\t\t\t\t\tthis._safeToggleListener(onOrOff, config, isDestroying);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._safeToggleListener = function _safeToggleListener(onOrOff, config, isDestroying) {\n\t\t\tvar isAdding = onOrOff === 'on';\n\n\t\t\tif (isAdding && this._listenerStatusFlags[config.id]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar source = this._getEventSource(config.sourceName, isDestroying);\n\n\t\t\tif (source) {\n\t\t\t\tsource[onOrOff](config.eventName, config.callback, config.scope);\n\t\t\t\tthis._listenerStatusFlags[config.id] = isAdding;\n\t\t\t}\n\t\t};\n\n\t\t_proto._getEventSource = function _getEventSource(sourceName, isDestroying) {\n\t\t\tif (sourceName === 'entity') {\n\t\t\t\treturn this._entity;\n\t\t\t}\n\n\t\t\tvar component = this._entity[sourceName];\n\n\t\t\tif (component) {\n\t\t\t\treturn component;\n\t\t\t}\n\n\t\t\tif (!isDestroying) {\n\t\t\t\tconsole.warn('Entity has no component with name ' + sourceName);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._onEntityDestroy = function _onEntityDestroy(entity) {\n\t\t\tif (this._entity === entity) {\n\t\t\t\tthis._toggleEntityListeners('off', true);\n\n\t\t\t\tthis._entity = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onParentComponentRemove = function _onParentComponentRemove(entity, component) {\n\t\t\tif (component === this._parentComponent) {\n\t\t\t\tthis._toggleLifecycleListeners('off');\n\n\t\t\t\tthis._toggleEntityListeners('off', true);\n\t\t\t}\n\t\t};\n\n\t\t_proto.hasComponent = function hasComponent(componentName) {\n\t\t\treturn this._entity && this._entity.c ? !!this._entity.c[componentName] : false;\n\t\t};\n\n\t\t_createClass(EntityReference, [{\n\t\t\tkey: \"entity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._entity;\n\t\t\t}\n\t\t}]);\n\n\t\treturn EntityReference;\n\t}(EventHandler);\n\n\tvar BUTTON_TRANSITION_MODE_TINT = 0;\n\tvar BUTTON_TRANSITION_MODE_SPRITE_CHANGE = 1;\n\n\tvar VisualState = {\n\t\tDEFAULT: 'DEFAULT',\n\t\tHOVER: 'HOVER',\n\t\tPRESSED: 'PRESSED',\n\t\tINACTIVE: 'INACTIVE'\n\t};\n\tvar STATES_TO_TINT_NAMES = {};\n\tSTATES_TO_TINT_NAMES[VisualState.DEFAULT] = '_defaultTint';\n\tSTATES_TO_TINT_NAMES[VisualState.HOVER] = 'hoverTint';\n\tSTATES_TO_TINT_NAMES[VisualState.PRESSED] = 'pressedTint';\n\tSTATES_TO_TINT_NAMES[VisualState.INACTIVE] = 'inactiveTint';\n\tvar STATES_TO_SPRITE_ASSET_NAMES = {};\n\tSTATES_TO_SPRITE_ASSET_NAMES[VisualState.DEFAULT] = '_defaultSpriteAsset';\n\tSTATES_TO_SPRITE_ASSET_NAMES[VisualState.HOVER] = 'hoverSpriteAsset';\n\tSTATES_TO_SPRITE_ASSET_NAMES[VisualState.PRESSED] = 'pressedSpriteAsset';\n\tSTATES_TO_SPRITE_ASSET_NAMES[VisualState.INACTIVE] = 'inactiveSpriteAsset';\n\tvar STATES_TO_SPRITE_FRAME_NAMES = {};\n\tSTATES_TO_SPRITE_FRAME_NAMES[VisualState.DEFAULT] = '_defaultSpriteFrame';\n\tSTATES_TO_SPRITE_FRAME_NAMES[VisualState.HOVER] = 'hoverSpriteFrame';\n\tSTATES_TO_SPRITE_FRAME_NAMES[VisualState.PRESSED] = 'pressedSpriteFrame';\n\tSTATES_TO_SPRITE_FRAME_NAMES[VisualState.INACTIVE] = 'inactiveSpriteFrame';\n\n\tvar ButtonComponent = function (_Component) {\n\t\t_inheritsLoose(ButtonComponent, _Component);\n\n\t\tfunction ButtonComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._visualState = VisualState.DEFAULT;\n\t\t\t_this._isHovering = false;\n\t\t\t_this._hoveringCounter = 0;\n\t\t\t_this._isPressed = false;\n\t\t\t_this._defaultTint = new Color(1, 1, 1, 1);\n\t\t\t_this._defaultSpriteAsset = null;\n\t\t\t_this._defaultSpriteFrame = 0;\n\t\t\t_this._imageReference = new EntityReference(_assertThisInitialized(_this), 'imageEntity', {\n\t\t\t\t'element#gain': _this._onImageElementGain,\n\t\t\t\t'element#lose': _this._onImageElementLose,\n\t\t\t\t'element#set:color': _this._onSetColor,\n\t\t\t\t'element#set:opacity': _this._onSetOpacity,\n\t\t\t\t'element#set:spriteAsset': _this._onSetSpriteAsset,\n\t\t\t\t'element#set:spriteFrame': _this._onSetSpriteFrame\n\t\t\t});\n\n\t\t\t_this._toggleLifecycleListeners('on', system);\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ButtonComponent.prototype;\n\n\t\t_proto._toggleLifecycleListeners = function _toggleLifecycleListeners(onOrOff, system) {\n\t\t\tthis[onOrOff]('set_active', this._onSetActive, this);\n\t\t\tthis[onOrOff]('set_transitionMode', this._onSetTransitionMode, this);\n\t\t\tthis[onOrOff]('set_hoverTint', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_pressedTint', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_inactiveTint', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_hoverSpriteAsset', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_hoverSpriteFrame', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_pressedSpriteAsset', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_pressedSpriteFrame', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_inactiveSpriteAsset', this._onSetTransitionValue, this);\n\t\t\tthis[onOrOff]('set_inactiveSpriteFrame', this._onSetTransitionValue, this);\n\t\t\tsystem.app.systems.element[onOrOff]('add', this._onElementComponentAdd, this);\n\t\t\tsystem.app.systems.element[onOrOff]('beforeremove', this._onElementComponentRemove, this);\n\t\t};\n\n\t\t_proto._onSetActive = function _onSetActive(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tthis._updateVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetTransitionMode = function _onSetTransitionMode(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tthis._cancelTween();\n\n\t\t\t\tthis._resetToDefaultVisualState(oldValue);\n\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetTransitionValue = function _onSetTransitionValue(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementComponentRemove = function _onElementComponentRemove(entity) {\n\t\t\tif (this.entity === entity) {\n\t\t\t\tthis._toggleHitElementListeners('off');\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementComponentAdd = function _onElementComponentAdd(entity) {\n\t\t\tif (this.entity === entity) {\n\t\t\t\tthis._toggleHitElementListeners('on');\n\t\t\t}\n\t\t};\n\n\t\t_proto._onImageElementLose = function _onImageElementLose() {\n\t\t\tthis._cancelTween();\n\n\t\t\tthis._resetToDefaultVisualState(this.transitionMode);\n\t\t};\n\n\t\t_proto._onImageElementGain = function _onImageElementGain() {\n\t\t\tthis._storeDefaultVisualState();\n\n\t\t\tthis._forceReapplyVisualState();\n\t\t};\n\n\t\t_proto._toggleHitElementListeners = function _toggleHitElementListeners(onOrOff) {\n\t\t\tif (this.entity.element) {\n\t\t\t\tvar isAdding = onOrOff === 'on';\n\n\t\t\t\tif (isAdding && this._hasHitElementListeners) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.entity.element[onOrOff]('mouseenter', this._onMouseEnter, this);\n\t\t\t\tthis.entity.element[onOrOff]('mouseleave', this._onMouseLeave, this);\n\t\t\t\tthis.entity.element[onOrOff]('mousedown', this._onMouseDown, this);\n\t\t\t\tthis.entity.element[onOrOff]('mouseup', this._onMouseUp, this);\n\t\t\t\tthis.entity.element[onOrOff]('touchstart', this._onTouchStart, this);\n\t\t\t\tthis.entity.element[onOrOff]('touchend', this._onTouchEnd, this);\n\t\t\t\tthis.entity.element[onOrOff]('touchleave', this._onTouchLeave, this);\n\t\t\t\tthis.entity.element[onOrOff]('touchcancel', this._onTouchCancel, this);\n\t\t\t\tthis.entity.element[onOrOff]('selectstart', this._onSelectStart, this);\n\t\t\t\tthis.entity.element[onOrOff]('selectend', this._onSelectEnd, this);\n\t\t\t\tthis.entity.element[onOrOff]('selectenter', this._onSelectEnter, this);\n\t\t\t\tthis.entity.element[onOrOff]('selectleave', this._onSelectLeave, this);\n\t\t\t\tthis.entity.element[onOrOff]('click', this._onClick, this);\n\t\t\t\tthis._hasHitElementListeners = isAdding;\n\t\t\t}\n\t\t};\n\n\t\t_proto._storeDefaultVisualState = function _storeDefaultVisualState() {\n\t\t\tif (this._imageReference.hasComponent('element')) {\n\t\t\t\tthis._storeDefaultColor(this._imageReference.entity.element.color);\n\n\t\t\t\tthis._storeDefaultOpacity(this._imageReference.entity.element.opacity);\n\n\t\t\t\tthis._storeDefaultSpriteAsset(this._imageReference.entity.element.spriteAsset);\n\n\t\t\t\tthis._storeDefaultSpriteFrame(this._imageReference.entity.element.spriteFrame);\n\t\t\t}\n\t\t};\n\n\t\t_proto._storeDefaultColor = function _storeDefaultColor(color) {\n\t\t\tthis._defaultTint.r = color.r;\n\t\t\tthis._defaultTint.g = color.g;\n\t\t\tthis._defaultTint.b = color.b;\n\t\t};\n\n\t\t_proto._storeDefaultOpacity = function _storeDefaultOpacity(opacity) {\n\t\t\tthis._defaultTint.a = opacity;\n\t\t};\n\n\t\t_proto._storeDefaultSpriteAsset = function _storeDefaultSpriteAsset(spriteAsset) {\n\t\t\tthis._defaultSpriteAsset = spriteAsset;\n\t\t};\n\n\t\t_proto._storeDefaultSpriteFrame = function _storeDefaultSpriteFrame(spriteFrame) {\n\t\t\tthis._defaultSpriteFrame = spriteFrame;\n\t\t};\n\n\t\t_proto._onSetColor = function _onSetColor(color) {\n\t\t\tif (!this._isApplyingTint) {\n\t\t\t\tthis._storeDefaultColor(color);\n\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetOpacity = function _onSetOpacity(opacity) {\n\t\t\tif (!this._isApplyingTint) {\n\t\t\t\tthis._storeDefaultOpacity(opacity);\n\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetSpriteAsset = function _onSetSpriteAsset(spriteAsset) {\n\t\t\tif (!this._isApplyingSprite) {\n\t\t\t\tthis._storeDefaultSpriteAsset(spriteAsset);\n\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetSpriteFrame = function _onSetSpriteFrame(spriteFrame) {\n\t\t\tif (!this._isApplyingSprite) {\n\t\t\t\tthis._storeDefaultSpriteFrame(spriteFrame);\n\n\t\t\t\tthis._forceReapplyVisualState();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMouseEnter = function _onMouseEnter(event) {\n\t\t\tthis._isHovering = true;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('mouseenter', event);\n\t\t};\n\n\t\t_proto._onMouseLeave = function _onMouseLeave(event) {\n\t\t\tthis._isHovering = false;\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('mouseleave', event);\n\t\t};\n\n\t\t_proto._onMouseDown = function _onMouseDown(event) {\n\t\t\tthis._isPressed = true;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('mousedown', event);\n\t\t};\n\n\t\t_proto._onMouseUp = function _onMouseUp(event) {\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('mouseup', event);\n\t\t};\n\n\t\t_proto._onTouchStart = function _onTouchStart(event) {\n\t\t\tthis._isPressed = true;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('touchstart', event);\n\t\t};\n\n\t\t_proto._onTouchEnd = function _onTouchEnd(event) {\n\t\t\tevent.event.preventDefault();\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('touchend', event);\n\t\t};\n\n\t\t_proto._onTouchLeave = function _onTouchLeave(event) {\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('touchleave', event);\n\t\t};\n\n\t\t_proto._onTouchCancel = function _onTouchCancel(event) {\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('touchcancel', event);\n\t\t};\n\n\t\t_proto._onSelectStart = function _onSelectStart(event) {\n\t\t\tthis._isPressed = true;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('selectstart', event);\n\t\t};\n\n\t\t_proto._onSelectEnd = function _onSelectEnd(event) {\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._updateVisualState();\n\n\t\t\tthis._fireIfActive('selectend', event);\n\t\t};\n\n\t\t_proto._onSelectEnter = function _onSelectEnter(event) {\n\t\t\tthis._hoveringCounter++;\n\n\t\t\tif (this._hoveringCounter === 1) {\n\t\t\t\tthis._isHovering = true;\n\n\t\t\t\tthis._updateVisualState();\n\t\t\t}\n\n\t\t\tthis._fireIfActive('selectenter', event);\n\t\t};\n\n\t\t_proto._onSelectLeave = function _onSelectLeave(event) {\n\t\t\tthis._hoveringCounter--;\n\n\t\t\tif (this._hoveringCounter === 0) {\n\t\t\t\tthis._isHovering = false;\n\t\t\t\tthis._isPressed = false;\n\n\t\t\t\tthis._updateVisualState();\n\t\t\t}\n\n\t\t\tthis._fireIfActive('selectleave', event);\n\t\t};\n\n\t\t_proto._onClick = function _onClick(event) {\n\t\t\tthis._fireIfActive('click', event);\n\t\t};\n\n\t\t_proto._fireIfActive = function _fireIfActive(name, event) {\n\t\t\tif (this.data.active) {\n\t\t\t\tthis.fire(name, event);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateVisualState = function _updateVisualState(force) {\n\t\t\tvar oldVisualState = this._visualState;\n\n\t\t\tvar newVisualState = this._determineVisualState();\n\n\t\t\tif ((oldVisualState !== newVisualState || force) && this.enabled) {\n\t\t\t\tthis._visualState = newVisualState;\n\n\t\t\t\tif (oldVisualState === VisualState.HOVER) {\n\t\t\t\t\tthis._fireIfActive('hoverend');\n\t\t\t\t}\n\n\t\t\t\tif (oldVisualState === VisualState.PRESSED) {\n\t\t\t\t\tthis._fireIfActive('pressedend');\n\t\t\t\t}\n\n\t\t\t\tif (newVisualState === VisualState.HOVER) {\n\t\t\t\t\tthis._fireIfActive('hoverstart');\n\t\t\t\t}\n\n\t\t\t\tif (newVisualState === VisualState.PRESSED) {\n\t\t\t\t\tthis._fireIfActive('pressedstart');\n\t\t\t\t}\n\n\t\t\t\tswitch (this.transitionMode) {\n\t\t\t\t\tcase BUTTON_TRANSITION_MODE_TINT:\n\t\t\t\t\t\tvar tintName = STATES_TO_TINT_NAMES[this._visualState];\n\t\t\t\t\t\tvar tintColor = this[tintName];\n\n\t\t\t\t\t\tthis._applyTint(tintColor);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BUTTON_TRANSITION_MODE_SPRITE_CHANGE:\n\t\t\t\t\t\tvar spriteAssetName = STATES_TO_SPRITE_ASSET_NAMES[this._visualState];\n\t\t\t\t\t\tvar spriteFrameName = STATES_TO_SPRITE_FRAME_NAMES[this._visualState];\n\t\t\t\t\t\tvar spriteAsset = this[spriteAssetName];\n\t\t\t\t\t\tvar spriteFrame = this[spriteFrameName];\n\n\t\t\t\t\t\tthis._applySprite(spriteAsset, spriteFrame);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._forceReapplyVisualState = function _forceReapplyVisualState() {\n\t\t\tthis._updateVisualState(true);\n\t\t};\n\n\t\t_proto._resetToDefaultVisualState = function _resetToDefaultVisualState(transitionMode) {\n\t\t\tif (this._imageReference.hasComponent('element')) {\n\t\t\t\tswitch (transitionMode) {\n\t\t\t\t\tcase BUTTON_TRANSITION_MODE_TINT:\n\t\t\t\t\t\tthis._cancelTween();\n\n\t\t\t\t\t\tthis._applyTintImmediately(this._defaultTint);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase BUTTON_TRANSITION_MODE_SPRITE_CHANGE:\n\t\t\t\t\t\tthis._applySprite(this._defaultSpriteAsset, this._defaultSpriteFrame);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._determineVisualState = function _determineVisualState() {\n\t\t\tif (!this.active) {\n\t\t\t\treturn VisualState.INACTIVE;\n\t\t\t} else if (this._isPressed) {\n\t\t\t\treturn VisualState.PRESSED;\n\t\t\t} else if (this._isHovering) {\n\t\t\t\treturn VisualState.HOVER;\n\t\t\t}\n\n\t\t\treturn VisualState.DEFAULT;\n\t\t};\n\n\t\t_proto._applySprite = function _applySprite(spriteAsset, spriteFrame) {\n\t\t\tspriteFrame = spriteFrame || 0;\n\n\t\t\tif (this._imageReference.hasComponent('element')) {\n\t\t\t\tthis._isApplyingSprite = true;\n\t\t\t\tthis._imageReference.entity.element.spriteAsset = spriteAsset;\n\t\t\t\tthis._imageReference.entity.element.spriteFrame = spriteFrame;\n\t\t\t\tthis._isApplyingSprite = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto._applyTint = function _applyTint(tintColor) {\n\t\t\tthis._cancelTween();\n\n\t\t\tif (this.fadeDuration === 0) {\n\t\t\t\tthis._applyTintImmediately(tintColor);\n\t\t\t} else {\n\t\t\t\tthis._applyTintWithTween(tintColor);\n\t\t\t}\n\t\t};\n\n\t\t_proto._applyTintImmediately = function _applyTintImmediately(tintColor) {\n\t\t\tif (this._imageReference.hasComponent('element') && tintColor) {\n\t\t\t\tthis._isApplyingTint = true;\n\t\t\t\tthis._imageReference.entity.element.color = toColor3(tintColor);\n\t\t\t\tthis._imageReference.entity.element.opacity = tintColor.a;\n\t\t\t\tthis._isApplyingTint = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto._applyTintWithTween = function _applyTintWithTween(tintColor) {\n\t\t\tif (this._imageReference.hasComponent('element') && tintColor) {\n\t\t\t\tvar color = this._imageReference.entity.element.color;\n\t\t\t\tvar opacity = this._imageReference.entity.element.opacity;\n\t\t\t\tthis._tweenInfo = {\n\t\t\t\t\tstartTime: now(),\n\t\t\t\t\tfrom: new Color(color.r, color.g, color.b, opacity),\n\t\t\t\t\tto: tintColor.clone(),\n\t\t\t\t\tlerpColor: new Color()\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateTintTween = function _updateTintTween() {\n\t\t\tvar elapsedTime = now() - this._tweenInfo.startTime;\n\n\t\t\tvar elapsedProportion = this.fadeDuration === 0 ? 1 : elapsedTime / this.fadeDuration;\n\t\t\telapsedProportion = math.clamp(elapsedProportion, 0, 1);\n\n\t\t\tif (Math.abs(elapsedProportion - 1) > 1e-5) {\n\t\t\t\tvar lerpColor = this._tweenInfo.lerpColor;\n\t\t\t\tlerpColor.lerp(this._tweenInfo.from, this._tweenInfo.to, elapsedProportion);\n\n\t\t\t\tthis._applyTintImmediately(new Color(lerpColor.r, lerpColor.g, lerpColor.b, lerpColor.a));\n\t\t\t} else {\n\t\t\t\tthis._applyTintImmediately(this._tweenInfo.to);\n\n\t\t\t\tthis._cancelTween();\n\t\t\t}\n\t\t};\n\n\t\t_proto._cancelTween = function _cancelTween() {\n\t\t\tdelete this._tweenInfo;\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate() {\n\t\t\tif (this._tweenInfo) {\n\t\t\t\tthis._updateTintTween();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._isHovering = false;\n\t\t\tthis._hoveringCounter = 0;\n\t\t\tthis._isPressed = false;\n\n\t\t\tthis._imageReference.onParentComponentEnable();\n\n\t\t\tthis._toggleHitElementListeners('on');\n\n\t\t\tthis._forceReapplyVisualState();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._toggleHitElementListeners('off');\n\n\t\t\tthis._resetToDefaultVisualState(this.transitionMode);\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis._toggleLifecycleListeners('off', this.system);\n\n\t\t\tthis.onDisable();\n\t\t};\n\n\t\treturn ButtonComponent;\n\t}(Component);\n\n\tfunction toColor3(color4) {\n\t\treturn new Color(color4.r, color4.g, color4.b);\n\t}\n\n\tvar ButtonComponentData = function ButtonComponentData() {\n\t\tthis.enabled = true;\n\t\tthis.active = true;\n\t\tthis.imageEntity = null;\n\t\tthis.hitPadding = new Vec4();\n\t\tthis.transitionMode = BUTTON_TRANSITION_MODE_TINT;\n\t\tthis.hoverTint = new Color(0.75, 0.75, 0.75);\n\t\tthis.pressedTint = new Color(0.5, 0.5, 0.5);\n\t\tthis.inactiveTint = new Color(0.25, 0.25, 0.25);\n\t\tthis.fadeDuration = 0;\n\t\tthis.hoverSpriteAsset = null;\n\t\tthis.hoverSpriteFrame = 0;\n\t\tthis.pressedSpriteAsset = null;\n\t\tthis.pressedSpriteFrame = 0;\n\t\tthis.inactiveSpriteAsset = null;\n\t\tthis.inactiveSpriteFrame = 0;\n\t};\n\n\tvar _schema$4 = ['enabled', 'active', {\n\t\tname: 'imageEntity',\n\t\ttype: 'entity'\n\t}, {\n\t\tname: 'hitPadding',\n\t\ttype: 'vec4'\n\t}, 'transitionMode', {\n\t\tname: 'hoverTint',\n\t\ttype: 'rgba'\n\t}, {\n\t\tname: 'pressedTint',\n\t\ttype: 'rgba'\n\t}, {\n\t\tname: 'inactiveTint',\n\t\ttype: 'rgba'\n\t}, 'fadeDuration', 'hoverSpriteAsset', 'hoverSpriteFrame', 'pressedSpriteAsset', 'pressedSpriteFrame', 'inactiveSpriteAsset', 'inactiveSpriteFrame'];\n\n\tvar ButtonComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ButtonComponentSystem, _ComponentSystem);\n\n\t\tfunction ButtonComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'button';\n\t\t\t_this.ComponentType = ButtonComponent;\n\t\t\t_this.DataType = ButtonComponentData;\n\t\t\t_this.schema = _schema$4;\n\n\t\t\t_this.on('beforeremove', _this._onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ButtonComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, _schema$4);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tvar entity = components[id].entity;\n\t\t\t\tvar component = entity.button;\n\n\t\t\t\tif (component.enabled && entity.enabled) {\n\t\t\t\t\tcomponent.onUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRemoveComponent = function _onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn ButtonComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ButtonComponent.prototype, _schema$4);\n\n\tvar depthLayer;\n\n\tvar PostEffectQueue = function () {\n\t\tfunction PostEffectQueue(app, camera) {\n\t\t\tvar self = this;\n\t\t\tthis.app = app;\n\t\t\tthis.camera = camera;\n\t\t\tthis.effects = [];\n\t\t\tthis.enabled = false;\n\t\t\tthis.depthTarget = null;\n\t\t\tthis.renderTargetScale = 1;\n\t\t\tthis.resizeTimeout = null;\n\t\t\tthis.resizeLast = 0;\n\n\t\t\tthis._resizeTimeoutCallback = function () {\n\t\t\t\tself.resizeRenderTargets();\n\t\t\t};\n\n\t\t\tcamera.on('set_rect', this.onCameraRectChanged, this);\n\t\t\tthis._origOverrideClear = false;\n\t\t\tthis._origClearColorBuffer = false;\n\t\t\tthis._origDepthColorBuffer = false;\n\t\t\tthis._origStencilColorBuffer = false;\n\t\t}\n\n\t\tvar _proto = PostEffectQueue.prototype;\n\n\t\t_proto._createOffscreenTarget = function _createOffscreenTarget(useDepth, hdr) {\n\t\t\tvar rect = this.camera.rect;\n\t\t\tvar width = Math.floor(rect.z * this.app.graphicsDevice.width * this.renderTargetScale);\n\t\t\tvar height = Math.floor(rect.w * this.app.graphicsDevice.height * this.renderTargetScale);\n\t\t\tvar device = this.app.graphicsDevice;\n\t\t\tvar format = hdr ? device.getHdrFormat() : PIXELFORMAT_R8_G8_B8_A8;\n\t\t\tvar useStencil = this.app.graphicsDevice.supportsStencil;\n\t\t\tvar samples = useDepth ? device.samples : 1;\n\t\t\tvar colorBuffer = new Texture(device, {\n\t\t\t\tformat: format,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t});\n\t\t\tcolorBuffer.name = 'posteffect #' + this.effects.length;\n\t\t\tcolorBuffer.minFilter = FILTER_NEAREST;\n\t\t\tcolorBuffer.magFilter = FILTER_NEAREST;\n\t\t\tcolorBuffer.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\tcolorBuffer.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\treturn new RenderTarget(this.app.graphicsDevice, colorBuffer, {\n\t\t\t\tdepth: useDepth,\n\t\t\t\tstencil: useStencil,\n\t\t\t\tsamples: samples\n\t\t\t});\n\t\t};\n\n\t\t_proto._resizeOffscreenTarget = function _resizeOffscreenTarget(rt) {\n\t\t\tvar rect = this.camera.rect;\n\t\t\tvar width = Math.floor(rect.z * this.app.graphicsDevice.width * this.renderTargetScale);\n\t\t\tvar height = Math.floor(rect.w * this.app.graphicsDevice.height * this.renderTargetScale);\n\t\t\tvar device = this.app.graphicsDevice;\n\t\t\tvar format = rt.colorBuffer.format;\n\n\t\t\trt._colorBuffer.destroy();\n\n\t\t\tvar colorBuffer = new Texture(device, {\n\t\t\t\tformat: format,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t});\n\t\t\tcolorBuffer.name = 'posteffect';\n\t\t\tcolorBuffer.minFilter = FILTER_NEAREST;\n\t\t\tcolorBuffer.magFilter = FILTER_NEAREST;\n\t\t\tcolorBuffer.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\tcolorBuffer.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\trt._colorBuffer = colorBuffer;\n\t\t\trt.destroy();\n\t\t};\n\n\t\t_proto._destroyOffscreenTarget = function _destroyOffscreenTarget(rt) {\n\t\t\tif (rt._colorBuffer) rt._colorBuffer.destroy();\n\t\t\tif (rt._depthBuffer) rt._depthBuffer.destroy();\n\t\t\trt.destroy();\n\t\t};\n\n\t\t_proto.setRenderTargetScale = function setRenderTargetScale(scale) {\n\t\t\tthis.renderTargetScale = scale;\n\t\t\tthis.resizeRenderTargets();\n\t\t};\n\n\t\t_proto.addEffect = function addEffect(effect) {\n\t\t\tvar isFirstEffect = this.effects.length === 0;\n\t\t\tvar effects = this.effects;\n\t\t\tvar newEntry = {\n\t\t\t\teffect: effect,\n\t\t\t\tinputTarget: this._createOffscreenTarget(isFirstEffect, effect.hdr),\n\t\t\t\toutputTarget: null\n\t\t\t};\n\n\t\t\tif (!this.layer) {\n\t\t\t\tthis.layer = new Layer({\n\t\t\t\t\topaqueSortMode: SORTMODE_NONE,\n\t\t\t\t\ttransparentSortMode: SORTMODE_NONE,\n\t\t\t\t\tpassThrough: true,\n\t\t\t\t\tname: \"PostEffectQueue\",\n\t\t\t\t\trenderTarget: this.camera.renderTarget,\n\t\t\t\t\tclear: false,\n\t\t\t\t\tonPostRender: function onPostRender() {\n\t\t\t\t\t\tfor (var i = 0; i < this._commandList.length; i++) {\n\t\t\t\t\t\t\tthis._commandList[i]();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar layerList = this.app.scene.layers.layerList;\n\t\t\t\tvar order = 0;\n\t\t\t\tvar i;\n\t\t\t\tvar start = layerList.length - 1;\n\n\t\t\t\tfor (i = start; i >= 0; i--) {\n\t\t\t\t\tif (layerList[i].id === LAYERID_UI) {\n\t\t\t\t\t\tstart = i - 1;\n\t\t\t\t\t\tthis._origOverrideClear = layerList[i].overrideClear;\n\t\t\t\t\t\tthis._origClearColorBuffer = layerList[i].clearColorBuffer;\n\t\t\t\t\t\tthis._origDepthColorBuffer = layerList[i].clearDepthBuffer;\n\t\t\t\t\t\tthis._origStencilColorBuffer = layerList[i].clearStencilBuffer;\n\t\t\t\t\t\tlayerList[i].overrideClear = true;\n\t\t\t\t\t\tlayerList[i].clearColorBuffer = false;\n\t\t\t\t\t\tlayerList[i].clearDepthBuffer = this.camera.clearDepthBuffer;\n\t\t\t\t\t\tlayerList[i].clearStencilBuffer = this.camera.clearStencilBuffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._sourceLayers = [];\n\n\t\t\t\tfor (i = 0; i < this.camera.layers.length; i++) {\n\t\t\t\t\tvar layerID = this.camera.layers[i];\n\t\t\t\t\tvar layer = this.app.scene.layers.getLayerById(layerID);\n\t\t\t\t\tvar index = this.app.scene.layers.layerList.indexOf(layer);\n\n\t\t\t\t\tif (index <= start) {\n\t\t\t\t\t\tif (layerID != LAYERID_DEPTH) {\n\t\t\t\t\t\t\tlayer.renderTarget = newEntry.inputTarget;\n\n\t\t\t\t\t\t\tthis._sourceLayers.push(layer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (index > order) order = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.app.scene.layers.insertOpaque(this.layer, order + 1);\n\t\t\t\tthis._sourceTarget = newEntry.inputTarget;\n\t\t\t\tthis.layer._commandList = [];\n\t\t\t\tthis.layer.isPostEffect = true;\n\t\t\t}\n\n\t\t\teffects.push(newEntry);\n\t\t\tvar len = effects.length;\n\n\t\t\tif (len > 1) {\n\t\t\t\teffects[len - 2].outputTarget = newEntry.inputTarget;\n\t\t\t}\n\n\t\t\tthis._newPostEffect = effect;\n\n\t\t\tif (effect.needsDepthBuffer) {\n\t\t\t\tthis._requestDepthMap();\n\t\t\t}\n\n\t\t\tthis.enable();\n\t\t\tthis._newPostEffect = undefined;\n\t\t};\n\n\t\t_proto.removeEffect = function removeEffect(effect) {\n\t\t\tvar i,\n\t\t\t\t\tlen,\n\t\t\t\t\tindex = -1;\n\n\t\t\tfor (i = 0, len = this.effects.length; i < len; i++) {\n\t\t\t\tif (this.effects[i].effect === effect) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index >= 0) {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tthis.effects[index - 1].outputTarget = index + 1 < this.effects.length ? this.effects[index + 1].inputTarget : null;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.effects.length > 1) {\n\t\t\t\t\t\tif (!this.effects[1].inputTarget._depth) {\n\t\t\t\t\t\t\tthis._destroyOffscreenTarget(this.effects[1].inputTarget);\n\n\t\t\t\t\t\t\tthis.effects[1].inputTarget = this._createOffscreenTarget(true, this.effects[1].hdr);\n\t\t\t\t\t\t\tthis._sourceTarget = this.effects[1].inputTarget;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < this._sourceLayers.length; i++) {\n\t\t\t\t\t\t\tthis._sourceLayers[i].renderTarget = this.effects[1].inputTarget;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._destroyOffscreenTarget(this.effects[index].inputTarget);\n\n\t\t\t\tthis.effects.splice(index, 1);\n\t\t\t}\n\n\t\t\tif (this.enabled) {\n\t\t\t\tif (effect.needsDepthBuffer) {\n\t\t\t\t\tthis._releaseDepthMap();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.effects.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t}\n\t\t};\n\n\t\t_proto._requestDepthMaps = function _requestDepthMaps() {\n\t\t\tfor (var i = 0, len = this.effects.length; i < len; i++) {\n\t\t\t\tvar effect = this.effects[i].effect;\n\t\t\t\tif (this._newPostEffect === effect) continue;\n\n\t\t\t\tif (effect.needsDepthBuffer) {\n\t\t\t\t\tthis._requestDepthMap();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._releaseDepthMaps = function _releaseDepthMaps() {\n\t\t\tfor (var i = 0, len = this.effects.length; i < len; i++) {\n\t\t\t\tvar effect = this.effects[i].effect;\n\n\t\t\t\tif (effect.needsDepthBuffer) {\n\t\t\t\t\tthis._releaseDepthMap();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._requestDepthMap = function _requestDepthMap() {\n\t\t\tif (!depthLayer) depthLayer = this.app.scene.layers.getLayerById(LAYERID_DEPTH);\n\t\t\tif (depthLayer) depthLayer.incrementCounter();\n\t\t};\n\n\t\t_proto._releaseDepthMap = function _releaseDepthMap() {\n\t\t\tif (depthLayer) depthLayer.decrementCounter();\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tfor (var i = 0, len = this.effects.length; i < len; i++) {\n\t\t\t\tthis.effects[i].inputTarget.destroy();\n\t\t\t}\n\n\t\t\tthis.effects.length = 0;\n\t\t\tthis.disable();\n\t\t};\n\n\t\t_proto.enable = function enable() {\n\t\t\tif (!this.enabled && this.effects.length) {\n\t\t\t\tthis.enabled = true;\n\t\t\t\tvar self = this;\n\n\t\t\t\tthis._requestDepthMaps();\n\n\t\t\t\tthis.app.graphicsDevice.on('resizecanvas', this._onCanvasResized, this);\n\n\t\t\t\tthis.command = function () {\n\t\t\t\t\tif (self.enabled) {\n\t\t\t\t\t\tvar rect = null;\n\t\t\t\t\t\tvar len = self.effects.length;\n\n\t\t\t\t\t\tif (len) {\n\t\t\t\t\t\t\tself.layer.renderTarget = self.effects[0].inputTarget;\n\n\t\t\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\tvar fx = self.effects[i];\n\n\t\t\t\t\t\t\t\tif (i === len - 1) {\n\t\t\t\t\t\t\t\t\trect = self.camera.rect;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfx.effect.render(fx.inputTarget, fx.outputTarget, rect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.layer._commandList.push(this.command);\n\t\t\t}\n\t\t};\n\n\t\t_proto.disable = function disable() {\n\t\t\tif (this.enabled) {\n\t\t\t\tthis.enabled = false;\n\t\t\t\tthis.app.graphicsDevice.off('resizecanvas', this._onCanvasResized, this);\n\n\t\t\t\tthis._releaseDepthMaps();\n\n\t\t\t\tthis._destroyOffscreenTarget(this._sourceTarget);\n\n\t\t\t\tvar i = this.layer._commandList.indexOf(this.command);\n\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\tthis.layer._commandList.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t\tvar layerList = this.app.scene.layers.layerList;\n\t\t\t\tvar start = layerList.length - 1;\n\n\t\t\t\tfor (i = 0; i <= layerList.length; i++) {\n\t\t\t\t\tif (layerList[i].id === LAYERID_UI) {\n\t\t\t\t\t\tstart = i - 1;\n\t\t\t\t\t\tlayerList[i].overrideClear = this._origOverrideClear;\n\t\t\t\t\t\tlayerList[i].clearColorBuffer = this._origClearColorBuffer;\n\t\t\t\t\t\tlayerList[i].clearDepthBuffer = this._origDepthColorBuffer;\n\t\t\t\t\t\tlayerList[i].clearStencilBuffer = this._origStencilColorBuffer;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (i = start; i >= 0; i--) {\n\t\t\t\t\tif (layerList[i].cameras.indexOf(this.camera) >= 0) {\n\t\t\t\t\t\tlayerList[i].renderTarget = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.app.scene.layers.removeOpaque(this.layer);\n\t\t\t\tthis.layer = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onCanvasResized = function _onCanvasResized(width, height) {\n\t\t\tvar rect = this.camera.rect;\n\t\t\tvar device = this.app.graphicsDevice;\n\t\t\tthis.camera.camera.aspectRatio = device.width * rect.z / (device.height * rect.w);\n\t\t\tif (this.resizeTimeout) return;\n\n\t\t\tif (now() - this.resizeLast > 100) {\n\t\t\t\tthis.resizeRenderTargets();\n\t\t\t} else {\n\t\t\t\tthis.resizeTimeout = setTimeout(this._resizeTimeoutCallback, 100);\n\t\t\t}\n\t\t};\n\n\t\t_proto.resizeRenderTargets = function resizeRenderTargets() {\n\t\t\tif (this.resizeTimeout) {\n\t\t\t\tclearTimeout(this.resizeTimeout);\n\t\t\t\tthis.resizeTimeout = null;\n\t\t\t}\n\n\t\t\tthis.resizeLast = now();\n\t\t\tvar rect = this.camera.rect;\n\t\t\tvar desiredWidth = Math.floor(rect.z * this.app.graphicsDevice.width * this.renderTargetScale);\n\t\t\tvar desiredHeight = Math.floor(rect.w * this.app.graphicsDevice.height * this.renderTargetScale);\n\t\t\tvar effects = this.effects;\n\n\t\t\tfor (var i = 0, len = effects.length; i < len; i++) {\n\t\t\t\tvar fx = effects[i];\n\n\t\t\t\tif (fx.inputTarget.width !== desiredWidth || fx.inputTarget.height !== desiredHeight) {\n\t\t\t\t\tthis._resizeOffscreenTarget(fx.inputTarget);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onCameraRectChanged = function onCameraRectChanged(name, oldValue, newValue) {\n\t\t\tif (this.enabled) {\n\t\t\t\tthis.resizeRenderTargets();\n\t\t\t}\n\t\t};\n\n\t\treturn PostEffectQueue;\n\t}();\n\n\tvar CameraComponent = function (_Component) {\n\t\t_inheritsLoose(CameraComponent, _Component);\n\n\t\tfunction CameraComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._camera = new Camera();\n\t\t\t_this._camera.node = entity;\n\t\t\t_this._priority = 0;\n\t\t\t_this._postEffects = new PostEffectQueue(system.app, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = CameraComponent.prototype;\n\n\t\t_proto.screenToWorld = function screenToWorld(screenx, screeny, cameraz, worldCoord) {\n\t\t\tvar device = this.system.app.graphicsDevice;\n\t\t\tvar w = device.clientRect.width;\n\t\t\tvar h = device.clientRect.height;\n\t\t\treturn this._camera.screenToWorld(screenx, screeny, cameraz, w, h, worldCoord);\n\t\t};\n\n\t\t_proto.worldToScreen = function worldToScreen(worldCoord, screenCoord) {\n\t\t\tvar device = this.system.app.graphicsDevice;\n\t\t\tvar w = device.clientRect.width;\n\t\t\tvar h = device.clientRect.height;\n\t\t\treturn this._camera.worldToScreen(worldCoord, w, h, screenCoord);\n\t\t};\n\n\t\t_proto.onPrerender = function onPrerender() {\n\t\t\tthis._camera._viewMatDirty = true;\n\t\t\tthis._camera._viewProjMatDirty = true;\n\t\t};\n\n\t\t_proto.addCameraToLayers = function addCameraToLayers() {\n\t\t\tvar layers = this.layers;\n\n\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\tvar layer = this.system.app.scene.layers.getLayerById(layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addCamera(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeCameraFromLayers = function removeCameraFromLayers() {\n\t\t\tvar layers = this.layers;\n\n\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\tvar layer = this.system.app.scene.layers.getLayerById(layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeCamera(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tthis.addCameraToLayers();\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.addCamera(this);\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeCamera(this);\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar system = this.system;\n\t\t\tvar scene = system.app.scene;\n\t\t\tvar layers = scene.layers;\n\t\t\tsystem.addCamera(this);\n\t\t\tscene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (layers) {\n\t\t\t\tlayers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tlayers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\tthis.addCameraToLayers();\n\t\t\t}\n\n\t\t\tthis.postEffects.enable();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tvar system = this.system;\n\t\t\tvar scene = system.app.scene;\n\t\t\tvar layers = scene.layers;\n\t\t\tthis.postEffects.disable();\n\t\t\tthis.removeCameraFromLayers();\n\t\t\tscene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (layers) {\n\t\t\t\tlayers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tlayers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tsystem.removeCamera(this);\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.onDisable();\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto.calculateAspectRatio = function calculateAspectRatio(rt) {\n\t\t\tvar src = rt ? rt : this.system.app.graphicsDevice;\n\t\t\tvar rect = this.rect;\n\t\t\treturn src.width * rect.z / (src.height * rect.w);\n\t\t};\n\n\t\t_proto.frameBegin = function frameBegin(rt) {\n\t\t\tif (this.aspectRatioMode === ASPECT_AUTO) {\n\t\t\t\tthis.aspectRatio = this.calculateAspectRatio(rt);\n\t\t\t}\n\t\t};\n\n\t\t_proto.frameEnd = function frameEnd() {};\n\n\t\t_proto.enterVr = function enterVr(display, callback) {\n\t\t\tif (display instanceof Function && !callback) {\n\t\t\t\tcallback = display;\n\t\t\t\tdisplay = null;\n\t\t\t}\n\n\t\t\tif (!this.system.app.vr) {\n\t\t\t\tcallback(\"VrManager not created. Enable VR in project settings.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!display) {\n\t\t\t\tdisplay = this.system.app.vr.display;\n\t\t\t}\n\n\t\t\tif (display) {\n\t\t\t\tvar self = this;\n\n\t\t\t\tif (display.capabilities.canPresent) {\n\t\t\t\t\tdisplay.requestPresent(function (err) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tself.vrDisplay = display;\n\t\t\t\t\t\t\tself.vrDisplay.once('beforepresentchange', function (display) {\n\t\t\t\t\t\t\t\tif (!display.presenting) {\n\t\t\t\t\t\t\t\t\tself.vrDisplay = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tself.vrDisplay = display;\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback(\"No pc.VrDisplay to present\");\n\t\t\t}\n\t\t};\n\n\t\t_proto.exitVr = function exitVr(callback) {\n\t\t\tif (this.vrDisplay) {\n\t\t\t\tif (this.vrDisplay.capabilities.canPresent) {\n\t\t\t\t\tvar display = this.vrDisplay;\n\t\t\t\t\tthis.vrDisplay = null;\n\t\t\t\t\tdisplay.exitPresent(callback);\n\t\t\t\t} else {\n\t\t\t\t\tthis.vrDisplay = null;\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback(\"Not presenting VR\");\n\t\t\t}\n\t\t};\n\n\t\t_proto.startXr = function startXr(type, spaceType, options) {\n\t\t\tthis.system.app.xr.start(this, type, spaceType, options);\n\t\t};\n\n\t\t_proto.endXr = function endXr(callback) {\n\t\t\tif (!this._camera.xr) {\n\t\t\t\tif (callback) callback(new Error(\"Camera is not in XR\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._camera.xr.end(callback);\n\t\t};\n\n\t\t_createClass(CameraComponent, [{\n\t\t\tkey: \"camera\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._camera;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._camera.layers;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tvar i, layer;\n\t\t\t\tvar layers = this._camera.layers;\n\n\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(layers[i]);\n\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\tlayer.removeCamera(this);\n\t\t\t\t}\n\n\t\t\t\tthis._camera.layers = newValue;\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\n\t\t\t\tfor (i = 0; i < newValue.length; i++) {\n\t\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(newValue[i]);\n\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\tlayer.addCamera(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"postEffects\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._postEffects;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"priority\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._priority;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._priority = newValue;\n\t\t\t\tvar layers = this.layers;\n\n\t\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\t\tvar layer = this.system.app.scene.layers.getLayerById(layers[i]);\n\t\t\t\t\tif (!layer) continue;\n\n\t\t\t\t\tlayer._sortCameras();\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn CameraComponent;\n\t}(Component);\n\n\t[{\n\t\tname: 'aspectRatio',\n\t\treadonly: false\n\t}, {\n\t\tname: 'aspectRatioMode',\n\t\treadonly: false\n\t}, {\n\t\tname: 'calculateProjection',\n\t\treadonly: false\n\t}, {\n\t\tname: 'calculateTransform',\n\t\treadonly: false\n\t}, {\n\t\tname: 'clearColor',\n\t\treadonly: false\n\t}, {\n\t\tname: 'clearColorBuffer',\n\t\treadonly: false\n\t}, {\n\t\tname: 'clearDepthBuffer',\n\t\treadonly: false\n\t}, {\n\t\tname: 'clearStencilBuffer',\n\t\treadonly: false\n\t}, {\n\t\tname: 'cullFaces',\n\t\treadonly: false\n\t}, {\n\t\tname: 'farClip',\n\t\treadonly: false\n\t}, {\n\t\tname: 'flipFaces',\n\t\treadonly: false\n\t}, {\n\t\tname: 'fov',\n\t\treadonly: false\n\t}, {\n\t\tname: 'frustum',\n\t\treadonly: true\n\t}, {\n\t\tname: 'frustumCulling',\n\t\treadonly: false\n\t}, {\n\t\tname: 'horizontalFov',\n\t\treadonly: false\n\t}, {\n\t\tname: 'nearClip',\n\t\treadonly: false\n\t}, {\n\t\tname: 'orthoHeight',\n\t\treadonly: false\n\t}, {\n\t\tname: 'projection',\n\t\treadonly: false\n\t}, {\n\t\tname: 'projectionMatrix',\n\t\treadonly: true\n\t}, {\n\t\tname: 'rect',\n\t\treadonly: false\n\t}, {\n\t\tname: 'renderTarget',\n\t\treadonly: false\n\t}, {\n\t\tname: 'scissorRect',\n\t\treadonly: false\n\t}, {\n\t\tname: 'viewMatrix',\n\t\treadonly: true\n\t}, {\n\t\tname: 'vrDisplay',\n\t\treadonly: false\n\t}].forEach(function (property) {\n\t\tvar name = property.name;\n\t\tvar options = {};\n\n\t\toptions.get = function () {\n\t\t\treturn this._camera[name];\n\t\t};\n\n\t\tif (!property.readonly) {\n\t\t\toptions.set = function (newValue) {\n\t\t\t\tthis._camera[name] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tObject.defineProperty(CameraComponent.prototype, name, options);\n\t});\n\n\tvar CameraComponentData = function CameraComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$5 = ['enabled'];\n\n\tvar CameraComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(CameraComponentSystem, _ComponentSystem);\n\n\t\tfunction CameraComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'camera';\n\t\t\t_this.ComponentType = CameraComponent;\n\t\t\t_this.DataType = CameraComponentData;\n\t\t\t_this.schema = _schema$5;\n\t\t\t_this.cameras = [];\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\t_this.app.on(\"prerender\", _this.onPrerender, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = CameraComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['aspectRatio', 'aspectRatioMode', 'calculateProjection', 'calculateTransform', 'clearColor', 'clearColorBuffer', 'clearDepthBuffer', 'clearStencilBuffer', 'cullFaces', 'farClip', 'flipFaces', 'fov', 'frustumCulling', 'horizontalFov', 'layers', 'renderTarget', 'nearClip', 'orthoHeight', 'projection', 'priority', 'rect', 'scissorRect'];\n\n\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\tvar property = properties[i];\n\n\t\t\t\tif (data.hasOwnProperty(property)) {\n\t\t\t\t\tvar value = data[property];\n\n\t\t\t\t\tswitch (property) {\n\t\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\tcase 'scissorRect':\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\tcomponent[property] = new Vec4(value[0], value[1], value[2], value[3]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomponent[property] = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'clearColor':\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\tcomponent[property] = new Color(value[0], value[1], value[2], value[3]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomponent[property] = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcomponent[property] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, ['enabled']);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar c = entity.camera;\n\t\t\tthis.addComponent(clone, {\n\t\t\t\taspectRatio: c.aspectRatio,\n\t\t\t\taspectRatioMode: c.aspectRatioMode,\n\t\t\t\tcalculateProjection: c.calculateProjection,\n\t\t\t\tcalculateTransform: c.calculateTransform,\n\t\t\t\tclearColor: c.clearColor,\n\t\t\t\tclearColorBuffer: c.clearColorBuffer,\n\t\t\t\tclearDepthBuffer: c.clearDepthBuffer,\n\t\t\t\tclearStencilBuffer: c.clearStencilBuffer,\n\t\t\t\tcullFaces: c.cullFaces,\n\t\t\t\tfarClip: c.farClip,\n\t\t\t\tflipFaces: c.flipFaces,\n\t\t\t\tfov: c.fov,\n\t\t\t\tfrustumCulling: c.frustumCulling,\n\t\t\t\thorizontalFov: c.horizontalFov,\n\t\t\t\tlayers: c.layers,\n\t\t\t\trenderTarget: c.renderTarget,\n\t\t\t\tnearClip: c.nearClip,\n\t\t\t\torthoHeight: c.orthoHeight,\n\t\t\t\tprojection: c.projection,\n\t\t\t\tpriority: c.priority,\n\t\t\t\trect: c.rect,\n\t\t\t\tscissorRect: c.scissorRect\n\t\t\t});\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tthis.removeCamera(component);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tif (this.app.vr) {\n\t\t\t\tvar components = this.store;\n\n\t\t\t\tfor (var id in components) {\n\t\t\t\t\tvar component = components[id];\n\n\t\t\t\t\tif (component.data.enabled && component.entity.enabled) {\n\t\t\t\t\t\tvar cameraComponent = component.entity.camera;\n\t\t\t\t\t\tvar vrDisplay = cameraComponent.vrDisplay;\n\n\t\t\t\t\t\tif (vrDisplay) {\n\t\t\t\t\t\t\tvrDisplay.setClipPlanes(cameraComponent.nearClip, cameraComponent.farClip);\n\n\t\t\t\t\t\t\tif (component.entity) {\n\t\t\t\t\t\t\t\tcomponent.entity.localTransform.copy(vrDisplay.combinedViewInv);\n\t\t\t\t\t\t\t\tcomponent.entity._dirtyLocal = false;\n\n\t\t\t\t\t\t\t\tcomponent.entity._dirtifyWorld();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onPrerender = function onPrerender() {\n\t\t\tfor (var i = 0, len = this.cameras.length; i < len; i++) {\n\t\t\t\tthis.cameras[i].onPrerender();\n\t\t\t}\n\t\t};\n\n\t\t_proto.addCamera = function addCamera(camera) {\n\t\t\tthis.cameras.push(camera);\n\t\t\tthis.sortCamerasByPriority();\n\t\t};\n\n\t\t_proto.removeCamera = function removeCamera(camera) {\n\t\t\tvar index = this.cameras.indexOf(camera);\n\n\t\t\tif (index >= 0) {\n\t\t\t\tthis.cameras.splice(index, 1);\n\t\t\t\tthis.sortCamerasByPriority();\n\t\t\t}\n\t\t};\n\n\t\t_proto.sortCamerasByPriority = function sortCamerasByPriority() {\n\t\t\tthis.cameras.sort(function (a, b) {\n\t\t\t\treturn a.priority - b.priority;\n\t\t\t});\n\t\t};\n\n\t\treturn CameraComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(CameraComponent.prototype, _schema$5);\n\n\tvar CollisionComponent = function (_Component) {\n\t\t_inheritsLoose(CollisionComponent, _Component);\n\n\t\tfunction CollisionComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._compoundParent = null;\n\n\t\t\t_this.entity.on('insert', _this._onInsert, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_type', _this.onSetType, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_halfExtents', _this.onSetHalfExtents, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_radius', _this.onSetRadius, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_height', _this.onSetHeight, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_axis', _this.onSetAxis, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_asset\", _this.onSetAsset, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_model\", _this.onSetModel, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = CollisionComponent.prototype;\n\n\t\t_proto.onSetType = function onSetType(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tthis.system.changeType(this, oldValue, newValue);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetHalfExtents = function onSetHalfExtents(name, oldValue, newValue) {\n\t\t\tvar t = this.data.type;\n\n\t\t\tif (this.data.initialized && t === 'box') {\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetRadius = function onSetRadius(name, oldValue, newValue) {\n\t\t\tvar t = this.data.type;\n\n\t\t\tif (this.data.initialized && (t === 'sphere' || t === 'capsule' || t === 'cylinder' || t === 'cone')) {\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetHeight = function onSetHeight(name, oldValue, newValue) {\n\t\t\tvar t = this.data.type;\n\n\t\t\tif (this.data.initialized && (t === 'capsule' || t === 'cylinder' || t === 'cone')) {\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAxis = function onSetAxis(name, oldValue, newValue) {\n\t\t\tvar t = this.data.type;\n\n\t\t\tif (this.data.initialized && (t === 'capsule' || t === 'cylinder' || t === 'cone')) {\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAsset = function onSetAsset(name, oldValue, newValue) {\n\t\t\tvar asset;\n\t\t\tvar assets = this.system.app.assets;\n\n\t\t\tif (oldValue) {\n\t\t\t\tasset = assets.get(oldValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newValue) {\n\t\t\t\tif (newValue instanceof Asset) {\n\t\t\t\t\tthis.data.asset = newValue.id;\n\t\t\t\t}\n\n\t\t\t\tasset = assets.get(this.data.asset);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\t\t\t\t\tasset.on('remove', this.onAssetRemoved, this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.data.initialized && this.data.type === 'mesh') {\n\t\t\t\tif (!newValue) {\n\t\t\t\t\tthis.data.model = null;\n\t\t\t\t}\n\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetModel = function onSetModel(name, oldValue, newValue) {\n\t\t\tif (this.data.initialized && this.data.type === 'mesh') {\n\t\t\t\tthis.system.implementations.mesh.doRecreatePhysicalShape(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onAssetRemoved = function onAssetRemoved(asset) {\n\t\t\tasset.off('remove', this.onAssetRemoved, this);\n\n\t\t\tif (this.data.asset === asset.id) {\n\t\t\t\tthis.asset = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._getCompoundChildShapeIndex = function _getCompoundChildShapeIndex(shape) {\n\t\t\tvar compound = this.data.shape;\n\t\t\tvar shapes = compound.getNumChildShapes();\n\n\t\t\tfor (var i = 0; i < shapes; i++) {\n\t\t\t\tvar childShape = compound.getChildShape(i);\n\n\t\t\t\tif (childShape.ptr === shape.ptr) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._onInsert = function _onInsert(parent) {\n\t\t\tif (typeof Ammo === 'undefined') return;\n\n\t\t\tif (this._compoundParent) {\n\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t} else if (!this.entity.rigidbody) {\n\t\t\t\tvar ancestor = this.entity.parent;\n\n\t\t\t\twhile (ancestor) {\n\t\t\t\t\tif (ancestor.collision && ancestor.collision.type === 'compound') {\n\t\t\t\t\t\tif (ancestor.collision.shape.getNumChildShapes() === 0) {\n\t\t\t\t\t\t\tthis.system.recreatePhysicalShapes(ancestor.collision);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tancestor = ancestor.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateCompound = function _updateCompound() {\n\t\t\tvar entity = this.entity;\n\n\t\t\tif (entity._dirtyWorld) {\n\t\t\t\tvar dirty = entity._dirtyLocal;\n\t\t\t\tvar parent = entity;\n\n\t\t\t\twhile (parent && !dirty) {\n\t\t\t\t\tif (parent.collision && parent.collision === this._compoundParent) break;\n\t\t\t\t\tif (parent._dirtyLocal) dirty = true;\n\t\t\t\t\tparent = parent.parent;\n\t\t\t\t}\n\n\t\t\t\tif (dirty) {\n\t\t\t\t\tentity.forEach(this.system.implementations.compound._updateEachDescendantTransform, entity);\n\t\t\t\t\tvar bodyComponent = this._compoundParent.entity.rigidbody;\n\t\t\t\t\tif (bodyComponent) bodyComponent.activate();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tif (this.data.type === 'mesh' && this.data.asset && this.data.initialized) {\n\t\t\t\tvar asset = this.system.app.assets.get(this.data.asset);\n\n\t\t\t\tif (asset && (!asset.resource || !this.data.shape)) {\n\t\t\t\t\tthis.system.recreatePhysicalShapes(this);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.entity.rigidbody) {\n\t\t\t\tif (this.entity.rigidbody.enabled) {\n\t\t\t\t\tthis.entity.rigidbody.enableSimulation();\n\t\t\t\t}\n\t\t\t} else if (this._compoundParent && this !== this._compoundParent) {\n\t\t\t\tif (this._compoundParent.shape.getNumChildShapes() === 0) {\n\t\t\t\t\tthis.system.recreatePhysicalShapes(this._compoundParent);\n\t\t\t\t} else {\n\t\t\t\t\tvar transform = this.system._getNodeTransform(this.entity, this._compoundParent.entity);\n\n\t\t\t\t\tthis._compoundParent.shape.addChildShape(transform, this.data.shape);\n\n\t\t\t\t\tAmmo.destroy(transform);\n\t\t\t\t\tif (this._compoundParent.entity.rigidbody) this._compoundParent.entity.rigidbody.activate();\n\t\t\t\t}\n\t\t\t} else if (this.entity.trigger) {\n\t\t\t\tthis.entity.trigger.enable();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tif (this.entity.rigidbody) {\n\t\t\t\tthis.entity.rigidbody.disableSimulation();\n\t\t\t} else if (this._compoundParent && this !== this._compoundParent) {\n\t\t\t\tif (!this._compoundParent.entity._destroying) {\n\t\t\t\t\tthis.system._removeCompoundChild(this._compoundParent, this.data.shape);\n\n\t\t\t\t\tif (this._compoundParent.entity.rigidbody) this._compoundParent.entity.rigidbody.activate();\n\t\t\t\t}\n\t\t\t} else if (this.entity.trigger) {\n\t\t\t\tthis.entity.trigger.disable();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove() {\n\t\t\tif (this.asset) {\n\t\t\t\tthis.asset = null;\n\t\t\t}\n\n\t\t\tthis.entity.off('insert', this._onInsert, this);\n\t\t\tthis.off();\n\t\t};\n\n\t\treturn CollisionComponent;\n\t}(Component);\n\n\tvar CollisionComponentData = function CollisionComponentData() {\n\t\tthis.enabled = true;\n\t\tthis.type = 'box';\n\t\tthis.halfExtents = new Vec3(0.5, 0.5, 0.5);\n\t\tthis.radius = 0.5;\n\t\tthis.axis = 1;\n\t\tthis.height = 2;\n\t\tthis.asset = null;\n\t\tthis.shape = null;\n\t\tthis.model = null;\n\t\tthis.initialized = false;\n\t};\n\n\tvar BODYTYPE_STATIC = 'static';\n\tvar BODYTYPE_DYNAMIC = 'dynamic';\n\tvar BODYTYPE_KINEMATIC = 'kinematic';\n\tvar BODYFLAG_STATIC_OBJECT = 1;\n\tvar BODYFLAG_KINEMATIC_OBJECT = 2;\n\tvar BODYFLAG_NORESPONSE_OBJECT = 4;\n\tvar BODYSTATE_ACTIVE_TAG = 1;\n\tvar BODYSTATE_ISLAND_SLEEPING = 2;\n\tvar BODYSTATE_WANTS_DEACTIVATION = 3;\n\tvar BODYSTATE_DISABLE_DEACTIVATION = 4;\n\tvar BODYSTATE_DISABLE_SIMULATION = 5;\n\tvar BODYGROUP_NONE = 0;\n\tvar BODYGROUP_DEFAULT = 1;\n\tvar BODYGROUP_DYNAMIC = 1;\n\tvar BODYGROUP_STATIC = 2;\n\tvar BODYGROUP_KINEMATIC = 4;\n\tvar BODYGROUP_ENGINE_1 = 8;\n\tvar BODYGROUP_TRIGGER = 16;\n\tvar BODYGROUP_ENGINE_2 = 32;\n\tvar BODYGROUP_ENGINE_3 = 64;\n\tvar BODYGROUP_USER_1 = 128;\n\tvar BODYGROUP_USER_2 = 256;\n\tvar BODYGROUP_USER_3 = 512;\n\tvar BODYGROUP_USER_4 = 1024;\n\tvar BODYGROUP_USER_5 = 2048;\n\tvar BODYGROUP_USER_6 = 4096;\n\tvar BODYGROUP_USER_7 = 8192;\n\tvar BODYGROUP_USER_8 = 16384;\n\tvar BODYMASK_NONE = 0;\n\tvar BODYMASK_ALL = 65535;\n\tvar BODYMASK_STATIC = 2;\n\tvar BODYMASK_NOT_STATIC = 65535 ^ 2;\n\tvar BODYMASK_NOT_STATIC_KINEMATIC = 65535 ^ (2 | 4);\n\n\tvar ammoVec1, ammoQuat, ammoTransform;\n\n\tvar Trigger = function () {\n\t\tfunction Trigger(app, component, data) {\n\t\t\tthis.entity = component.entity;\n\t\t\tthis.component = component;\n\t\t\tthis.app = app;\n\n\t\t\tif (typeof Ammo !== 'undefined' && !ammoVec1) {\n\t\t\t\tammoVec1 = new Ammo.btVector3();\n\t\t\t\tammoQuat = new Ammo.btQuaternion();\n\t\t\t\tammoTransform = new Ammo.btTransform();\n\t\t\t}\n\n\t\t\tthis.initialize(data);\n\t\t}\n\n\t\tvar _proto = Trigger.prototype;\n\n\t\t_proto.initialize = function initialize(data) {\n\t\t\tvar entity = this.entity;\n\t\t\tvar shape = data.shape;\n\n\t\t\tif (shape && typeof Ammo !== 'undefined') {\n\t\t\t\tif (entity.trigger) {\n\t\t\t\t\tentity.trigger.destroy();\n\t\t\t\t}\n\n\t\t\t\tvar mass = 1;\n\t\t\t\tvar pos = entity.getPosition();\n\t\t\t\tvar rot = entity.getRotation();\n\t\t\t\tammoVec1.setValue(pos.x, pos.y, pos.z);\n\t\t\t\tammoQuat.setValue(rot.x, rot.y, rot.z, rot.w);\n\t\t\t\tammoTransform.setOrigin(ammoVec1);\n\t\t\t\tammoTransform.setRotation(ammoQuat);\n\t\t\t\tvar body = this.app.systems.rigidbody.createBody(mass, shape, ammoTransform);\n\t\t\t\tbody.setRestitution(0);\n\t\t\t\tbody.setFriction(0);\n\t\t\t\tbody.setDamping(0, 0);\n\t\t\t\tammoVec1.setValue(0, 0, 0);\n\t\t\t\tbody.setLinearFactor(ammoVec1);\n\t\t\t\tbody.setAngularFactor(ammoVec1);\n\t\t\t\tbody.setCollisionFlags(body.getCollisionFlags() | BODYFLAG_NORESPONSE_OBJECT);\n\t\t\t\tbody.entity = entity;\n\t\t\t\tthis.body = body;\n\n\t\t\t\tif (this.component.enabled && entity.enabled) {\n\t\t\t\t\tthis.enable();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar body = this.body;\n\t\t\tif (!body) return;\n\t\t\tthis.disable();\n\t\t\tthis.app.systems.rigidbody.destroyBody(body);\n\t\t};\n\n\t\t_proto._getEntityTransform = function _getEntityTransform(transform) {\n\t\t\tvar pos = this.entity.getPosition();\n\t\t\tvar rot = this.entity.getRotation();\n\t\t\tammoVec1.setValue(pos.x, pos.y, pos.z);\n\t\t\tammoQuat.setValue(rot.x, rot.y, rot.z, rot.w);\n\t\t\ttransform.setOrigin(ammoVec1);\n\t\t\ttransform.setRotation(ammoQuat);\n\t\t};\n\n\t\t_proto.updateTransform = function updateTransform() {\n\t\t\tthis._getEntityTransform(ammoTransform);\n\n\t\t\tvar body = this.body;\n\t\t\tbody.setWorldTransform(ammoTransform);\n\t\t\tbody.activate();\n\t\t};\n\n\t\t_proto.enable = function enable() {\n\t\t\tvar body = this.body;\n\t\t\tif (!body) return;\n\t\t\tvar systems = this.app.systems;\n\t\t\tsystems.rigidbody.addBody(body, BODYGROUP_TRIGGER, BODYMASK_NOT_STATIC ^ BODYGROUP_TRIGGER);\n\n\t\t\tsystems.rigidbody._triggers.push(this);\n\n\t\t\tbody.forceActivationState(BODYSTATE_ACTIVE_TAG);\n\t\t\tthis.updateTransform();\n\t\t};\n\n\t\t_proto.disable = function disable() {\n\t\t\tvar body = this.body;\n\t\t\tif (!body) return;\n\t\t\tvar systems = this.app.systems;\n\n\t\t\tvar idx = systems.rigidbody._triggers.indexOf(this);\n\n\t\t\tif (idx > -1) {\n\t\t\t\tsystems.rigidbody._triggers.splice(idx, 1);\n\t\t\t}\n\n\t\t\tsystems.rigidbody.removeBody(body);\n\t\t\tbody.forceActivationState(BODYSTATE_DISABLE_SIMULATION);\n\t\t};\n\n\t\treturn Trigger;\n\t}();\n\n\tvar mat4 = new Mat4();\n\tvar vec3 = new Vec3();\n\tvar quat$1 = new Quat();\n\tvar _schema$6 = ['enabled', 'type', 'halfExtents', 'radius', 'axis', 'height', 'asset', 'shape', 'model'];\n\n\tvar CollisionSystemImpl = function () {\n\t\tfunction CollisionSystemImpl(system) {\n\t\t\tthis.system = system;\n\t\t}\n\n\t\tvar _proto = CollisionSystemImpl.prototype;\n\n\t\t_proto.beforeInitialize = function beforeInitialize(component, data) {\n\t\t\tdata.shape = null;\n\t\t\tdata.model = new Model();\n\t\t\tdata.model.graph = new GraphNode();\n\t\t};\n\n\t\t_proto.afterInitialize = function afterInitialize(component, data) {\n\t\t\tthis.recreatePhysicalShapes(component);\n\t\t\tcomponent.data.initialized = true;\n\t\t};\n\n\t\t_proto.reset = function reset(component, data) {\n\t\t\tthis.beforeInitialize(component, data);\n\t\t\tthis.afterInitialize(component, data);\n\t\t};\n\n\t\t_proto.recreatePhysicalShapes = function recreatePhysicalShapes(component) {\n\t\t\tvar entity = component.entity;\n\t\t\tvar data = component.data;\n\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tif (entity.trigger) {\n\t\t\t\t\tentity.trigger.destroy();\n\t\t\t\t\tdelete entity.trigger;\n\t\t\t\t}\n\n\t\t\t\tif (data.shape) {\n\t\t\t\t\tif (component._compoundParent) {\n\t\t\t\t\t\tthis.system._removeCompoundChild(component._compoundParent, data.shape);\n\n\t\t\t\t\t\tif (component._compoundParent.entity.rigidbody) component._compoundParent.entity.rigidbody.activate();\n\t\t\t\t\t}\n\n\t\t\t\t\tAmmo.destroy(data.shape);\n\t\t\t\t\tdata.shape = null;\n\t\t\t\t}\n\n\t\t\t\tdata.shape = this.createPhysicalShape(component.entity, data);\n\t\t\t\tvar firstCompoundChild = !component._compoundParent;\n\n\t\t\t\tif (data.type === 'compound' && (!component._compoundParent || component === component._compoundParent)) {\n\t\t\t\t\tcomponent._compoundParent = component;\n\t\t\t\t\tentity.forEach(this._addEachDescendant, component);\n\t\t\t\t} else if (data.type !== 'compound') {\n\t\t\t\t\tif (component._compoundParent && component === component._compoundParent) {\n\t\t\t\t\t\tentity.forEach(this.system.implementations.compound._updateEachDescendant, component);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!component.rigidbody) {\n\t\t\t\t\t\tcomponent._compoundParent = null;\n\t\t\t\t\t\tvar parent = entity.parent;\n\n\t\t\t\t\t\twhile (parent) {\n\t\t\t\t\t\t\tif (parent.collision && parent.collision.type === 'compound') {\n\t\t\t\t\t\t\t\tcomponent._compoundParent = parent.collision;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (component._compoundParent) {\n\t\t\t\t\tif (component !== component._compoundParent) {\n\t\t\t\t\t\tif (firstCompoundChild && component._compoundParent.shape.getNumChildShapes() === 0) {\n\t\t\t\t\t\t\tthis.system.recreatePhysicalShapes(component._compoundParent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.system.updateCompoundChildTransform(entity);\n\t\t\t\t\t\t\tif (component._compoundParent.entity.rigidbody) component._compoundParent.entity.rigidbody.activate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (entity.rigidbody) {\n\t\t\t\t\tentity.rigidbody.disableSimulation();\n\t\t\t\t\tentity.rigidbody.createBody();\n\n\t\t\t\t\tif (entity.enabled && entity.rigidbody.enabled) {\n\t\t\t\t\t\tentity.rigidbody.enableSimulation();\n\t\t\t\t\t}\n\t\t\t\t} else if (!component._compoundParent) {\n\t\t\t\t\tif (!entity.trigger) {\n\t\t\t\t\t\tentity.trigger = new Trigger(this.system.app, component, data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentity.trigger.initialize(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_proto.updateTransform = function updateTransform(component, position, rotation, scale) {\n\t\t\tif (component.entity.trigger) {\n\t\t\t\tcomponent.entity.trigger.updateTransform();\n\t\t\t}\n\t\t};\n\n\t\t_proto.beforeRemove = function beforeRemove(entity, component) {\n\t\t\tif (component.data.shape) {\n\t\t\t\tif (component._compoundParent && !component._compoundParent.entity._destroying) {\n\t\t\t\t\tthis.system._removeCompoundChild(component._compoundParent, component.data.shape);\n\n\t\t\t\t\tif (component._compoundParent.entity.rigidbody) component._compoundParent.entity.rigidbody.activate();\n\t\t\t\t}\n\n\t\t\t\tcomponent._compoundParent = null;\n\t\t\t\tAmmo.destroy(component.data.shape);\n\t\t\t\tcomponent.data.shape = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.remove = function remove(entity, data) {\n\t\t\tvar app = this.system.app;\n\n\t\t\tif (entity.rigidbody && entity.rigidbody.body) {\n\t\t\t\tapp.systems.rigidbody.removeBody(entity.rigidbody.body);\n\t\t\t\tentity.rigidbody.disableSimulation();\n\t\t\t}\n\n\t\t\tif (entity.trigger) {\n\t\t\t\tentity.trigger.destroy();\n\t\t\t\tdelete entity.trigger;\n\t\t\t}\n\n\t\t\tif (app.scene.containsModel(data.model)) {\n\t\t\t\tapp.root.removeChild(data.model.graph);\n\t\t\t\tapp.scene.removeModel(data.model);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone(entity, _clone) {\n\t\t\tvar src = this.system.store[entity.getGuid()];\n\t\t\tvar data = {\n\t\t\t\tenabled: src.data.enabled,\n\t\t\t\ttype: src.data.type,\n\t\t\t\thalfExtents: [src.data.halfExtents.x, src.data.halfExtents.y, src.data.halfExtents.z],\n\t\t\t\tradius: src.data.radius,\n\t\t\t\taxis: src.data.axis,\n\t\t\t\theight: src.data.height,\n\t\t\t\tasset: src.data.asset,\n\t\t\t\tmodel: src.data.model\n\t\t\t};\n\t\t\treturn this.system.addComponent(_clone, data);\n\t\t};\n\n\t\treturn CollisionSystemImpl;\n\t}();\n\n\tvar CollisionBoxSystemImpl = function (_CollisionSystemImpl) {\n\t\t_inheritsLoose(CollisionBoxSystemImpl, _CollisionSystemImpl);\n\n\t\tfunction CollisionBoxSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto2 = CollisionBoxSystemImpl.prototype;\n\n\t\t_proto2.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tvar he = data.halfExtents;\n\t\t\t\tvar ammoHe = new Ammo.btVector3(he ? he.x : 0.5, he ? he.y : 0.5, he ? he.z : 0.5);\n\t\t\t\tvar shape = new Ammo.btBoxShape(ammoHe);\n\t\t\t\tAmmo.destroy(ammoHe);\n\t\t\t\treturn shape;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\treturn CollisionBoxSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionSphereSystemImpl = function (_CollisionSystemImpl2) {\n\t\t_inheritsLoose(CollisionSphereSystemImpl, _CollisionSystemImpl2);\n\n\t\tfunction CollisionSphereSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl2.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto3 = CollisionSphereSystemImpl.prototype;\n\n\t\t_proto3.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\treturn new Ammo.btSphereShape(data.radius);\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\treturn CollisionSphereSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionCapsuleSystemImpl = function (_CollisionSystemImpl3) {\n\t\t_inheritsLoose(CollisionCapsuleSystemImpl, _CollisionSystemImpl3);\n\n\t\tfunction CollisionCapsuleSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl3.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto4 = CollisionCapsuleSystemImpl.prototype;\n\n\t\t_proto4.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tvar shape = null;\n\t\t\tvar axis = data.axis !== undefined ? data.axis : 1;\n\t\t\tvar radius = data.radius || 0.5;\n\t\t\tvar height = Math.max((data.height || 2) - 2 * radius, 0);\n\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tswitch (axis) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tshape = new Ammo.btCapsuleShapeX(radius, height);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tshape = new Ammo.btCapsuleShape(radius, height);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tshape = new Ammo.btCapsuleShapeZ(radius, height);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shape;\n\t\t};\n\n\t\treturn CollisionCapsuleSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionCylinderSystemImpl = function (_CollisionSystemImpl4) {\n\t\t_inheritsLoose(CollisionCylinderSystemImpl, _CollisionSystemImpl4);\n\n\t\tfunction CollisionCylinderSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl4.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto5 = CollisionCylinderSystemImpl.prototype;\n\n\t\t_proto5.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tvar halfExtents = null;\n\t\t\tvar shape = null;\n\t\t\tvar axis = data.axis !== undefined ? data.axis : 1;\n\t\t\tvar radius = data.radius !== undefined ? data.radius : 0.5;\n\t\t\tvar height = data.height !== undefined ? data.height : 1;\n\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tswitch (axis) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\thalfExtents = new Ammo.btVector3(height * 0.5, radius, radius);\n\t\t\t\t\t\tshape = new Ammo.btCylinderShapeX(halfExtents);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\thalfExtents = new Ammo.btVector3(radius, height * 0.5, radius);\n\t\t\t\t\t\tshape = new Ammo.btCylinderShape(halfExtents);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\thalfExtents = new Ammo.btVector3(radius, radius, height * 0.5);\n\t\t\t\t\t\tshape = new Ammo.btCylinderShapeZ(halfExtents);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (halfExtents) Ammo.destroy(halfExtents);\n\t\t\treturn shape;\n\t\t};\n\n\t\treturn CollisionCylinderSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionConeSystemImpl = function (_CollisionSystemImpl5) {\n\t\t_inheritsLoose(CollisionConeSystemImpl, _CollisionSystemImpl5);\n\n\t\tfunction CollisionConeSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl5.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto6 = CollisionConeSystemImpl.prototype;\n\n\t\t_proto6.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tvar shape = null;\n\t\t\tvar axis = data.axis !== undefined ? data.axis : 1;\n\t\t\tvar radius = data.radius !== undefined ? data.radius : 0.5;\n\t\t\tvar height = data.height !== undefined ? data.height : 1;\n\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tswitch (axis) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tshape = new Ammo.btConeShapeX(radius, height);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tshape = new Ammo.btConeShape(radius, height);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tshape = new Ammo.btConeShapeZ(radius, height);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shape;\n\t\t};\n\n\t\treturn CollisionConeSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionMeshSystemImpl = function (_CollisionSystemImpl6) {\n\t\t_inheritsLoose(CollisionMeshSystemImpl, _CollisionSystemImpl6);\n\n\t\tfunction CollisionMeshSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl6.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto7 = CollisionMeshSystemImpl.prototype;\n\n\t\t_proto7.beforeInitialize = function beforeInitialize(component, data) {};\n\n\t\t_proto7.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tif (typeof Ammo !== 'undefined' && data.model) {\n\t\t\t\tvar model = data.model;\n\t\t\t\tvar shape = new Ammo.btCompoundShape();\n\t\t\t\tvar i, j;\n\n\t\t\t\tfor (i = 0; i < model.meshInstances.length; i++) {\n\t\t\t\t\tvar meshInstance = model.meshInstances[i];\n\t\t\t\t\tvar mesh = meshInstance.mesh;\n\t\t\t\t\tvar triMesh;\n\n\t\t\t\t\tif (this.system._triMeshCache[mesh.id]) {\n\t\t\t\t\t\ttriMesh = this.system._triMeshCache[mesh.id];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar ib = mesh.indexBuffer[RENDERSTYLE_SOLID];\n\t\t\t\t\t\tvar vb = mesh.vertexBuffer;\n\t\t\t\t\t\tvar format = vb.getFormat();\n\t\t\t\t\t\tvar stride = format.size / 4;\n\t\t\t\t\t\tvar positions;\n\n\t\t\t\t\t\tfor (j = 0; j < format.elements.length; j++) {\n\t\t\t\t\t\t\tvar element = format.elements[j];\n\n\t\t\t\t\t\t\tif (element.name === SEMANTIC_POSITION) {\n\t\t\t\t\t\t\t\tpositions = new Float32Array(vb.lock(), element.offset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar indices = new Uint16Array(ib.lock());\n\t\t\t\t\t\tvar numTriangles = mesh.primitive[0].count / 3;\n\t\t\t\t\t\tvar v1 = new Ammo.btVector3();\n\t\t\t\t\t\tvar v2 = new Ammo.btVector3();\n\t\t\t\t\t\tvar v3 = new Ammo.btVector3();\n\t\t\t\t\t\tvar i1, i2, i3;\n\t\t\t\t\t\tvar base = mesh.primitive[0].base;\n\t\t\t\t\t\ttriMesh = new Ammo.btTriangleMesh();\n\t\t\t\t\t\tthis.system._triMeshCache[mesh.id] = triMesh;\n\n\t\t\t\t\t\tfor (j = 0; j < numTriangles; j++) {\n\t\t\t\t\t\t\ti1 = indices[base + j * 3] * stride;\n\t\t\t\t\t\t\ti2 = indices[base + j * 3 + 1] * stride;\n\t\t\t\t\t\t\ti3 = indices[base + j * 3 + 2] * stride;\n\t\t\t\t\t\t\tv1.setValue(positions[i1], positions[i1 + 1], positions[i1 + 2]);\n\t\t\t\t\t\t\tv2.setValue(positions[i2], positions[i2 + 1], positions[i2 + 2]);\n\t\t\t\t\t\t\tv3.setValue(positions[i3], positions[i3 + 1], positions[i3 + 2]);\n\t\t\t\t\t\t\ttriMesh.addTriangle(v1, v2, v3, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tAmmo.destroy(v1);\n\t\t\t\t\t\tAmmo.destroy(v2);\n\t\t\t\t\t\tAmmo.destroy(v3);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar useQuantizedAabbCompression = true;\n\t\t\t\t\tvar triMeshShape = new Ammo.btBvhTriangleMeshShape(triMesh, useQuantizedAabbCompression);\n\n\t\t\t\t\tvar scaling = this.system._getNodeScaling(meshInstance.node);\n\n\t\t\t\t\ttriMeshShape.setLocalScaling(scaling);\n\t\t\t\t\tAmmo.destroy(scaling);\n\n\t\t\t\t\tvar transform = this.system._getNodeTransform(meshInstance.node);\n\n\t\t\t\t\tshape.addChildShape(transform, triMeshShape);\n\t\t\t\t\tAmmo.destroy(transform);\n\t\t\t\t}\n\n\t\t\t\tvar entityTransform = entity.getWorldTransform();\n\t\t\t\tvar scale = entityTransform.getScale();\n\t\t\t\tvar vec = new Ammo.btVector3(scale.x, scale.y, scale.z);\n\t\t\t\tshape.setLocalScaling(vec);\n\t\t\t\tAmmo.destroy(vec);\n\t\t\t\treturn shape;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_proto7.recreatePhysicalShapes = function recreatePhysicalShapes(component) {\n\t\t\tvar data = component.data;\n\n\t\t\tif (data.asset !== null && component.enabled && component.entity.enabled) {\n\t\t\t\tthis.loadModelAsset(component);\n\t\t\t} else {\n\t\t\t\tthis.doRecreatePhysicalShape(component);\n\t\t\t}\n\t\t};\n\n\t\t_proto7.loadModelAsset = function loadModelAsset(component) {\n\t\t\tvar self = this;\n\t\t\tvar id = component.data.asset;\n\t\t\tvar data = component.data;\n\t\t\tvar assets = this.system.app.assets;\n\t\t\tvar asset = assets.get(id);\n\n\t\t\tif (asset) {\n\t\t\t\tasset.ready(function (asset) {\n\t\t\t\t\tdata.model = asset.resource;\n\t\t\t\t\tself.doRecreatePhysicalShape(component);\n\t\t\t\t});\n\t\t\t\tassets.load(asset);\n\t\t\t} else {\n\t\t\t\tassets.once(\"add:\" + id, function (asset) {\n\t\t\t\t\tasset.ready(function (asset) {\n\t\t\t\t\t\tdata.model = asset.resource;\n\t\t\t\t\t\tself.doRecreatePhysicalShape(component);\n\t\t\t\t\t});\n\t\t\t\t\tassets.load(asset);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto7.doRecreatePhysicalShape = function doRecreatePhysicalShape(component) {\n\t\t\tvar entity = component.entity;\n\t\t\tvar data = component.data;\n\n\t\t\tif (data.model) {\n\t\t\t\tthis.destroyShape(data);\n\t\t\t\tdata.shape = this.createPhysicalShape(entity, data);\n\n\t\t\t\tif (entity.rigidbody) {\n\t\t\t\t\tentity.rigidbody.disableSimulation();\n\t\t\t\t\tentity.rigidbody.createBody();\n\n\t\t\t\t\tif (entity.enabled && entity.rigidbody.enabled) {\n\t\t\t\t\t\tentity.rigidbody.enableSimulation();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!entity.trigger) {\n\t\t\t\t\t\tentity.trigger = new Trigger(this.system.app, component, data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentity.trigger.initialize(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.beforeRemove(entity, component);\n\t\t\t\tthis.remove(entity, data);\n\t\t\t}\n\t\t};\n\n\t\t_proto7.updateTransform = function updateTransform(component, position, rotation, scale) {\n\t\t\tif (component.shape) {\n\t\t\t\tvar entityTransform = component.entity.getWorldTransform();\n\t\t\t\tvar worldScale = entityTransform.getScale();\n\t\t\t\tvar previousScale = component.shape.getLocalScaling();\n\n\t\t\t\tif (worldScale.x !== previousScale.x() || worldScale.y !== previousScale.y() || worldScale.z !== previousScale.z()) {\n\t\t\t\t\tthis.doRecreatePhysicalShape(component);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_CollisionSystemImpl6.prototype.updateTransform.call(this, component, position, rotation, scale);\n\t\t};\n\n\t\t_proto7.destroyShape = function destroyShape(data) {\n\t\t\tif (!data.shape) return;\n\t\t\tvar numShapes = data.shape.getNumChildShapes();\n\n\t\t\tfor (var i = 0; i < numShapes; i++) {\n\t\t\t\tvar shape = data.shape.getChildShape(i);\n\t\t\t\tAmmo.destroy(shape);\n\t\t\t}\n\n\t\t\tAmmo.destroy(data.shape);\n\t\t\tdata.shape = null;\n\t\t};\n\n\t\t_proto7.remove = function remove(entity, data) {\n\t\t\tthis.destroyShape(data);\n\n\t\t\t_CollisionSystemImpl6.prototype.remove.call(this, entity, data);\n\t\t};\n\n\t\treturn CollisionMeshSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionCompoundSystemImpl = function (_CollisionSystemImpl7) {\n\t\t_inheritsLoose(CollisionCompoundSystemImpl, _CollisionSystemImpl7);\n\n\t\tfunction CollisionCompoundSystemImpl(system) {\n\t\t\treturn _CollisionSystemImpl7.call(this, system) || this;\n\t\t}\n\n\t\tvar _proto8 = CollisionCompoundSystemImpl.prototype;\n\n\t\t_proto8.createPhysicalShape = function createPhysicalShape(entity, data) {\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\treturn new Ammo.btCompoundShape();\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_proto8._addEachDescendant = function _addEachDescendant(entity) {\n\t\t\tif (!entity.collision || entity.rigidbody) return;\n\t\t\tentity.collision._compoundParent = this;\n\n\t\t\tif (entity !== this.entity) {\n\t\t\t\tentity.collision.system.recreatePhysicalShapes(entity.collision);\n\t\t\t}\n\t\t};\n\n\t\t_proto8._updateEachDescendant = function _updateEachDescendant(entity) {\n\t\t\tif (!entity.collision) return;\n\t\t\tif (entity.collision._compoundParent !== this) return;\n\t\t\tentity.collision._compoundParent = null;\n\n\t\t\tif (entity !== this.entity && !entity.rigidbody) {\n\t\t\t\tentity.collision.system.recreatePhysicalShapes(entity.collision);\n\t\t\t}\n\t\t};\n\n\t\t_proto8._updateEachDescendantTransform = function _updateEachDescendantTransform(entity) {\n\t\t\tif (!entity.collision || entity.collision._compoundParent !== this.collision._compoundParent) return;\n\t\t\tthis.collision.system.updateCompoundChildTransform(entity);\n\t\t};\n\n\t\treturn CollisionCompoundSystemImpl;\n\t}(CollisionSystemImpl);\n\n\tvar CollisionComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(CollisionComponentSystem, _ComponentSystem);\n\n\t\tfunction CollisionComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = \"collision\";\n\t\t\t_this.ComponentType = CollisionComponent;\n\t\t\t_this.DataType = CollisionComponentData;\n\t\t\t_this.schema = _schema$6;\n\t\t\t_this.implementations = {};\n\t\t\t_this._triMeshCache = {};\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\t_this.on('remove', _this.onRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto9 = CollisionComponentSystem.prototype;\n\n\t\t_proto9.initializeComponentData = function initializeComponentData(component, _data, properties) {\n\t\t\tproperties = ['type', 'halfExtents', 'radius', 'axis', 'height', 'shape', 'model', 'asset', 'enabled'];\n\t\t\tvar data = {};\n\n\t\t\tfor (var i = 0, len = properties.length; i < len; i++) {\n\t\t\t\tvar property = properties[i];\n\t\t\t\tdata[property] = _data[property];\n\t\t\t}\n\n\t\t\tvar idx;\n\n\t\t\tif (_data.hasOwnProperty('asset')) {\n\t\t\t\tidx = properties.indexOf('model');\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tproperties.splice(idx, 1);\n\t\t\t\t}\n\t\t\t} else if (_data.hasOwnProperty('model')) {\n\t\t\t\tidx = properties.indexOf('asset');\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tproperties.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!data.type) {\n\t\t\t\tdata.type = component.data.type;\n\t\t\t}\n\n\t\t\tcomponent.data.type = data.type;\n\n\t\t\tif (data.halfExtents && Array.isArray(data.halfExtents)) {\n\t\t\t\tdata.halfExtents = new Vec3(data.halfExtents[0], data.halfExtents[1], data.halfExtents[2]);\n\t\t\t}\n\n\t\t\tvar impl = this._createImplementation(data.type);\n\n\t\t\timpl.beforeInitialize(component, data);\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\n\t\t\timpl.afterInitialize(component, data);\n\t\t};\n\n\t\t_proto9._createImplementation = function _createImplementation(type) {\n\t\t\tif (this.implementations[type] === undefined) {\n\t\t\t\tvar impl;\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'box':\n\t\t\t\t\t\timpl = new CollisionBoxSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sphere':\n\t\t\t\t\t\timpl = new CollisionSphereSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'capsule':\n\t\t\t\t\t\timpl = new CollisionCapsuleSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'cylinder':\n\t\t\t\t\t\timpl = new CollisionCylinderSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'cone':\n\t\t\t\t\t\timpl = new CollisionConeSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mesh':\n\t\t\t\t\t\timpl = new CollisionMeshSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'compound':\n\t\t\t\t\t\timpl = new CollisionCompoundSystemImpl(this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.implementations[type] = impl;\n\t\t\t}\n\n\t\t\treturn this.implementations[type];\n\t\t};\n\n\t\t_proto9._getImplementation = function _getImplementation(entity) {\n\t\t\treturn this.implementations[entity.collision.data.type];\n\t\t};\n\n\t\t_proto9.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\treturn this._getImplementation(entity).clone(entity, clone);\n\t\t};\n\n\t\t_proto9.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tthis.implementations[component.data.type].beforeRemove(entity, component);\n\t\t\tcomponent.onBeforeRemove();\n\t\t};\n\n\t\t_proto9.onRemove = function onRemove(entity, data) {\n\t\t\tthis.implementations[data.type].remove(entity, data);\n\t\t};\n\n\t\t_proto9.updateCompoundChildTransform = function updateCompoundChildTransform(entity) {\n\t\t\tthis._removeCompoundChild(entity.collision._compoundParent, entity.collision.data.shape);\n\n\t\t\tif (entity.enabled && entity.collision.enabled) {\n\t\t\t\tvar transform = this._getNodeTransform(entity, entity.collision._compoundParent.entity);\n\n\t\t\t\tentity.collision._compoundParent.shape.addChildShape(transform, entity.collision.data.shape);\n\n\t\t\t\tAmmo.destroy(transform);\n\t\t\t}\n\t\t};\n\n\t\t_proto9._removeCompoundChild = function _removeCompoundChild(collision, shape) {\n\t\t\tif (collision.shape.removeChildShape) {\n\t\t\t\tcollision.shape.removeChildShape(shape);\n\t\t\t} else {\n\t\t\t\tvar ind = collision._getCompoundChildShapeIndex(shape);\n\n\t\t\t\tif (ind !== null) {\n\t\t\t\t\tcollision.shape.removeChildShapeByIndex(ind);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto9.onTransformChanged = function onTransformChanged(component, position, rotation, scale) {\n\t\t\tthis.implementations[component.data.type].updateTransform(component, position, rotation, scale);\n\t\t};\n\n\t\t_proto9.changeType = function changeType(component, previousType, newType) {\n\t\t\tthis.implementations[previousType].beforeRemove(component.entity, component);\n\t\t\tthis.implementations[previousType].remove(component.entity, component.data);\n\n\t\t\tthis._createImplementation(newType).reset(component, component.data);\n\t\t};\n\n\t\t_proto9.recreatePhysicalShapes = function recreatePhysicalShapes(component) {\n\t\t\tthis.implementations[component.data.type].recreatePhysicalShapes(component);\n\t\t};\n\n\t\t_proto9._calculateNodeRelativeTransform = function _calculateNodeRelativeTransform(node, relative) {\n\t\t\tif (node === relative) {\n\t\t\t\tvar scale = node.getWorldTransform().getScale();\n\t\t\t\tmat4.setScale(scale.x, scale.y, scale.z);\n\t\t\t} else {\n\t\t\t\tthis._calculateNodeRelativeTransform(node.parent, relative);\n\n\t\t\t\tmat4.mul(node.getLocalTransform());\n\t\t\t}\n\t\t};\n\n\t\t_proto9._getNodeScaling = function _getNodeScaling(node) {\n\t\t\tvar wtm = node.getWorldTransform();\n\t\t\tvar scl = wtm.getScale();\n\t\t\treturn new Ammo.btVector3(scl.x, scl.y, scl.z);\n\t\t};\n\n\t\t_proto9._getNodeTransform = function _getNodeTransform(node, relative) {\n\t\t\tvar pos, rot;\n\n\t\t\tif (relative) {\n\t\t\t\tthis._calculateNodeRelativeTransform(node, relative);\n\n\t\t\t\tpos = vec3;\n\t\t\t\trot = quat$1;\n\t\t\t\tmat4.getTranslation(pos);\n\t\t\t\trot.setFromMat4(mat4);\n\t\t\t} else {\n\t\t\t\tpos = node.getPosition();\n\t\t\t\trot = node.getRotation();\n\t\t\t}\n\n\t\t\tvar transform = new Ammo.btTransform();\n\t\t\ttransform.setIdentity();\n\t\t\tvar origin = transform.getOrigin();\n\t\t\torigin.setValue(pos.x, pos.y, pos.z);\n\t\t\tvar ammoQuat = new Ammo.btQuaternion();\n\t\t\tammoQuat.setValue(rot.x, rot.y, rot.z, rot.w);\n\t\t\ttransform.setRotation(ammoQuat);\n\t\t\tAmmo.destroy(ammoQuat);\n\t\t\tAmmo.destroy(origin);\n\t\t\treturn transform;\n\t\t};\n\n\t\t_proto9.destroy = function destroy() {\n\t\t\tfor (var key in this._triMeshCache) {\n\t\t\t\tAmmo.destroy(this._triMeshCache[key]);\n\t\t\t}\n\n\t\t\tthis._triMeshCache = null;\n\n\t\t\t_ComponentSystem.prototype.destroy.call(this);\n\t\t};\n\n\t\treturn CollisionComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(CollisionComponent.prototype, _schema$6);\n\n\tvar ComponentSystemRegistry = function () {\n\t\tfunction ComponentSystemRegistry() {\n\t\t\tthis.list = [];\n\t\t}\n\n\t\tvar _proto = ComponentSystemRegistry.prototype;\n\n\t\t_proto.add = function add(system) {\n\t\t\tvar id = system.id;\n\n\t\t\tif (this[id]) {\n\t\t\t\tthrow new Error(\"ComponentSystem name '\" + id + \"' already registered or not allowed\");\n\t\t\t}\n\n\t\t\tthis[id] = system;\n\t\t\tthis.list.push(system);\n\t\t};\n\n\t\t_proto.remove = function remove(system) {\n\t\t\tvar id = system.id;\n\n\t\t\tif (!this[id]) {\n\t\t\t\tthrow new Error(\"No ComponentSystem named '\" + id + \"' registered\");\n\t\t\t}\n\n\t\t\tdelete this[id];\n\t\t\tvar index = this.list.indexOf(this[id]);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.list.splice(index, 1);\n\t\t\t}\n\t\t};\n\n\t\treturn ComponentSystemRegistry;\n\t}();\n\n\tvar ELEMENTTYPE_GROUP = 'group';\n\tvar ELEMENTTYPE_IMAGE = 'image';\n\tvar ELEMENTTYPE_TEXT = 'text';\n\n\tvar StencilParameters = function () {\n\t\tfunction StencilParameters(options) {\n\t\t\tthis.func = options.func === undefined ? FUNC_ALWAYS : options.func;\n\t\t\tthis.ref = options.ref || 0;\n\t\t\tthis.readMask = options.readMask === undefined ? 0xFF : options.readMask;\n\t\t\tthis.writeMask = options.writeMask === undefined ? 0xFF : options.writeMask;\n\t\t\tthis.fail = options.fail || STENCILOP_KEEP;\n\t\t\tthis.zfail = options.zfail || STENCILOP_KEEP;\n\t\t\tthis.zpass = options.zpass || STENCILOP_KEEP;\n\t\t}\n\n\t\tvar _proto = StencilParameters.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new StencilParameters({\n\t\t\t\tfunc: this.func,\n\t\t\t\tref: this.ref,\n\t\t\t\treadMask: this.readMask,\n\t\t\t\twriteMask: this.writeMask,\n\t\t\t\tfail: this.fail,\n\t\t\t\tzfail: this.zfail,\n\t\t\t\tzpass: this.zpass\n\t\t\t});\n\t\t};\n\n\t\treturn StencilParameters;\n\t}();\n\n\tvar ImageRenderable = function () {\n\t\tfunction ImageRenderable(entity, mesh, material) {\n\t\t\tthis._entity = entity;\n\t\t\tthis._element = entity.element;\n\t\t\tthis.model = new Model();\n\t\t\tthis.node = new GraphNode();\n\t\t\tthis.model.graph = this.node;\n\t\t\tthis.mesh = mesh;\n\t\t\tthis.meshInstance = new MeshInstance(this.node, this.mesh, material);\n\t\t\tthis.meshInstance.name = 'ImageElement: ' + entity.name;\n\t\t\tthis.meshInstance.castShadow = false;\n\t\t\tthis.meshInstance.receiveShadow = false;\n\t\t\tthis._meshDirty = false;\n\t\t\tthis.model.meshInstances.push(this.meshInstance);\n\n\t\t\tthis._entity.addChild(this.model.graph);\n\n\t\t\tthis.model._entity = this._entity;\n\t\t\tthis.unmaskMeshInstance = null;\n\t\t}\n\n\t\tvar _proto = ImageRenderable.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.setMaterial(null);\n\n\t\t\tthis._element.removeModelFromLayers(this.model);\n\n\t\t\tthis.model.destroy();\n\t\t\tthis.model = null;\n\t\t\tthis.node = null;\n\t\t\tthis.mesh = null;\n\t\t\tthis.meshInstance = null;\n\t\t\tthis._entity = null;\n\t\t\tthis._element = null;\n\t\t};\n\n\t\t_proto.setMesh = function setMesh(mesh) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.mesh = mesh;\n\t\t\tthis.meshInstance.mesh = mesh;\n\t\t\tthis.meshInstance.visible = !!mesh;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.mesh = mesh;\n\t\t\t}\n\n\t\t\tthis.forceUpdateAabb();\n\t\t};\n\n\t\t_proto.setMask = function setMask(mask) {\n\t\t\tif (!this.meshInstance) return;\n\n\t\t\tif (mask) {\n\t\t\t\tthis.unmaskMeshInstance = new MeshInstance(this.node, this.mesh, this.meshInstance.material);\n\t\t\t\tthis.unmaskMeshInstance.name = 'Unmask: ' + this._entity.name;\n\t\t\t\tthis.unmaskMeshInstance.castShadow = false;\n\t\t\t\tthis.unmaskMeshInstance.receiveShadow = false;\n\t\t\t\tthis.unmaskMeshInstance.pick = false;\n\t\t\t\tthis.model.meshInstances.push(this.unmaskMeshInstance);\n\n\t\t\t\tfor (var name in this.meshInstance.parameters) {\n\t\t\t\t\tthis.unmaskMeshInstance.setParameter(name, this.meshInstance.parameters[name].data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar idx = this.model.meshInstances.indexOf(this.unmaskMeshInstance);\n\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.model.meshInstances.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.unmaskMeshInstance = null;\n\t\t\t}\n\n\t\t\tif (this._entity.enabled && this._element.enabled) {\n\t\t\t\tthis._element.removeModelFromLayers(this.model);\n\n\t\t\t\tthis._element.addModelToLayers(this.model);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setMaterial = function setMaterial(material) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.material = material;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.material = material;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setParameter = function setParameter(name, value) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.setParameter(name, value);\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.setParameter(name, value);\n\t\t\t}\n\t\t};\n\n\t\t_proto.deleteParameter = function deleteParameter(name) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.deleteParameter(name);\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.deleteParameter(name);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setUnmaskDrawOrder = function setUnmaskDrawOrder() {\n\t\t\tif (!this.meshInstance) return;\n\n\t\t\tvar getLastChild = function getLastChild(e) {\n\t\t\t\tvar last;\n\t\t\t\tvar c = e.children;\n\t\t\t\tvar l = c.length;\n\n\t\t\t\tif (l) {\n\t\t\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\t\t\tif (c[i].element) {\n\t\t\t\t\t\t\tlast = c[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!last) return null;\n\t\t\t\t\tvar child = getLastChild(last);\n\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn last;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tvar lastChild = getLastChild(this._entity);\n\n\t\t\t\tif (lastChild && lastChild.element) {\n\t\t\t\t\tthis.unmaskMeshInstance.drawOrder = lastChild.element.drawOrder + lastChild.element.getMaskOffset();\n\t\t\t\t} else {\n\t\t\t\t\tthis.unmaskMeshInstance.drawOrder = this.meshInstance.drawOrder + this._element.getMaskOffset();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setDrawOrder = function setDrawOrder(drawOrder) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.drawOrder = drawOrder;\n\t\t};\n\n\t\t_proto.setCull = function setCull(cull) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tvar element = this._element;\n\t\t\tvar visibleFn = null;\n\n\t\t\tif (cull && element._isScreenCulled()) {\n\t\t\t\tvisibleFn = function visibleFn(camera) {\n\t\t\t\t\treturn element.isVisibleForCamera(camera);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.meshInstance.cull = cull;\n\t\t\tthis.meshInstance.isVisibleFunc = visibleFn;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.cull = cull;\n\t\t\t\tthis.unmaskMeshInstance.isVisibleFunc = visibleFn;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setScreenSpace = function setScreenSpace(screenSpace) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.screenSpace = screenSpace;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.screenSpace = screenSpace;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setLayer = function setLayer(layer) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance.layer = layer;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance.layer = layer;\n\t\t\t}\n\t\t};\n\n\t\t_proto.forceUpdateAabb = function forceUpdateAabb(mask) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance._aabbVer = -1;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance._aabbVer = -1;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setAabbFunc = function setAabbFunc(fn) {\n\t\t\tif (!this.meshInstance) return;\n\t\t\tthis.meshInstance._updateAabbFunc = fn;\n\n\t\t\tif (this.unmaskMeshInstance) {\n\t\t\t\tthis.unmaskMeshInstance._updateAabbFunc = fn;\n\t\t\t}\n\t\t};\n\n\t\treturn ImageRenderable;\n\t}();\n\n\tvar ImageElement = function () {\n\t\tfunction ImageElement(element) {\n\t\t\tthis._element = element;\n\t\t\tthis._entity = element.entity;\n\t\t\tthis._system = element.system;\n\t\t\tthis._textureAsset = null;\n\t\t\tthis._texture = null;\n\t\t\tthis._materialAsset = null;\n\t\t\tthis._material = null;\n\t\t\tthis._spriteAsset = null;\n\t\t\tthis._sprite = null;\n\t\t\tthis._spriteFrame = 0;\n\t\t\tthis._pixelsPerUnit = null;\n\t\t\tthis._rect = new Vec4(0, 0, 1, 1);\n\t\t\tthis._mask = false;\n\t\t\tthis._maskRef = 0;\n\t\t\tthis._outerScale = new Vec2();\n\t\t\tthis._outerScaleUniform = new Float32Array(2);\n\t\t\tthis._innerOffset = new Vec4();\n\t\t\tthis._innerOffsetUniform = new Float32Array(4);\n\t\t\tthis._atlasRect = new Vec4();\n\t\t\tthis._atlasRectUniform = new Float32Array(4);\n\t\t\tthis._defaultMesh = this._createMesh();\n\t\t\tthis._renderable = new ImageRenderable(this._entity, this._defaultMesh, this._material);\n\t\t\tthis._color = new Color(1, 1, 1, 1);\n\t\t\tthis._colorUniform = new Float32Array([1, 1, 1]);\n\n\t\t\tthis._renderable.setParameter('material_emissive', this._colorUniform);\n\n\t\t\tthis._renderable.setParameter('material_opacity', 1);\n\n\t\t\tthis._updateAabbFunc = this._updateAabb.bind(this);\n\n\t\t\tthis._onScreenChange(this._element.screen);\n\n\t\t\tthis._element.on('resize', this._onParentResizeOrPivotChange, this);\n\n\t\t\tthis._element.on('set:pivot', this._onParentResizeOrPivotChange, this);\n\n\t\t\tthis._element.on('screen:set:screenspace', this._onScreenSpaceChange, this);\n\n\t\t\tthis._element.on('set:screen', this._onScreenChange, this);\n\n\t\t\tthis._element.on('set:draworder', this._onDrawOrderChange, this);\n\n\t\t\tthis._element.on('screen:set:resolution', this._onResolutionChange, this);\n\t\t}\n\n\t\tvar _proto2 = ImageElement.prototype;\n\n\t\t_proto2.destroy = function destroy() {\n\t\t\tthis.textureAsset = null;\n\t\t\tthis.spriteAsset = null;\n\t\t\tthis.materialAsset = null;\n\n\t\t\tthis._renderable.setMesh(this._defaultMesh);\n\n\t\t\tthis._renderable.destroy();\n\n\t\t\tthis._defaultMesh = null;\n\n\t\t\tthis._element.off('resize', this._onParentResizeOrPivotChange, this);\n\n\t\t\tthis._element.off('set:pivot', this._onParentResizeOrPivotChange, this);\n\n\t\t\tthis._element.off('screen:set:screenspace', this._onScreenSpaceChange, this);\n\n\t\t\tthis._element.off('set:screen', this._onScreenChange, this);\n\n\t\t\tthis._element.off('set:draworder', this._onDrawOrderChange, this);\n\n\t\t\tthis._element.off('screen:set:resolution', this._onResolutionChange, this);\n\t\t};\n\n\t\t_proto2._onResolutionChange = function _onResolutionChange(res) {};\n\n\t\t_proto2._onParentResizeOrPivotChange = function _onParentResizeOrPivotChange() {\n\t\t\tif (this._renderable.mesh) {\n\t\t\t\tthis._updateMesh(this._renderable.mesh);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onScreenSpaceChange = function _onScreenSpaceChange(value) {\n\t\t\tthis._updateMaterial(value);\n\t\t};\n\n\t\t_proto2._onScreenChange = function _onScreenChange(screen, previous) {\n\t\t\tif (screen) {\n\t\t\t\tthis._updateMaterial(screen.screen.screenSpace);\n\t\t\t} else {\n\t\t\t\tthis._updateMaterial(false);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onDrawOrderChange = function _onDrawOrderChange(order) {\n\t\t\tthis._renderable.setDrawOrder(order);\n\n\t\t\tif (this.mask && this._element.screen) {\n\t\t\t\tthis._element.screen.screen.once('syncdraworder', function () {\n\t\t\t\t\tthis._renderable.setUnmaskDrawOrder();\n\t\t\t\t}, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._hasUserMaterial = function _hasUserMaterial() {\n\t\t\treturn !!this._materialAsset || !!this._material && this._system.defaultImageMaterials.indexOf(this._material) === -1;\n\t\t};\n\n\t\t_proto2._use9Slicing = function _use9Slicing() {\n\t\t\treturn this.sprite && (this.sprite.renderMode === SPRITE_RENDERMODE_SLICED || this.sprite.renderMode === SPRITE_RENDERMODE_TILED);\n\t\t};\n\n\t\t_proto2._updateMaterial = function _updateMaterial(screenSpace) {\n\t\t\tvar mask = !!this._mask;\n\t\t\tvar nineSliced = !!(this.sprite && this.sprite.renderMode === SPRITE_RENDERMODE_SLICED);\n\t\t\tvar nineTiled = !!(this.sprite && this.sprite.renderMode === SPRITE_RENDERMODE_TILED);\n\n\t\t\tif (!this._hasUserMaterial()) {\n\t\t\t\tthis._material = this._system.getImageElementMaterial(screenSpace, mask, nineSliced, nineTiled);\n\t\t\t}\n\n\t\t\tif (this._renderable) {\n\t\t\t\tthis._renderable.setCull(true);\n\n\t\t\t\tthis._renderable.setMaterial(this._material);\n\n\t\t\t\tthis._renderable.setScreenSpace(screenSpace);\n\n\t\t\t\tthis._renderable.setLayer(screenSpace ? LAYER_HUD : LAYER_WORLD);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._createMesh = function _createMesh() {\n\t\t\tvar element = this._element;\n\t\t\tvar w = element.calculatedWidth;\n\t\t\tvar h = element.calculatedHeight;\n\t\t\tvar r = this._rect;\n\t\t\tvar vertexData = new ArrayBuffer(4 * 8 * 4);\n\t\t\tvar vertexDataF32 = new Float32Array(vertexData);\n\t\t\tvertexDataF32[5] = 1;\n\t\t\tvertexDataF32[6] = r.x;\n\t\t\tvertexDataF32[7] = r.y;\n\t\t\tvertexDataF32[8] = w;\n\t\t\tvertexDataF32[13] = 1;\n\t\t\tvertexDataF32[14] = r.x + r.z;\n\t\t\tvertexDataF32[15] = r.y;\n\t\t\tvertexDataF32[16] = w;\n\t\t\tvertexDataF32[17] = h;\n\t\t\tvertexDataF32[21] = 1;\n\t\t\tvertexDataF32[22] = r.x + r.z;\n\t\t\tvertexDataF32[23] = r.y + r.w;\n\t\t\tvertexDataF32[25] = h;\n\t\t\tvertexDataF32[29] = 1;\n\t\t\tvertexDataF32[30] = r.x;\n\t\t\tvertexDataF32[31] = r.y + r.w;\n\t\t\tvar vertexDesc = [{\n\t\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\t\tcomponents: 3,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_NORMAL,\n\t\t\t\tcomponents: 3,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}, {\n\t\t\t\tsemantic: SEMANTIC_TEXCOORD0,\n\t\t\t\tcomponents: 2,\n\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t}];\n\t\t\tvar device = this._system.app.graphicsDevice;\n\t\t\tvar vertexFormat = new VertexFormat(device, vertexDesc);\n\t\t\tvar vertexBuffer = new VertexBuffer(device, vertexFormat, 4, BUFFER_STATIC, vertexData);\n\t\t\tvar mesh = new Mesh(device);\n\t\t\tmesh.vertexBuffer = vertexBuffer;\n\t\t\tmesh.primitive[0].type = PRIMITIVE_TRIFAN;\n\t\t\tmesh.primitive[0].base = 0;\n\t\t\tmesh.primitive[0].count = 4;\n\t\t\tmesh.primitive[0].indexed = false;\n\t\t\tmesh.aabb.setMinMax(Vec3.ZERO, new Vec3(w, h, 0));\n\n\t\t\tthis._updateMesh(mesh);\n\n\t\t\treturn mesh;\n\t\t};\n\n\t\t_proto2._updateMesh = function _updateMesh(mesh) {\n\t\t\tvar element = this._element;\n\t\t\tvar w = element.calculatedWidth;\n\t\t\tvar h = element.calculatedHeight;\n\n\t\t\tvar screenSpace = element._isScreenSpace();\n\n\t\t\tthis._updateMaterial(screenSpace);\n\n\t\t\tif (this._renderable) this._renderable.forceUpdateAabb();\n\n\t\t\tif (this.sprite && (this.sprite.renderMode === SPRITE_RENDERMODE_SLICED || this.sprite.renderMode === SPRITE_RENDERMODE_TILED)) {\n\t\t\t\tvar frameData = this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];\n\t\t\t\tvar borderWidthScale = 2 / frameData.rect.z;\n\t\t\t\tvar borderHeightScale = 2 / frameData.rect.w;\n\n\t\t\t\tthis._innerOffset.set(frameData.border.x * borderWidthScale, frameData.border.y * borderHeightScale, frameData.border.z * borderWidthScale, frameData.border.w * borderHeightScale);\n\n\t\t\t\tvar tex = this.sprite.atlas.texture;\n\n\t\t\t\tthis._atlasRect.set(frameData.rect.x / tex.width, frameData.rect.y / tex.height, frameData.rect.z / tex.width, frameData.rect.w / tex.height);\n\n\t\t\t\tvar ppu = this._pixelsPerUnit !== null ? this._pixelsPerUnit : this.sprite.pixelsPerUnit;\n\t\t\t\tvar scaleMulX = frameData.rect.z / ppu;\n\t\t\t\tvar scaleMulY = frameData.rect.w / ppu;\n\n\t\t\t\tthis._outerScale.set(Math.max(w, this._innerOffset.x * scaleMulX), Math.max(h, this._innerOffset.y * scaleMulY));\n\n\t\t\t\tvar scaleX = scaleMulX;\n\t\t\t\tvar scaleY = scaleMulY;\n\t\t\t\tthis._outerScale.x /= scaleMulX;\n\t\t\t\tthis._outerScale.y /= scaleMulY;\n\t\t\t\tscaleX *= math.clamp(w / (this._innerOffset.x * scaleMulX), 0.0001, 1);\n\t\t\t\tscaleY *= math.clamp(h / (this._innerOffset.y * scaleMulY), 0.0001, 1);\n\n\t\t\t\tif (this._renderable) {\n\t\t\t\t\tthis._innerOffsetUniform[0] = this._innerOffset.x;\n\t\t\t\t\tthis._innerOffsetUniform[1] = this._innerOffset.y;\n\t\t\t\t\tthis._innerOffsetUniform[2] = this._innerOffset.z;\n\t\t\t\t\tthis._innerOffsetUniform[3] = this._innerOffset.w;\n\n\t\t\t\t\tthis._renderable.setParameter('innerOffset', this._innerOffsetUniform);\n\n\t\t\t\t\tthis._atlasRectUniform[0] = this._atlasRect.x;\n\t\t\t\t\tthis._atlasRectUniform[1] = this._atlasRect.y;\n\t\t\t\t\tthis._atlasRectUniform[2] = this._atlasRect.z;\n\t\t\t\t\tthis._atlasRectUniform[3] = this._atlasRect.w;\n\n\t\t\t\t\tthis._renderable.setParameter('atlasRect', this._atlasRectUniform);\n\n\t\t\t\t\tthis._outerScaleUniform[0] = this._outerScale.x;\n\t\t\t\t\tthis._outerScaleUniform[1] = this._outerScale.y;\n\n\t\t\t\t\tthis._renderable.setParameter('outerScale', this._outerScaleUniform);\n\n\t\t\t\t\tthis._renderable.setAabbFunc(this._updateAabbFunc);\n\n\t\t\t\t\tthis._renderable.node.setLocalScale(scaleX, scaleY, 1);\n\n\t\t\t\t\tthis._renderable.node.setLocalPosition((0.5 - element.pivot.x) * w, (0.5 - element.pivot.y) * h, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar vb = mesh.vertexBuffer;\n\t\t\t\tvar vertexDataF32 = new Float32Array(vb.lock());\n\t\t\t\tvar hp = element.pivot.x;\n\t\t\t\tvar vp = element.pivot.y;\n\t\t\t\tvertexDataF32[0] = 0 - hp * w;\n\t\t\t\tvertexDataF32[1] = 0 - vp * h;\n\t\t\t\tvertexDataF32[8] = w - hp * w;\n\t\t\t\tvertexDataF32[9] = 0 - vp * h;\n\t\t\t\tvertexDataF32[16] = w - hp * w;\n\t\t\t\tvertexDataF32[17] = h - vp * h;\n\t\t\t\tvertexDataF32[24] = 0 - hp * w;\n\t\t\t\tvertexDataF32[25] = h - vp * h;\n\t\t\t\tvar atlasTextureWidth = 1;\n\t\t\t\tvar atlasTextureHeight = 1;\n\t\t\t\tvar rect = this._rect;\n\n\t\t\t\tif (this._sprite && this._sprite.frameKeys[this._spriteFrame] && this._sprite.atlas) {\n\t\t\t\t\tvar frame = this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];\n\n\t\t\t\t\tif (frame) {\n\t\t\t\t\t\trect = frame.rect;\n\t\t\t\t\t\tatlasTextureWidth = this._sprite.atlas.texture.width;\n\t\t\t\t\t\tatlasTextureHeight = this._sprite.atlas.texture.height;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvertexDataF32[6] = rect.x / atlasTextureWidth;\n\t\t\t\tvertexDataF32[7] = rect.y / atlasTextureHeight;\n\t\t\t\tvertexDataF32[14] = (rect.x + rect.z) / atlasTextureWidth;\n\t\t\t\tvertexDataF32[15] = rect.y / atlasTextureHeight;\n\t\t\t\tvertexDataF32[22] = (rect.x + rect.z) / atlasTextureWidth;\n\t\t\t\tvertexDataF32[23] = (rect.y + rect.w) / atlasTextureHeight;\n\t\t\t\tvertexDataF32[30] = rect.x / atlasTextureWidth;\n\t\t\t\tvertexDataF32[31] = (rect.y + rect.w) / atlasTextureHeight;\n\t\t\t\tvb.unlock();\n\t\t\t\tvar min = new Vec3(0 - hp * w, 0 - vp * h, 0);\n\t\t\t\tvar max = new Vec3(w - hp * w, h - vp * h, 0);\n\t\t\t\tmesh.aabb.setMinMax(min, max);\n\n\t\t\t\tif (this._renderable) {\n\t\t\t\t\tthis._renderable.node.setLocalScale(1, 1, 1);\n\n\t\t\t\t\tthis._renderable.node.setLocalPosition(0, 0, 0);\n\n\t\t\t\t\tthis._renderable.setAabbFunc(null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._meshDirty = false;\n\t\t};\n\n\t\t_proto2._updateSprite = function _updateSprite() {\n\t\t\tvar nineSlice = false;\n\t\t\tvar mesh = null;\n\n\t\t\tif (this._sprite && this._sprite.atlas) {\n\t\t\t\tmesh = this._sprite.meshes[this.spriteFrame];\n\t\t\t\tnineSlice = this._sprite.renderMode === SPRITE_RENDERMODE_SLICED || this._sprite.renderMode === SPRITE_RENDERMODE_TILED;\n\t\t\t}\n\n\t\t\tthis.mesh = nineSlice ? mesh : this._defaultMesh;\n\n\t\t\tif (this.mesh) {\n\t\t\t\tif (!this._element._beingInitialized) {\n\t\t\t\t\tthis._updateMesh(this.mesh);\n\t\t\t\t} else {\n\t\t\t\t\tthis._meshDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._updateAabb = function _updateAabb(aabb) {\n\t\t\taabb.center.set(0, 0, 0);\n\t\t\taabb.halfExtents.set(this._outerScale.x * 0.5, this._outerScale.y * 0.5, 0.001);\n\t\t\taabb.setFromTransformedAabb(aabb, this._renderable.node.getWorldTransform());\n\t\t\treturn aabb;\n\t\t};\n\n\t\t_proto2._toggleMask = function _toggleMask() {\n\t\t\tthis._element._dirtifyMask();\n\n\t\t\tvar screenSpace = this._element._isScreenSpace();\n\n\t\t\tthis._updateMaterial(screenSpace);\n\n\t\t\tthis._renderable.setMask(!!this._mask);\n\t\t};\n\n\t\t_proto2._onMaterialLoad = function _onMaterialLoad(asset) {\n\t\t\tthis.material = asset.resource;\n\t\t};\n\n\t\t_proto2._onMaterialAdded = function _onMaterialAdded(asset) {\n\t\t\tthis._system.app.assets.off('add:' + asset.id, this._onMaterialAdded, this);\n\n\t\t\tif (this._materialAsset === asset.id) {\n\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._bindMaterialAsset = function _bindMaterialAsset(asset) {\n\t\t\tif (!this._entity.enabled) return;\n\t\t\tasset.on(\"load\", this._onMaterialLoad, this);\n\t\t\tasset.on(\"change\", this._onMaterialChange, this);\n\t\t\tasset.on(\"remove\", this._onMaterialRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onMaterialLoad(asset);\n\t\t\t} else {\n\t\t\t\tthis._system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._unbindMaterialAsset = function _unbindMaterialAsset(asset) {\n\t\t\tasset.off(\"load\", this._onMaterialLoad, this);\n\t\t\tasset.off(\"change\", this._onMaterialChange, this);\n\t\t\tasset.off(\"remove\", this._onMaterialRemove, this);\n\t\t};\n\n\t\t_proto2._onMaterialChange = function _onMaterialChange() {};\n\n\t\t_proto2._onMaterialRemove = function _onMaterialRemove() {};\n\n\t\t_proto2._onTextureAdded = function _onTextureAdded(asset) {\n\t\t\tthis._system.app.assets.off('add:' + asset.id, this._onTextureAdded, this);\n\n\t\t\tif (this._textureAsset === asset.id) {\n\t\t\t\tthis._bindTextureAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._bindTextureAsset = function _bindTextureAsset(asset) {\n\t\t\tif (!this._entity.enabled) return;\n\t\t\tasset.on(\"load\", this._onTextureLoad, this);\n\t\t\tasset.on(\"change\", this._onTextureChange, this);\n\t\t\tasset.on(\"remove\", this._onTextureRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onTextureLoad(asset);\n\t\t\t} else {\n\t\t\t\tthis._system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._unbindTextureAsset = function _unbindTextureAsset(asset) {\n\t\t\tasset.off(\"load\", this._onTextureLoad, this);\n\t\t\tasset.off(\"change\", this._onTextureChange, this);\n\t\t\tasset.off(\"remove\", this._onTextureRemove, this);\n\t\t};\n\n\t\t_proto2._onTextureLoad = function _onTextureLoad(asset) {\n\t\t\tthis.texture = asset.resource;\n\t\t};\n\n\t\t_proto2._onTextureChange = function _onTextureChange(asset) {};\n\n\t\t_proto2._onTextureRemove = function _onTextureRemove(asset) {};\n\n\t\t_proto2._onSpriteAssetAdded = function _onSpriteAssetAdded(asset) {\n\t\t\tthis._system.app.assets.off('add:' + asset.id, this._onSpriteAssetAdded, this);\n\n\t\t\tif (this._spriteAsset === asset.id) {\n\t\t\t\tthis._bindSpriteAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._bindSpriteAsset = function _bindSpriteAsset(asset) {\n\t\t\tif (!this._entity.enabled) return;\n\t\t\tasset.on(\"load\", this._onSpriteAssetLoad, this);\n\t\t\tasset.on(\"change\", this._onSpriteAssetChange, this);\n\t\t\tasset.on(\"remove\", this._onSpriteAssetRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onSpriteAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tthis._system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._unbindSpriteAsset = function _unbindSpriteAsset(asset) {\n\t\t\tasset.off(\"load\", this._onSpriteAssetLoad, this);\n\t\t\tasset.off(\"change\", this._onSpriteAssetChange, this);\n\t\t\tasset.off(\"remove\", this._onSpriteAssetRemove, this);\n\n\t\t\tif (asset.data.textureAtlasAsset) {\n\t\t\t\tthis._system.app.assets.off(\"load:\" + asset.data.textureAtlasAsset, this._onTextureAtlasLoad, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onSpriteAssetLoad = function _onSpriteAssetLoad(asset) {\n\t\t\tif (!asset || !asset.resource) {\n\t\t\t\tthis.sprite = null;\n\t\t\t} else {\n\t\t\t\tif (!asset.resource.atlas) {\n\t\t\t\t\tvar atlasAssetId = asset.data.textureAtlasAsset;\n\n\t\t\t\t\tif (atlasAssetId) {\n\t\t\t\t\t\tvar assets = this._system.app.assets;\n\t\t\t\t\t\tassets.off('load:' + atlasAssetId, this._onTextureAtlasLoad, this);\n\t\t\t\t\t\tassets.once('load:' + atlasAssetId, this._onTextureAtlasLoad, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.sprite = asset.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onSpriteAssetChange = function _onSpriteAssetChange(asset) {\n\t\t\tthis._onSpriteAssetLoad(asset);\n\t\t};\n\n\t\t_proto2._onSpriteAssetRemove = function _onSpriteAssetRemove(asset) {};\n\n\t\t_proto2._bindSprite = function _bindSprite(sprite) {\n\t\t\tsprite.on('set:meshes', this._onSpriteMeshesChange, this);\n\t\t\tsprite.on('set:pixelsPerUnit', this._onSpritePpuChange, this);\n\t\t\tsprite.on('set:atlas', this._onAtlasTextureChange, this);\n\n\t\t\tif (sprite.atlas) {\n\t\t\t\tsprite.atlas.on('set:texture', this._onAtlasTextureChange, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._unbindSprite = function _unbindSprite(sprite) {\n\t\t\tsprite.off('set:meshes', this._onSpriteMeshesChange, this);\n\t\t\tsprite.off('set:pixelsPerUnit', this._onSpritePpuChange, this);\n\t\t\tsprite.off('set:atlas', this._onAtlasTextureChange, this);\n\n\t\t\tif (sprite.atlas) {\n\t\t\t\tsprite.atlas.off('set:texture', this._onAtlasTextureChange, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onSpriteMeshesChange = function _onSpriteMeshesChange() {\n\t\t\tif (this._sprite) {\n\t\t\t\tthis._spriteFrame = math.clamp(this._spriteFrame, 0, this._sprite.frameKeys.length - 1);\n\t\t\t}\n\n\t\t\tthis._updateSprite();\n\t\t};\n\n\t\t_proto2._onSpritePpuChange = function _onSpritePpuChange() {\n\t\t\tif (this.sprite.renderMode !== SPRITE_RENDERMODE_SIMPLE && this._pixelsPerUnit === null) {\n\t\t\t\tthis._updateSprite();\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onAtlasTextureChange = function _onAtlasTextureChange() {\n\t\t\tif (this.sprite && this.sprite.atlas && this.sprite.atlas.texture) {\n\t\t\t\tthis._renderable.setParameter('texture_emissiveMap', this._sprite.atlas.texture);\n\n\t\t\t\tthis._renderable.setParameter('texture_opacityMap', this._sprite.atlas.texture);\n\t\t\t} else {\n\t\t\t\tthis._renderable.deleteParameter('texture_emissiveMap');\n\n\t\t\t\tthis._renderable.deleteParameter('texture_opacityMap');\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onTextureAtlasLoad = function _onTextureAtlasLoad(atlasAsset) {\n\t\t\tvar spriteAsset = this._spriteAsset;\n\n\t\t\tif (spriteAsset instanceof Asset) {\n\t\t\t\tthis._onSpriteAssetLoad(spriteAsset);\n\t\t\t} else {\n\t\t\t\tthis._onSpriteAssetLoad(this._system.app.assets.get(spriteAsset));\n\t\t\t}\n\t\t};\n\n\t\t_proto2.onEnable = function onEnable() {\n\t\t\tvar asset;\n\n\t\t\tif (this._materialAsset) {\n\t\t\t\tasset = this._system.app.assets.get(this._materialAsset);\n\n\t\t\t\tif (asset && asset.resource !== this._material) {\n\t\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._textureAsset) {\n\t\t\t\tasset = this._system.app.assets.get(this._textureAsset);\n\n\t\t\t\tif (asset && asset.resource !== this._texture) {\n\t\t\t\t\tthis._bindTextureAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._spriteAsset) {\n\t\t\t\tasset = this._system.app.assets.get(this._spriteAsset);\n\n\t\t\t\tif (asset && asset.resource !== this._sprite) {\n\t\t\t\t\tthis._bindSpriteAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._element.addModelToLayers(this._renderable.model);\n\t\t};\n\n\t\t_proto2.onDisable = function onDisable() {\n\t\t\tthis._element.removeModelFromLayers(this._renderable.model);\n\t\t};\n\n\t\t_proto2._setStencil = function _setStencil(stencilParams) {\n\t\t\tthis._renderable.meshInstance.stencilFront = stencilParams;\n\t\t\tthis._renderable.meshInstance.stencilBack = stencilParams;\n\t\t\tvar ref = 0;\n\n\t\t\tif (this._element.maskedBy) {\n\t\t\t\tref = this._element.maskedBy.element._image._maskRef;\n\t\t\t}\n\n\t\t\tif (this._renderable.unmaskMeshInstance) {\n\t\t\t\tvar sp = new StencilParameters({\n\t\t\t\t\tref: ref + 1,\n\t\t\t\t\tfunc: FUNC_EQUAL,\n\t\t\t\t\tzpass: STENCILOP_DECREMENT\n\t\t\t\t});\n\t\t\t\tthis._renderable.unmaskMeshInstance.stencilFront = sp;\n\t\t\t\tthis._renderable.unmaskMeshInstance.stencilBack = sp;\n\t\t\t}\n\t\t};\n\n\t\t_createClass(ImageElement, [{\n\t\t\tkey: \"color\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar r = value.r;\n\t\t\t\tvar g = value.g;\n\t\t\t\tvar b = value.b;\n\n\t\t\t\tif (this._color.r === r && this._color.g === g && this._color.b === b) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._color.r = r;\n\t\t\t\tthis._color.g = g;\n\t\t\t\tthis._color.b = b;\n\t\t\t\tthis._colorUniform[0] = r;\n\t\t\t\tthis._colorUniform[1] = g;\n\t\t\t\tthis._colorUniform[2] = b;\n\n\t\t\t\tthis._renderable.setParameter('material_emissive', this._colorUniform);\n\n\t\t\t\tif (this._element) {\n\t\t\t\t\tthis._element.fire('set:color', this._color);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"opacity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color.a;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === this._color.a) return;\n\t\t\t\tthis._color.a = value;\n\n\t\t\t\tthis._renderable.setParameter('material_opacity', value);\n\n\t\t\t\tif (this._element) {\n\t\t\t\t\tthis._element.fire('set:opacity', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rect\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rect;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar x, y, z, w;\n\n\t\t\t\tif (value instanceof Vec4) {\n\t\t\t\t\tx = value.x;\n\t\t\t\t\ty = value.y;\n\t\t\t\t\tz = value.z;\n\t\t\t\t\tw = value.w;\n\t\t\t\t} else {\n\t\t\t\t\tx = value[0];\n\t\t\t\t\ty = value[1];\n\t\t\t\t\tz = value[2];\n\t\t\t\t\tw = value[3];\n\t\t\t\t}\n\n\t\t\t\tif (x === this._rect.x && y === this._rect.y && z === this._rect.z && w === this._rect.w) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._rect.set(x, y, z, w);\n\n\t\t\t\tif (this._renderable.mesh) {\n\t\t\t\t\tif (!this._element._beingInitialized) {\n\t\t\t\t\t\tthis._updateMesh(this._renderable.mesh);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._meshDirty = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"material\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._material;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._material === value) return;\n\n\t\t\t\tif (!value) {\n\t\t\t\t\tvar screenSpace = this._element._isScreenSpace();\n\n\t\t\t\t\tif (this.mask) {\n\t\t\t\t\t\tvalue = screenSpace ? this._system.defaultScreenSpaceImageMaskMaterial : this._system.defaultImageMaskMaterial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = screenSpace ? this._system.defaultScreenSpaceImageMaterial : this._system.defaultImageMaterial;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._material = value;\n\n\t\t\t\tif (value) {\n\t\t\t\t\tthis._renderable.setMaterial(value);\n\n\t\t\t\t\tif (this._hasUserMaterial()) {\n\t\t\t\t\t\tthis._renderable.deleteParameter('material_opacity');\n\n\t\t\t\t\t\tthis._renderable.deleteParameter('material_emissive');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\t\t\tthis._colorUniform[2] = this._color.b;\n\n\t\t\t\t\t\tthis._renderable.setParameter('material_emissive', this._colorUniform);\n\n\t\t\t\t\t\tthis._renderable.setParameter('material_opacity', this._color.a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"materialAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._materialAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar assets = this._system.app.assets;\n\t\t\t\tvar _id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._materialAsset !== _id) {\n\t\t\t\t\tif (this._materialAsset) {\n\t\t\t\t\t\tassets.off('add:' + this._materialAsset, this._onMaterialAdded, this);\n\n\t\t\t\t\t\tvar _prev = assets.get(this._materialAsset);\n\n\t\t\t\t\t\tif (_prev) {\n\t\t\t\t\t\t\t_prev.off(\"load\", this._onMaterialLoad, this);\n\n\t\t\t\t\t\t\t_prev.off(\"change\", this._onMaterialChange, this);\n\n\t\t\t\t\t\t\t_prev.off(\"remove\", this._onMaterialRemove, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._materialAsset = _id;\n\n\t\t\t\t\tif (this._materialAsset) {\n\t\t\t\t\t\tvar asset = assets.get(this._materialAsset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis.material = null;\n\t\t\t\t\t\t\tassets.on('add:' + this._materialAsset, this._onMaterialAdded, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.material = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"texture\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._texture;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._texture === value) return;\n\n\t\t\t\tif (this._textureAsset) {\n\t\t\t\t\tvar textureAsset = this._system.app.assets.get(this._textureAsset);\n\n\t\t\t\t\tif (textureAsset && textureAsset.resource !== value) {\n\t\t\t\t\t\tthis.textureAsset = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._texture = value;\n\n\t\t\t\tif (value) {\n\t\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\t\tthis.spriteAsset = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._renderable.setParameter(\"texture_emissiveMap\", this._texture);\n\n\t\t\t\t\tthis._renderable.setParameter(\"texture_opacityMap\", this._texture);\n\n\t\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\t\tthis._colorUniform[2] = this._color.b;\n\n\t\t\t\t\tthis._renderable.setParameter(\"material_emissive\", this._colorUniform);\n\n\t\t\t\t\tthis._renderable.setParameter(\"material_opacity\", this._color.a);\n\t\t\t\t} else {\n\t\t\t\t\tthis._renderable.deleteParameter(\"texture_emissiveMap\");\n\n\t\t\t\t\tthis._renderable.deleteParameter(\"texture_opacityMap\");\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"textureAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._textureAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar assets = this._system.app.assets;\n\t\t\t\tvar _id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._textureAsset !== _id) {\n\t\t\t\t\tif (this._textureAsset) {\n\t\t\t\t\t\tassets.off('add:' + this._textureAsset, this._onTextureAdded, this);\n\n\t\t\t\t\t\tvar _prev = assets.get(this._textureAsset);\n\n\t\t\t\t\t\tif (_prev) {\n\t\t\t\t\t\t\t_prev.off(\"load\", this._onTextureLoad, this);\n\n\t\t\t\t\t\t\t_prev.off(\"change\", this._onTextureChange, this);\n\n\t\t\t\t\t\t\t_prev.off(\"remove\", this._onTextureRemove, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._textureAsset = _id;\n\n\t\t\t\t\tif (this._textureAsset) {\n\t\t\t\t\t\tvar asset = assets.get(this._textureAsset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis.texture = null;\n\t\t\t\t\t\t\tassets.on('add:' + this._textureAsset, this._onTextureAdded, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindTextureAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.texture = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"spriteAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._spriteAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar assets = this._system.app.assets;\n\t\t\t\tvar _id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._spriteAsset !== _id) {\n\t\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\t\tassets.off('add:' + this._spriteAsset, this._onSpriteAssetAdded, this);\n\n\t\t\t\t\t\tvar _prev = assets.get(this._spriteAsset);\n\n\t\t\t\t\t\tif (_prev) {\n\t\t\t\t\t\t\tthis._unbindSpriteAsset(_prev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._spriteAsset = _id;\n\n\t\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\t\tvar asset = assets.get(this._spriteAsset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis.sprite = null;\n\t\t\t\t\t\t\tassets.on('add:' + this._spriteAsset, this._onSpriteAssetAdded, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindSpriteAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.sprite = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._element) {\n\t\t\t\t\t\tthis._element.fire('set:spriteAsset', _id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"sprite\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._sprite;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._sprite === value) return;\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._unbindSprite(this._sprite);\n\t\t\t\t}\n\n\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\tvar spriteAsset = this._system.app.assets.get(this._spriteAsset);\n\n\t\t\t\t\tif (spriteAsset && spriteAsset.resource !== value) {\n\t\t\t\t\t\tthis.spriteAsset = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._sprite = value;\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._bindSprite(this._sprite);\n\n\t\t\t\t\tif (this._textureAsset) {\n\t\t\t\t\t\tthis.textureAsset = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._sprite && this._sprite.atlas && this._sprite.atlas.texture) {\n\t\t\t\t\tthis._renderable.setParameter(\"texture_emissiveMap\", this._sprite.atlas.texture);\n\n\t\t\t\t\tthis._renderable.setParameter(\"texture_opacityMap\", this._sprite.atlas.texture);\n\t\t\t\t} else {\n\t\t\t\t\tthis._renderable.deleteParameter(\"texture_emissiveMap\");\n\n\t\t\t\t\tthis._renderable.deleteParameter(\"texture_opacityMap\");\n\t\t\t\t}\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._spriteFrame = math.clamp(this._spriteFrame, 0, this._sprite.frameKeys.length - 1);\n\t\t\t\t}\n\n\t\t\t\tthis._updateSprite();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"spriteFrame\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._spriteFrame;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar oldValue = this._spriteFrame;\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._spriteFrame = math.clamp(value, 0, this._sprite.frameKeys.length - 1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._spriteFrame = value;\n\t\t\t\t}\n\n\t\t\t\tif (this._spriteFrame === oldValue) return;\n\n\t\t\t\tthis._updateSprite();\n\n\t\t\t\tif (this._element) {\n\t\t\t\t\tthis._element.fire('set:spriteFrame', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"mesh\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._renderable.mesh;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._renderable.setMesh(value);\n\n\t\t\t\tif (this._defaultMesh === value) {\n\t\t\t\t\tthis._renderable.setAabbFunc(null);\n\t\t\t\t} else {\n\t\t\t\t\tthis._renderable.setAabbFunc(this._updateAabbFunc);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"mask\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._mask;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._mask !== value) {\n\t\t\t\t\tthis._mask = value;\n\n\t\t\t\t\tthis._toggleMask();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pixelsPerUnit\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._pixelsPerUnit;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._pixelsPerUnit === value) return;\n\t\t\t\tthis._pixelsPerUnit = value;\n\n\t\t\t\tif (this._sprite && (this._sprite.renderMode === SPRITE_RENDERMODE_SLICED || this._sprite.renderMode === SPRITE_RENDERMODE_TILED)) {\n\t\t\t\t\tthis._updateSprite();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._renderable.meshInstance) {\n\t\t\t\t\treturn this._renderable.meshInstance.aabb;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ImageElement;\n\t}();\n\n\tvar LocalizedAsset = function (_EventHandler) {\n\t\t_inheritsLoose(LocalizedAsset, _EventHandler);\n\n\t\tfunction LocalizedAsset(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._app = app;\n\t\t\tapp.i18n.on('set:locale', _this._onSetLocale, _assertThisInitialized(_this));\n\t\t\t_this._autoLoad = false;\n\t\t\t_this._disableLocalization = false;\n\t\t\t_this._defaultAsset = null;\n\t\t\t_this._localizedAsset = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LocalizedAsset.prototype;\n\n\t\t_proto._bindDefaultAsset = function _bindDefaultAsset() {\n\t\t\tvar asset = this._app.assets.get(this._defaultAsset);\n\n\t\t\tif (!asset) {\n\t\t\t\tthis._app.assets.once('add:' + this._defaultAsset, this._onDefaultAssetAdd, this);\n\t\t\t} else {\n\t\t\t\tthis._onDefaultAssetAdd(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindDefaultAsset = function _unbindDefaultAsset() {\n\t\t\tif (!this._defaultAsset) return;\n\n\t\t\tthis._app.assets.off('add:' + this._defaultAsset, this._onDefaultAssetAdd, this);\n\n\t\t\tvar asset = this._app.assets.get(this._defaultAsset);\n\n\t\t\tif (!asset) return;\n\t\t\tasset.off('add:localized', this._onLocaleAdd, this);\n\t\t\tasset.off('remove:localized', this._onLocaleRemove, this);\n\t\t\tasset.off('remove', this._onDefaultAssetRemove, this);\n\t\t};\n\n\t\t_proto._onDefaultAssetAdd = function _onDefaultAssetAdd(asset) {\n\t\t\tif (this._defaultAsset !== asset.id) return;\n\t\t\tasset.on('add:localized', this._onLocaleAdd, this);\n\t\t\tasset.on('remove:localized', this._onLocaleRemove, this);\n\t\t\tasset.once('remove', this._onDefaultAssetRemove, this);\n\t\t};\n\n\t\t_proto._onDefaultAssetRemove = function _onDefaultAssetRemove(asset) {\n\t\t\tif (this._defaultAsset !== asset.id) return;\n\t\t\tasset.off('add:localized', this._onLocaleAdd, this);\n\t\t\tasset.off('remove:localized', this._onLocaleAdd, this);\n\n\t\t\tthis._app.assets.once('add:' + this._defaultAsset, this._onDefaultAssetAdd, this);\n\t\t};\n\n\t\t_proto._bindLocalizedAsset = function _bindLocalizedAsset() {\n\t\t\tif (!this._autoLoad) return;\n\n\t\t\tvar asset = this._app.assets.get(this._localizedAsset);\n\n\t\t\tif (!asset) return;\n\t\t\tasset.on(\"load\", this._onLocalizedAssetLoad, this);\n\t\t\tasset.on(\"change\", this._onLocalizedAssetChange, this);\n\t\t\tasset.on(\"remove\", this._onLocalizedAssetRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onLocalizedAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tthis._app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindLocalizedAsset = function _unbindLocalizedAsset() {\n\t\t\tvar asset = this._app.assets.get(this._localizedAsset);\n\n\t\t\tif (!asset) return;\n\t\t\tasset.off(\"load\", this._onLocalizedAssetLoad, this);\n\t\t\tasset.off(\"change\", this._onLocalizedAssetChange, this);\n\t\t\tasset.off(\"remove\", this._onLocalizedAssetRemove, this);\n\t\t};\n\n\t\t_proto._onLocalizedAssetAdd = function _onLocalizedAssetAdd(asset) {\n\t\t\tif (this._localizedAsset !== asset.id) return;\n\n\t\t\tthis._bindLocalizedAsset();\n\t\t};\n\n\t\t_proto._onLocalizedAssetLoad = function _onLocalizedAssetLoad(asset) {\n\t\t\tthis.fire('load', asset);\n\t\t};\n\n\t\t_proto._onLocalizedAssetChange = function _onLocalizedAssetChange(asset, name, newValue, oldValue) {\n\t\t\tthis.fire('change', asset, name, newValue, oldValue);\n\t\t};\n\n\t\t_proto._onLocalizedAssetRemove = function _onLocalizedAssetRemove(asset) {\n\t\t\tif (this._localizedAsset === asset.id) {\n\t\t\t\tthis.localizedAsset = this._defaultAsset;\n\t\t\t}\n\n\t\t\tthis.fire('remove', asset);\n\t\t};\n\n\t\t_proto._onLocaleAdd = function _onLocaleAdd(locale, assetId) {\n\t\t\tif (this._app.i18n.locale !== locale) return;\n\n\t\t\tthis._onSetLocale(locale);\n\t\t};\n\n\t\t_proto._onLocaleRemove = function _onLocaleRemove(locale, assetId) {\n\t\t\tif (this._app.i18n.locale !== locale) return;\n\n\t\t\tthis._onSetLocale(locale);\n\t\t};\n\n\t\t_proto._onSetLocale = function _onSetLocale(locale) {\n\t\t\tif (!this._defaultAsset) {\n\t\t\t\tthis.localizedAsset = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar asset = this._app.assets.get(this._defaultAsset);\n\n\t\t\tif (!asset || this._disableLocalization) {\n\t\t\t\tthis.localizedAsset = this._defaultAsset;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar localizedAssetId = asset.getLocalizedAssetId(locale);\n\n\t\t\tif (!localizedAssetId) {\n\t\t\t\tthis.localizedAsset = this._defaultAsset;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.localizedAsset = localizedAssetId;\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.defaultAsset = null;\n\n\t\t\tthis._app.i18n.off('set:locale', this._onSetLocale, this);\n\n\t\t\tthis.off();\n\t\t};\n\n\t\t_createClass(LocalizedAsset, [{\n\t\t\tkey: \"defaultAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._defaultAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar id = value instanceof Asset ? value.id : value;\n\t\t\t\tif (this._defaultAsset === id) return;\n\n\t\t\t\tif (this._defaultAsset) {\n\t\t\t\t\tthis._unbindDefaultAsset();\n\t\t\t\t}\n\n\t\t\t\tthis._defaultAsset = id;\n\n\t\t\t\tif (this._defaultAsset) {\n\t\t\t\t\tthis._bindDefaultAsset();\n\t\t\t\t}\n\n\t\t\t\tthis._onSetLocale(this._app.i18n.locale);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"localizedAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._localizedAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar id = value instanceof Asset ? value.id : value;\n\n\t\t\t\tif (this._localizedAsset === id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._localizedAsset) {\n\t\t\t\t\tthis._app.assets.off('add:' + this._localizedAsset, this._onLocalizedAssetAdd, this);\n\n\t\t\t\t\tthis._unbindLocalizedAsset();\n\n\t\t\t\t\tthis._localizedAsset = null;\n\t\t\t\t}\n\n\t\t\t\tthis._localizedAsset = id;\n\n\t\t\t\tif (this._localizedAsset) {\n\t\t\t\t\tvar asset = this._app.assets.get(this._localizedAsset);\n\n\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\tthis._app.assets.once('add:' + this._localizedAsset, this._onLocalizedAssetAdd, this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._bindLocalizedAsset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoLoad\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoLoad;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._autoLoad === value) return;\n\t\t\t\tthis._autoLoad = value;\n\n\t\t\t\tif (this._autoLoad && this._localizedAsset) {\n\t\t\t\t\tthis._unbindLocalizedAsset();\n\n\t\t\t\t\tthis._bindLocalizedAsset();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"disableLocalization\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._disableLocalization;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._disableLocalization === value) return;\n\t\t\t\tthis._disableLocalization = value;\n\n\t\t\t\tthis._onSetLocale(this._app.i18n.locale);\n\t\t\t}\n\t\t}]);\n\n\t\treturn LocalizedAsset;\n\t}(EventHandler);\n\n\tvar EOF_TOKEN = 0;\n\tvar ERROR_TOKEN = 1;\n\tvar TEXT_TOKEN = 2;\n\tvar OPEN_BRACKET_TOKEN = 3;\n\tvar CLOSE_BRACKET_TOKEN = 4;\n\tvar EQUALS_TOKEN = 5;\n\tvar STRING_TOKEN = 6;\n\tvar IDENTIFIER_TOKEN = 7;\n\tvar WHITESPACE_TOKEN = 8;\n\tvar WHITESPACE_CHARS = \" \\t\\n\\r\\v\\f\";\n\tvar IDENTIFIER_REGEX = /[A-Z|a-z|0-9|_|-|/]/;\n\n\tvar Scanner = function () {\n\t\tfunction Scanner(symbols) {\n\t\t\tthis._symbols = symbols;\n\t\t\tthis._index = 0;\n\t\t\tthis._last = 0;\n\t\t\tthis._cur = this._symbols.length > 0 ? this._symbols[0] : null;\n\t\t\tthis._buf = [];\n\t\t\tthis._mode = \"text\";\n\t\t\tthis._error = null;\n\t\t}\n\n\t\tvar _proto = Scanner.prototype;\n\n\t\t_proto.read = function read() {\n\t\t\tvar token = this._read();\n\n\t\t\twhile (token === WHITESPACE_TOKEN) {\n\t\t\t\ttoken = this._read();\n\t\t\t}\n\n\t\t\tif (token !== EOF_TOKEN && token !== ERROR_TOKEN) {\n\t\t\t\tthis._last = this._index;\n\t\t\t}\n\n\t\t\treturn token;\n\t\t};\n\n\t\t_proto.buf = function buf() {\n\t\t\treturn this._buf;\n\t\t};\n\n\t\t_proto.last = function last() {\n\t\t\treturn this._last;\n\t\t};\n\n\t\t_proto.error = function error() {\n\t\t\treturn this._error;\n\t\t};\n\n\t\t_proto.debugPrint = function debugPrint() {\n\t\t\tvar tokenStrings = [\"EOF\", \"ERROR\", \"TEXT\", \"OPEN_BRACKET\", \"CLOSE_BRACKET\", \"EQUALS\", \"STRING\", \"IDENTIFIER\", \"WHITESPACE\"];\n\t\t\tvar token = this.read();\n\t\t\tvar result = \"\";\n\n\t\t\twhile (true) {\n\t\t\t\tresult += (result.length > 0 ? \"\\n\" : \"\") + tokenStrings[token] + \" '\" + this.buf().join(\"\") + \"'\";\n\n\t\t\t\tif (token === EOF_TOKEN || token === ERROR_TOKEN) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ttoken = this.read();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._read = function _read() {\n\t\t\tthis._buf = [];\n\n\t\t\tif (this._eof()) {\n\t\t\t\treturn EOF_TOKEN;\n\t\t\t}\n\n\t\t\treturn this._mode === \"text\" ? this._text() : this._tag();\n\t\t};\n\n\t\t_proto._text = function _text() {\n\t\t\twhile (true) {\n\t\t\t\tswitch (this._cur) {\n\t\t\t\t\tcase null:\n\t\t\t\t\t\treturn this._buf.length > 0 ? TEXT_TOKEN : EOF_TOKEN;\n\n\t\t\t\t\tcase \"[\":\n\t\t\t\t\t\tthis._mode = \"tag\";\n\t\t\t\t\t\treturn this._buf.length > 0 ? TEXT_TOKEN : this._tag();\n\n\t\t\t\t\tcase \"\\\\\":\n\t\t\t\t\t\tthis._next();\n\n\t\t\t\t\t\tswitch (this._cur) {\n\t\t\t\t\t\t\tcase \"[\":\n\t\t\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis._output(\"\\\\\");\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._tag = function _tag() {\n\t\t\twhile (true) {\n\t\t\t\tswitch (this._cur) {\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tthis._error = \"unexpected end of input reading tag\";\n\t\t\t\t\t\treturn ERROR_TOKEN;\n\n\t\t\t\t\tcase \"[\":\n\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\treturn OPEN_BRACKET_TOKEN;\n\n\t\t\t\t\tcase \"]\":\n\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\tthis._mode = \"text\";\n\t\t\t\t\t\treturn CLOSE_BRACKET_TOKEN;\n\n\t\t\t\t\tcase \"=\":\n\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\treturn EQUALS_TOKEN;\n\n\t\t\t\t\tcase \" \":\n\t\t\t\t\tcase \"\\t\":\n\t\t\t\t\tcase \"\\n\":\n\t\t\t\t\tcase \"\\r\":\n\t\t\t\t\tcase \"\\v\":\n\t\t\t\t\tcase \"\\f\":\n\t\t\t\t\t\treturn this._whitespace();\n\n\t\t\t\t\tcase \"\\\"\":\n\t\t\t\t\t\treturn this._string();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (!this._isIdentifierSymbol(this._cur)) {\n\t\t\t\t\t\t\tthis._error = \"unrecognized character\";\n\t\t\t\t\t\t\treturn ERROR_TOKEN;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this._identifier();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._whitespace = function _whitespace() {\n\t\t\tthis._store();\n\n\t\t\twhile (WHITESPACE_CHARS.indexOf(this._cur) !== -1) {\n\t\t\t\tthis._store();\n\t\t\t}\n\n\t\t\treturn WHITESPACE_TOKEN;\n\t\t};\n\n\t\t_proto._string = function _string() {\n\t\t\tthis._next();\n\n\t\t\twhile (true) {\n\t\t\t\tswitch (this._cur) {\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tthis._error = \"unexpected end of input reading string\";\n\t\t\t\t\t\treturn ERROR_TOKEN;\n\n\t\t\t\t\tcase \"\\\"\":\n\t\t\t\t\t\tthis._next();\n\n\t\t\t\t\t\treturn STRING_TOKEN;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._store();\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._identifier = function _identifier() {\n\t\t\tthis._store();\n\n\t\t\twhile (this._cur !== null && this._isIdentifierSymbol(this._cur)) {\n\t\t\t\tthis._store();\n\t\t\t}\n\n\t\t\treturn IDENTIFIER_TOKEN;\n\t\t};\n\n\t\t_proto._isIdentifierSymbol = function _isIdentifierSymbol(s) {\n\t\t\treturn s.length === 1 && s.match(IDENTIFIER_REGEX) !== null;\n\t\t};\n\n\t\t_proto._eof = function _eof() {\n\t\t\treturn this._cur === null;\n\t\t};\n\n\t\t_proto._next = function _next() {\n\t\t\tif (!this._eof()) {\n\t\t\t\tthis._index++;\n\t\t\t\tthis._cur = this._index < this._symbols.length ? this._symbols[this._index] : null;\n\t\t\t}\n\n\t\t\treturn this._cur;\n\t\t};\n\n\t\t_proto._store = function _store() {\n\t\t\tthis._buf.push(this._cur);\n\n\t\t\treturn this._next();\n\t\t};\n\n\t\t_proto._output = function _output(c) {\n\t\t\tthis._buf.push(c);\n\t\t};\n\n\t\treturn Scanner;\n\t}();\n\n\tvar Parser = function () {\n\t\tfunction Parser(symbols) {\n\t\t\tthis._scanner = new Scanner(symbols);\n\t\t\tthis._error = null;\n\t\t}\n\n\t\tvar _proto2 = Parser.prototype;\n\n\t\t_proto2.parse = function parse(symbols, tags) {\n\t\t\twhile (true) {\n\t\t\t\tvar token = this._scanner.read();\n\n\t\t\t\tswitch (token) {\n\t\t\t\t\tcase EOF_TOKEN:\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\tcase ERROR_TOKEN:\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tcase TEXT_TOKEN:\n\t\t\t\t\t\tArray.prototype.push.apply(symbols, this._scanner.buf());\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase OPEN_BRACKET_TOKEN:\n\t\t\t\t\t\tif (!this._parseTag(symbols, tags)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.error = function error() {\n\t\t\treturn \"Error evaluating markup at #\" + this._scanner.last().toString() + \" (\" + (this._scanner.error() || this._error) + \")\";\n\t\t};\n\n\t\t_proto2._parseTag = function _parseTag(symbols, tags) {\n\t\t\tvar token = this._scanner.read();\n\n\t\t\tif (token !== IDENTIFIER_TOKEN) {\n\t\t\t\tthis._error = \"expected identifier\";\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar name = this._scanner.buf().join(\"\");\n\n\t\t\tif (name[0] === \"/\") {\n\t\t\t\tfor (var index = tags.length - 1; index >= 0; --index) {\n\t\t\t\t\tif (name === \"/\" + tags[index].name && tags[index].end === null) {\n\t\t\t\t\t\ttags[index].end = symbols.length;\n\t\t\t\t\t\ttoken = this._scanner.read();\n\n\t\t\t\t\t\tif (token !== CLOSE_BRACKET_TOKEN) {\n\t\t\t\t\t\t\tthis._error = \"expected close bracket\";\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._error = \"failed to find matching tag\";\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar tag = {\n\t\t\t\tname: name,\n\t\t\t\tvalue: null,\n\t\t\t\tattributes: {},\n\t\t\t\tstart: symbols.length,\n\t\t\t\tend: null\n\t\t\t};\n\t\t\ttoken = this._scanner.read();\n\n\t\t\tif (token === EQUALS_TOKEN) {\n\t\t\t\ttoken = this._scanner.read();\n\n\t\t\t\tif (token !== STRING_TOKEN) {\n\t\t\t\t\tthis._error = \"expected string\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ttag.value = this._scanner.buf().join(\"\");\n\t\t\t\ttoken = this._scanner.read();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tswitch (token) {\n\t\t\t\t\tcase CLOSE_BRACKET_TOKEN:\n\t\t\t\t\t\ttags.push(tag);\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\tcase IDENTIFIER_TOKEN:\n\t\t\t\t\t\tvar identifier = this._scanner.buf().join(\"\");\n\n\t\t\t\t\t\ttoken = this._scanner.read();\n\n\t\t\t\t\t\tif (token !== EQUALS_TOKEN) {\n\t\t\t\t\t\t\tthis._error = \"expected equals\";\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoken = this._scanner.read();\n\n\t\t\t\t\t\tif (token !== STRING_TOKEN) {\n\t\t\t\t\t\t\tthis._error = \"expected string\";\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar value = this._scanner.buf().join(\"\");\n\n\t\t\t\t\t\ttag.attributes[identifier] = value;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._error = \"expected close bracket or identifier\";\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ttoken = this._scanner.read();\n\t\t\t}\n\t\t};\n\n\t\treturn Parser;\n\t}();\n\n\tfunction merge(target, source) {\n\t\tfor (var key in source) {\n\t\t\tif (!source.hasOwnProperty(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar value = source[key];\n\n\t\t\tif (value instanceof Object) {\n\t\t\t\tif (!target.hasOwnProperty(key)) {\n\t\t\t\t\ttarget[key] = {};\n\t\t\t\t}\n\n\t\t\t\tmerge(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\ttarget[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction combineTags(tags) {\n\t\tif (tags.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar result = {};\n\n\t\tfor (var index = 0; index < tags.length; ++index) {\n\t\t\tvar tag = tags[index];\n\t\t\tvar tmp = {};\n\t\t\ttmp[tag.name] = {\n\t\t\t\tvalue: tag.value,\n\t\t\t\tattributes: tag.attributes\n\t\t\t};\n\t\t\tmerge(result, tmp);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction resolveMarkupTags(tags, numSymbols) {\n\t\tvar index;\n\n\t\tif (tags.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar edges = {};\n\n\t\tfor (index = 0; index < tags.length; ++index) {\n\t\t\tvar tag = tags[index];\n\n\t\t\tif (!edges.hasOwnProperty(tag.start)) {\n\t\t\t\tedges[tag.start] = {\n\t\t\t\t\topen: [tag],\n\t\t\t\t\tclose: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (edges[tag.start].open === null) {\n\t\t\t\t\tedges[tag.start].open = [tag];\n\t\t\t\t} else {\n\t\t\t\t\tedges[tag.start].open.push(tag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!edges.hasOwnProperty(tag.end)) {\n\t\t\t\tedges[tag.end] = {\n\t\t\t\t\topen: null,\n\t\t\t\t\tclose: [tag]\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (edges[tag.end].close === null) {\n\t\t\t\t\tedges[tag.end].close = [tag];\n\t\t\t\t} else {\n\t\t\t\t\tedges[tag.end].close.push(tag);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tagStack = [];\n\n\t\tfunction removeTags(tags) {\n\t\t\ttagStack = tagStack.filter(function (tag) {\n\t\t\t\treturn tags.find(function (t) {\n\t\t\t\t\treturn t === tag;\n\t\t\t\t}) === undefined;\n\t\t\t});\n\t\t}\n\n\t\tfunction addTags(tags) {\n\t\t\tfor (var index = 0; index < tags.length; ++index) {\n\t\t\t\ttagStack.push(tags[index]);\n\t\t\t}\n\t\t}\n\n\t\tvar edgeKeys = Object.keys(edges).sort(function (a, b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tvar resolvedTags = [];\n\n\t\tfor (index = 0; index < edgeKeys.length; ++index) {\n\t\t\tvar edge = edges[edgeKeys[index]];\n\n\t\t\tif (edge.close !== null) {\n\t\t\t\tremoveTags(edge.close);\n\t\t\t}\n\n\t\t\tif (edge.open !== null) {\n\t\t\t\taddTags(edge.open);\n\t\t\t}\n\n\t\t\tresolvedTags.push({\n\t\t\t\tstart: edgeKeys[index],\n\t\t\t\ttags: combineTags(tagStack)\n\t\t\t});\n\t\t}\n\n\t\tvar result = [];\n\t\tvar prevTag = null;\n\n\t\tfor (index = 0; index < resolvedTags.length; ++index) {\n\t\t\tvar resolvedTag = resolvedTags[index];\n\n\t\t\twhile (result.length < resolvedTag.start) {\n\t\t\t\tresult.push(prevTag ? prevTag.tags : null);\n\t\t\t}\n\n\t\t\tprevTag = resolvedTag;\n\t\t}\n\n\t\twhile (result.length < numSymbols) {\n\t\t\tresult.push(null);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction evaluateMarkup(symbols) {\n\t\tvar parser = new Parser(symbols);\n\t\tvar stripped_symbols = [];\n\t\tvar tags = [];\n\n\t\tif (!parser.parse(stripped_symbols, tags)) {\n\t\t\tconsole.warn(parser.error());\n\t\t\treturn {\n\t\t\t\tsymbols: symbols,\n\t\t\t\ttags: null\n\t\t\t};\n\t\t}\n\n\t\tvar invalidTag = tags.find(function (t) {\n\t\t\treturn t.end === null;\n\t\t});\n\n\t\tif (invalidTag) {\n\t\t\tconsole.warn(\"Markup error: found unclosed tag='\" + invalidTag.name + \"'\");\n\t\t\treturn {\n\t\t\t\tsymbols: symbols,\n\t\t\t\ttags: null\n\t\t\t};\n\t\t}\n\n\t\tvar resolved_tags = resolveMarkupTags(tags, stripped_symbols.length);\n\t\treturn {\n\t\t\tsymbols: stripped_symbols,\n\t\t\ttags: resolved_tags\n\t\t};\n\t}\n\n\tvar Markup = function () {\n\t\tfunction Markup() {}\n\n\t\tMarkup.evaluate = function evaluate(symbols) {\n\t\t\treturn evaluateMarkup(symbols);\n\t\t};\n\n\t\treturn Markup;\n\t}();\n\n\tvar MeshInfo = function MeshInfo() {\n\t\tthis.count = 0;\n\t\tthis.quad = 0;\n\t\tthis.lines = {};\n\t\tthis.positions = [];\n\t\tthis.normals = [];\n\t\tthis.uvs = [];\n\t\tthis.colors = [];\n\t\tthis.indices = [];\n\t\tthis.meshInstance = null;\n\t};\n\n\tvar LINE_BREAK_CHAR = /^[\\r\\n]$/;\n\tvar WHITESPACE_CHAR = /^[ \\t]$/;\n\tvar WORD_BOUNDARY_CHAR = /^[ \\t\\-]$/;\n\tvar CONTROL_CHARS = [\"\\u061C\", \"\\u200E\", \"\\u200F\", \"\\u202A\", \"\\u202B\", \"\\u202C\", \"\\u202D\", \"\\u202E\", \"\\u2066\", \"\\u2067\", \"\\u2068\", \"\\u2069\"];\n\tvar CONTROL_GLYPH_DATA = {\n\t\twidth: 0,\n\t\theight: 0,\n\t\txadvance: 0,\n\t\txoffset: 0,\n\t\tyoffset: 0\n\t};\n\n\tvar TextElement = function () {\n\t\tfunction TextElement(element) {\n\t\t\tthis._element = element;\n\t\t\tthis._system = element.system;\n\t\t\tthis._entity = element.entity;\n\t\t\tthis._text = \"\";\n\t\t\tthis._symbols = [];\n\t\t\tthis._colorPalette = [];\n\t\t\tthis._symbolColors = null;\n\t\t\tthis._i18nKey = null;\n\t\t\tthis._fontAsset = new LocalizedAsset(this._system.app);\n\t\t\tthis._fontAsset.disableLocalization = true;\n\n\t\t\tthis._fontAsset.on('load', this._onFontLoad, this);\n\n\t\t\tthis._fontAsset.on('change', this._onFontChange, this);\n\n\t\t\tthis._fontAsset.on('remove', this._onFontRemove, this);\n\n\t\t\tthis._font = null;\n\t\t\tthis._color = new Color(1, 1, 1, 1);\n\t\t\tthis._colorUniform = new Float32Array(3);\n\t\t\tthis._spacing = 1;\n\t\t\tthis._fontSize = 32;\n\t\t\tthis._fontMinY = 0;\n\t\t\tthis._fontMaxY = 0;\n\t\t\tthis._originalFontSize = 32;\n\t\t\tthis._maxFontSize = 32;\n\t\t\tthis._minFontSize = 8;\n\t\t\tthis._autoFitWidth = false;\n\t\t\tthis._autoFitHeight = false;\n\t\t\tthis._maxLines = -1;\n\t\t\tthis._lineHeight = 32;\n\t\t\tthis._scaledLineHeight = 32;\n\t\t\tthis._wrapLines = false;\n\t\t\tthis._drawOrder = 0;\n\t\t\tthis._alignment = new Vec2(0.5, 0.5);\n\t\t\tthis._autoWidth = true;\n\t\t\tthis._autoHeight = true;\n\t\t\tthis.width = 0;\n\t\t\tthis.height = 0;\n\t\t\tthis._node = new GraphNode();\n\t\t\tthis._model = new Model();\n\t\t\tthis._model.graph = this._node;\n\n\t\t\tthis._entity.addChild(this._node);\n\n\t\t\tthis._meshInfo = [];\n\t\t\tthis._material = null;\n\t\t\tthis._aabbDirty = true;\n\t\t\tthis._aabb = new BoundingBox();\n\t\t\tthis._noResize = false;\n\t\t\tthis._currentMaterialType = null;\n\t\t\tthis._maskedMaterialSrc = null;\n\t\t\tthis._rtlReorder = false;\n\t\t\tthis._unicodeConverter = false;\n\t\t\tthis._rtl = false;\n\t\t\tthis._outlineColor = new Color(0, 0, 0, 1);\n\t\t\tthis._outlineColorUniform = new Float32Array(4);\n\t\t\tthis._outlineThicknessScale = 0.2;\n\t\t\tthis._outlineThickness = 0.0;\n\t\t\tthis._shadowColor = new Color(0, 0, 0, 1);\n\t\t\tthis._shadowColorUniform = new Float32Array(4);\n\t\t\tthis._shadowOffsetScale = 0.005;\n\t\t\tthis._shadowOffset = new Vec2(0, 0);\n\t\t\tthis._shadowOffsetUniform = new Float32Array(2);\n\t\t\tthis._enableMarkup = false;\n\n\t\t\tthis._onScreenChange(this._element.screen);\n\n\t\t\telement.on('resize', this._onParentResize, this);\n\t\t\telement.on('set:screen', this._onScreenChange, this);\n\t\t\telement.on('screen:set:screenspace', this._onScreenSpaceChange, this);\n\t\t\telement.on('set:draworder', this._onDrawOrderChange, this);\n\t\t\telement.on('set:pivot', this._onPivotChange, this);\n\n\t\t\tthis._system.app.i18n.on('set:locale', this._onLocaleSet, this);\n\n\t\t\tthis._system.app.i18n.on('data:add', this._onLocalizationData, this);\n\n\t\t\tthis._system.app.i18n.on('data:remove', this._onLocalizationData, this);\n\n\t\t\tthis._rangeStart = 0;\n\t\t\tthis._rangeEnd = 0;\n\t\t}\n\n\t\tvar _proto = TextElement.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._setMaterial(null);\n\n\t\t\tif (this._model) {\n\t\t\t\tthis._element.removeModelFromLayers(this._model);\n\n\t\t\t\tthis._model.destroy();\n\n\t\t\t\tthis._model = null;\n\t\t\t}\n\n\t\t\tthis._fontAsset.destroy();\n\n\t\t\tthis.font = null;\n\n\t\t\tthis._element.off('resize', this._onParentResize, this);\n\n\t\t\tthis._element.off('set:screen', this._onScreenChange, this);\n\n\t\t\tthis._element.off('screen:set:screenspace', this._onScreenSpaceChange, this);\n\n\t\t\tthis._element.off('set:draworder', this._onDrawOrderChange, this);\n\n\t\t\tthis._element.off('set:pivot', this._onPivotChange, this);\n\n\t\t\tthis._system.app.i18n.off('set:locale', this._onLocaleSet, this);\n\n\t\t\tthis._system.app.i18n.off('data:add', this._onLocalizationData, this);\n\n\t\t\tthis._system.app.i18n.off('data:remove', this._onLocalizationData, this);\n\t\t};\n\n\t\t_proto._onParentResize = function _onParentResize(width, height) {\n\t\t\tif (this._noResize) return;\n\t\t\tif (this._font) this._updateText();\n\t\t};\n\n\t\t_proto._onScreenChange = function _onScreenChange(screen) {\n\t\t\tif (screen) {\n\t\t\t\tthis._updateMaterial(screen.screen.screenSpace);\n\t\t\t} else {\n\t\t\t\tthis._updateMaterial(false);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onScreenSpaceChange = function _onScreenSpaceChange(value) {\n\t\t\tthis._updateMaterial(value);\n\t\t};\n\n\t\t_proto._onDrawOrderChange = function _onDrawOrderChange(order) {\n\t\t\tthis._drawOrder = order;\n\n\t\t\tif (this._model) {\n\t\t\t\tvar i;\n\t\t\t\tvar len;\n\n\t\t\t\tfor (i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\tthis._model.meshInstances[i].drawOrder = order;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onPivotChange = function _onPivotChange(pivot) {\n\t\t\tif (this._font) this._updateText();\n\t\t};\n\n\t\t_proto._onLocaleSet = function _onLocaleSet(locale) {\n\t\t\tif (!this._i18nKey) return;\n\n\t\t\tif (this.fontAsset) {\n\t\t\t\tvar asset = this._system.app.assets.get(this.fontAsset);\n\n\t\t\t\tif (!asset || !asset.resource || asset.resource !== this._font) {\n\t\t\t\t\tthis.font = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._resetLocalizedText();\n\t\t};\n\n\t\t_proto._onLocalizationData = function _onLocalizationData(locale, messages) {\n\t\t\tif (this._i18nKey && messages[this._i18nKey]) {\n\t\t\t\tthis._resetLocalizedText();\n\t\t\t}\n\t\t};\n\n\t\t_proto._resetLocalizedText = function _resetLocalizedText() {\n\t\t\tthis._setText(this._system.app.i18n.getText(this._i18nKey));\n\t\t};\n\n\t\t_proto._setText = function _setText(text) {\n\t\t\tif (this.unicodeConverter) {\n\t\t\t\tvar unicodeConverterFunc = this._system.getUnicodeConverter();\n\n\t\t\t\tif (unicodeConverterFunc) {\n\t\t\t\t\ttext = unicodeConverterFunc(text);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element created with unicodeConverter option but no unicodeConverter function registered');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._text !== text) {\n\t\t\t\tif (this._font) {\n\t\t\t\t\tthis._updateText(text);\n\t\t\t\t}\n\n\t\t\t\tthis._text = text;\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateText = function _updateText(text) {\n\t\t\tvar i;\n\t\t\tvar len;\n\t\t\tvar results;\n\t\t\tvar tags;\n\t\t\tif (text === undefined) text = this._text;\n\t\t\tthis._symbols = string.getSymbols(text);\n\n\t\t\tif (this._symbols.length === 0) {\n\t\t\t\tthis._symbols = [\" \"];\n\t\t\t}\n\n\t\t\tif (this._enableMarkup) {\n\t\t\t\tresults = Markup.evaluate(this._symbols);\n\t\t\t\tthis._symbols = results.symbols;\n\t\t\t\ttags = results.tags;\n\t\t\t}\n\n\t\t\tif (this._rtlReorder) {\n\t\t\t\tvar rtlReorderFunc = this._system.app.systems.element.getRtlReorder();\n\n\t\t\t\tif (rtlReorderFunc) {\n\t\t\t\t\tresults = rtlReorderFunc(this._symbols);\n\t\t\t\t\tthis._rtl = results.rtl;\n\t\t\t\t\tthis._symbols = results.mapping.map(function (v) {\n\t\t\t\t\t\treturn this._symbols[v];\n\t\t\t\t\t}, this);\n\n\t\t\t\t\tif (tags) {\n\t\t\t\t\t\ttags = results.mapping.map(function (v) {\n\t\t\t\t\t\t\treturn tags[v];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element created with rtlReorder option but no rtlReorder function registered');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._rtl = false;\n\t\t\t}\n\n\t\t\tif (tags) {\n\t\t\t\tvar paletteMap = {};\n\t\t\t\tthis._colorPalette = [Math.round(this._color.r * 255), Math.round(this._color.g * 255), Math.round(this._color.b * 255)];\n\t\t\t\tthis._symbolColors = [];\n\t\t\t\tpaletteMap[this._color.toString(false).toLowerCase()] = 0;\n\n\t\t\t\tfor (i = 0, len = this._symbols.length; i < len; ++i) {\n\t\t\t\t\tvar tag = tags[i];\n\t\t\t\t\tvar color = 0;\n\n\t\t\t\t\tif (tag && tag.color && tag.color.value) {\n\t\t\t\t\t\tvar c = tag.color.value;\n\n\t\t\t\t\t\tif (c.length === 7 && c[0] === \"#\") {\n\t\t\t\t\t\t\tvar hex = c.substring(1).toLowerCase();\n\n\t\t\t\t\t\t\tif (paletteMap.hasOwnProperty(hex)) {\n\t\t\t\t\t\t\t\tcolor = paletteMap[hex];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (/^([0-9a-f]{2}){3}$/.test(hex)) {\n\t\t\t\t\t\t\t\t\tcolor = this._colorPalette.length / 3;\n\t\t\t\t\t\t\t\t\tpaletteMap[hex] = color;\n\n\t\t\t\t\t\t\t\t\tthis._colorPalette.push(parseInt(hex.substring(0, 2), 16));\n\n\t\t\t\t\t\t\t\t\tthis._colorPalette.push(parseInt(hex.substring(2, 4), 16));\n\n\t\t\t\t\t\t\t\t\tthis._colorPalette.push(parseInt(hex.substring(4, 6), 16));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._symbolColors.push(color);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._colorPalette = [];\n\t\t\t\tthis._symbolColors = null;\n\t\t\t}\n\n\t\t\tvar charactersPerTexture = this._calculateCharsPerTexture();\n\n\t\t\tvar removedModel = false;\n\t\t\tvar element = this._element;\n\n\t\t\tvar screenSpace = element._isScreenSpace();\n\n\t\t\tvar screenCulled = element._isScreenCulled();\n\n\t\t\tvar visibleFn = function visibleFn(camera) {\n\t\t\t\treturn element.isVisibleForCamera(camera);\n\t\t\t};\n\n\t\t\tfor (i = 0, len = this._meshInfo.length; i < len; i++) {\n\t\t\t\tvar l = charactersPerTexture[i] || 0;\n\t\t\t\tvar meshInfo = this._meshInfo[i];\n\n\t\t\t\tif (meshInfo.count !== l) {\n\t\t\t\t\tif (!removedModel) {\n\t\t\t\t\t\telement.removeModelFromLayers(this._model);\n\t\t\t\t\t\tremovedModel = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshInfo.count = l;\n\t\t\t\t\tmeshInfo.positions.length = meshInfo.normals.length = l * 3 * 4;\n\t\t\t\t\tmeshInfo.indices.length = l * 3 * 2;\n\t\t\t\t\tmeshInfo.uvs.length = l * 2 * 4;\n\t\t\t\t\tmeshInfo.colors.length = l * 4 * 4;\n\n\t\t\t\t\tif (meshInfo.meshInstance) {\n\t\t\t\t\t\tthis._removeMeshInstance(meshInfo.meshInstance);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (l === 0) {\n\t\t\t\t\t\tmeshInfo.meshInstance = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var v = 0; v < l; v++) {\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 0] = v * 4;\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 1] = v * 4 + 1;\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 2] = v * 4 + 3;\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 3] = v * 4 + 2;\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 4] = v * 4 + 3;\n\t\t\t\t\t\tmeshInfo.indices[v * 3 * 2 + 5] = v * 4 + 1;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 0] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 1] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 2] = -1;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 3] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 4] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 5] = -1;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 6] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 7] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 8] = -1;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 9] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 10] = 0;\n\t\t\t\t\t\tmeshInfo.normals[v * 4 * 3 + 11] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mesh = createMesh(this._system.app.graphicsDevice, meshInfo.positions, {\n\t\t\t\t\t\tuvs: meshInfo.uvs,\n\t\t\t\t\t\tnormals: meshInfo.normals,\n\t\t\t\t\t\tcolors: meshInfo.colors,\n\t\t\t\t\t\tindices: meshInfo.indices\n\t\t\t\t\t});\n\t\t\t\t\tvar mi = new MeshInstance(this._node, mesh, this._material);\n\t\t\t\t\tmi.name = \"Text Element: \" + this._entity.name;\n\t\t\t\t\tmi.castShadow = false;\n\t\t\t\t\tmi.receiveShadow = false;\n\t\t\t\t\tmi.cull = !screenSpace;\n\t\t\t\t\tmi.screenSpace = screenSpace;\n\t\t\t\t\tmi.drawOrder = this._drawOrder;\n\n\t\t\t\t\tif (screenCulled) {\n\t\t\t\t\t\tmi.cull = true;\n\t\t\t\t\t\tmi.isVisibleFunc = visibleFn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._setTextureParams(mi, this._font.textures[i]);\n\n\t\t\t\t\tif (this._symbolColors) {\n\t\t\t\t\t\tthis._colorUniform[0] = 1;\n\t\t\t\t\t\tthis._colorUniform[1] = 1;\n\t\t\t\t\t\tthis._colorUniform[2] = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\t\t\tthis._colorUniform[2] = this._color.b;\n\t\t\t\t\t}\n\n\t\t\t\t\tmi.setParameter(\"material_emissive\", this._colorUniform);\n\t\t\t\t\tmi.setParameter(\"material_opacity\", this._color.a);\n\t\t\t\t\tmi.setParameter(\"font_sdfIntensity\", this._font.intensity);\n\t\t\t\t\tmi.setParameter(\"font_pxrange\", this._getPxRange(this._font));\n\t\t\t\t\tmi.setParameter(\"font_textureWidth\", this._font.data.info.maps[i].width);\n\t\t\t\t\tthis._outlineColorUniform[0] = this._outlineColor.r;\n\t\t\t\t\tthis._outlineColorUniform[1] = this._outlineColor.g;\n\t\t\t\t\tthis._outlineColorUniform[2] = this._outlineColor.b;\n\t\t\t\t\tthis._outlineColorUniform[3] = this._outlineColor.a;\n\t\t\t\t\tmi.setParameter(\"outline_color\", this._outlineColorUniform);\n\t\t\t\t\tmi.setParameter(\"outline_thickness\", this._outlineThicknessScale * this._outlineThickness);\n\t\t\t\t\tthis._shadowColorUniform[0] = this._shadowColor.r;\n\t\t\t\t\tthis._shadowColorUniform[1] = this._shadowColor.g;\n\t\t\t\t\tthis._shadowColorUniform[2] = this._shadowColor.b;\n\t\t\t\t\tthis._shadowColorUniform[3] = this._shadowColor.a;\n\t\t\t\t\tmi.setParameter(\"shadow_color\", this._shadowColorUniform);\n\t\t\t\t\tvar ratio = this._font.data.info.maps[i].width / this._font.data.info.maps[i].height;\n\t\t\t\t\tthis._shadowOffsetUniform[0] = this._shadowOffsetScale * this._shadowOffset.x;\n\t\t\t\t\tthis._shadowOffsetUniform[1] = ratio * this._shadowOffsetScale * this._shadowOffset.y;\n\t\t\t\t\tmi.setParameter(\"shadow_offset\", this._shadowOffsetUniform);\n\t\t\t\t\tmeshInfo.meshInstance = mi;\n\n\t\t\t\t\tthis._model.meshInstances.push(mi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._element.maskedBy) {\n\t\t\t\tthis._element._setMaskedBy(this._element.maskedBy);\n\t\t\t}\n\n\t\t\tif (removedModel && this._element.enabled && this._entity.enabled) {\n\t\t\t\tthis._element.addModelToLayers(this._model);\n\t\t\t}\n\n\t\t\tthis._updateMeshes();\n\n\t\t\tthis._rangeStart = 0;\n\t\t\tthis._rangeEnd = this._symbols.length;\n\n\t\t\tthis._updateRenderRange();\n\t\t};\n\n\t\t_proto._removeMeshInstance = function _removeMeshInstance(meshInstance) {\n\t\t\tmeshInstance.material = null;\n\t\t\tvar oldMesh = meshInstance.mesh;\n\n\t\t\tif (oldMesh) {\n\t\t\t\toldMesh.destroy();\n\t\t\t}\n\n\t\t\tvar idx = this._model.meshInstances.indexOf(meshInstance);\n\n\t\t\tif (idx !== -1) this._model.meshInstances.splice(idx, 1);\n\t\t};\n\n\t\t_proto._setMaterial = function _setMaterial(material) {\n\t\t\tvar i;\n\t\t\tvar len;\n\t\t\tthis._material = material;\n\n\t\t\tif (this._model) {\n\t\t\t\tfor (i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\tmi.material = material;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateMaterial = function _updateMaterial(screenSpace) {\n\t\t\tvar element = this._element;\n\n\t\t\tvar screenCulled = element._isScreenCulled();\n\n\t\t\tvar visibleFn = function visibleFn(camera) {\n\t\t\t\treturn element.isVisibleForCamera(camera);\n\t\t\t};\n\n\t\t\tvar msdf = this._font && this._font.type === FONT_MSDF;\n\t\t\tthis._material = this._system.getTextElementMaterial(screenSpace, msdf);\n\n\t\t\tif (this._model) {\n\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\tmi.cull = !screenSpace;\n\t\t\t\t\tmi.material = this._material;\n\t\t\t\t\tmi.screenSpace = screenSpace;\n\n\t\t\t\t\tif (screenCulled) {\n\t\t\t\t\t\tmi.cull = true;\n\t\t\t\t\t\tmi.isVisibleFunc = visibleFn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmi.isVisibleFunc = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateMeshes = function _updateMeshes() {\n\t\t\tvar json = this._font.data;\n\t\t\tvar self = this;\n\t\t\tvar minFont = Math.min(this._minFontSize, this._maxFontSize);\n\t\t\tvar maxFont = this._maxFontSize;\n\n\t\t\tvar autoFit = this._shouldAutoFit();\n\n\t\t\tif (autoFit) {\n\t\t\t\tthis._fontSize = this._maxFontSize;\n\t\t\t}\n\n\t\t\tvar MAGIC = 32;\n\t\t\tvar l = this._symbols.length;\n\t\t\tvar _x = 0;\n\t\t\tvar _y = 0;\n\t\t\tvar _z = 0;\n\t\t\tvar _xMinusTrailingWhitespace = 0;\n\t\t\tvar lines = 1;\n\t\t\tvar wordStartX = 0;\n\t\t\tvar wordStartIndex = 0;\n\t\t\tvar lineStartIndex = 0;\n\t\t\tvar numWordsThisLine = 0;\n\t\t\tvar numCharsThisLine = 0;\n\t\t\tvar numBreaksThisLine = 0;\n\t\t\tvar splitHorizontalAnchors = Math.abs(this._element.anchor.x - this._element.anchor.z) >= 0.0001;\n\t\t\tvar maxLineWidth = this._element.calculatedWidth;\n\n\t\t\tif (this.autoWidth && !splitHorizontalAnchors || !this._wrapLines) {\n\t\t\t\tmaxLineWidth = Number.POSITIVE_INFINITY;\n\t\t\t}\n\n\t\t\tvar fontMinY = 0;\n\t\t\tvar fontMaxY = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar char, data, i, j, quad;\n\n\t\t\tfunction breakLine(symbols, lineBreakIndex, lineBreakX) {\n\t\t\t\tself._lineWidths.push(Math.abs(lineBreakX));\n\n\t\t\t\tvar sliceStart = lineStartIndex > lineBreakIndex ? lineBreakIndex + 1 : lineStartIndex;\n\t\t\t\tvar sliceEnd = lineStartIndex > lineBreakIndex ? lineStartIndex + 1 : lineBreakIndex;\n\t\t\t\tvar chars = symbols.slice(sliceStart, sliceEnd);\n\n\t\t\t\tif (numBreaksThisLine) {\n\t\t\t\t\tvar i = chars.length;\n\n\t\t\t\t\twhile (i-- && numBreaksThisLine > 0) {\n\t\t\t\t\t\tif (LINE_BREAK_CHAR.test(chars[i])) {\n\t\t\t\t\t\t\tchars.splice(i, 1);\n\t\t\t\t\t\t\tnumBreaksThisLine--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tself._lineContents.push(chars.join(''));\n\n\t\t\t\t_x = 0;\n\t\t\t\t_y -= self._scaledLineHeight;\n\t\t\t\tlines++;\n\t\t\t\tnumWordsThisLine = 0;\n\t\t\t\tnumCharsThisLine = 0;\n\t\t\t\tnumBreaksThisLine = 0;\n\t\t\t\twordStartX = 0;\n\t\t\t\tlineStartIndex = lineBreakIndex;\n\t\t\t}\n\n\t\t\tvar retryUpdateMeshes = true;\n\n\t\t\twhile (retryUpdateMeshes) {\n\t\t\t\tretryUpdateMeshes = false;\n\n\t\t\t\tif (autoFit) {\n\t\t\t\t\tthis._scaledLineHeight = this._lineHeight * this._fontSize / (this._maxFontSize || 0.0001);\n\t\t\t\t} else {\n\t\t\t\t\tthis._scaledLineHeight = this._lineHeight;\n\t\t\t\t}\n\n\t\t\t\tthis.width = 0;\n\t\t\t\tthis.height = 0;\n\t\t\t\tthis._lineWidths = [];\n\t\t\t\tthis._lineContents = [];\n\t\t\t\t_x = 0;\n\t\t\t\t_y = 0;\n\t\t\t\t_z = 0;\n\t\t\t\t_xMinusTrailingWhitespace = 0;\n\t\t\t\tlines = 1;\n\t\t\t\twordStartX = 0;\n\t\t\t\twordStartIndex = 0;\n\t\t\t\tlineStartIndex = 0;\n\t\t\t\tnumWordsThisLine = 0;\n\t\t\t\tnumCharsThisLine = 0;\n\t\t\t\tnumBreaksThisLine = 0;\n\t\t\t\tscale = this._fontSize / MAGIC;\n\t\t\t\tfontMinY = this._fontMinY * scale;\n\t\t\t\tfontMaxY = this._fontMaxY * scale;\n\n\t\t\t\tfor (i = 0; i < this._meshInfo.length; i++) {\n\t\t\t\t\tthis._meshInfo[i].quad = 0;\n\t\t\t\t\tthis._meshInfo[i].lines = {};\n\t\t\t\t}\n\n\t\t\t\tvar color_r = 255;\n\t\t\t\tvar color_g = 255;\n\t\t\t\tvar color_b = 255;\n\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tchar = this._symbols[i];\n\t\t\t\t\tvar x = 0;\n\t\t\t\t\tvar y = 0;\n\t\t\t\t\tvar advance = 0;\n\t\t\t\t\tvar quadsize = 1;\n\t\t\t\t\tvar dataScale, size;\n\t\t\t\t\tdata = json.chars[char];\n\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\tif (CONTROL_CHARS.indexOf(char) !== -1) {\n\t\t\t\t\t\t\tdata = CONTROL_GLYPH_DATA;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (json.chars[' ']) {\n\t\t\t\t\t\t\t\tdata = json.chars[' '];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (var key in json.chars) {\n\t\t\t\t\t\t\t\t\tdata = json.chars[key];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tvar kerning = 0;\n\n\t\t\t\t\t\tif (numCharsThisLine > 0) {\n\t\t\t\t\t\t\tvar kernTable = this._font.data.kerning;\n\n\t\t\t\t\t\t\tif (kernTable) {\n\t\t\t\t\t\t\t\tvar kernLeft = kernTable[string.getCodePoint(this._symbols[i - 1]) || 0];\n\n\t\t\t\t\t\t\t\tif (kernLeft) {\n\t\t\t\t\t\t\t\t\tkerning = kernLeft[string.getCodePoint(this._symbols[i]) || 0] || 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataScale = data.scale || 1;\n\t\t\t\t\t\tsize = (data.width + data.height) / 2;\n\t\t\t\t\t\tquadsize = scale * size / dataScale;\n\t\t\t\t\t\tadvance = (data.xadvance + kerning) * scale;\n\t\t\t\t\t\tx = (data.xoffset - kerning) * scale;\n\t\t\t\t\t\ty = data.yoffset * scale;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(\"Couldn't substitute missing character: '\" + char + \"'\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isLineBreak = LINE_BREAK_CHAR.test(char);\n\n\t\t\t\t\tif (isLineBreak) {\n\t\t\t\t\t\tnumBreaksThisLine++;\n\n\t\t\t\t\t\tif (this._maxLines < 0 || lines < this._maxLines) {\n\t\t\t\t\t\t\tbreakLine(this._symbols, i, _xMinusTrailingWhitespace);\n\t\t\t\t\t\t\twordStartIndex = i + 1;\n\t\t\t\t\t\t\tlineStartIndex = i + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isWhitespace = WHITESPACE_CHAR.test(char);\n\t\t\t\t\tvar meshInfo = this._meshInfo[data && data.map || 0];\n\t\t\t\t\tvar candidateLineWidth = _x + this._spacing * advance;\n\n\t\t\t\t\tif (candidateLineWidth > maxLineWidth && numCharsThisLine > 0 && !isWhitespace) {\n\t\t\t\t\t\tif (this._maxLines < 0 || lines < this._maxLines) {\n\t\t\t\t\t\t\tif (numWordsThisLine === 0) {\n\t\t\t\t\t\t\t\twordStartIndex = i;\n\t\t\t\t\t\t\t\tbreakLine(this._symbols, i, _xMinusTrailingWhitespace);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar backtrack = Math.max(i - wordStartIndex, 0);\n\n\t\t\t\t\t\t\t\tif (this._meshInfo.length <= 1) {\n\t\t\t\t\t\t\t\t\tmeshInfo.lines[lines - 1] -= backtrack;\n\t\t\t\t\t\t\t\t\tmeshInfo.quad -= backtrack;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar backtrackStart = wordStartIndex;\n\t\t\t\t\t\t\t\t\tvar backtrackEnd = i;\n\n\t\t\t\t\t\t\t\t\tfor (j = backtrackStart; j < backtrackEnd; j++) {\n\t\t\t\t\t\t\t\t\t\tvar backChar = this._symbols[j];\n\t\t\t\t\t\t\t\t\t\tvar backCharData = json.chars[backChar];\n\t\t\t\t\t\t\t\t\t\tvar backMeshInfo = this._meshInfo[backCharData && backCharData.map || 0];\n\t\t\t\t\t\t\t\t\t\tbackMeshInfo.lines[lines - 1] -= 1;\n\t\t\t\t\t\t\t\t\t\tbackMeshInfo.quad -= 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ti -= backtrack + 1;\n\t\t\t\t\t\t\t\tbreakLine(this._symbols, wordStartIndex, wordStartX);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tquad = meshInfo.quad;\n\t\t\t\t\tmeshInfo.lines[lines - 1] = quad;\n\t\t\t\t\tvar left = _x - x;\n\t\t\t\t\tvar right = left + quadsize;\n\t\t\t\t\tvar bottom = _y - y;\n\t\t\t\t\tvar top = bottom + quadsize;\n\n\t\t\t\t\tif (this._rtl) {\n\t\t\t\t\t\tvar shift = quadsize - x - this._spacing * advance - x;\n\t\t\t\t\t\tleft -= shift;\n\t\t\t\t\t\tright -= shift;\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 0] = left;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 1] = bottom;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 2] = _z;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 3] = right;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 4] = bottom;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 5] = _z;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 6] = right;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 7] = top;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 8] = _z;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 9] = left;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 10] = top;\n\t\t\t\t\tmeshInfo.positions[quad * 4 * 3 + 11] = _z;\n\t\t\t\t\tthis.width = Math.max(this.width, candidateLineWidth);\n\t\t\t\t\tvar fontSize;\n\n\t\t\t\t\tif (this._shouldAutoFitWidth() && this.width > this._element.calculatedWidth) {\n\t\t\t\t\t\tfontSize = Math.floor(this._element.fontSize * this._element.calculatedWidth / (this.width || 0.0001));\n\t\t\t\t\t\tfontSize = math.clamp(fontSize, minFont, maxFont);\n\n\t\t\t\t\t\tif (fontSize !== this._element.fontSize) {\n\t\t\t\t\t\t\tthis._fontSize = fontSize;\n\t\t\t\t\t\t\tretryUpdateMeshes = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.height = Math.max(this.height, fontMaxY - (_y + fontMinY));\n\n\t\t\t\t\tif (this._shouldAutoFitHeight() && this.height > this._element.calculatedHeight) {\n\t\t\t\t\t\tfontSize = math.clamp(this._fontSize - 1, minFont, maxFont);\n\n\t\t\t\t\t\tif (fontSize !== this._element.fontSize) {\n\t\t\t\t\t\t\tthis._fontSize = fontSize;\n\t\t\t\t\t\t\tretryUpdateMeshes = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_x += this._spacing * advance;\n\n\t\t\t\t\tif (!isWhitespace && !isLineBreak) {\n\t\t\t\t\t\t_xMinusTrailingWhitespace = _x;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isWordBoundary = WORD_BOUNDARY_CHAR.test(char);\n\n\t\t\t\t\tif (isWordBoundary) {\n\t\t\t\t\t\tnumWordsThisLine++;\n\t\t\t\t\t\twordStartX = _xMinusTrailingWhitespace;\n\t\t\t\t\t\twordStartIndex = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tnumCharsThisLine++;\n\n\t\t\t\t\tvar uv = this._getUv(char);\n\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 0] = uv[0];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 1] = uv[1];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 2] = uv[2];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 3] = uv[1];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 4] = uv[2];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 5] = uv[3];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 6] = uv[0];\n\t\t\t\t\tmeshInfo.uvs[quad * 4 * 2 + 7] = uv[3];\n\n\t\t\t\t\tif (this._symbolColors) {\n\t\t\t\t\t\tvar colorIdx = this._symbolColors[i] * 3;\n\t\t\t\t\t\tcolor_r = this._colorPalette[colorIdx];\n\t\t\t\t\t\tcolor_g = this._colorPalette[colorIdx + 1];\n\t\t\t\t\t\tcolor_b = this._colorPalette[colorIdx + 2];\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 0] = color_r;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 1] = color_g;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 2] = color_b;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 3] = 255;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 4] = color_r;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 5] = color_g;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 6] = color_b;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 7] = 255;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 8] = color_r;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 9] = color_g;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 10] = color_b;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 11] = 255;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 12] = color_r;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 13] = color_g;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 14] = color_b;\n\t\t\t\t\tmeshInfo.colors[quad * 4 * 4 + 15] = 255;\n\t\t\t\t\tmeshInfo.quad++;\n\t\t\t\t}\n\n\t\t\t\tif (retryUpdateMeshes) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lineStartIndex < l) {\n\t\t\t\t\tbreakLine(this._symbols, l, _x);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._noResize = true;\n\t\t\tthis.autoWidth = this._autoWidth;\n\t\t\tthis.autoHeight = this._autoHeight;\n\t\t\tthis._noResize = false;\n\t\t\tvar hp = this._element.pivot.x;\n\t\t\tvar vp = this._element.pivot.y;\n\t\t\tvar ha = this._alignment.x;\n\t\t\tvar va = this._alignment.y;\n\n\t\t\tfor (i = 0; i < this._meshInfo.length; i++) {\n\t\t\t\tif (this._meshInfo[i].count === 0) continue;\n\t\t\t\tvar prevQuad = 0;\n\n\t\t\t\tfor (var line in this._meshInfo[i].lines) {\n\t\t\t\t\tvar index = this._meshInfo[i].lines[line];\n\n\t\t\t\t\tvar lw = this._lineWidths[parseInt(line, 10)];\n\n\t\t\t\t\tvar hoffset = -hp * this._element.calculatedWidth + ha * (this._element.calculatedWidth - lw) * (this._rtl ? -1 : 1);\n\t\t\t\t\tvar voffset = (1 - vp) * this._element.calculatedHeight - fontMaxY - (1 - va) * (this._element.calculatedHeight - this.height);\n\n\t\t\t\t\tfor (quad = prevQuad; quad <= index; quad++) {\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3] += hoffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 3] += hoffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 6] += hoffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 9] += hoffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 1] += voffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 4] += voffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 7] += voffset;\n\t\t\t\t\t\tthis._meshInfo[i].positions[quad * 4 * 3 + 10] += voffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._rtl) {\n\t\t\t\t\t\tfor (quad = prevQuad; quad <= index; quad++) {\n\t\t\t\t\t\t\tvar idx = quad * 4 * 3;\n\n\t\t\t\t\t\t\tfor (var vert = 0; vert < 4; ++vert) {\n\t\t\t\t\t\t\t\tthis._meshInfo[i].positions[idx + vert * 3] = this._element.calculatedWidth - this._meshInfo[i].positions[idx + vert * 3] + hoffset * 2;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar tmp0 = this._meshInfo[i].positions[idx + 3];\n\t\t\t\t\t\t\tvar tmp1 = this._meshInfo[i].positions[idx + 6];\n\t\t\t\t\t\t\tthis._meshInfo[i].positions[idx + 3] = this._meshInfo[i].positions[idx + 0];\n\t\t\t\t\t\t\tthis._meshInfo[i].positions[idx + 6] = this._meshInfo[i].positions[idx + 9];\n\t\t\t\t\t\t\tthis._meshInfo[i].positions[idx + 0] = tmp0;\n\t\t\t\t\t\t\tthis._meshInfo[i].positions[idx + 9] = tmp1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprevQuad = index + 1;\n\t\t\t\t}\n\n\t\t\t\tvar numVertices = this._meshInfo[i].count * 4;\n\t\t\t\tvar vertMax = this._meshInfo[i].quad * 4;\n\t\t\t\tvar it = new VertexIterator(this._meshInfo[i].meshInstance.mesh.vertexBuffer);\n\n\t\t\t\tfor (var v = 0; v < numVertices; v++) {\n\t\t\t\t\tif (v >= vertMax) {\n\t\t\t\t\t\tit.element[SEMANTIC_POSITION].set(0, 0, 0);\n\t\t\t\t\t\tit.element[SEMANTIC_TEXCOORD0].set(0, 0);\n\t\t\t\t\t\tit.element[SEMANTIC_COLOR].set(0, 0, 0, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tit.element[SEMANTIC_POSITION].set(this._meshInfo[i].positions[v * 3 + 0], this._meshInfo[i].positions[v * 3 + 1], this._meshInfo[i].positions[v * 3 + 2]);\n\t\t\t\t\t\tit.element[SEMANTIC_TEXCOORD0].set(this._meshInfo[i].uvs[v * 2 + 0], this._meshInfo[i].uvs[v * 2 + 1]);\n\t\t\t\t\t\tit.element[SEMANTIC_COLOR].set(this._meshInfo[i].colors[v * 4 + 0], this._meshInfo[i].colors[v * 4 + 1], this._meshInfo[i].colors[v * 4 + 2], this._meshInfo[i].colors[v * 4 + 3]);\n\t\t\t\t\t}\n\n\t\t\t\t\tit.next();\n\t\t\t\t}\n\n\t\t\t\tit.end();\n\n\t\t\t\tthis._meshInfo[i].meshInstance.mesh.aabb.compute(this._meshInfo[i].positions);\n\n\t\t\t\tthis._meshInfo[i].meshInstance._aabbVer = -1;\n\t\t\t}\n\n\t\t\tthis._aabbDirty = true;\n\t\t};\n\n\t\t_proto._onFontRender = function _onFontRender() {\n\t\t\tthis.font = this._font;\n\t\t};\n\n\t\t_proto._onFontLoad = function _onFontLoad(asset) {\n\t\t\tif (this.font !== asset.resource) {\n\t\t\t\tthis.font = asset.resource;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onFontChange = function _onFontChange(asset, name, _new, _old) {\n\t\t\tif (name === 'data') {\n\t\t\t\tthis._font.data = _new;\n\t\t\t\tvar maps = this._font.data.info.maps.length;\n\n\t\t\t\tfor (var i = 0; i < maps; i++) {\n\t\t\t\t\tif (!this._meshInfo[i]) continue;\n\t\t\t\t\tvar mi = this._meshInfo[i].meshInstance;\n\n\t\t\t\t\tif (mi) {\n\t\t\t\t\t\tmi.setParameter(\"font_sdfIntensity\", this._font.intensity);\n\t\t\t\t\t\tmi.setParameter(\"font_pxrange\", this._getPxRange(this._font));\n\t\t\t\t\t\tmi.setParameter(\"font_textureWidth\", this._font.data.info.maps[i].width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onFontRemove = function _onFontRemove(asset) {};\n\n\t\t_proto._setTextureParams = function _setTextureParams(mi, texture) {\n\t\t\tif (this._font) {\n\t\t\t\tif (this._font.type === FONT_MSDF) {\n\t\t\t\t\tmi.deleteParameter(\"texture_emissiveMap\");\n\t\t\t\t\tmi.deleteParameter(\"texture_opacityMap\");\n\t\t\t\t\tmi.setParameter(\"texture_msdfMap\", texture);\n\t\t\t\t} else if (this._font.type === FONT_BITMAP) {\n\t\t\t\t\tmi.deleteParameter(\"texture_msdfMap\");\n\t\t\t\t\tmi.setParameter(\"texture_emissiveMap\", texture);\n\t\t\t\t\tmi.setParameter(\"texture_opacityMap\", texture);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._getPxRange = function _getPxRange(font) {\n\t\t\tvar keys = Object.keys(this._font.data.chars);\n\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar char = this._font.data.chars[keys[i]];\n\n\t\t\t\tif (char.range) {\n\t\t\t\t\treturn (char.scale || 1) * char.range;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 2;\n\t\t};\n\n\t\t_proto._getUv = function _getUv(char) {\n\t\t\tvar data = this._font.data;\n\n\t\t\tif (!data.chars[char]) {\n\t\t\t\tvar space = ' ';\n\n\t\t\t\tif (data.chars[space]) {\n\t\t\t\t\treturn this._getUv(space);\n\t\t\t\t}\n\n\t\t\t\treturn [0, 0, 0, 0];\n\t\t\t}\n\n\t\t\tvar map = data.chars[char].map;\n\t\t\tvar width = data.info.maps[map].width;\n\t\t\tvar height = data.info.maps[map].height;\n\t\t\tvar x = data.chars[char].x;\n\t\t\tvar y = data.chars[char].y;\n\t\t\tvar x1 = x;\n\t\t\tvar y1 = y;\n\t\t\tvar x2 = x + data.chars[char].width;\n\t\t\tvar y2 = y - data.chars[char].height;\n\t\t\tvar edge = 1 - data.chars[char].height / height;\n\t\t\treturn [x1 / width, edge - y1 / height, x2 / width, edge - y2 / height];\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._fontAsset.autoLoad = true;\n\n\t\t\tif (this._model) {\n\t\t\t\tthis._element.addModelToLayers(this._model);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._fontAsset.autoLoad = false;\n\n\t\t\tif (this._model) {\n\t\t\t\tthis._element.removeModelFromLayers(this._model);\n\t\t\t}\n\t\t};\n\n\t\t_proto._setStencil = function _setStencil(stencilParams) {\n\t\t\tif (this._model) {\n\t\t\t\tvar instances = this._model.meshInstances;\n\n\t\t\t\tfor (var i = 0; i < instances.length; i++) {\n\t\t\t\t\tinstances[i].stencilFront = stencilParams;\n\t\t\t\t\tinstances[i].stencilBack = stencilParams;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._shouldAutoFitWidth = function _shouldAutoFitWidth() {\n\t\t\treturn this._autoFitWidth && !this._autoWidth;\n\t\t};\n\n\t\t_proto._shouldAutoFitHeight = function _shouldAutoFitHeight() {\n\t\t\treturn this._autoFitHeight && !this._autoHeight;\n\t\t};\n\n\t\t_proto._shouldAutoFit = function _shouldAutoFit() {\n\t\t\treturn this._autoFitWidth && !this._autoWidth || this._autoFitHeight && !this._autoHeight;\n\t\t};\n\n\t\t_proto._calculateCharsPerTexture = function _calculateCharsPerTexture(symbolIndex) {\n\t\t\tvar charactersPerTexture = {};\n\n\t\t\tif (symbolIndex === undefined) {\n\t\t\t\tsymbolIndex = this._symbols.length;\n\t\t\t}\n\n\t\t\tvar i, len, char, info, map;\n\n\t\t\tfor (i = 0, len = symbolIndex; i < len; i++) {\n\t\t\t\tchar = this._symbols[i];\n\t\t\t\tinfo = this._font.data.chars[char];\n\n\t\t\t\tif (!info) {\n\t\t\t\t\tinfo = this._font.data.chars[' '];\n\n\t\t\t\t\tif (!info) {\n\t\t\t\t\t\tinfo = this._font.data.chars[Object.keys(this._font.data.chars)[0]];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmap = info.map;\n\n\t\t\t\tif (!charactersPerTexture[map]) {\n\t\t\t\t\tcharactersPerTexture[map] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcharactersPerTexture[map]++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn charactersPerTexture;\n\t\t};\n\n\t\t_proto._updateRenderRange = function _updateRenderRange() {\n\t\t\tvar startChars = this._rangeStart === 0 ? 0 : this._calculateCharsPerTexture(this._rangeStart);\n\t\t\tvar endChars = this._rangeEnd === 0 ? 0 : this._calculateCharsPerTexture(this._rangeEnd);\n\t\t\tvar i, len;\n\n\t\t\tfor (i = 0, len = this._meshInfo.length; i < len; i++) {\n\t\t\t\tvar start = startChars[i] || 0;\n\t\t\t\tvar end = endChars[i] || 0;\n\t\t\t\tvar instance = this._meshInfo[i].meshInstance;\n\n\t\t\t\tif (instance) {\n\t\t\t\t\tvar mesh = instance.mesh;\n\n\t\t\t\t\tif (mesh) {\n\t\t\t\t\t\tmesh.primitive[0].base = start * 3 * 2;\n\t\t\t\t\t\tmesh.primitive[0].count = (end - start) * 3 * 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(TextElement, [{\n\t\t\tkey: \"text\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._text;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._i18nKey = null;\n\t\t\t\tvar str = value != null && value.toString() || \"\";\n\n\t\t\t\tthis._setText(str);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"key\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._i18nKey;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar str = value !== null ? value.toString() : null;\n\n\t\t\t\tif (this._i18nKey === str) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._i18nKey = str;\n\n\t\t\t\tif (str) {\n\t\t\t\t\tthis._fontAsset.disableLocalization = false;\n\n\t\t\t\t\tthis._resetLocalizedText();\n\t\t\t\t} else {\n\t\t\t\t\tthis._fontAsset.disableLocalization = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"color\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar r = value.r;\n\t\t\t\tvar g = value.g;\n\t\t\t\tvar b = value.b;\n\n\t\t\t\tif (this._color.r === r && this._color.g === g && this._color.b === b) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._color.r = r;\n\t\t\t\tthis._color.g = g;\n\t\t\t\tthis._color.b = b;\n\n\t\t\t\tif (this._symbolColors) {\n\t\t\t\t\tif (this._font) {\n\t\t\t\t\t\tthis._updateText();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\t\tthis._colorUniform[2] = this._color.b;\n\n\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\tmi.setParameter('material_emissive', this._colorUniform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"opacity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color.a;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._color.a === value) return;\n\t\t\t\tthis._color.a = value;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\tmi.setParameter('material_opacity', value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lineHeight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lineHeight;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _prev = this._lineHeight;\n\t\t\t\tthis._lineHeight = value;\n\t\t\t\tthis._scaledLineHeight = value;\n\n\t\t\t\tif (_prev !== value && this._font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"wrapLines\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._wrapLines;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _prev = this._wrapLines;\n\t\t\t\tthis._wrapLines = value;\n\n\t\t\t\tif (_prev !== value && this._font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lines\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lineContents;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"spacing\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._spacing;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _prev = this._spacing;\n\t\t\t\tthis._spacing = value;\n\n\t\t\t\tif (_prev !== value && this._font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"fontSize\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fontSize;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _prev = this._fontSize;\n\t\t\t\tthis._fontSize = value;\n\t\t\t\tthis._originalFontSize = value;\n\n\t\t\t\tif (_prev !== value && this._font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"fontAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fontAsset.localizedAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._fontAsset.defaultAsset = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"font\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._font;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i;\n\t\t\t\tvar len;\n\t\t\t\tvar previousFontType;\n\n\t\t\t\tif (this._font) {\n\t\t\t\t\tpreviousFontType = this._font.type;\n\t\t\t\t\tif (this._font.off) this._font.off('render', this._onFontRender, this);\n\t\t\t\t}\n\n\t\t\t\tthis._font = value;\n\t\t\t\tthis._fontMinY = 0;\n\t\t\t\tthis._fontMaxY = 0;\n\t\t\t\tif (!value) return;\n\t\t\t\tvar json = this._font.data;\n\n\t\t\t\tfor (var charId in json.chars) {\n\t\t\t\t\tvar data = json.chars[charId];\n\n\t\t\t\t\tif (data.bounds) {\n\t\t\t\t\t\tthis._fontMinY = Math.min(this._fontMinY, data.bounds[1]);\n\t\t\t\t\t\tthis._fontMaxY = Math.max(this._fontMaxY, data.bounds[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._font.on) this._font.on('render', this._onFontRender, this);\n\n\t\t\t\tif (this._fontAsset.localizedAsset) {\n\t\t\t\t\tvar asset = this._system.app.assets.get(this._fontAsset.localizedAsset);\n\n\t\t\t\t\tif (asset.resource !== this._font) {\n\t\t\t\t\t\tthis._fontAsset.defaultAsset = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value.type !== previousFontType) {\n\t\t\t\t\tvar screenSpace = this._element._isScreenSpace();\n\n\t\t\t\t\tthis._updateMaterial(screenSpace);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0, len = this._font.textures.length; i < len; i++) {\n\t\t\t\t\tif (!this._meshInfo[i]) {\n\t\t\t\t\t\tthis._meshInfo[i] = new MeshInfo();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar mi = this._meshInfo[i].meshInstance;\n\n\t\t\t\t\t\tif (mi) {\n\t\t\t\t\t\t\tmi.setParameter(\"font_sdfIntensity\", this._font.intensity);\n\t\t\t\t\t\t\tmi.setParameter(\"font_pxrange\", this._getPxRange(this._font));\n\t\t\t\t\t\t\tmi.setParameter(\"font_textureWidth\", this._font.data.info.maps[i].width);\n\n\t\t\t\t\t\t\tthis._setTextureParams(mi, this._font.textures[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar removedModel = false;\n\n\t\t\t\tfor (i = this._font.textures.length; i < this._meshInfo.length; i++) {\n\t\t\t\t\tif (this._meshInfo[i].meshInstance) {\n\t\t\t\t\t\tif (!removedModel) {\n\t\t\t\t\t\t\tthis._element.removeModelFromLayers(this._model);\n\n\t\t\t\t\t\t\tremovedModel = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._removeMeshInstance(this._meshInfo[i].meshInstance);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._meshInfo.length > this._font.textures.length) this._meshInfo.length = this._font.textures.length;\n\n\t\t\t\tthis._updateText();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"alignment\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._alignment;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value instanceof Vec2) {\n\t\t\t\t\tthis._alignment.set(value.x, value.y);\n\t\t\t\t} else {\n\t\t\t\t\tthis._alignment.set(value[0], value[1]);\n\t\t\t\t}\n\n\t\t\t\tif (this._font) this._updateText();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoWidth\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoWidth;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar old = this._autoWidth;\n\t\t\t\tthis._autoWidth = value;\n\n\t\t\t\tif (value && Math.abs(this._element.anchor.x - this._element.anchor.z) < 0.0001) {\n\t\t\t\t\tthis._element.width = this.width;\n\t\t\t\t}\n\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tvar newFontSize = this._shouldAutoFit() ? this._maxFontSize : this._originalFontSize;\n\n\t\t\t\t\tif (newFontSize !== this._fontSize) {\n\t\t\t\t\t\tthis._fontSize = newFontSize;\n\n\t\t\t\t\t\tif (this._font) {\n\t\t\t\t\t\t\tthis._updateText();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoHeight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoHeight;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar old = this._autoHeight;\n\t\t\t\tthis._autoHeight = value;\n\n\t\t\t\tif (value && Math.abs(this._element.anchor.y - this._element.anchor.w) < 0.0001) {\n\t\t\t\t\tthis._element.height = this.height;\n\t\t\t\t}\n\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tvar newFontSize = this._shouldAutoFit() ? this._maxFontSize : this._originalFontSize;\n\n\t\t\t\t\tif (newFontSize !== this._fontSize) {\n\t\t\t\t\t\tthis._fontSize = newFontSize;\n\n\t\t\t\t\t\tif (this._font) {\n\t\t\t\t\t\t\tthis._updateText();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rtlReorder\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rtlReorder;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._rtlReorder !== value) {\n\t\t\t\t\tthis._rtlReorder = value;\n\n\t\t\t\t\tif (this._font) {\n\t\t\t\t\t\tthis._updateText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"unicodeConverter\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._unicodeConverter;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._unicodeConverter !== value) {\n\t\t\t\t\tthis._unicodeConverter = value;\n\n\t\t\t\t\tthis._setText(this._text);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._aabbDirty) {\n\t\t\t\t\tvar initialized = false;\n\n\t\t\t\t\tfor (var i = 0; i < this._meshInfo.length; i++) {\n\t\t\t\t\t\tif (!this._meshInfo[i].meshInstance) continue;\n\n\t\t\t\t\t\tif (!initialized) {\n\t\t\t\t\t\t\tthis._aabb.copy(this._meshInfo[i].meshInstance.aabb);\n\n\t\t\t\t\t\t\tinitialized = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._aabb.add(this._meshInfo[i].meshInstance.aabb);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._aabbDirty = false;\n\t\t\t\t}\n\n\t\t\t\treturn this._aabb;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"outlineColor\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._outlineColor;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar r = value instanceof Color ? value.r : value[0];\n\t\t\t\tvar g = value instanceof Color ? value.g : value[1];\n\t\t\t\tvar b = value instanceof Color ? value.b : value[2];\n\t\t\t\tvar a = value instanceof Color ? value.a : value[3];\n\n\t\t\t\tif (this._outlineColor.r === r && this._outlineColor.g === g && this._outlineColor.b === b && this._outlineColor.a === a) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._outlineColor.r = r;\n\t\t\t\tthis._outlineColor.g = g;\n\t\t\t\tthis._outlineColor.b = b;\n\t\t\t\tthis._outlineColor.a = a;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tthis._outlineColorUniform[0] = this._outlineColor.r;\n\t\t\t\t\tthis._outlineColorUniform[1] = this._outlineColor.g;\n\t\t\t\t\tthis._outlineColorUniform[2] = this._outlineColor.b;\n\t\t\t\t\tthis._outlineColorUniform[3] = this._outlineColor.a;\n\n\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\tmi.setParameter(\"outline_color\", this._outlineColorUniform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"outlineThickness\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._outlineThickness;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _prev = this._outlineThickness;\n\t\t\t\tthis._outlineThickness = value;\n\n\t\t\t\tif (_prev !== value && this._font) {\n\t\t\t\t\tif (this._model) {\n\t\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\t\tmi.setParameter(\"outline_thickness\", this._outlineThicknessScale * this._outlineThickness);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"shadowColor\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shadowColor;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar r = value instanceof Color ? value.r : value[0];\n\t\t\t\tvar g = value instanceof Color ? value.g : value[1];\n\t\t\t\tvar b = value instanceof Color ? value.b : value[2];\n\t\t\t\tvar a = value instanceof Color ? value.a : value[3];\n\n\t\t\t\tif (this._shadowColor.r === r && this._shadowColor.g === g && this._shadowColor.b === b && this._shadowColor.a === a) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._shadowColor.r = r;\n\t\t\t\tthis._shadowColor.g = g;\n\t\t\t\tthis._shadowColor.b = b;\n\t\t\t\tthis._shadowColor.a = a;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tthis._shadowColorUniform[0] = this._shadowColor.r;\n\t\t\t\t\tthis._shadowColorUniform[1] = this._shadowColor.g;\n\t\t\t\t\tthis._shadowColorUniform[2] = this._shadowColor.b;\n\t\t\t\t\tthis._shadowColorUniform[3] = this._shadowColor.a;\n\n\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\tmi.setParameter(\"shadow_color\", this._shadowColorUniform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"shadowOffset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shadowOffset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar x = value instanceof Vec2 ? value.x : value[0],\n\t\t\t\t\t\ty = value instanceof Vec2 ? value.y : value[1];\n\n\t\t\t\tif (this._shadowOffset.x === x && this._shadowOffset.y === y) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._shadowOffset.set(x, y);\n\n\t\t\t\tif (this._font && this._model) {\n\t\t\t\t\tfor (var i = 0, len = this._model.meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tvar ratio = this._font.data.info.maps[i].width / this._font.data.info.maps[i].height;\n\t\t\t\t\t\tthis._shadowOffsetUniform[0] = this._shadowOffsetScale * this._shadowOffset.x;\n\t\t\t\t\t\tthis._shadowOffsetUniform[1] = ratio * this._shadowOffsetScale * this._shadowOffset.y;\n\t\t\t\t\t\tvar mi = this._model.meshInstances[i];\n\t\t\t\t\t\tmi.setParameter(\"shadow_offset\", this._shadowOffsetUniform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"minFontSize\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._minFontSize;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._minFontSize === value) return;\n\t\t\t\tthis._minFontSize = value;\n\n\t\t\t\tif (this.font && this._shouldAutoFit()) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"maxFontSize\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._maxFontSize;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._maxFontSize === value) return;\n\t\t\t\tthis._maxFontSize = value;\n\n\t\t\t\tif (this.font && this._shouldAutoFit()) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoFitWidth\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoFitWidth;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._autoFitWidth === value) return;\n\t\t\t\tthis._autoFitWidth = value;\n\t\t\t\tthis._fontSize = this._shouldAutoFit() ? this._maxFontSize : this._originalFontSize;\n\n\t\t\t\tif (this.font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoFitHeight\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoFitHeight;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._autoFitHeight === value) return;\n\t\t\t\tthis._autoFitHeight = value;\n\t\t\t\tthis._fontSize = this._shouldAutoFit() ? this._maxFontSize : this._originalFontSize;\n\n\t\t\t\tif (this.font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"maxLines\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._maxLines;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._maxLines === value) return;\n\t\t\t\tif (value === null && this._maxLines === -1) return;\n\t\t\t\tthis._maxLines = value === null ? -1 : value;\n\n\t\t\t\tif (this.font && this._wrapLines) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"enableMarkup\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enableMarkup;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvalue = !!value;\n\t\t\t\tif (this._enableMarkup === value) return;\n\t\t\t\tthis._enableMarkup = value;\n\n\t\t\t\tif (this.font) {\n\t\t\t\t\tthis._updateText();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"symbols\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._symbols;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"symbolColors\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._symbolColors === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn this._symbolColors.map(function (c) {\n\t\t\t\t\treturn this._colorPalette.slice(c * 3, c * 3 + 3);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rtl\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rtl;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rangeStart\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rangeStart;\n\t\t\t},\n\t\t\tset: function set(rangeStart) {\n\t\t\t\trangeStart = Math.max(0, Math.min(rangeStart, this._symbols.length));\n\n\t\t\t\tif (rangeStart !== this._rangeStart) {\n\t\t\t\t\tthis._rangeStart = rangeStart;\n\n\t\t\t\t\tthis._updateRenderRange();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"rangeEnd\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._rangeEnd;\n\t\t\t},\n\t\t\tset: function set(rangeEnd) {\n\t\t\t\trangeEnd = Math.max(this._rangeStart, Math.min(rangeEnd, this._symbols.length));\n\n\t\t\t\tif (rangeEnd !== this._rangeEnd) {\n\t\t\t\t\tthis._rangeEnd = rangeEnd;\n\n\t\t\t\t\tthis._updateRenderRange();\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn TextElement;\n\t}();\n\n\tvar position$1 = new Vec3();\n\tvar invParentWtm$1 = new Mat4();\n\tvar vecA$1 = new Vec3();\n\tvar vecB$1 = new Vec3();\n\tvar matA = new Mat4();\n\tvar matB = new Mat4();\n\tvar matC = new Mat4();\n\tvar matD = new Mat4();\n\n\tvar ElementComponent = function (_Component) {\n\t\t_inheritsLoose(ElementComponent, _Component);\n\n\t\tfunction ElementComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._beingInitialized = false;\n\t\t\t_this._anchor = new Vec4();\n\t\t\t_this._localAnchor = new Vec4();\n\t\t\t_this._pivot = new Vec2();\n\t\t\t_this._width = _this._calculatedWidth = 32;\n\t\t\t_this._height = _this._calculatedHeight = 32;\n\t\t\t_this._margin = new Vec4(0, 0, -32, -32);\n\t\t\t_this._modelTransform = new Mat4();\n\t\t\t_this._screenToWorld = new Mat4();\n\t\t\t_this._anchorTransform = new Mat4();\n\t\t\t_this._anchorDirty = true;\n\t\t\t_this._parentWorldTransform = new Mat4();\n\t\t\t_this._screenTransform = new Mat4();\n\t\t\t_this._screenCorners = [new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\t\t\t_this._canvasCorners = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n\t\t\t_this._worldCorners = [new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\t\t\t_this._cornersDirty = true;\n\t\t\t_this._canvasCornersDirty = true;\n\t\t\t_this._worldCornersDirty = true;\n\n\t\t\t_this.entity.on('insert', _this._onInsert, _assertThisInitialized(_this));\n\n\t\t\t_this._patch();\n\n\t\t\t_this.screen = null;\n\t\t\t_this._type = ELEMENTTYPE_GROUP;\n\t\t\t_this._image = null;\n\t\t\t_this._text = null;\n\t\t\t_this._group = null;\n\t\t\t_this._drawOrder = 0;\n\t\t\t_this._useInput = false;\n\t\t\t_this._layers = [LAYERID_UI];\n\t\t\t_this._addedModels = [];\n\t\t\t_this._batchGroupId = -1;\n\t\t\t_this._offsetReadAt = 0;\n\t\t\t_this._maskOffset = 0.5;\n\t\t\t_this._maskedBy = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ElementComponent.prototype;\n\n\t\t_proto._patch = function _patch() {\n\t\t\tthis.entity._sync = this._sync;\n\t\t\tthis.entity.setPosition = this._setPosition;\n\t\t\tthis.entity.setLocalPosition = this._setLocalPosition;\n\t\t};\n\n\t\t_proto._unpatch = function _unpatch() {\n\t\t\tthis.entity._sync = Entity.prototype._sync;\n\t\t\tthis.entity.setPosition = Entity.prototype.setPosition;\n\t\t\tthis.entity.setLocalPosition = Entity.prototype.setLocalPosition;\n\t\t};\n\n\t\t_proto._setPosition = function _setPosition(x, y, z) {\n\t\t\tif (!this.element.screen) return Entity.prototype.setPosition.call(this, x, y, z);\n\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tposition$1.copy(x);\n\t\t\t} else {\n\t\t\t\tposition$1.set(x, y, z);\n\t\t\t}\n\n\t\t\tthis.getWorldTransform();\n\t\t\tinvParentWtm$1.copy(this.element._screenToWorld).invert();\n\t\t\tinvParentWtm$1.transformPoint(position$1, this.localPosition);\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto._setLocalPosition = function _setLocalPosition(x, y, z) {\n\t\t\tif (x instanceof Vec3) {\n\t\t\t\tthis.localPosition.copy(x);\n\t\t\t} else {\n\t\t\t\tthis.localPosition.set(x, y, z);\n\t\t\t}\n\n\t\t\tvar element = this.element;\n\t\t\tvar p = this.localPosition;\n\t\t\tvar pvt = element._pivot;\n\t\t\telement._margin.x = p.x - element._calculatedWidth * pvt.x;\n\t\t\telement._margin.z = element._localAnchor.z - element._localAnchor.x - element._calculatedWidth - element._margin.x;\n\t\t\telement._margin.y = p.y - element._calculatedHeight * pvt.y;\n\t\t\telement._margin.w = element._localAnchor.w - element._localAnchor.y - element._calculatedHeight - element._margin.y;\n\t\t\tif (!this._dirtyLocal) this._dirtifyLocal();\n\t\t};\n\n\t\t_proto._sync = function _sync() {\n\t\t\tvar element = this.element;\n\t\t\tvar screen = element.screen;\n\n\t\t\tif (screen) {\n\t\t\t\tif (element._anchorDirty) {\n\t\t\t\t\tvar resx = 0;\n\t\t\t\t\tvar resy = 0;\n\t\t\t\t\tvar px = 0;\n\t\t\t\t\tvar py = 1;\n\n\t\t\t\t\tif (this._parent && this._parent.element) {\n\t\t\t\t\t\tresx = this._parent.element.calculatedWidth;\n\t\t\t\t\t\tresy = this._parent.element.calculatedHeight;\n\t\t\t\t\t\tpx = this._parent.element.pivot.x;\n\t\t\t\t\t\tpy = this._parent.element.pivot.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar resolution = screen.screen.resolution;\n\t\t\t\t\t\tresx = resolution.x / screen.screen.scale;\n\t\t\t\t\t\tresy = resolution.y / screen.screen.scale;\n\t\t\t\t\t}\n\n\t\t\t\t\telement._anchorTransform.setTranslate(resx * (element.anchor.x - px), -(resy * (py - element.anchor.y)), 0);\n\n\t\t\t\t\telement._anchorDirty = false;\n\n\t\t\t\t\telement._calculateLocalAnchors();\n\t\t\t\t}\n\n\t\t\t\tif (element._sizeDirty) {\n\t\t\t\t\telement._calculateSize(false, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._dirtyLocal) {\n\t\t\t\tthis.localTransform.setTRS(this.localPosition, this.localRotation, this.localScale);\n\t\t\t\tvar p = this.localPosition;\n\t\t\t\tvar pvt = element._pivot;\n\t\t\t\telement._margin.x = p.x - element._calculatedWidth * pvt.x;\n\t\t\t\telement._margin.z = element._localAnchor.z - element._localAnchor.x - element._calculatedWidth - element._margin.x;\n\t\t\t\telement._margin.y = p.y - element._calculatedHeight * pvt.y;\n\t\t\t\telement._margin.w = element._localAnchor.w - element._localAnchor.y - element._calculatedHeight - element._margin.y;\n\t\t\t\tthis._dirtyLocal = false;\n\t\t\t}\n\n\t\t\tif (!screen) {\n\t\t\t\tif (this._dirtyWorld) {\n\t\t\t\t\telement._cornersDirty = true;\n\t\t\t\t\telement._canvasCornersDirty = true;\n\t\t\t\t\telement._worldCornersDirty = true;\n\t\t\t\t}\n\n\t\t\t\treturn Entity.prototype._sync.call(this);\n\t\t\t}\n\n\t\t\tif (this._dirtyWorld) {\n\t\t\t\tif (this._parent === null) {\n\t\t\t\t\tthis.worldTransform.copy(this.localTransform);\n\t\t\t\t} else {\n\t\t\t\t\tif (this._parent.element) {\n\t\t\t\t\t\telement._screenToWorld.mul2(this._parent.element._modelTransform, element._anchorTransform);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement._screenToWorld.copy(element._anchorTransform);\n\t\t\t\t\t}\n\n\t\t\t\t\telement._modelTransform.mul2(element._screenToWorld, this.localTransform);\n\n\t\t\t\t\tif (screen) {\n\t\t\t\t\t\telement._screenToWorld.mul2(screen.screen._screenMatrix, element._screenToWorld);\n\n\t\t\t\t\t\tif (!screen.screen.screenSpace) {\n\t\t\t\t\t\t\telement._screenToWorld.mul2(screen.worldTransform, element._screenToWorld);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.worldTransform.mul2(element._screenToWorld, this.localTransform);\n\t\t\t\t\t\tvar parentWorldTransform = element._parentWorldTransform;\n\t\t\t\t\t\tparentWorldTransform.setIdentity();\n\t\t\t\t\t\tvar parent = this._parent;\n\n\t\t\t\t\t\tif (parent && parent.element && parent !== screen) {\n\t\t\t\t\t\t\tmatA.setTRS(Vec3.ZERO, parent.getLocalRotation(), parent.getLocalScale());\n\t\t\t\t\t\t\tparentWorldTransform.mul2(parent.element._parentWorldTransform, matA);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar depthOffset = vecA$1;\n\t\t\t\t\t\tdepthOffset.set(0, 0, this.localPosition.z);\n\t\t\t\t\t\tvar pivotOffset = vecB$1;\n\t\t\t\t\t\tpivotOffset.set(element._absLeft + element._pivot.x * element.calculatedWidth, element._absBottom + element._pivot.y * element.calculatedHeight, 0);\n\t\t\t\t\t\tmatA.setTranslate(-pivotOffset.x, -pivotOffset.y, -pivotOffset.z);\n\t\t\t\t\t\tmatB.setTRS(depthOffset, this.getLocalRotation(), this.getLocalScale());\n\t\t\t\t\t\tmatC.setTranslate(pivotOffset.x, pivotOffset.y, pivotOffset.z);\n\n\t\t\t\t\t\telement._screenTransform.mul2(element._parentWorldTransform, matC).mul(matB).mul(matA);\n\n\t\t\t\t\t\telement._cornersDirty = true;\n\t\t\t\t\t\telement._canvasCornersDirty = true;\n\t\t\t\t\t\telement._worldCornersDirty = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.worldTransform.copy(element._modelTransform);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._dirtyWorld = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onInsert = function _onInsert(parent) {\n\t\t\tvar result = this._parseUpToScreen();\n\n\t\t\tthis.entity._dirtifyWorld();\n\n\t\t\tthis._updateScreen(result.screen);\n\n\t\t\tthis._dirtifyMask();\n\t\t};\n\n\t\t_proto._dirtifyMask = function _dirtifyMask() {\n\t\t\tvar current = this.entity;\n\n\t\t\twhile (current) {\n\t\t\t\tvar next = current.parent;\n\n\t\t\t\tif ((next === null || next.screen) && current.element) {\n\t\t\t\t\tif (!this.system._prerender || !this.system._prerender.length) {\n\t\t\t\t\t\tthis.system._prerender = [];\n\t\t\t\t\t\tthis.system.app.once('prerender', this._onPrerender, this);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar i = this.system._prerender.indexOf(this.entity);\n\n\t\t\t\t\tif (i >= 0) {\n\t\t\t\t\t\tthis.system._prerender.splice(i, 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar j = this.system._prerender.indexOf(current);\n\n\t\t\t\t\tif (j < 0) {\n\t\t\t\t\t\tthis.system._prerender.push(current);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrent = next;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onPrerender = function _onPrerender() {\n\t\t\tfor (var i = 0; i < this.system._prerender.length; i++) {\n\t\t\t\tvar mask = this.system._prerender[i];\n\n\t\t\t\tif (mask.element) {\n\t\t\t\t\tvar depth = 1;\n\t\t\t\t\tmask.element.syncMask(depth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.system._prerender.length = 0;\n\t\t};\n\n\t\t_proto._bindScreen = function _bindScreen(screen) {\n\t\t\tscreen._bindElement(this);\n\t\t};\n\n\t\t_proto._unbindScreen = function _unbindScreen(screen) {\n\t\t\tscreen._unbindElement(this);\n\t\t};\n\n\t\t_proto._updateScreen = function _updateScreen(screen) {\n\t\t\tif (this.screen && this.screen !== screen) {\n\t\t\t\tthis._unbindScreen(this.screen.screen);\n\t\t\t}\n\n\t\t\tvar previousScreen = this.screen;\n\t\t\tthis.screen = screen;\n\n\t\t\tif (this.screen) {\n\t\t\t\tthis._bindScreen(this.screen.screen);\n\t\t\t}\n\n\t\t\tthis._calculateSize(this._hasSplitAnchorsX, this._hasSplitAnchorsY);\n\n\t\t\tthis.fire('set:screen', this.screen, previousScreen);\n\t\t\tthis._anchorDirty = true;\n\t\t\tvar children = this.entity.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tif (children[i].element) children[i].element._updateScreen(screen);\n\t\t\t}\n\n\t\t\tif (this.screen) this.screen.screen.syncDrawOrder();\n\t\t};\n\n\t\t_proto.syncMask = function syncMask(depth) {\n\t\t\tvar result = this._parseUpToScreen();\n\n\t\t\tthis._updateMask(result.mask, depth);\n\t\t};\n\n\t\t_proto._setMaskedBy = function _setMaskedBy(mask) {\n\t\t\tvar renderableElement = this._image || this._text;\n\n\t\t\tif (mask) {\n\t\t\t\tvar ref = mask.element._image._maskRef;\n\t\t\t\tvar sp = new StencilParameters({\n\t\t\t\t\tref: ref,\n\t\t\t\t\tfunc: FUNC_EQUAL\n\t\t\t\t});\n\n\t\t\t\tif (renderableElement && renderableElement._setStencil) {\n\t\t\t\t\trenderableElement._setStencil(sp);\n\t\t\t\t}\n\n\t\t\t\tthis._maskedBy = mask;\n\t\t\t} else {\n\t\t\t\tif (renderableElement && renderableElement._setStencil) {\n\t\t\t\t\trenderableElement._setStencil(null);\n\t\t\t\t}\n\n\t\t\t\tthis._maskedBy = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateMask = function _updateMask(currentMask, depth) {\n\t\t\tvar i, l, sp, children;\n\n\t\t\tif (currentMask) {\n\t\t\t\tthis._setMaskedBy(currentMask);\n\n\t\t\t\tif (this.mask) {\n\t\t\t\t\tvar ref = currentMask.element._image._maskRef;\n\t\t\t\t\tsp = new StencilParameters({\n\t\t\t\t\t\tref: ref,\n\t\t\t\t\t\tfunc: FUNC_EQUAL,\n\t\t\t\t\t\tzpass: STENCILOP_INCREMENT\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._image._setStencil(sp);\n\n\t\t\t\t\tthis._image._maskRef = depth;\n\t\t\t\t\tdepth++;\n\t\t\t\t\tcurrentMask = this.entity;\n\t\t\t\t}\n\n\t\t\t\tchildren = this.entity.children;\n\n\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tif (children[i].element) {\n\t\t\t\t\t\tchildren[i].element._updateMask(currentMask, depth);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.mask) depth--;\n\t\t\t} else {\n\t\t\t\tthis._setMaskedBy(null);\n\n\t\t\t\tif (this.mask) {\n\t\t\t\t\tsp = new StencilParameters({\n\t\t\t\t\t\tref: depth,\n\t\t\t\t\t\tfunc: FUNC_ALWAYS,\n\t\t\t\t\t\tzpass: STENCILOP_REPLACE\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._image._setStencil(sp);\n\n\t\t\t\t\tthis._image._maskRef = depth;\n\t\t\t\t\tdepth++;\n\t\t\t\t\tcurrentMask = this.entity;\n\t\t\t\t}\n\n\t\t\t\tchildren = this.entity.children;\n\n\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tif (children[i].element) {\n\t\t\t\t\t\tchildren[i].element._updateMask(currentMask, depth);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.mask) depth--;\n\t\t\t}\n\t\t};\n\n\t\t_proto._parseUpToScreen = function _parseUpToScreen() {\n\t\t\tvar result = {\n\t\t\t\tscreen: null,\n\t\t\t\tmask: null\n\t\t\t};\n\t\t\tvar parent = this.entity._parent;\n\n\t\t\twhile (parent && !parent.screen) {\n\t\t\t\tif (parent.element && parent.element.mask) {\n\t\t\t\t\tif (!result.mask) result.mask = parent;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tif (parent && parent.screen) result.screen = parent;\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._onScreenResize = function _onScreenResize(res) {\n\t\t\tthis._anchorDirty = true;\n\t\t\tthis._cornersDirty = true;\n\t\t\tthis._worldCornersDirty = true;\n\n\t\t\tthis._calculateSize(this._hasSplitAnchorsX, this._hasSplitAnchorsY);\n\n\t\t\tthis.fire('screen:set:resolution', res);\n\t\t};\n\n\t\t_proto._onScreenSpaceChange = function _onScreenSpaceChange() {\n\t\t\tthis.fire('screen:set:screenspace', this.screen.screen.screenSpace);\n\t\t};\n\n\t\t_proto._onScreenRemove = function _onScreenRemove() {\n\t\t\tif (this.screen) {\n\t\t\t\tif (this.screen._destroying) {\n\t\t\t\t\tthis.screen = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis._updateScreen(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._calculateLocalAnchors = function _calculateLocalAnchors() {\n\t\t\tvar resx = 1000;\n\t\t\tvar resy = 1000;\n\t\t\tvar parent = this.entity._parent;\n\n\t\t\tif (parent && parent.element) {\n\t\t\t\tresx = parent.element.calculatedWidth;\n\t\t\t\tresy = parent.element.calculatedHeight;\n\t\t\t} else if (this.screen) {\n\t\t\t\tvar res = this.screen.screen.resolution;\n\t\t\t\tvar scale = this.screen.screen.scale;\n\t\t\t\tresx = res.x / scale;\n\t\t\t\tresy = res.y / scale;\n\t\t\t}\n\n\t\t\tthis._localAnchor.set(this._anchor.x * resx, this._anchor.y * resy, this._anchor.z * resx, this._anchor.w * resy);\n\t\t};\n\n\t\t_proto.getOffsetPosition = function getOffsetPosition(x, y) {\n\t\t\tvar p = this.entity.getLocalPosition().clone();\n\t\t\tp.x += x;\n\t\t\tp.y += y;\n\n\t\t\tthis._screenToWorld.transformPoint(p, p);\n\n\t\t\treturn p;\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tthis.addModelToLayers(this._image ? this._image._model : this._text._model);\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\n\t\t\tif (this._image) {\n\t\t\t\tlayer.addMeshInstances(this._image._model.meshInstances);\n\t\t\t} else if (this._text) {\n\t\t\t\tlayer.addMeshInstances(this._text._model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\n\t\t\tif (this._image) {\n\t\t\t\tlayer.removeMeshInstances(this._image._model.meshInstances);\n\t\t\t} else if (this._text) {\n\t\t\t\tlayer.removeMeshInstances(this._text._model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tif (this._image) this._image.onEnable();\n\t\t\tif (this._text) this._text.onEnable();\n\t\t\tif (this._group) this._group.onEnable();\n\n\t\t\tif (this.useInput && this.system.app.elementInput) {\n\t\t\t\tthis.system.app.elementInput.addElement(this);\n\t\t\t}\n\n\t\t\tthis.system.app.scene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tthis.system.app.batcher.insert(BatchGroup.ELEMENT, this.batchGroupId, this.entity);\n\t\t\t}\n\n\t\t\tthis.fire(\"enableelement\");\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.system.app.scene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this._image) this._image.onDisable();\n\t\t\tif (this._text) this._text.onDisable();\n\t\t\tif (this._group) this._group.onDisable();\n\n\t\t\tif (this.system.app.elementInput && this.useInput) {\n\t\t\t\tthis.system.app.elementInput.removeElement(this);\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tthis.system.app.batcher.remove(BatchGroup.ELEMENT, this.batchGroupId, this.entity);\n\t\t\t}\n\n\t\t\tthis.fire(\"disableelement\");\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.entity.off('insert', this._onInsert, this);\n\n\t\t\tthis._unpatch();\n\n\t\t\tif (this._image) this._image.destroy();\n\t\t\tif (this._text) this._text.destroy();\n\n\t\t\tif (this.system.app.elementInput && this.useInput) {\n\t\t\t\tthis.system.app.elementInput.removeElement(this);\n\t\t\t}\n\n\t\t\tif (this.screen && this.screen.screen) {\n\t\t\t\tthis._unbindScreen(this.screen.screen);\n\n\t\t\t\tthis.screen.screen.syncDrawOrder();\n\t\t\t}\n\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto._calculateSize = function _calculateSize(propagateCalculatedWidth, propagateCalculatedHeight) {\n\t\t\tif (!this.entity._parent && !this.screen) return;\n\n\t\t\tthis._calculateLocalAnchors();\n\n\t\t\tvar newWidth = this._absRight - this._absLeft;\n\t\t\tvar newHeight = this._absTop - this._absBottom;\n\n\t\t\tif (propagateCalculatedWidth) {\n\t\t\t\tthis._setWidth(newWidth);\n\t\t\t} else {\n\t\t\t\tthis._setCalculatedWidth(newWidth, false);\n\t\t\t}\n\n\t\t\tif (propagateCalculatedHeight) {\n\t\t\t\tthis._setHeight(newHeight);\n\t\t\t} else {\n\t\t\t\tthis._setCalculatedHeight(newHeight, false);\n\t\t\t}\n\n\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\tp.x = this._margin.x + this._calculatedWidth * this._pivot.x;\n\t\t\tp.y = this._margin.y + this._calculatedHeight * this._pivot.y;\n\t\t\tthis.entity.setLocalPosition(p);\n\t\t\tthis._sizeDirty = false;\n\t\t};\n\n\t\t_proto._setWidth = function _setWidth(w) {\n\t\t\tthis._width = w;\n\n\t\t\tthis._setCalculatedWidth(w, false);\n\n\t\t\tthis.fire('set:width', this._width);\n\t\t};\n\n\t\t_proto._setHeight = function _setHeight(h) {\n\t\t\tthis._height = h;\n\n\t\t\tthis._setCalculatedHeight(h, false);\n\n\t\t\tthis.fire('set:height', this._height);\n\t\t};\n\n\t\t_proto._setCalculatedWidth = function _setCalculatedWidth(value, updateMargins) {\n\t\t\tif (Math.abs(value - this._calculatedWidth) <= 1e-4) return;\n\t\t\tthis._calculatedWidth = value;\n\n\t\t\tthis.entity._dirtifyLocal();\n\n\t\t\tif (updateMargins) {\n\t\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\t\tvar pvt = this._pivot;\n\t\t\t\tthis._margin.x = p.x - this._calculatedWidth * pvt.x;\n\t\t\t\tthis._margin.z = this._localAnchor.z - this._localAnchor.x - this._calculatedWidth - this._margin.x;\n\t\t\t}\n\n\t\t\tthis._flagChildrenAsDirty();\n\n\t\t\tthis.fire('set:calculatedWidth', this._calculatedWidth);\n\t\t\tthis.fire('resize', this._calculatedWidth, this._calculatedHeight);\n\t\t};\n\n\t\t_proto._setCalculatedHeight = function _setCalculatedHeight(value, updateMargins) {\n\t\t\tif (Math.abs(value - this._calculatedHeight) <= 1e-4) return;\n\t\t\tthis._calculatedHeight = value;\n\n\t\t\tthis.entity._dirtifyLocal();\n\n\t\t\tif (updateMargins) {\n\t\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\t\tvar pvt = this._pivot;\n\t\t\t\tthis._margin.y = p.y - this._calculatedHeight * pvt.y;\n\t\t\t\tthis._margin.w = this._localAnchor.w - this._localAnchor.y - this._calculatedHeight - this._margin.y;\n\t\t\t}\n\n\t\t\tthis._flagChildrenAsDirty();\n\n\t\t\tthis.fire('set:calculatedHeight', this._calculatedHeight);\n\t\t\tthis.fire('resize', this._calculatedWidth, this._calculatedHeight);\n\t\t};\n\n\t\t_proto._flagChildrenAsDirty = function _flagChildrenAsDirty() {\n\t\t\tvar i, l;\n\t\t\tvar c = this.entity._children;\n\n\t\t\tfor (i = 0, l = c.length; i < l; i++) {\n\t\t\t\tif (c[i].element) {\n\t\t\t\t\tc[i].element._anchorDirty = true;\n\t\t\t\t\tc[i].element._sizeDirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.addModelToLayers = function addModelToLayers(model) {\n\t\t\tvar layer;\n\n\t\t\tthis._addedModels.push(model);\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addMeshInstances(model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeModelFromLayers = function removeModelFromLayers(model) {\n\t\t\tvar layer;\n\n\t\t\tvar idx = this._addedModels.indexOf(model);\n\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._addedModels.splice(idx, 1);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeMeshInstances(model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.getMaskOffset = function getMaskOffset() {\n\t\t\tvar frame = this.system.app.frame;\n\n\t\t\tif (this._offsetReadAt !== frame) {\n\t\t\t\tthis._maskOffset = 0.5;\n\t\t\t\tthis._offsetReadAt = frame;\n\t\t\t}\n\n\t\t\tvar mo = this._maskOffset;\n\t\t\tthis._maskOffset -= 0.001;\n\t\t\treturn mo;\n\t\t};\n\n\t\t_proto.isVisibleForCamera = function isVisibleForCamera(camera) {\n\t\t\tvar clipL, clipR, clipT, clipB;\n\n\t\t\tif (this.maskedBy) {\n\t\t\t\tvar corners = this.maskedBy.element.screenCorners;\n\t\t\t\tclipL = Math.min(Math.min(corners[0].x, corners[1].x), Math.min(corners[2].x, corners[3].x));\n\t\t\t\tclipR = Math.max(Math.max(corners[0].x, corners[1].x), Math.max(corners[2].x, corners[3].x));\n\t\t\t\tclipB = Math.min(Math.min(corners[0].y, corners[1].y), Math.min(corners[2].y, corners[3].y));\n\t\t\t\tclipT = Math.max(Math.max(corners[0].y, corners[1].y), Math.max(corners[2].y, corners[3].y));\n\t\t\t} else {\n\t\t\t\tvar sw = this.system.app.graphicsDevice.width;\n\t\t\t\tvar sh = this.system.app.graphicsDevice.height;\n\t\t\t\tvar cameraWidth = camera._rect.z * sw;\n\t\t\t\tvar cameraHeight = camera._rect.w * sh;\n\t\t\t\tclipL = camera._rect.x * sw;\n\t\t\t\tclipR = clipL + cameraWidth;\n\t\t\t\tclipT = (1 - camera._rect.y) * sh;\n\t\t\t\tclipB = clipT - cameraHeight;\n\t\t\t}\n\n\t\t\tvar hitCorners = this.screenCorners;\n\t\t\tvar left = Math.min(Math.min(hitCorners[0].x, hitCorners[1].x), Math.min(hitCorners[2].x, hitCorners[3].x));\n\t\t\tvar right = Math.max(Math.max(hitCorners[0].x, hitCorners[1].x), Math.max(hitCorners[2].x, hitCorners[3].x));\n\t\t\tvar bottom = Math.min(Math.min(hitCorners[0].y, hitCorners[1].y), Math.min(hitCorners[2].y, hitCorners[3].y));\n\t\t\tvar top = Math.max(Math.max(hitCorners[0].y, hitCorners[1].y), Math.max(hitCorners[2].y, hitCorners[3].y));\n\n\t\t\tif (right < clipL || left > clipR || bottom > clipT || top < clipB) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto._isScreenSpace = function _isScreenSpace() {\n\t\t\tif (this.screen && this.screen.screen) {\n\t\t\t\treturn this.screen.screen.screenSpace;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto._isScreenCulled = function _isScreenCulled() {\n\t\t\tif (this.screen && this.screen.screen) {\n\t\t\t\treturn this.screen.screen.cull;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\treturn ElementComponent;\n\t}(Component);\n\n\tObject.defineProperty(ElementComponent.prototype, \"type\", {\n\t\tget: function get() {\n\t\t\treturn this._type;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tif (value !== this._type) {\n\t\t\t\tthis._type = value;\n\n\t\t\t\tif (this._image) {\n\t\t\t\t\tthis._image.destroy();\n\n\t\t\t\t\tthis._image = null;\n\t\t\t\t}\n\n\t\t\t\tif (this._text) {\n\t\t\t\t\tthis._text.destroy();\n\n\t\t\t\t\tthis._text = null;\n\t\t\t\t}\n\n\t\t\t\tif (value === ELEMENTTYPE_IMAGE) {\n\t\t\t\t\tthis._image = new ImageElement(this);\n\t\t\t\t} else if (value === ELEMENTTYPE_TEXT) {\n\t\t\t\t\tthis._text = new TextElement(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"layers\", {\n\t\tget: function get() {\n\t\t\treturn this._layers;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tvar i, j, layer;\n\n\t\t\tif (this._addedModels.length) {\n\t\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this._layers[i]);\n\n\t\t\t\t\tif (layer) {\n\t\t\t\t\t\tfor (j = 0; j < this._addedModels.length; j++) {\n\t\t\t\t\t\t\tlayer.removeMeshInstances(this._addedModels[j].meshInstances);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._layers = value;\n\t\t\tif (!this.enabled || !this.entity.enabled || !this._addedModels.length) return;\n\n\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this._layers[i]);\n\n\t\t\t\tif (layer) {\n\t\t\t\t\tfor (j = 0; j < this._addedModels.length; j++) {\n\t\t\t\t\t\tlayer.addMeshInstances(this._addedModels[j].meshInstances);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"drawOrder\", {\n\t\tget: function get() {\n\t\t\treturn this._drawOrder;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tvar priority = 0;\n\n\t\t\tif (this.screen) {\n\t\t\t\tpriority = this.screen.screen.priority;\n\t\t\t}\n\n\t\t\tif (value > 0xFFFFFF) {\n\t\t\t\tvalue = 0xFFFFFF;\n\t\t\t}\n\n\t\t\tthis._drawOrder = (priority << 24) + value;\n\t\t\tthis.fire('set:draworder', this._drawOrder);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_absLeft\", {\n\t\tget: function get() {\n\t\t\treturn this._localAnchor.x + this._margin.x;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_absRight\", {\n\t\tget: function get() {\n\t\t\treturn this._localAnchor.z - this._margin.z;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_absTop\", {\n\t\tget: function get() {\n\t\t\treturn this._localAnchor.w - this._margin.w;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_absBottom\", {\n\t\tget: function get() {\n\t\t\treturn this._localAnchor.y + this._margin.y;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"margin\", {\n\t\tget: function get() {\n\t\t\treturn this._margin;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._margin.copy(value);\n\n\t\t\tthis._calculateSize(true, true);\n\n\t\t\tthis.fire('set:margin', this._margin);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"left\", {\n\t\tget: function get() {\n\t\t\treturn this._margin.x;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._margin.x = value;\n\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\tvar wr = this._absRight;\n\t\t\tvar wl = this._localAnchor.x + value;\n\n\t\t\tthis._setWidth(wr - wl);\n\n\t\t\tp.x = value + this._calculatedWidth * this._pivot.x;\n\t\t\tthis.entity.setLocalPosition(p);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"right\", {\n\t\tget: function get() {\n\t\t\treturn this._margin.z;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._margin.z = value;\n\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\tvar wl = this._absLeft;\n\t\t\tvar wr = this._localAnchor.z - value;\n\n\t\t\tthis._setWidth(wr - wl);\n\n\t\t\tp.x = this._localAnchor.z - this._localAnchor.x - value - this._calculatedWidth * (1 - this._pivot.x);\n\t\t\tthis.entity.setLocalPosition(p);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"top\", {\n\t\tget: function get() {\n\t\t\treturn this._margin.w;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._margin.w = value;\n\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\tvar wb = this._absBottom;\n\t\t\tvar wt = this._localAnchor.w - value;\n\n\t\t\tthis._setHeight(wt - wb);\n\n\t\t\tp.y = this._localAnchor.w - this._localAnchor.y - value - this._calculatedHeight * (1 - this._pivot.y);\n\t\t\tthis.entity.setLocalPosition(p);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"bottom\", {\n\t\tget: function get() {\n\t\t\treturn this._margin.y;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._margin.y = value;\n\t\t\tvar p = this.entity.getLocalPosition();\n\t\t\tvar wt = this._absTop;\n\t\t\tvar wb = this._localAnchor.y + value;\n\n\t\t\tthis._setHeight(wt - wb);\n\n\t\t\tp.y = value + this._calculatedHeight * this._pivot.y;\n\t\t\tthis.entity.setLocalPosition(p);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"width\", {\n\t\tget: function get() {\n\t\t\treturn this._width;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._width = value;\n\n\t\t\tif (!this._hasSplitAnchorsX) {\n\t\t\t\tthis._setCalculatedWidth(value, true);\n\t\t\t}\n\n\t\t\tthis.fire('set:width', this._width);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"height\", {\n\t\tget: function get() {\n\t\t\treturn this._height;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._height = value;\n\n\t\t\tif (!this._hasSplitAnchorsY) {\n\t\t\t\tthis._setCalculatedHeight(value, true);\n\t\t\t}\n\n\t\t\tthis.fire('set:height', this._height);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"calculatedWidth\", {\n\t\tget: function get() {\n\t\t\treturn this._calculatedWidth;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._setCalculatedWidth(value, true);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"calculatedHeight\", {\n\t\tget: function get() {\n\t\t\treturn this._calculatedHeight;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._setCalculatedHeight(value, true);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"pivot\", {\n\t\tget: function get() {\n\t\t\treturn this._pivot;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tvar prevX = this._pivot.x;\n\t\t\tvar prevY = this._pivot.y;\n\n\t\t\tif (value instanceof Vec2) {\n\t\t\t\tthis._pivot.set(value.x, value.y);\n\t\t\t} else {\n\t\t\t\tthis._pivot.set(value[0], value[1]);\n\t\t\t}\n\n\t\t\tvar mx = this._margin.x + this._margin.z;\n\t\t\tvar dx = this._pivot.x - prevX;\n\t\t\tthis._margin.x += mx * dx;\n\t\t\tthis._margin.z -= mx * dx;\n\t\t\tvar my = this._margin.y + this._margin.w;\n\t\t\tvar dy = this._pivot.y - prevY;\n\t\t\tthis._margin.y += my * dy;\n\t\t\tthis._margin.w -= my * dy;\n\t\t\tthis._anchorDirty = true;\n\t\t\tthis._cornersDirty = true;\n\t\t\tthis._worldCornersDirty = true;\n\n\t\t\tthis._calculateSize(false, false);\n\n\t\t\tthis._flagChildrenAsDirty();\n\n\t\t\tthis.fire('set:pivot', this._pivot);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"anchor\", {\n\t\tget: function get() {\n\t\t\treturn this._anchor;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tif (value instanceof Vec4) {\n\t\t\t\tthis._anchor.set(value.x, value.y, value.z, value.w);\n\t\t\t} else {\n\t\t\t\tthis._anchor.set(value[0], value[1], value[2], value[3]);\n\t\t\t}\n\n\t\t\tif (!this.entity._parent && !this.screen) {\n\t\t\t\tthis._calculateLocalAnchors();\n\t\t\t} else {\n\t\t\t\tthis._calculateSize(this._hasSplitAnchorsX, this._hasSplitAnchorsY);\n\t\t\t}\n\n\t\t\tthis._anchorDirty = true;\n\t\t\tif (!this.entity._dirtyLocal) this.entity._dirtifyLocal();\n\t\t\tthis.fire('set:anchor', this._anchor);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_hasSplitAnchorsX\", {\n\t\tget: function get() {\n\t\t\treturn Math.abs(this._anchor.x - this._anchor.z) > 0.001;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"_hasSplitAnchorsY\", {\n\t\tget: function get() {\n\t\t\treturn Math.abs(this._anchor.y - this._anchor.w) > 0.001;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"aabb\", {\n\t\tget: function get() {\n\t\t\tif (this._image) return this._image.aabb;\n\t\t\tif (this._text) return this._text.aabb;\n\t\t\treturn null;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, 'screenCorners', {\n\t\tget: function get() {\n\t\t\tif (!this._cornersDirty || !this.screen) return this._screenCorners;\n\t\t\tvar parentBottomLeft = this.entity.parent && this.entity.parent.element && this.entity.parent.element.screenCorners[0];\n\n\t\t\tthis._screenCorners[0].set(this._absLeft, this._absBottom, 0);\n\n\t\t\tthis._screenCorners[1].set(this._absRight, this._absBottom, 0);\n\n\t\t\tthis._screenCorners[2].set(this._absRight, this._absTop, 0);\n\n\t\t\tthis._screenCorners[3].set(this._absLeft, this._absTop, 0);\n\n\t\t\tvar screenSpace = this.screen.screen.screenSpace;\n\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tthis._screenTransform.transformPoint(this._screenCorners[i], this._screenCorners[i]);\n\n\t\t\t\tif (screenSpace) this._screenCorners[i].scale(this.screen.screen.scale);\n\n\t\t\t\tif (parentBottomLeft) {\n\t\t\t\t\tthis._screenCorners[i].add(parentBottomLeft);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cornersDirty = false;\n\t\t\tthis._canvasCornersDirty = true;\n\t\t\tthis._worldCornersDirty = true;\n\t\t\treturn this._screenCorners;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, 'canvasCorners', {\n\t\tget: function get() {\n\t\t\tif (!this._canvasCornersDirty || !this.screen || !this.screen.screen.screenSpace) return this._canvasCorners;\n\t\t\tvar device = this.system.app.graphicsDevice;\n\t\t\tvar screenCorners = this.screenCorners;\n\t\t\tvar sx = device.canvas.clientWidth / device.width;\n\t\t\tvar sy = device.canvas.clientHeight / device.height;\n\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tthis._canvasCorners[i].set(screenCorners[i].x * sx, (device.height - screenCorners[i].y) * sy);\n\t\t\t}\n\n\t\t\tthis._canvasCornersDirty = false;\n\t\t\treturn this._canvasCorners;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, 'worldCorners', {\n\t\tget: function get() {\n\t\t\tif (!this._worldCornersDirty) {\n\t\t\t\treturn this._worldCorners;\n\t\t\t}\n\n\t\t\tif (this.screen) {\n\t\t\t\tvar screenCorners = this.screenCorners;\n\n\t\t\t\tif (!this.screen.screen.screenSpace) {\n\t\t\t\t\tmatA.copy(this.screen.screen._screenMatrix);\n\t\t\t\t\tmatA.data[13] = -matA.data[13];\n\t\t\t\t\tmatA.mul2(this.screen.getWorldTransform(), matA);\n\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tmatA.transformPoint(screenCorners[i], this._worldCorners[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar localPos = this.entity.getLocalPosition();\n\t\t\t\tmatA.setTranslate(-localPos.x, -localPos.y, -localPos.z);\n\t\t\t\tmatB.setTRS(Vec3.ZERO, this.entity.getLocalRotation(), this.entity.getLocalScale());\n\t\t\t\tmatC.setTranslate(localPos.x, localPos.y, localPos.z);\n\t\t\t\tvar entity = this.entity.parent ? this.entity.parent : this.entity;\n\t\t\t\tmatD.copy(entity.getWorldTransform());\n\t\t\t\tmatD.mul(matC).mul(matB).mul(matA);\n\t\t\t\tvecA$1.set(localPos.x - this.pivot.x * this.calculatedWidth, localPos.y - this.pivot.y * this.calculatedHeight, localPos.z);\n\t\t\t\tmatD.transformPoint(vecA$1, this._worldCorners[0]);\n\t\t\t\tvecA$1.set(localPos.x + (1 - this.pivot.x) * this.calculatedWidth, localPos.y - this.pivot.y * this.calculatedHeight, localPos.z);\n\t\t\t\tmatD.transformPoint(vecA$1, this._worldCorners[1]);\n\t\t\t\tvecA$1.set(localPos.x + (1 - this.pivot.x) * this.calculatedWidth, localPos.y + (1 - this.pivot.y) * this.calculatedHeight, localPos.z);\n\t\t\t\tmatD.transformPoint(vecA$1, this._worldCorners[2]);\n\t\t\t\tvecA$1.set(localPos.x - this.pivot.x * this.calculatedWidth, localPos.y + (1 - this.pivot.y) * this.calculatedHeight, localPos.z);\n\t\t\t\tmatD.transformPoint(vecA$1, this._worldCorners[3]);\n\t\t\t}\n\n\t\t\tthis._worldCornersDirty = false;\n\t\t\treturn this._worldCorners;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"textWidth\", {\n\t\tget: function get() {\n\t\t\treturn this._text ? this._text.width : 0;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"textHeight\", {\n\t\tget: function get() {\n\t\t\treturn this._text ? this._text.height : 0;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"useInput\", {\n\t\tget: function get() {\n\t\t\treturn this._useInput;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tif (this._useInput === value) return;\n\t\t\tthis._useInput = value;\n\n\t\t\tif (this.system.app.elementInput) {\n\t\t\t\tif (value) {\n\t\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis.system.app.elementInput.addElement(this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.system.app.elementInput.removeElement(this);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._useInput === true) {\n\t\t\t\t\tconsole.warn(\"Elements will not get any input events because this.system.app.elementInput is not created\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.fire('set:useInput', value);\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"batchGroupId\", {\n\t\tget: function get() {\n\t\t\treturn this._batchGroupId;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tif (this._batchGroupId === value) return;\n\n\t\t\tif (this.entity.enabled && this._batchGroupId >= 0) {\n\t\t\t\tthis.system.app.batcher.remove(BatchGroup.ELEMENT, this.batchGroupId, this.entity);\n\t\t\t}\n\n\t\t\tif (this.entity.enabled && value >= 0) {\n\t\t\t\tthis.system.app.batcher.insert(BatchGroup.ELEMENT, value, this.entity);\n\t\t\t}\n\n\t\t\tif (value < 0 && this._batchGroupId >= 0 && this.enabled && this.entity.enabled) {\n\t\t\t\tif (this._image && this._image._renderable.model) {\n\t\t\t\t\tthis.addModelToLayers(this._image._renderable.model);\n\t\t\t\t} else if (this._text && this._text._model) {\n\t\t\t\t\tthis.addModelToLayers(this._text._model);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._batchGroupId = value;\n\t\t}\n\t});\n\tObject.defineProperty(ElementComponent.prototype, \"maskedBy\", {\n\t\tget: function get() {\n\t\t\treturn this._maskedBy;\n\t\t}\n\t});\n\n\tvar _define = function _define(name) {\n\t\tObject.defineProperty(ElementComponent.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\tif (this._text) {\n\t\t\t\t\treturn this._text[name];\n\t\t\t\t} else if (this._image) {\n\t\t\t\t\treturn this._image[name];\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._text) {\n\t\t\t\t\tthis._text[name] = value;\n\t\t\t\t} else if (this._image) {\n\t\t\t\t\tthis._image[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t_define(\"fontSize\");\n\n\t_define(\"minFontSize\");\n\n\t_define(\"maxFontSize\");\n\n\t_define(\"maxLines\");\n\n\t_define(\"autoFitWidth\");\n\n\t_define(\"autoFitHeight\");\n\n\t_define(\"color\");\n\n\t_define(\"font\");\n\n\t_define(\"fontAsset\");\n\n\t_define(\"spacing\");\n\n\t_define(\"lineHeight\");\n\n\t_define(\"wrapLines\");\n\n\t_define(\"lines\");\n\n\t_define(\"alignment\");\n\n\t_define(\"autoWidth\");\n\n\t_define(\"autoHeight\");\n\n\t_define(\"rtlReorder\");\n\n\t_define(\"unicodeConverter\");\n\n\t_define(\"text\");\n\n\t_define(\"key\");\n\n\t_define(\"texture\");\n\n\t_define(\"textureAsset\");\n\n\t_define(\"material\");\n\n\t_define(\"materialAsset\");\n\n\t_define(\"sprite\");\n\n\t_define(\"spriteAsset\");\n\n\t_define(\"spriteFrame\");\n\n\t_define(\"pixelsPerUnit\");\n\n\t_define(\"opacity\");\n\n\t_define(\"rect\");\n\n\t_define(\"mask\");\n\n\t_define(\"outlineColor\");\n\n\t_define(\"outlineThickness\");\n\n\t_define(\"shadowColor\");\n\n\t_define(\"shadowOffset\");\n\n\t_define(\"enableMarkup\");\n\n\t_define(\"rangeStart\");\n\n\t_define(\"rangeEnd\");\n\n\tvar ElementComponentData = function ElementComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$7 = ['enabled'];\n\n\tvar ElementComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ElementComponentSystem, _ComponentSystem);\n\n\t\tfunction ElementComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'element';\n\t\t\t_this.ComponentType = ElementComponent;\n\t\t\t_this.DataType = ElementComponentData;\n\t\t\t_this.schema = _schema$7;\n\t\t\t_this._unicodeConverter = null;\n\t\t\t_this._rtlReorder = null;\n\t\t\t_this._defaultTexture = new Texture(app.graphicsDevice, {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8\n\t\t\t});\n\t\t\t_this._defaultTexture.name = 'element-system';\n\n\t\t\tvar pixels = _this._defaultTexture.lock();\n\n\t\t\tvar pixelData = new Uint8Array(4);\n\t\t\tpixelData[0] = 255.0;\n\t\t\tpixelData[1] = 255.0;\n\t\t\tpixelData[2] = 255.0;\n\t\t\tpixelData[3] = 255.0;\n\t\t\tpixels.set(pixelData);\n\n\t\t\t_this._defaultTexture.unlock();\n\n\t\t\t_this.defaultImageMaterial = null;\n\t\t\t_this.defaultImage9SlicedMaterial = null;\n\t\t\t_this.defaultImage9TiledMaterial = null;\n\t\t\t_this.defaultImageMaskMaterial = null;\n\t\t\t_this.defaultImage9SlicedMaskMaterial = null;\n\t\t\t_this.defaultImage9TiledMaskMaterial = null;\n\t\t\t_this.defaultScreenSpaceImageMaterial = null;\n\t\t\t_this.defaultScreenSpaceImage9SlicedMaterial = null;\n\t\t\t_this.defaultScreenSpaceImage9TiledMaterial = null;\n\t\t\t_this.defaultScreenSpaceImageMask9SlicedMaterial = null;\n\t\t\t_this.defaultScreenSpaceImageMask9TiledMaterial = null;\n\t\t\t_this.defaultScreenSpaceImageMaskMaterial = null;\n\t\t\t_this.defaultTextMaterial = null;\n\t\t\t_this.defaultBitmapTextMaterial = null;\n\t\t\t_this.defaultScreenSpaceTextMaterial = null;\n\t\t\t_this.defaultScreenSpaceBitmapTextMaterial = null;\n\t\t\t_this.defaultImageMaterials = [];\n\n\t\t\t_this.on('beforeremove', _this.onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ElementComponentSystem.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._defaultTexture.destroy();\n\t\t};\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tcomponent._beingInitialized = true;\n\n\t\t\tif (data.anchor !== undefined) {\n\t\t\t\tif (data.anchor instanceof Vec4) {\n\t\t\t\t\tcomponent.anchor.copy(data.anchor);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.anchor.set(data.anchor[0], data.anchor[1], data.anchor[2], data.anchor[3]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.pivot !== undefined) {\n\t\t\t\tif (data.pivot instanceof Vec2) {\n\t\t\t\t\tcomponent.pivot.copy(data.pivot);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.pivot.set(data.pivot[0], data.pivot[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar splitHorAnchors = Math.abs(component.anchor.x - component.anchor.z) > 0.001;\n\t\t\tvar splitVerAnchors = Math.abs(component.anchor.y - component.anchor.w) > 0.001;\n\t\t\tvar _marginChange = false;\n\t\t\tvar color;\n\n\t\t\tif (data.margin !== undefined) {\n\t\t\t\tif (data.margin instanceof Vec4) {\n\t\t\t\t\tcomponent.margin.copy(data.margin);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent._margin.set(data.margin[0], data.margin[1], data.margin[2], data.margin[3]);\n\t\t\t\t}\n\n\t\t\t\t_marginChange = true;\n\t\t\t}\n\n\t\t\tif (data.left !== undefined) {\n\t\t\t\tcomponent._margin.x = data.left;\n\t\t\t\t_marginChange = true;\n\t\t\t}\n\n\t\t\tif (data.bottom !== undefined) {\n\t\t\t\tcomponent._margin.y = data.bottom;\n\t\t\t\t_marginChange = true;\n\t\t\t}\n\n\t\t\tif (data.right !== undefined) {\n\t\t\t\tcomponent._margin.z = data.right;\n\t\t\t\t_marginChange = true;\n\t\t\t}\n\n\t\t\tif (data.top !== undefined) {\n\t\t\t\tcomponent._margin.w = data.top;\n\t\t\t\t_marginChange = true;\n\t\t\t}\n\n\t\t\tif (_marginChange) {\n\t\t\t\tcomponent.margin = component._margin;\n\t\t\t}\n\n\t\t\tvar shouldForceSetAnchor = false;\n\n\t\t\tif (data.width !== undefined && !splitHorAnchors) {\n\t\t\t\tcomponent.width = data.width;\n\t\t\t} else if (splitHorAnchors) {\n\t\t\t\tshouldForceSetAnchor = true;\n\t\t\t}\n\n\t\t\tif (data.height !== undefined && !splitVerAnchors) {\n\t\t\t\tcomponent.height = data.height;\n\t\t\t} else if (splitVerAnchors) {\n\t\t\t\tshouldForceSetAnchor = true;\n\t\t\t}\n\n\t\t\tif (shouldForceSetAnchor) {\n\t\t\t\tcomponent.anchor = component.anchor;\n\t\t\t}\n\n\t\t\tif (data.enabled !== undefined) {\n\t\t\t\tcomponent.enabled = data.enabled;\n\t\t\t}\n\n\t\t\tif (data.useInput !== undefined) {\n\t\t\t\tcomponent.useInput = data.useInput;\n\t\t\t}\n\n\t\t\tcomponent.batchGroupId = data.batchGroupId === undefined || data.batchGroupId === null ? -1 : data.batchGroupId;\n\n\t\t\tif (data.layers && Array.isArray(data.layers)) {\n\t\t\t\tcomponent.layers = data.layers.slice(0);\n\t\t\t}\n\n\t\t\tif (data.type !== undefined) {\n\t\t\t\tcomponent.type = data.type;\n\t\t\t}\n\n\t\t\tif (component.type === ELEMENTTYPE_IMAGE) {\n\t\t\t\tif (data.rect !== undefined) {\n\t\t\t\t\tcomponent.rect = data.rect;\n\t\t\t\t}\n\n\t\t\t\tif (data.color !== undefined) {\n\t\t\t\t\tcolor = data.color;\n\n\t\t\t\t\tif (!(color instanceof Color)) {\n\t\t\t\t\t\tcolor = new Color(data.color[0], data.color[1], data.color[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\tcomponent.color = color;\n\t\t\t\t}\n\n\t\t\t\tif (data.opacity !== undefined) component.opacity = data.opacity;\n\t\t\t\tif (data.textureAsset !== undefined) component.textureAsset = data.textureAsset;\n\t\t\t\tif (data.texture) component.texture = data.texture;\n\t\t\t\tif (data.spriteAsset !== undefined) component.spriteAsset = data.spriteAsset;\n\t\t\t\tif (data.sprite) component.sprite = data.sprite;\n\t\t\t\tif (data.spriteFrame !== undefined) component.spriteFrame = data.spriteFrame;\n\t\t\t\tif (data.pixelsPerUnit !== undefined && data.pixelsPerUnit !== null) component.pixelsPerUnit = data.pixelsPerUnit;\n\t\t\t\tif (data.materialAsset !== undefined) component.materialAsset = data.materialAsset;\n\t\t\t\tif (data.material) component.material = data.material;\n\n\t\t\t\tif (data.mask !== undefined) {\n\t\t\t\t\tcomponent.mask = data.mask;\n\t\t\t\t}\n\t\t\t} else if (component.type === ELEMENTTYPE_TEXT) {\n\t\t\t\tif (data.autoWidth !== undefined) component.autoWidth = data.autoWidth;\n\t\t\t\tif (data.autoHeight !== undefined) component.autoHeight = data.autoHeight;\n\t\t\t\tif (data.rtlReorder !== undefined) component.rtlReorder = data.rtlReorder;\n\t\t\t\tif (data.unicodeConverter !== undefined) component.unicodeConverter = data.unicodeConverter;\n\n\t\t\t\tif (data.text !== null && data.text !== undefined) {\n\t\t\t\t\tcomponent.text = data.text;\n\t\t\t\t} else if (data.key !== null && data.key !== undefined) {\n\t\t\t\t\tcomponent.key = data.key;\n\t\t\t\t}\n\n\t\t\t\tif (data.color !== undefined) {\n\t\t\t\t\tcolor = data.color;\n\n\t\t\t\t\tif (!(color instanceof Color)) {\n\t\t\t\t\t\tcolor = new Color(color[0], color[1], color[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\tcomponent.color = color;\n\t\t\t\t}\n\n\t\t\t\tif (data.opacity !== undefined) {\n\t\t\t\t\tcomponent.opacity = data.opacity;\n\t\t\t\t}\n\n\t\t\t\tif (data.spacing !== undefined) component.spacing = data.spacing;\n\n\t\t\t\tif (data.fontSize !== undefined) {\n\t\t\t\t\tcomponent.fontSize = data.fontSize;\n\t\t\t\t\tif (!data.lineHeight) component.lineHeight = data.fontSize;\n\t\t\t\t}\n\n\t\t\t\tif (data.lineHeight !== undefined) component.lineHeight = data.lineHeight;\n\t\t\t\tif (data.maxLines !== undefined) component.maxLines = data.maxLines;\n\t\t\t\tif (data.wrapLines !== undefined) component.wrapLines = data.wrapLines;\n\t\t\t\tif (data.minFontSize !== undefined) component.minFontSize = data.minFontSize;\n\t\t\t\tif (data.maxFontSize !== undefined) component.maxFontSize = data.maxFontSize;\n\t\t\t\tif (data.autoFitWidth) component.autoFitWidth = data.autoFitWidth;\n\t\t\t\tif (data.autoFitHeight) component.autoFitHeight = data.autoFitHeight;\n\t\t\t\tif (data.fontAsset !== undefined) component.fontAsset = data.fontAsset;\n\t\t\t\tif (data.font !== undefined) component.font = data.font;\n\t\t\t\tif (data.alignment !== undefined) component.alignment = data.alignment;\n\t\t\t\tif (data.outlineColor !== undefined) component.outlineColor = data.outlineColor;\n\t\t\t\tif (data.outlineThickness !== undefined) component.outlineThickness = data.outlineThickness;\n\t\t\t\tif (data.shadowColor !== undefined) component.shadowColor = data.shadowColor;\n\t\t\t\tif (data.shadowOffset !== undefined) component.shadowOffset = data.shadowOffset;\n\t\t\t\tif (data.enableMarkup !== undefined) component.enableMarkup = data.enableMarkup;\n\t\t\t}\n\n\t\t\tvar result = component._parseUpToScreen();\n\n\t\t\tif (result.screen) {\n\t\t\t\tcomponent._updateScreen(result.screen);\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\n\t\t\tcomponent._beingInitialized = false;\n\n\t\t\tif (component.type === ELEMENTTYPE_IMAGE && component._image._meshDirty) {\n\t\t\t\tcomponent._image._updateMesh(component._image.mesh);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemoveComponent = function onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar source = entity.element;\n\t\t\tvar data = {\n\t\t\t\tenabled: source.enabled,\n\t\t\t\twidth: source.width,\n\t\t\t\theight: source.height,\n\t\t\t\tanchor: source.anchor.clone(),\n\t\t\t\tpivot: source.pivot.clone(),\n\t\t\t\tmargin: source.margin.clone(),\n\t\t\t\talignment: source.alignment && source.alignment.clone() || source.alignment,\n\t\t\t\tautoWidth: source.autoWidth,\n\t\t\t\tautoHeight: source.autoHeight,\n\t\t\t\ttype: source.type,\n\t\t\t\trect: source.rect && source.rect.clone() || source.rect,\n\t\t\t\trtlReorder: source.rtlReorder,\n\t\t\t\tunicodeConverter: source.unicodeConverter,\n\t\t\t\tmaterialAsset: source.materialAsset,\n\t\t\t\tmaterial: source.material,\n\t\t\t\tcolor: source.color && source.color.clone() || source.color,\n\t\t\t\topacity: source.opacity,\n\t\t\t\ttextureAsset: source.textureAsset,\n\t\t\t\ttexture: source.texture,\n\t\t\t\tspriteAsset: source.spriteAsset,\n\t\t\t\tsprite: source.sprite,\n\t\t\t\tspriteFrame: source.spriteFrame,\n\t\t\t\tpixelsPerUnit: source.pixelsPerUnit,\n\t\t\t\tspacing: source.spacing,\n\t\t\t\tlineHeight: source.lineHeight,\n\t\t\t\twrapLines: source.wrapLines,\n\t\t\t\tlayers: source.layers,\n\t\t\t\tfontSize: source.fontSize,\n\t\t\t\tminFontSize: source.minFontSize,\n\t\t\t\tmaxFontSize: source.maxFontSize,\n\t\t\t\tautoFitWidth: source.autoFitWidth,\n\t\t\t\tautoFitHeight: source.autoFitHeight,\n\t\t\t\tmaxLines: source.maxLines,\n\t\t\t\tfontAsset: source.fontAsset,\n\t\t\t\tfont: source.font,\n\t\t\t\tuseInput: source.useInput,\n\t\t\t\tbatchGroupId: source.batchGroupId,\n\t\t\t\tmask: source.mask,\n\t\t\t\toutlineColor: source.outlineColor && source.outlineColor.clone() || source.outlineColor,\n\t\t\t\toutlineThickness: source.outlineThickness,\n\t\t\t\tshadowColor: source.shadowColor && source.shadowColor.clone() || source.shadowColor,\n\t\t\t\tshadowOffset: source.shadowOffset && source.shadowOffset.clone() || source.shadowOffset,\n\t\t\t\tenableMarkup: source.enableMarkup\n\t\t\t};\n\n\t\t\tif (source.key !== undefined && source.key !== null) {\n\t\t\t\tdata.key = source.key;\n\t\t\t} else {\n\t\t\t\tdata.text = source.text;\n\t\t\t}\n\n\t\t\treturn this.addComponent(clone, data);\n\t\t};\n\n\t\t_proto.getTextElementMaterial = function getTextElementMaterial(screenSpace, msdf) {\n\t\t\tif (screenSpace) {\n\t\t\t\tif (msdf) {\n\t\t\t\t\tif (!this.defaultScreenSpaceTextMaterial) {\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial = new StandardMaterial();\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.name = \"defaultScreenSpaceTextMaterial\";\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.msdfMap = this._defaultTexture;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.useLighting = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.useGammaTonemap = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.useFog = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.useSkybox = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.diffuse.set(0, 0, 0);\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.emissive.set(1, 1, 1);\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.opacity = 0.5;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.depthWrite = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.depthTest = false;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.emissiveVertexColor = true;\n\t\t\t\t\t\tthis.defaultScreenSpaceTextMaterial.update();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.defaultScreenSpaceTextMaterial;\n\t\t\t\t}\n\n\t\t\t\tif (!this.defaultScreenSpaceBitmapTextMaterial) {\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial = new StandardMaterial();\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.name = \"defaultScreenSpaceBitmapTextMaterial\";\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.emissive.set(0.5, 0.5, 0.5);\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.emissiveMap = this._defaultTexture;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.emissiveTint = true;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.opacity = 0.5;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.opacityMap = this._defaultTexture;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.opacityMapChannel = 'a';\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.useLighting = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.useGammaTonemap = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.useFog = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.useSkybox = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.diffuse.set(0, 0, 0);\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.depthWrite = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.depthTest = false;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.emissiveVertexColor = true;\n\t\t\t\t\tthis.defaultScreenSpaceBitmapTextMaterial.update();\n\t\t\t\t}\n\n\t\t\t\treturn this.defaultScreenSpaceBitmapTextMaterial;\n\t\t\t}\n\n\t\t\tif (msdf) {\n\t\t\t\tif (!this.defaultTextMaterial) {\n\t\t\t\t\tthis.defaultTextMaterial = new StandardMaterial();\n\t\t\t\t\tthis.defaultTextMaterial.name = \"defaultTextMaterial\";\n\t\t\t\t\tthis.defaultTextMaterial.msdfMap = this._defaultTexture;\n\t\t\t\t\tthis.defaultTextMaterial.useLighting = false;\n\t\t\t\t\tthis.defaultTextMaterial.useGammaTonemap = false;\n\t\t\t\t\tthis.defaultTextMaterial.useFog = false;\n\t\t\t\t\tthis.defaultTextMaterial.useSkybox = false;\n\t\t\t\t\tthis.defaultTextMaterial.diffuse.set(0, 0, 0);\n\t\t\t\t\tthis.defaultTextMaterial.emissive.set(1, 1, 1);\n\t\t\t\t\tthis.defaultTextMaterial.opacity = 0.5;\n\t\t\t\t\tthis.defaultTextMaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\t\t\tthis.defaultTextMaterial.depthWrite = false;\n\t\t\t\t\tthis.defaultTextMaterial.emissiveVertexColor = true;\n\t\t\t\t\tthis.defaultTextMaterial.update();\n\t\t\t\t}\n\n\t\t\t\treturn this.defaultTextMaterial;\n\t\t\t}\n\n\t\t\tif (!this.defaultBitmapTextMaterial) {\n\t\t\t\tthis.defaultBitmapTextMaterial = new StandardMaterial();\n\t\t\t\tthis.defaultBitmapTextMaterial.name = \"defaultBitmapTextMaterial\";\n\t\t\t\tthis.defaultBitmapTextMaterial.emissive.set(0.5, 0.5, 0.5);\n\t\t\t\tthis.defaultBitmapTextMaterial.emissiveTint = true;\n\t\t\t\tthis.defaultBitmapTextMaterial.emissiveMap = this._defaultTexture;\n\t\t\t\tthis.defaultBitmapTextMaterial.opacity = 0.5;\n\t\t\t\tthis.defaultBitmapTextMaterial.opacityMap = this._defaultTexture;\n\t\t\t\tthis.defaultBitmapTextMaterial.opacityMapChannel = 'a';\n\t\t\t\tthis.defaultBitmapTextMaterial.useLighting = false;\n\t\t\t\tthis.defaultBitmapTextMaterial.useGammaTonemap = false;\n\t\t\t\tthis.defaultBitmapTextMaterial.useFog = false;\n\t\t\t\tthis.defaultBitmapTextMaterial.useSkybox = false;\n\t\t\t\tthis.defaultBitmapTextMaterial.diffuse.set(0, 0, 0);\n\t\t\t\tthis.defaultBitmapTextMaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\t\tthis.defaultBitmapTextMaterial.depthWrite = false;\n\t\t\t\tthis.defaultBitmapTextMaterial.emissiveVertexColor = true;\n\t\t\t\tthis.defaultBitmapTextMaterial.update();\n\t\t\t}\n\n\t\t\treturn this.defaultBitmapTextMaterial;\n\t\t};\n\n\t\t_proto._createBaseImageMaterial = function _createBaseImageMaterial() {\n\t\t\tvar material = new StandardMaterial();\n\t\t\tmaterial.diffuse.set(0, 0, 0);\n\t\t\tmaterial.emissive.set(0.5, 0.5, 0.5);\n\t\t\tmaterial.emissiveMap = this._defaultTexture;\n\t\t\tmaterial.emissiveTint = true;\n\t\t\tmaterial.opacityMap = this._defaultTexture;\n\t\t\tmaterial.opacityMapChannel = \"a\";\n\t\t\tmaterial.opacityTint = true;\n\t\t\tmaterial.opacity = 0;\n\t\t\tmaterial.useLighting = false;\n\t\t\tmaterial.useGammaTonemap = false;\n\t\t\tmaterial.useFog = false;\n\t\t\tmaterial.useSkybox = false;\n\t\t\tmaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\tmaterial.depthWrite = false;\n\t\t\treturn material;\n\t\t};\n\n\t\t_proto.getImageElementMaterial = function getImageElementMaterial(screenSpace, mask, nineSliced, nineSliceTiled) {\n\t\t\tif (screenSpace) {\n\t\t\t\tif (mask) {\n\t\t\t\t\tif (nineSliced) {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImageMask9SlicedMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.name = \"defaultScreenSpaceImageMask9SlicedMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.nineSlicedMode = SPRITE_RENDERMODE_SLICED;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9SlicedMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9SlicedMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImageMask9SlicedMaterial;\n\t\t\t\t\t} else if (nineSliceTiled) {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImageMask9TiledMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial = this.defaultScreenSpaceImage9TiledMaterial.clone();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.name = \"defaultScreenSpaceImageMask9TiledMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.nineSlicedMode = SPRITE_RENDERMODE_TILED;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMask9TiledMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9TiledMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImageMask9TiledMaterial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImageMaskMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.name = \"defaultScreenSpaceImageMaskMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaskMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImageMaskMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImageMaskMaterial;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (nineSliced) {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImage9SlicedMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9SlicedMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9SlicedMaterial.name = \"defaultScreenSpaceImage9SlicedMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9SlicedMaterial.nineSlicedMode = SPRITE_RENDERMODE_SLICED;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9SlicedMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9SlicedMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImage9SlicedMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImage9SlicedMaterial;\n\t\t\t\t\t} else if (nineSliceTiled) {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImage9TiledMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9TiledMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9TiledMaterial.name = \"defaultScreenSpaceImage9TiledMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9TiledMaterial.nineSlicedMode = SPRITE_RENDERMODE_TILED;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9TiledMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImage9TiledMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImage9TiledMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImage9TiledMaterial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.defaultScreenSpaceImageMaterial) {\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaterial.name = \"defaultScreenSpaceImageMaterial\";\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaterial.depthTest = false;\n\t\t\t\t\t\t\tthis.defaultScreenSpaceImageMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultScreenSpaceImageMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultScreenSpaceImageMaterial;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (mask) {\n\t\t\t\t\tif (nineSliced) {\n\t\t\t\t\t\tif (!this.defaultImage9SlicedMaskMaterial) {\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.name = \"defaultImage9SlicedMaskMaterial\";\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.nineSlicedMode = SPRITE_RENDERMODE_SLICED;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaskMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImage9SlicedMaskMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImage9SlicedMaskMaterial;\n\t\t\t\t\t} else if (nineSliceTiled) {\n\t\t\t\t\t\tif (!this.defaultImage9TiledMaskMaterial) {\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.name = \"defaultImage9TiledMaskMaterial\";\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.nineSlicedMode = SPRITE_RENDERMODE_TILED;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaskMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImage9TiledMaskMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImage9TiledMaskMaterial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.defaultImageMaskMaterial) {\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.name = \"defaultImageMaskMaterial\";\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.alphaTest = 1;\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.redWrite = false;\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.greenWrite = false;\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.blueWrite = false;\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.alphaWrite = false;\n\t\t\t\t\t\t\tthis.defaultImageMaskMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImageMaskMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImageMaskMaterial;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (nineSliced) {\n\t\t\t\t\t\tif (!this.defaultImage9SlicedMaterial) {\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaterial.name = \"defaultImage9SlicedMaterial\";\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaterial.nineSlicedMode = SPRITE_RENDERMODE_SLICED;\n\t\t\t\t\t\t\tthis.defaultImage9SlicedMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImage9SlicedMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImage9SlicedMaterial;\n\t\t\t\t\t} else if (nineSliceTiled) {\n\t\t\t\t\t\tif (!this.defaultImage9TiledMaterial) {\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaterial.name = \"defaultImage9TiledMaterial\";\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaterial.nineSlicedMode = SPRITE_RENDERMODE_TILED;\n\t\t\t\t\t\t\tthis.defaultImage9TiledMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImage9TiledMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImage9TiledMaterial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.defaultImageMaterial) {\n\t\t\t\t\t\t\tthis.defaultImageMaterial = this._createBaseImageMaterial();\n\t\t\t\t\t\t\tthis.defaultImageMaterial.name = \"defaultImageMaterial\";\n\t\t\t\t\t\t\tthis.defaultImageMaterial.update();\n\t\t\t\t\t\t\tthis.defaultImageMaterials.push(this.defaultImageMaterial);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.defaultImageMaterial;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.registerUnicodeConverter = function registerUnicodeConverter(func) {\n\t\t\tthis._unicodeConverter = func;\n\t\t};\n\n\t\t_proto.registerRtlReorder = function registerRtlReorder(func) {\n\t\t\tthis._rtlReorder = func;\n\t\t};\n\n\t\t_proto.getUnicodeConverter = function getUnicodeConverter() {\n\t\t\treturn this._unicodeConverter;\n\t\t};\n\n\t\t_proto.getRtlReorder = function getRtlReorder() {\n\t\t\treturn this._rtlReorder;\n\t\t};\n\n\t\treturn ElementComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ElementComponent.prototype, _schema$7);\n\n\tvar LayoutChildComponent = function (_Component) {\n\t\t_inheritsLoose(LayoutChildComponent, _Component);\n\n\t\tfunction LayoutChildComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._minWidth = 0;\n\t\t\t_this._minHeight = 0;\n\t\t\t_this._maxWidth = null;\n\t\t\t_this._maxHeight = null;\n\t\t\t_this._fitWidthProportion = 0;\n\t\t\t_this._fitHeightProportion = 0;\n\t\t\t_this._excludeFromLayout = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn LayoutChildComponent;\n\t}(Component);\n\n\tfunction defineResizeProperty(name) {\n\t\tvar _name = '_' + name;\n\n\t\tObject.defineProperty(LayoutChildComponent.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[_name];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[_name] !== value) {\n\t\t\t\t\tthis[_name] = value;\n\t\t\t\t\tthis.fire('resize');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdefineResizeProperty('minWidth');\n\tdefineResizeProperty('minHeight');\n\tdefineResizeProperty('maxWidth');\n\tdefineResizeProperty('maxHeight');\n\tdefineResizeProperty('fitWidthProportion');\n\tdefineResizeProperty('fitHeightProportion');\n\tdefineResizeProperty('excludeFromLayout');\n\n\tvar LayoutChildComponentData = function LayoutChildComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$8 = ['enabled'];\n\n\tvar LayoutChildComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(LayoutChildComponentSystem, _ComponentSystem);\n\n\t\tfunction LayoutChildComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'layoutchild';\n\t\t\t_this.ComponentType = LayoutChildComponent;\n\t\t\t_this.DataType = LayoutChildComponentData;\n\t\t\t_this.schema = _schema$8;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LayoutChildComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data.enabled !== undefined) component.enabled = data.enabled;\n\t\t\tif (data.minWidth !== undefined) component.minWidth = data.minWidth;\n\t\t\tif (data.minHeight !== undefined) component.minHeight = data.minHeight;\n\t\t\tif (data.maxWidth !== undefined) component.maxWidth = data.maxWidth;\n\t\t\tif (data.maxHeight !== undefined) component.maxHeight = data.maxHeight;\n\t\t\tif (data.fitWidthProportion !== undefined) component.fitWidthProportion = data.fitWidthProportion;\n\t\t\tif (data.fitHeightProportion !== undefined) component.fitHeightProportion = data.fitHeightProportion;\n\t\t\tif (data.excludeFromLayout !== undefined) component.excludeFromLayout = data.excludeFromLayout;\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar layoutChild = entity.layoutchild;\n\t\t\treturn this.addComponent(clone, {\n\t\t\t\tenabled: layoutChild.enabled,\n\t\t\t\tminWidth: layoutChild.minWidth,\n\t\t\t\tminHeight: layoutChild.minHeight,\n\t\t\t\tmaxWidth: layoutChild.maxWidth,\n\t\t\t\tmaxHeight: layoutChild.maxHeight,\n\t\t\t\tfitWidthProportion: layoutChild.fitWidthProportion,\n\t\t\t\tfitHeightProportion: layoutChild.fitHeightProportion,\n\t\t\t\texcludeFromLayout: layoutChild.excludeFromLayout\n\t\t\t});\n\t\t};\n\n\t\treturn LayoutChildComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(LayoutChildComponent.prototype, _schema$8);\n\n\tvar FITTING_NONE = 0;\n\tvar FITTING_STRETCH = 1;\n\tvar FITTING_SHRINK = 2;\n\tvar FITTING_BOTH = 3;\n\n\tvar AXIS_MAPPINGS = {};\n\tAXIS_MAPPINGS[ORIENTATION_HORIZONTAL] = {\n\t\taxis: 'x',\n\t\tsize: 'width',\n\t\tcalculatedSize: 'calculatedWidth',\n\t\tminSize: 'minWidth',\n\t\tmaxSize: 'maxWidth',\n\t\tfitting: 'widthFitting',\n\t\tfittingProportion: 'fitWidthProportion'\n\t};\n\tAXIS_MAPPINGS[ORIENTATION_VERTICAL] = {\n\t\taxis: 'y',\n\t\tsize: 'height',\n\t\tcalculatedSize: 'calculatedHeight',\n\t\tminSize: 'minHeight',\n\t\tmaxSize: 'maxHeight',\n\t\tfitting: 'heightFitting',\n\t\tfittingProportion: 'fitHeightProportion'\n\t};\n\tvar OPPOSITE_ORIENTATION = {};\n\tOPPOSITE_ORIENTATION[ORIENTATION_HORIZONTAL] = ORIENTATION_VERTICAL;\n\tOPPOSITE_ORIENTATION[ORIENTATION_VERTICAL] = ORIENTATION_HORIZONTAL;\n\tvar PROPERTY_DEFAULTS = {\n\t\tminWidth: 0,\n\t\tminHeight: 0,\n\t\tmaxWidth: Number.POSITIVE_INFINITY,\n\t\tmaxHeight: Number.POSITIVE_INFINITY,\n\t\twidth: null,\n\t\theight: null,\n\t\tfitWidthProportion: 0,\n\t\tfitHeightProportion: 0\n\t};\n\tvar FITTING_ACTION = {\n\t\tNONE: 'NONE',\n\t\tAPPLY_STRETCHING: 'APPLY_STRETCHING',\n\t\tAPPLY_SHRINKING: 'APPLY_SHRINKING'\n\t};\n\tvar availableSpace = new Vec2();\n\n\tfunction createCalculator(orientation) {\n\t\tvar options;\n\t\tvar a = AXIS_MAPPINGS[orientation];\n\t\tvar b = AXIS_MAPPINGS[OPPOSITE_ORIENTATION[orientation]];\n\n\t\tfunction minExtentA(element, size) {\n\t\t\treturn -size[a.size] * element.pivot[a.axis];\n\t\t}\n\n\t\tfunction minExtentB(element, size) {\n\t\t\treturn -size[b.size] * element.pivot[b.axis];\n\t\t}\n\n\t\tfunction maxExtentA(element, size) {\n\t\t\treturn size[a.size] * (1 - element.pivot[a.axis]);\n\t\t}\n\n\t\tfunction calculateAll(allElements, layoutOptions) {\n\t\t\tallElements = allElements.filter(shouldIncludeInLayout);\n\t\t\toptions = layoutOptions;\n\t\t\tavailableSpace.x = options.containerSize.x - options.padding.x - options.padding.z;\n\t\t\tavailableSpace.y = options.containerSize.y - options.padding.y - options.padding.w;\n\t\t\tresetAnchors(allElements);\n\t\t\tvar lines = reverseLinesIfRequired(splitLines(allElements));\n\t\t\tvar sizes = calculateSizesOnAxisB(lines, calculateSizesOnAxisA(lines));\n\t\t\tvar positions = calculateBasePositions(lines, sizes);\n\t\t\tapplyAlignmentAndPadding(lines, sizes, positions);\n\t\t\tapplySizesAndPositions(lines, sizes, positions);\n\t\t\treturn createLayoutInfo(lines);\n\t\t}\n\n\t\tfunction shouldIncludeInLayout(element) {\n\t\t\tvar layoutChildComponent = element.entity.layoutchild;\n\t\t\treturn !layoutChildComponent || !layoutChildComponent.enabled || !layoutChildComponent.excludeFromLayout;\n\t\t}\n\n\t\tfunction resetAnchors(allElements) {\n\t\t\tfor (var i = 0; i < allElements.length; ++i) {\n\t\t\t\tvar element = allElements[i];\n\t\t\t\tvar anchor = element.anchor;\n\n\t\t\t\tif (anchor.x !== 0 || anchor.y !== 0 || anchor.z !== 0 || anchor.w !== 0) {\n\t\t\t\t\telement.anchor = Vec4.ZERO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction splitLines(allElements) {\n\t\t\tif (!options.wrap) {\n\t\t\t\treturn [allElements];\n\t\t\t}\n\n\t\t\tvar lines = [[]];\n\t\t\tvar sizes = getElementSizeProperties(allElements);\n\t\t\tvar runningSize = 0;\n\t\t\tvar allowOverrun = options[a.fitting] === FITTING_SHRINK;\n\n\t\t\tfor (var i = 0; i < allElements.length; ++i) {\n\t\t\t\tif (lines[lines.length - 1].length > 0) {\n\t\t\t\t\trunningSize += options.spacing[a.axis];\n\t\t\t\t}\n\n\t\t\t\tvar idealElementSize = sizes[i][a.size];\n\t\t\t\trunningSize += idealElementSize;\n\n\t\t\t\tif (!allowOverrun && runningSize > availableSpace[a.axis] && lines[lines.length - 1].length !== 0) {\n\t\t\t\t\trunningSize = idealElementSize;\n\t\t\t\t\tlines.push([]);\n\t\t\t\t}\n\n\t\t\t\tlines[lines.length - 1].push(allElements[i]);\n\n\t\t\t\tif (allowOverrun && runningSize > availableSpace[a.axis] && i !== allElements.length - 1) {\n\t\t\t\t\trunningSize = 0;\n\t\t\t\t\tlines.push([]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lines;\n\t\t}\n\n\t\tfunction reverseLinesIfRequired(lines) {\n\t\t\tvar reverseAxisA = options.orientation === ORIENTATION_HORIZONTAL && options.reverseX || options.orientation === ORIENTATION_VERTICAL && options.reverseY;\n\t\t\tvar reverseAxisB = options.orientation === ORIENTATION_HORIZONTAL && options.reverseY || options.orientation === ORIENTATION_VERTICAL && options.reverseX;\n\n\t\t\tif (reverseAxisA) {\n\t\t\t\tfor (var lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\t\tif (reverseAxisA) {\n\t\t\t\t\t\tlines[lineIndex].reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (reverseAxisB) {\n\t\t\t\tlines.reverse();\n\t\t\t}\n\n\t\t\treturn lines;\n\t\t}\n\n\t\tfunction calculateSizesOnAxisA(lines) {\n\t\t\tvar sizesAllLines = [];\n\n\t\t\tfor (var lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tvar line = lines[lineIndex];\n\t\t\t\tvar sizesThisLine = getElementSizeProperties(line);\n\t\t\t\tvar idealRequiredSpace = calculateTotalSpace(sizesThisLine, a);\n\t\t\t\tvar fittingAction = determineFittingAction(options[a.fitting], idealRequiredSpace, availableSpace[a.axis]);\n\n\t\t\t\tif (fittingAction === FITTING_ACTION.APPLY_STRETCHING) {\n\t\t\t\t\tstretchSizesToFitContainer(sizesThisLine, idealRequiredSpace, a);\n\t\t\t\t} else if (fittingAction === FITTING_ACTION.APPLY_SHRINKING) {\n\t\t\t\t\tshrinkSizesToFitContainer(sizesThisLine, idealRequiredSpace, a);\n\t\t\t\t}\n\n\t\t\t\tsizesAllLines.push(sizesThisLine);\n\t\t\t}\n\n\t\t\treturn sizesAllLines;\n\t\t}\n\n\t\tfunction calculateSizesOnAxisB(lines, sizesAllLines) {\n\t\t\tvar largestElementsForEachLine = [];\n\t\t\tvar largestSizesForEachLine = [];\n\t\t\tvar elementIndex;\n\t\t\tvar lineIndex;\n\t\t\tvar line;\n\n\t\t\tfor (lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tline = lines[lineIndex];\n\t\t\t\tline.largestElement = null;\n\t\t\t\tline.largestSize = {\n\t\t\t\t\twidth: Number.NEGATIVE_INFINITY,\n\t\t\t\t\theight: Number.NEGATIVE_INFINITY\n\t\t\t\t};\n\n\t\t\t\tfor (elementIndex = 0; elementIndex < line.length; ++elementIndex) {\n\t\t\t\t\tvar sizesThisElement = sizesAllLines[lineIndex][elementIndex];\n\n\t\t\t\t\tif (sizesThisElement[b.size] > line.largestSize[b.size]) {\n\t\t\t\t\t\tline.largestElement = line[elementIndex];\n\t\t\t\t\t\tline.largestSize = sizesThisElement;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlargestElementsForEachLine.push(line.largestElement);\n\t\t\t\tlargestSizesForEachLine.push(line.largestSize);\n\t\t\t}\n\n\t\t\tvar idealRequiredSpace = calculateTotalSpace(largestSizesForEachLine, b);\n\t\t\tvar fittingAction = determineFittingAction(options[b.fitting], idealRequiredSpace, availableSpace[b.axis]);\n\n\t\t\tif (fittingAction === FITTING_ACTION.APPLY_STRETCHING) {\n\t\t\t\tstretchSizesToFitContainer(largestSizesForEachLine, idealRequiredSpace, b);\n\t\t\t} else if (fittingAction === FITTING_ACTION.APPLY_SHRINKING) {\n\t\t\t\tshrinkSizesToFitContainer(largestSizesForEachLine, idealRequiredSpace, b);\n\t\t\t}\n\n\t\t\tfor (lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tline = lines[lineIndex];\n\n\t\t\t\tfor (elementIndex = 0; elementIndex < line.length; ++elementIndex) {\n\t\t\t\t\tvar sizesForThisElement = sizesAllLines[lineIndex][elementIndex];\n\t\t\t\t\tvar currentSize = sizesForThisElement[b.size];\n\t\t\t\t\tvar availableSize = lines.length === 1 ? availableSpace[b.axis] : line.largestSize[b.size];\n\t\t\t\t\tvar elementFittingAction = determineFittingAction(options[b.fitting], currentSize, availableSize);\n\n\t\t\t\t\tif (elementFittingAction === FITTING_ACTION.APPLY_STRETCHING) {\n\t\t\t\t\t\tsizesForThisElement[b.size] = Math.min(availableSize, sizesForThisElement[b.maxSize]);\n\t\t\t\t\t} else if (elementFittingAction === FITTING_ACTION.APPLY_SHRINKING) {\n\t\t\t\t\t\tsizesForThisElement[b.size] = Math.max(availableSize, sizesForThisElement[b.minSize]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn sizesAllLines;\n\t\t}\n\n\t\tfunction determineFittingAction(fittingMode, currentSize, availableSize) {\n\t\t\tswitch (fittingMode) {\n\t\t\t\tcase FITTING_NONE:\n\t\t\t\t\treturn FITTING_ACTION.NONE;\n\n\t\t\t\tcase FITTING_STRETCH:\n\t\t\t\t\tif (currentSize < availableSize) {\n\t\t\t\t\t\treturn FITTING_ACTION.APPLY_STRETCHING;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn FITTING_ACTION.NONE;\n\n\t\t\t\tcase FITTING_SHRINK:\n\t\t\t\t\tif (currentSize >= availableSize) {\n\t\t\t\t\t\treturn FITTING_ACTION.APPLY_SHRINKING;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn FITTING_ACTION.NONE;\n\n\t\t\t\tcase FITTING_BOTH:\n\t\t\t\t\tif (currentSize < availableSize) {\n\t\t\t\t\t\treturn FITTING_ACTION.APPLY_STRETCHING;\n\t\t\t\t\t} else if (currentSize >= availableSize) {\n\t\t\t\t\t\treturn FITTING_ACTION.APPLY_SHRINKING;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn FITTING_ACTION.NONE;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unrecognized fitting mode: ' + fittingMode);\n\t\t\t}\n\t\t}\n\n\t\tfunction calculateTotalSpace(sizes, axis) {\n\t\t\tvar totalSizes = sumValues(sizes, axis.size);\n\t\t\tvar totalSpacing = (sizes.length - 1) * options.spacing[axis.axis];\n\t\t\treturn totalSizes + totalSpacing;\n\t\t}\n\n\t\tfunction stretchSizesToFitContainer(sizesThisLine, idealRequiredSpace, axis) {\n\t\t\tvar ascendingMaxSizeOrder = getTraversalOrder(sizesThisLine, axis.maxSize);\n\t\t\tvar fittingProportions = getNormalizedValues(sizesThisLine, axis.fittingProportion);\n\t\t\tvar fittingProportionSums = createSumArray(fittingProportions, ascendingMaxSizeOrder);\n\t\t\tvar remainingUndershoot = availableSpace[axis.axis] - idealRequiredSpace;\n\n\t\t\tfor (var i = 0; i < sizesThisLine.length; ++i) {\n\t\t\t\tvar index = ascendingMaxSizeOrder[i];\n\t\t\t\tvar targetIncrease = calculateAdjustment(index, remainingUndershoot, fittingProportions, fittingProportionSums);\n\t\t\t\tvar targetSize = sizesThisLine[index][axis.size] + targetIncrease;\n\t\t\t\tvar maxSize = sizesThisLine[index][axis.maxSize];\n\t\t\t\tvar actualSize = Math.min(targetSize, maxSize);\n\t\t\t\tsizesThisLine[index][axis.size] = actualSize;\n\t\t\t\tvar actualIncrease = Math.max(targetSize - actualSize, 0);\n\t\t\t\tvar appliedIncrease = targetIncrease - actualIncrease;\n\t\t\t\tremainingUndershoot -= appliedIncrease;\n\t\t\t}\n\t\t}\n\n\t\tfunction shrinkSizesToFitContainer(sizesThisLine, idealRequiredSpace, axis) {\n\t\t\tvar descendingMinSizeOrder = getTraversalOrder(sizesThisLine, axis.minSize, true);\n\t\t\tvar fittingProportions = getNormalizedValues(sizesThisLine, axis.fittingProportion);\n\t\t\tvar inverseFittingProportions = invertNormalizedValues(fittingProportions);\n\t\t\tvar inverseFittingProportionSums = createSumArray(inverseFittingProportions, descendingMinSizeOrder);\n\t\t\tvar remainingOvershoot = idealRequiredSpace - availableSpace[axis.axis];\n\n\t\t\tfor (var i = 0; i < sizesThisLine.length; ++i) {\n\t\t\t\tvar index = descendingMinSizeOrder[i];\n\t\t\t\tvar targetReduction = calculateAdjustment(index, remainingOvershoot, inverseFittingProportions, inverseFittingProportionSums);\n\t\t\t\tvar targetSize = sizesThisLine[index][axis.size] - targetReduction;\n\t\t\t\tvar minSize = sizesThisLine[index][axis.minSize];\n\t\t\t\tvar actualSize = Math.max(targetSize, minSize);\n\t\t\t\tsizesThisLine[index][axis.size] = actualSize;\n\t\t\t\tvar actualReduction = Math.max(actualSize - targetSize, 0);\n\t\t\t\tvar appliedReduction = targetReduction - actualReduction;\n\t\t\t\tremainingOvershoot -= appliedReduction;\n\t\t\t}\n\t\t}\n\n\t\tfunction calculateAdjustment(index, remainingAdjustment, fittingProportions, fittingProportionSums) {\n\t\t\tvar proportion = fittingProportions[index];\n\t\t\tvar sumOfRemainingProportions = fittingProportionSums[index];\n\n\t\t\tif (Math.abs(proportion) < 1e-5 && Math.abs(sumOfRemainingProportions) < 1e-5) {\n\t\t\t\treturn remainingAdjustment;\n\t\t\t}\n\n\t\t\treturn remainingAdjustment * proportion / sumOfRemainingProportions;\n\t\t}\n\n\t\tfunction calculateBasePositions(lines, sizes) {\n\t\t\tvar cursor = {};\n\t\t\tcursor[a.axis] = 0;\n\t\t\tcursor[b.axis] = 0;\n\t\t\tlines[a.size] = Number.NEGATIVE_INFINITY;\n\t\t\tvar positionsAllLines = [];\n\n\t\t\tfor (var lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tvar line = lines[lineIndex];\n\n\t\t\t\tif (line.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar positionsThisLine = [];\n\t\t\t\tvar sizesThisLine = sizes[lineIndex];\n\n\t\t\t\tfor (var elementIndex = 0; elementIndex < line.length; ++elementIndex) {\n\t\t\t\t\tvar element = line[elementIndex];\n\t\t\t\t\tvar sizesThisElement = sizesThisLine[elementIndex];\n\t\t\t\t\tcursor[b.axis] -= minExtentB(element, sizesThisElement);\n\t\t\t\t\tcursor[a.axis] -= minExtentA(element, sizesThisElement);\n\t\t\t\t\tpositionsThisLine[elementIndex] = {};\n\t\t\t\t\tpositionsThisLine[elementIndex][a.axis] = cursor[a.axis];\n\t\t\t\t\tpositionsThisLine[elementIndex][b.axis] = cursor[b.axis];\n\t\t\t\t\tcursor[b.axis] += minExtentB(element, sizesThisElement);\n\t\t\t\t\tcursor[a.axis] += maxExtentA(element, sizesThisElement) + options.spacing[a.axis];\n\t\t\t\t}\n\n\t\t\t\tline[a.size] = cursor[a.axis] - options.spacing[a.axis];\n\t\t\t\tline[b.size] = line.largestSize[b.size];\n\t\t\t\tlines[a.size] = Math.max(lines[a.size], line[a.size]);\n\t\t\t\tcursor[a.axis] = 0;\n\t\t\t\tcursor[b.axis] += line[b.size] + options.spacing[b.axis];\n\t\t\t\tpositionsAllLines.push(positionsThisLine);\n\t\t\t}\n\n\t\t\tlines[b.size] = cursor[b.axis] - options.spacing[b.axis];\n\t\t\treturn positionsAllLines;\n\t\t}\n\n\t\tfunction applyAlignmentAndPadding(lines, sizes, positions) {\n\t\t\tvar alignmentA = options.alignment[a.axis];\n\t\t\tvar alignmentB = options.alignment[b.axis];\n\t\t\tvar paddingA = options.padding[a.axis];\n\t\t\tvar paddingB = options.padding[b.axis];\n\n\t\t\tfor (var lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tvar line = lines[lineIndex];\n\t\t\t\tvar sizesThisLine = sizes[lineIndex];\n\t\t\t\tvar positionsThisLine = positions[lineIndex];\n\t\t\t\tvar axisAOffset = (availableSpace[a.axis] - line[a.size]) * alignmentA + paddingA;\n\t\t\t\tvar axisBOffset = (availableSpace[b.axis] - lines[b.size]) * alignmentB + paddingB;\n\n\t\t\t\tfor (var elementIndex = 0; elementIndex < line.length; ++elementIndex) {\n\t\t\t\t\tvar withinLineAxisBOffset = (line[b.size] - sizesThisLine[elementIndex][b.size]) * options.alignment[b.axis];\n\t\t\t\t\tpositionsThisLine[elementIndex][a.axis] += axisAOffset;\n\t\t\t\t\tpositionsThisLine[elementIndex][b.axis] += axisBOffset + withinLineAxisBOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction applySizesAndPositions(lines, sizes, positions) {\n\t\t\tfor (var lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n\t\t\t\tvar line = lines[lineIndex];\n\t\t\t\tvar sizesThisLine = sizes[lineIndex];\n\t\t\t\tvar positionsThisLine = positions[lineIndex];\n\n\t\t\t\tfor (var elementIndex = 0; elementIndex < line.length; ++elementIndex) {\n\t\t\t\t\tvar element = line[elementIndex];\n\t\t\t\t\telement[a.calculatedSize] = sizesThisLine[elementIndex][a.size];\n\t\t\t\t\telement[b.calculatedSize] = sizesThisLine[elementIndex][b.size];\n\n\t\t\t\t\tif (options.orientation === ORIENTATION_HORIZONTAL) {\n\t\t\t\t\t\telement.entity.setLocalPosition(positionsThisLine[elementIndex][a.axis], positionsThisLine[elementIndex][b.axis], element.entity.getLocalPosition().z);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.entity.setLocalPosition(positionsThisLine[elementIndex][b.axis], positionsThisLine[elementIndex][a.axis], element.entity.getLocalPosition().z);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createLayoutInfo(lines) {\n\t\t\tvar layoutWidth = lines.width;\n\t\t\tvar layoutHeight = lines.height;\n\t\t\tvar xOffset = (availableSpace.x - layoutWidth) * options.alignment.x + options.padding.x;\n\t\t\tvar yOffset = (availableSpace.y - layoutHeight) * options.alignment.y + options.padding.y;\n\t\t\treturn {\n\t\t\t\tbounds: new Vec4(xOffset, yOffset, layoutWidth, layoutHeight)\n\t\t\t};\n\t\t}\n\n\t\tfunction getElementSizeProperties(elements) {\n\t\t\tvar sizeProperties = [];\n\n\t\t\tfor (var i = 0; i < elements.length; ++i) {\n\t\t\t\tvar element = elements[i];\n\t\t\t\tvar minWidth = Math.max(getProperty(element, 'minWidth'), 0);\n\t\t\t\tvar minHeight = Math.max(getProperty(element, 'minHeight'), 0);\n\t\t\t\tvar maxWidth = Math.max(getProperty(element, 'maxWidth'), minWidth);\n\t\t\t\tvar maxHeight = Math.max(getProperty(element, 'maxHeight'), minHeight);\n\t\t\t\tvar width = clamp(getProperty(element, 'width'), minWidth, maxWidth);\n\t\t\t\tvar height = clamp(getProperty(element, 'height'), minHeight, maxHeight);\n\t\t\t\tvar fitWidthProportion = getProperty(element, 'fitWidthProportion');\n\t\t\t\tvar fitHeightProportion = getProperty(element, 'fitHeightProportion');\n\t\t\t\tsizeProperties.push({\n\t\t\t\t\tminWidth: minWidth,\n\t\t\t\t\tminHeight: minHeight,\n\t\t\t\t\tmaxWidth: maxWidth,\n\t\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height,\n\t\t\t\t\tfitWidthProportion: fitWidthProportion,\n\t\t\t\t\tfitHeightProportion: fitHeightProportion\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn sizeProperties;\n\t\t}\n\n\t\tfunction getProperty(element, propertyName) {\n\t\t\tvar layoutChildComponent = element.entity.layoutchild;\n\n\t\t\tif (layoutChildComponent && layoutChildComponent.enabled && layoutChildComponent[propertyName] !== undefined && layoutChildComponent[propertyName] !== null) {\n\t\t\t\treturn layoutChildComponent[propertyName];\n\t\t\t} else if (element[propertyName] !== undefined) {\n\t\t\t\treturn element[propertyName];\n\t\t\t}\n\n\t\t\treturn PROPERTY_DEFAULTS[propertyName];\n\t\t}\n\n\t\tfunction clamp(value, min, max) {\n\t\t\treturn Math.min(Math.max(value, min), max);\n\t\t}\n\n\t\tfunction sumValues(items, propertyName) {\n\t\t\treturn items.reduce(function (accumulator, current) {\n\t\t\t\treturn accumulator + current[propertyName];\n\t\t\t}, 0);\n\t\t}\n\n\t\tfunction getNormalizedValues(items, propertyName) {\n\t\t\tvar sum = sumValues(items, propertyName);\n\t\t\tvar normalizedValues = [];\n\t\t\tvar numItems = items.length;\n\t\t\tvar i;\n\n\t\t\tif (sum === 0) {\n\t\t\t\tfor (i = 0; i < numItems; ++i) {\n\t\t\t\t\tnormalizedValues.push(1 / numItems);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < numItems; ++i) {\n\t\t\t\t\tnormalizedValues.push(items[i][propertyName] / sum);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn normalizedValues;\n\t\t}\n\n\t\tfunction invertNormalizedValues(values) {\n\t\t\tif (values.length === 1) {\n\t\t\t\treturn [1];\n\t\t\t}\n\n\t\t\tvar invertedValues = [];\n\t\t\tvar numValues = values.length;\n\n\t\t\tfor (var i = 0; i < numValues; ++i) {\n\t\t\t\tinvertedValues.push((1 - values[i]) / (numValues - 1));\n\t\t\t}\n\n\t\t\treturn invertedValues;\n\t\t}\n\n\t\tfunction getTraversalOrder(items, orderBy, descending) {\n\t\t\titems.forEach(assignIndex);\n\t\t\treturn items.slice().sort(function (itemA, itemB) {\n\t\t\t\treturn descending ? itemB[orderBy] - itemA[orderBy] : itemA[orderBy] - itemB[orderBy];\n\t\t\t}).map(getIndex);\n\t\t}\n\n\t\tfunction assignIndex(item, index) {\n\t\t\titem.index = index;\n\t\t}\n\n\t\tfunction getIndex(item) {\n\t\t\treturn item.index;\n\t\t}\n\n\t\tfunction createSumArray(values, order) {\n\t\t\tvar sumArray = [];\n\t\t\tsumArray[order[values.length - 1]] = values[order[values.length - 1]];\n\n\t\t\tfor (var i = values.length - 2; i >= 0; --i) {\n\t\t\t\tsumArray[order[i]] = sumArray[order[i + 1]] + values[order[i]];\n\t\t\t}\n\n\t\t\treturn sumArray;\n\t\t}\n\n\t\treturn calculateAll;\n\t}\n\n\tvar CALCULATE_FNS = {};\n\tCALCULATE_FNS[ORIENTATION_HORIZONTAL] = createCalculator(ORIENTATION_HORIZONTAL);\n\tCALCULATE_FNS[ORIENTATION_VERTICAL] = createCalculator(ORIENTATION_VERTICAL);\n\n\tvar LayoutCalculator = function () {\n\t\tfunction LayoutCalculator() {}\n\n\t\tvar _proto = LayoutCalculator.prototype;\n\n\t\t_proto.calculateLayout = function calculateLayout(elements, options) {\n\t\t\tvar calculateFn = CALCULATE_FNS[options.orientation];\n\n\t\t\tif (!calculateFn) {\n\t\t\t\tthrow new Error('Unrecognized orientation value: ' + options.orientation);\n\t\t\t} else {\n\t\t\t\treturn calculateFn(elements, options);\n\t\t\t}\n\t\t};\n\n\t\treturn LayoutCalculator;\n\t}();\n\n\tfunction getElement(entity) {\n\t\treturn entity.element;\n\t}\n\n\tfunction isEnabledAndHasEnabledElement(entity) {\n\t\treturn entity.enabled && entity.element && entity.element.enabled;\n\t}\n\n\tvar LayoutGroupComponent = function (_Component) {\n\t\t_inheritsLoose(LayoutGroupComponent, _Component);\n\n\t\tfunction LayoutGroupComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._orientation = ORIENTATION_HORIZONTAL;\n\t\t\t_this._reverseX = false;\n\t\t\t_this._reverseY = true;\n\t\t\t_this._alignment = new Vec2(0, 1);\n\t\t\t_this._padding = new Vec4();\n\t\t\t_this._spacing = new Vec2();\n\t\t\t_this._widthFitting = FITTING_NONE;\n\t\t\t_this._heightFitting = FITTING_NONE;\n\t\t\t_this._wrap = false;\n\t\t\t_this._layoutCalculator = new LayoutCalculator();\n\n\t\t\t_this._listenForReflowEvents(_this.entity, 'on');\n\n\t\t\t_this.entity.children.forEach(function (child) {\n\t\t\t\tthis._listenForReflowEvents(child, 'on');\n\t\t\t}.bind(_assertThisInitialized(_this)));\n\n\t\t\t_this.entity.on('childinsert', _this._onChildInsert, _assertThisInitialized(_this));\n\n\t\t\t_this.entity.on('childremove', _this._onChildRemove, _assertThisInitialized(_this));\n\n\t\t\tsystem.app.systems.element.on('add', _this._onElementOrLayoutComponentAdd, _assertThisInitialized(_this));\n\t\t\tsystem.app.systems.element.on('beforeremove', _this._onElementOrLayoutComponentRemove, _assertThisInitialized(_this));\n\t\t\tsystem.app.systems.layoutchild.on('add', _this._onElementOrLayoutComponentAdd, _assertThisInitialized(_this));\n\t\t\tsystem.app.systems.layoutchild.on('beforeremove', _this._onElementOrLayoutComponentRemove, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LayoutGroupComponent.prototype;\n\n\t\t_proto._isSelfOrChild = function _isSelfOrChild(entity) {\n\t\t\treturn entity === this.entity || this.entity.children.indexOf(entity) !== -1;\n\t\t};\n\n\t\t_proto._listenForReflowEvents = function _listenForReflowEvents(target, onOff) {\n\t\t\tif (target.element) {\n\t\t\t\ttarget.element[onOff]('enableelement', this._scheduleReflow, this);\n\t\t\t\ttarget.element[onOff]('disableelement', this._scheduleReflow, this);\n\t\t\t\ttarget.element[onOff]('resize', this._scheduleReflow, this);\n\t\t\t\ttarget.element[onOff]('set:pivot', this._scheduleReflow, this);\n\t\t\t}\n\n\t\t\tif (target.layoutchild) {\n\t\t\t\ttarget.layoutchild[onOff]('set_enabled', this._scheduleReflow, this);\n\t\t\t\ttarget.layoutchild[onOff]('resize', this._scheduleReflow, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementOrLayoutComponentAdd = function _onElementOrLayoutComponentAdd(entity) {\n\t\t\tif (this._isSelfOrChild(entity)) {\n\t\t\t\tthis._listenForReflowEvents(entity, 'on');\n\n\t\t\t\tthis._scheduleReflow();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementOrLayoutComponentRemove = function _onElementOrLayoutComponentRemove(entity) {\n\t\t\tif (this._isSelfOrChild(entity)) {\n\t\t\t\tthis._listenForReflowEvents(entity, 'off');\n\n\t\t\t\tthis._scheduleReflow();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onChildInsert = function _onChildInsert(child) {\n\t\t\tthis._listenForReflowEvents(child, 'on');\n\n\t\t\tthis._scheduleReflow();\n\t\t};\n\n\t\t_proto._onChildRemove = function _onChildRemove(child) {\n\t\t\tthis._listenForReflowEvents(child, 'off');\n\n\t\t\tthis._scheduleReflow();\n\t\t};\n\n\t\t_proto._scheduleReflow = function _scheduleReflow() {\n\t\t\tif (this.enabled && this.entity && this.entity.enabled && !this._isPerformingReflow) {\n\t\t\t\tthis.system.scheduleReflow(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.reflow = function reflow() {\n\t\t\tvar container = getElement(this.entity);\n\t\t\tvar elements = this.entity.children.filter(isEnabledAndHasEnabledElement).map(getElement);\n\n\t\t\tif (!container || elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar containerWidth = Math.max(container.calculatedWidth, 0);\n\t\t\tvar containerHeight = Math.max(container.calculatedHeight, 0);\n\t\t\tvar options = {\n\t\t\t\torientation: this._orientation,\n\t\t\t\treverseX: this._reverseX,\n\t\t\t\treverseY: this._reverseY,\n\t\t\t\talignment: this._alignment,\n\t\t\t\tpadding: this._padding,\n\t\t\t\tspacing: this._spacing,\n\t\t\t\twidthFitting: this._widthFitting,\n\t\t\t\theightFitting: this._heightFitting,\n\t\t\t\twrap: this._wrap,\n\t\t\t\tcontainerSize: new Vec2(containerWidth, containerHeight)\n\t\t\t};\n\t\t\tthis._isPerformingReflow = true;\n\n\t\t\tvar layoutInfo = this._layoutCalculator.calculateLayout(elements, options);\n\n\t\t\tthis._isPerformingReflow = false;\n\t\t\tthis.fire('reflow', layoutInfo);\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._scheduleReflow();\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.entity.off('childinsert', this._onChildInsert, this);\n\t\t\tthis.entity.off('childremove', this._onChildRemove, this);\n\n\t\t\tthis._listenForReflowEvents(this.entity, 'off');\n\n\t\t\tthis.entity.children.forEach(function (child) {\n\t\t\t\tthis._listenForReflowEvents(child, 'off');\n\t\t\t}.bind(this));\n\t\t\tthis.system.app.systems.element.off('add', this._onElementOrLayoutComponentAdd, this);\n\t\t\tthis.system.app.systems.element.off('beforeremove', this._onElementOrLayoutComponentRemove, this);\n\t\t\tthis.system.app.systems.layoutchild.off('add', this._onElementOrLayoutComponentAdd, this);\n\t\t\tthis.system.app.systems.layoutchild.off('beforeremove', this._onElementOrLayoutComponentRemove, this);\n\t\t};\n\n\t\treturn LayoutGroupComponent;\n\t}(Component);\n\n\tfunction defineReflowSchedulingProperty(name) {\n\t\tvar _name = '_' + name;\n\n\t\tObject.defineProperty(LayoutGroupComponent.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[_name];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[_name] !== value) {\n\t\t\t\t\tthis[_name] = value;\n\n\t\t\t\t\tthis._scheduleReflow();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdefineReflowSchedulingProperty('orientation');\n\tdefineReflowSchedulingProperty('reverseX');\n\tdefineReflowSchedulingProperty('reverseY');\n\tdefineReflowSchedulingProperty('alignment');\n\tdefineReflowSchedulingProperty('padding');\n\tdefineReflowSchedulingProperty('spacing');\n\tdefineReflowSchedulingProperty('widthFitting');\n\tdefineReflowSchedulingProperty('heightFitting');\n\tdefineReflowSchedulingProperty('wrap');\n\n\tvar LayoutGroupComponentData = function LayoutGroupComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$9 = ['enabled'];\n\tvar MAX_ITERATIONS = 100;\n\n\tvar LayoutGroupComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(LayoutGroupComponentSystem, _ComponentSystem);\n\n\t\tfunction LayoutGroupComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'layoutgroup';\n\t\t\t_this.ComponentType = LayoutGroupComponent;\n\t\t\t_this.DataType = LayoutGroupComponentData;\n\t\t\t_this.schema = _schema$9;\n\t\t\t_this._reflowQueue = [];\n\n\t\t\t_this.on('beforeremove', _this._onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('postUpdate', _this._onPostUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LayoutGroupComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data.enabled !== undefined) component.enabled = data.enabled;\n\t\t\tif (data.orientation !== undefined) component.orientation = data.orientation;\n\t\t\tif (data.reverseX !== undefined) component.reverseX = data.reverseX;\n\t\t\tif (data.reverseY !== undefined) component.reverseY = data.reverseY;\n\n\t\t\tif (data.alignment !== undefined) {\n\t\t\t\tif (data.alignment instanceof Vec2) {\n\t\t\t\t\tcomponent.alignment.copy(data.alignment);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.alignment.set(data.alignment[0], data.alignment[1]);\n\t\t\t\t}\n\n\t\t\t\tcomponent.alignment = component.alignment;\n\t\t\t}\n\n\t\t\tif (data.padding !== undefined) {\n\t\t\t\tif (data.padding instanceof Vec4) {\n\t\t\t\t\tcomponent.padding.copy(data.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.padding.set(data.padding[0], data.padding[1], data.padding[2], data.padding[3]);\n\t\t\t\t}\n\n\t\t\t\tcomponent.padding = component.padding;\n\t\t\t}\n\n\t\t\tif (data.spacing !== undefined) {\n\t\t\t\tif (data.spacing instanceof Vec2) {\n\t\t\t\t\tcomponent.spacing.copy(data.spacing);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.spacing.set(data.spacing[0], data.spacing[1]);\n\t\t\t\t}\n\n\t\t\t\tcomponent.spacing = component.spacing;\n\t\t\t}\n\n\t\t\tif (data.widthFitting !== undefined) component.widthFitting = data.widthFitting;\n\t\t\tif (data.heightFitting !== undefined) component.heightFitting = data.heightFitting;\n\t\t\tif (data.wrap !== undefined) component.wrap = data.wrap;\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar layoutGroup = entity.layoutgroup;\n\t\t\treturn this.addComponent(clone, {\n\t\t\t\tenabled: layoutGroup.enabled,\n\t\t\t\torientation: layoutGroup.orientation,\n\t\t\t\treverseX: layoutGroup.reverseX,\n\t\t\t\treverseY: layoutGroup.reverseY,\n\t\t\t\talignment: layoutGroup.alignment,\n\t\t\t\tpadding: layoutGroup.padding,\n\t\t\t\tspacing: layoutGroup.spacing,\n\t\t\t\twidthFitting: layoutGroup.widthFitting,\n\t\t\t\theightFitting: layoutGroup.heightFitting,\n\t\t\t\twrap: layoutGroup.wrap\n\t\t\t});\n\t\t};\n\n\t\t_proto.scheduleReflow = function scheduleReflow(component) {\n\t\t\tif (this._reflowQueue.indexOf(component) === -1) {\n\t\t\t\tthis._reflowQueue.push(component);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onPostUpdate = function _onPostUpdate() {\n\t\t\tthis._processReflowQueue();\n\t\t};\n\n\t\t_proto._processReflowQueue = function _processReflowQueue() {\n\t\t\tif (this._reflowQueue.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar iterationCount = 0;\n\n\t\t\twhile (this._reflowQueue.length > 0) {\n\t\t\t\tvar queue = this._reflowQueue.slice();\n\n\t\t\t\tthis._reflowQueue.length = 0;\n\t\t\t\tqueue.sort(function (componentA, componentB) {\n\t\t\t\t\treturn componentA.entity.graphDepth - componentB.entity.graphDepth;\n\t\t\t\t});\n\n\t\t\t\tfor (var i = 0; i < queue.length; ++i) {\n\t\t\t\t\tqueue[i].reflow();\n\t\t\t\t}\n\n\t\t\t\tif (++iterationCount >= MAX_ITERATIONS) {\n\t\t\t\t\tconsole.warn('Max reflow iterations limit reached, bailing.');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRemoveComponent = function _onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn LayoutGroupComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(LayoutGroupComponent.prototype, _schema$9);\n\n\tvar spotCenter = new Vec3();\n\tvar spotEndPoint = new Vec3();\n\tvar tmpVec = new Vec3();\n\tvar chanId = {\n\t\tr: 0,\n\t\tg: 1,\n\t\tb: 2,\n\t\ta: 3\n\t};\n\n\tvar Light = function () {\n\t\tfunction Light() {\n\t\t\tthis._type = LIGHTTYPE_DIRECTIONAL;\n\t\t\tthis._color = new Color(0.8, 0.8, 0.8);\n\t\t\tthis._intensity = 1;\n\t\t\tthis._castShadows = false;\n\t\t\tthis.enabled = false;\n\t\t\tthis.mask = 1;\n\t\t\tthis.isStatic = false;\n\t\t\tthis.key = 0;\n\t\t\tthis.bakeDir = true;\n\t\t\tthis.attenuationStart = 10;\n\t\t\tthis.attenuationEnd = 10;\n\t\t\tthis._falloffMode = 0;\n\t\t\tthis._shadowType = SHADOW_PCF3;\n\t\t\tthis._vsmBlurSize = 11;\n\t\t\tthis.vsmBlurMode = BLUR_GAUSSIAN;\n\t\t\tthis.vsmBias = 0.01 * 0.25;\n\t\t\tthis._cookie = null;\n\t\t\tthis.cookieIntensity = 1;\n\t\t\tthis._cookieFalloff = true;\n\t\t\tthis._cookieChannel = \"rgb\";\n\t\t\tthis._cookieTransform = null;\n\t\t\tthis._cookieTransformUniform = new Float32Array(4);\n\t\t\tthis._cookieOffset = null;\n\t\t\tthis._cookieOffsetUniform = new Float32Array(2);\n\t\t\tthis._cookieTransformSet = false;\n\t\t\tthis._cookieOffsetSet = false;\n\t\t\tthis._innerConeAngle = 40;\n\t\t\tthis._outerConeAngle = 45;\n\t\t\tthis._shape = LIGHTSHAPE_PUNCTUAL;\n\t\t\tthis._finalColor = new Float32Array([0.8, 0.8, 0.8]);\n\t\t\tvar c = Math.pow(this._finalColor[0], 2.2);\n\t\t\tthis._linearFinalColor = new Float32Array([c, c, c]);\n\t\t\tthis._position = new Vec3(0, 0, 0);\n\t\t\tthis._direction = new Vec3(0, 0, 0);\n\t\t\tthis._innerConeAngleCos = Math.cos(this._innerConeAngle * Math.PI / 180);\n\t\t\tthis._outerConeAngleCos = Math.cos(this._outerConeAngle * Math.PI / 180);\n\t\t\tthis._shadowCamera = null;\n\t\t\tthis._shadowMatrix = new Mat4();\n\t\t\tthis.shadowDistance = 40;\n\t\t\tthis._shadowResolution = 1024;\n\t\t\tthis.shadowBias = -0.0005;\n\t\t\tthis._normalOffsetBias = 0.0;\n\t\t\tthis.shadowUpdateMode = SHADOWUPDATE_REALTIME;\n\t\t\tthis._scene = null;\n\t\t\tthis._node = null;\n\t\t\tthis._rendererParams = [];\n\t\t\tthis._isVsm = false;\n\t\t\tthis._isPcf = true;\n\t\t\tthis._cacheShadowMap = false;\n\t\t\tthis._isCachedShadowMap = false;\n\t\t\tthis._visibleLength = [0];\n\t\t\tthis._visibleList = [[]];\n\t\t\tthis._visibleCameraSettings = [];\n\t\t}\n\n\t\tvar _proto = Light.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._destroyShadowMap();\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new Light();\n\t\t\tclone.type = this._type;\n\t\t\tclone.setColor(this._color);\n\t\t\tclone.intensity = this._intensity;\n\t\t\tclone.castShadows = this.castShadows;\n\t\t\tclone.enabled = this.enabled;\n\t\t\tclone.attenuationStart = this.attenuationStart;\n\t\t\tclone.attenuationEnd = this.attenuationEnd;\n\t\t\tclone.falloffMode = this._falloffMode;\n\t\t\tclone.shadowType = this._shadowType;\n\t\t\tclone.vsmBlurSize = this._vsmBlurSize;\n\t\t\tclone.vsmBlurMode = this.vsmBlurMode;\n\t\t\tclone.vsmBias = this.vsmBias;\n\t\t\tclone.shadowUpdateMode = this.shadowUpdateMode;\n\t\t\tclone.mask = this.mask;\n\t\t\tclone.innerConeAngle = this._innerConeAngle;\n\t\t\tclone.outerConeAngle = this._outerConeAngle;\n\t\t\tclone.shape = this._shape;\n\t\t\tclone.shadowBias = this.shadowBias;\n\t\t\tclone.normalOffsetBias = this._normalOffsetBias;\n\t\t\tclone.shadowResolution = this._shadowResolution;\n\t\t\tclone.shadowDistance = this.shadowDistance;\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.getColor = function getColor() {\n\t\t\treturn this._color;\n\t\t};\n\n\t\t_proto.getBoundingSphere = function getBoundingSphere(sphere) {\n\t\t\tif (this._type === LIGHTTYPE_SPOT) {\n\t\t\t\tvar range = this.attenuationEnd;\n\t\t\t\tvar angle = this._outerConeAngle;\n\t\t\t\tvar f = Math.cos(angle * math.DEG_TO_RAD);\n\t\t\t\tvar node = this._node;\n\t\t\t\tspotCenter.copy(node.up);\n\t\t\t\tspotCenter.scale(-range * 0.5 * f);\n\t\t\t\tspotCenter.add(node.getPosition());\n\t\t\t\tsphere.center = spotCenter;\n\t\t\t\tspotEndPoint.copy(node.up);\n\t\t\t\tspotEndPoint.scale(-range);\n\t\t\t\ttmpVec.copy(node.right);\n\t\t\t\ttmpVec.scale(Math.sin(angle * math.DEG_TO_RAD) * range);\n\t\t\t\tspotEndPoint.add(tmpVec);\n\t\t\t\tsphere.radius = spotEndPoint.length() * 0.5;\n\t\t\t} else if (this._type === LIGHTTYPE_OMNI) {\n\t\t\t\tsphere.center = this._node.getPosition();\n\t\t\t\tsphere.radius = this.attenuationEnd;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getBoundingBox = function getBoundingBox(box) {\n\t\t\tif (this._type === LIGHTTYPE_SPOT) {\n\t\t\t\tvar range = this.attenuationEnd;\n\t\t\t\tvar angle = this._outerConeAngle;\n\t\t\t\tvar node = this._node;\n\t\t\t\tvar scl = Math.abs(Math.sin(angle * math.DEG_TO_RAD) * range);\n\t\t\t\tbox.center.set(0, -range * 0.5, 0);\n\t\t\t\tbox.halfExtents.set(scl, range * 0.5, scl);\n\t\t\t\tbox.setFromTransformedAabb(box, node.getWorldTransform());\n\t\t\t} else if (this._type === LIGHTTYPE_OMNI) {\n\t\t\t\tbox.center.copy(this._node.getPosition());\n\t\t\t\tbox.halfExtents.set(this.attenuationEnd, this.attenuationEnd, this.attenuationEnd);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateFinalColor = function _updateFinalColor() {\n\t\t\tvar color = this._color;\n\t\t\tvar r = color.r;\n\t\t\tvar g = color.g;\n\t\t\tvar b = color.b;\n\t\t\tvar i = this._intensity;\n\t\t\tvar finalColor = this._finalColor;\n\t\t\tvar linearFinalColor = this._linearFinalColor;\n\t\t\tfinalColor[0] = r * i;\n\t\t\tfinalColor[1] = g * i;\n\t\t\tfinalColor[2] = b * i;\n\n\t\t\tif (i >= 1) {\n\t\t\t\tlinearFinalColor[0] = Math.pow(r, 2.2) * i;\n\t\t\t\tlinearFinalColor[1] = Math.pow(g, 2.2) * i;\n\t\t\t\tlinearFinalColor[2] = Math.pow(b, 2.2) * i;\n\t\t\t} else {\n\t\t\t\tlinearFinalColor[0] = Math.pow(finalColor[0], 2.2);\n\t\t\t\tlinearFinalColor[1] = Math.pow(finalColor[1], 2.2);\n\t\t\t\tlinearFinalColor[2] = Math.pow(finalColor[2], 2.2);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setColor = function setColor() {\n\t\t\tvar r, g, b;\n\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tr = arguments[0].r;\n\t\t\t\tg = arguments[0].g;\n\t\t\t\tb = arguments[0].b;\n\t\t\t} else if (arguments.length === 3) {\n\t\t\t\tr = arguments[0];\n\t\t\t\tg = arguments[1];\n\t\t\t\tb = arguments[2];\n\t\t\t}\n\n\t\t\tthis._color.set(r, g, b);\n\n\t\t\tthis._updateFinalColor();\n\t\t};\n\n\t\t_proto._destroyShadowMap = function _destroyShadowMap() {\n\t\t\tif (this._shadowCamera) {\n\t\t\t\tif (!this._isCachedShadowMap) {\n\t\t\t\t\tvar rt = this._shadowCamera.renderTarget;\n\t\t\t\t\tvar i;\n\n\t\t\t\t\tif (rt) {\n\t\t\t\t\t\tif (rt.length) {\n\t\t\t\t\t\t\tfor (i = 0; i < rt.length; i++) {\n\t\t\t\t\t\t\t\tif (rt[i].colorBuffer) rt[i].colorBuffer.destroy();\n\t\t\t\t\t\t\t\trt[i].destroy();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (rt.colorBuffer) rt.colorBuffer.destroy();\n\t\t\t\t\t\t\tif (rt.depthBuffer) rt.depthBuffer.destroy();\n\t\t\t\t\t\t\trt.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._shadowCamera.renderTarget = null;\n\t\t\t\tthis._shadowCamera = null;\n\t\t\t\tthis._shadowCubeMap = null;\n\n\t\t\t\tif (this.shadowUpdateMode === SHADOWUPDATE_NONE) {\n\t\t\t\t\tthis.shadowUpdateMode = SHADOWUPDATE_THISFRAME;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateShadow = function updateShadow() {\n\t\t\tif (this.shadowUpdateMode !== SHADOWUPDATE_REALTIME) {\n\t\t\t\tthis.shadowUpdateMode = SHADOWUPDATE_THISFRAME;\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateKey = function updateKey() {\n\t\t\tvar key = this._type << 29 | (this._castShadows ? 1 : 0) << 28 | this._shadowType << 25 | this._falloffMode << 23 | (this._normalOffsetBias !== 0.0 ? 1 : 0) << 22 | (this._cookie ? 1 : 0) << 21 | (this._cookieFalloff ? 1 : 0) << 20 | chanId[this._cookieChannel.charAt(0)] << 18 | (this._cookieTransform ? 1 : 0) << 12 | this._shape << 9;\n\n\t\t\tif (this._cookieChannel.length === 3) {\n\t\t\t\tkey |= chanId[this._cookieChannel.charAt(1)] << 16;\n\t\t\t\tkey |= chanId[this._cookieChannel.charAt(2)] << 14;\n\t\t\t}\n\n\t\t\tif (key !== this.key && this._scene !== null) {\n\t\t\t\tthis._scene.layers._dirtyLights = true;\n\t\t\t}\n\n\t\t\tthis.key = key;\n\t\t};\n\n\t\t_proto.uploadAreaLightLUTs = function uploadAreaLightLUTs() {\n\t\t\tfunction createTexture(device, data, format) {\n\t\t\t\tvar tex = new Texture(device, {\n\t\t\t\t\twidth: 64,\n\t\t\t\t\theight: 64,\n\t\t\t\t\tformat: format,\n\t\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\t\ttype: TEXTURETYPE_DEFAULT,\n\t\t\t\t\tmagFilter: FILTER_LINEAR,\n\t\t\t\t\tminFilter: FILTER_NEAREST,\n\t\t\t\t\tanisotropy: 1\n\t\t\t\t});\n\t\t\t\ttex.lock().set(data);\n\t\t\t\ttex.unlock();\n\t\t\t\ttex.upload();\n\t\t\t\treturn tex;\n\t\t\t}\n\n\t\t\tfunction offsetScale(data, offset, scale) {\n\t\t\t\tvar count = data.length;\n\t\t\t\tvar ret = new Float32Array(count);\n\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar n = i % 4;\n\t\t\t\t\tret[i] = (data[i] + offset[n]) * scale[n];\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tfunction convertToHalfFloat(data) {\n\t\t\t\tvar count = data.length;\n\t\t\t\tvar ret = new Uint16Array(count);\n\t\t\t\tvar float2Half = math.float2Half;\n\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tret[i] = float2Half(data[i]);\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tfunction convertToUint(data) {\n\t\t\t\tvar count = data.length;\n\t\t\t\tvar ret = new Uint8ClampedArray(count);\n\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tret[i] = data[i] * 255;\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tvar app = Application.getApplication();\n\t\t\tvar luts = pc._areaLightLutData;\n\n\t\t\tif (luts && !luts.ready) {\n\t\t\t\tluts.ready = true;\n\t\t\t\tvar device = app.graphicsDevice;\n\t\t\t\tvar data1, data2;\n\t\t\t\tvar format = device._areaLightLutFormat;\n\n\t\t\t\tif (format === PIXELFORMAT_RGBA32F) {\n\t\t\t\t\tdata1 = luts.data1;\n\t\t\t\t\tdata2 = luts.data2;\n\t\t\t\t} else if (format === PIXELFORMAT_RGBA16F) {\n\t\t\t\t\tdata1 = convertToHalfFloat(luts.data1);\n\t\t\t\t\tdata2 = convertToHalfFloat(luts.data2);\n\t\t\t\t} else {\n\t\t\t\t\tvar o1 = [0.0, 0.2976, 0.01381, 0.0];\n\t\t\t\t\tvar s1 = [0.999, 3.08737, 1.6546, 0.603249];\n\t\t\t\t\tvar o2 = [-0.306897, 0.0, 0.0, 0.0];\n\t\t\t\t\tvar s2 = [1.442787, 1.0, 1.0, 1.0];\n\t\t\t\t\tdata1 = convertToUint(offsetScale(luts.data1, o1, s1));\n\t\t\t\t\tdata2 = convertToUint(offsetScale(luts.data2, o2, s2));\n\t\t\t\t}\n\n\t\t\t\tvar tex1 = createTexture(device, data1, format);\n\t\t\t\tvar tex2 = createTexture(device, data2, format);\n\t\t\t\tdevice.scope.resolve('areaLightsLutTex1').setValue(tex1);\n\t\t\t\tdevice.scope.resolve('areaLightsLutTex2').setValue(tex2);\n\t\t\t}\n\t\t};\n\n\t\t_createClass(Light, [{\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._type === value) return;\n\t\t\t\tthis._type = value;\n\n\t\t\t\tthis._destroyShadowMap();\n\n\t\t\t\tthis.updateKey();\n\t\t\t\tvar stype = this._shadowType;\n\t\t\t\tthis._shadowType = null;\n\t\t\t\tthis.shadowType = stype;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"shape\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shape;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === void 0) {\n\t\t\t\t\tvalue = LIGHTSHAPE_PUNCTUAL;\n\t\t\t\t}\n\n\t\t\t\tif (this._shape === value) return;\n\n\t\t\t\tif (value !== LIGHTSHAPE_PUNCTUAL) {\n\t\t\t\t\tthis.uploadAreaLightLUTs();\n\t\t\t\t}\n\n\t\t\t\tthis._shape = value;\n\n\t\t\t\tthis._destroyShadowMap();\n\n\t\t\t\tthis.updateKey();\n\t\t\t\tvar stype = this._shadowType;\n\t\t\t\tthis._shadowType = null;\n\t\t\t\tthis.shadowType = stype;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"shadowType\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shadowType;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._shadowType === value) return;\n\t\t\t\tvar device = Application.getApplication().graphicsDevice;\n\t\t\t\tif (this._type === LIGHTTYPE_OMNI) value = SHADOW_PCF3;\n\n\t\t\t\tif (value === SHADOW_PCF5 && !device.webgl2) {\n\t\t\t\t\tvalue = SHADOW_PCF3;\n\t\t\t\t}\n\n\t\t\t\tif (value === SHADOW_VSM32 && !device.textureFloatRenderable) value = SHADOW_VSM16;\n\t\t\t\tif (value === SHADOW_VSM16 && !device.textureHalfFloatRenderable) value = SHADOW_VSM8;\n\t\t\t\tthis._isVsm = value >= SHADOW_VSM8 && value <= SHADOW_VSM32;\n\t\t\t\tthis._isPcf = value === SHADOW_PCF5 || value === SHADOW_PCF3;\n\t\t\t\tthis._shadowType = value;\n\n\t\t\t\tthis._destroyShadowMap();\n\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"castShadows\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._castShadows && this.mask !== MASK_LIGHTMAP && this.mask !== 0;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._castShadows === value) return;\n\t\t\t\tthis._castShadows = value;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"shadowResolution\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._shadowResolution;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._shadowResolution === value) return;\n\t\t\t\tvar device = Application.getApplication().graphicsDevice;\n\n\t\t\t\tif (this._type === LIGHTTYPE_OMNI) {\n\t\t\t\t\tvalue = Math.min(value, device.maxCubeMapSize);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Math.min(value, device.maxTextureSize);\n\t\t\t\t}\n\n\t\t\t\tthis._shadowResolution = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"vsmBlurSize\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._vsmBlurSize;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._vsmBlurSize === value) return;\n\t\t\t\tif (value % 2 === 0) value++;\n\t\t\t\tthis._vsmBlurSize = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"normalOffsetBias\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._normalOffsetBias;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._normalOffsetBias === value) return;\n\n\t\t\t\tif (!this._normalOffsetBias && value || this._normalOffsetBias && !value) {\n\t\t\t\t\tthis.updateKey();\n\t\t\t\t}\n\n\t\t\t\tthis._normalOffsetBias = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"falloffMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._falloffMode;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._falloffMode === value) return;\n\t\t\t\tthis._falloffMode = value;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"innerConeAngle\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._innerConeAngle;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._innerConeAngle === value) return;\n\t\t\t\tthis._innerConeAngle = value;\n\t\t\t\tthis._innerConeAngleCos = Math.cos(value * Math.PI / 180);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"outerConeAngle\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._outerConeAngle;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._outerConeAngle === value) return;\n\t\t\t\tthis._outerConeAngle = value;\n\t\t\t\tthis._outerConeAngleCos = Math.cos(value * Math.PI / 180);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"intensity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._intensity;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._intensity !== value) {\n\t\t\t\t\tthis._intensity = value;\n\n\t\t\t\t\tthis._updateFinalColor();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cookie\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cookie;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._cookie === value) return;\n\t\t\t\tthis._cookie = value;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cookieFalloff\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cookieFalloff;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._cookieFalloff === value) return;\n\t\t\t\tthis._cookieFalloff = value;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cookieChannel\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cookieChannel;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._cookieChannel === value) return;\n\n\t\t\t\tif (value.length < 3) {\n\t\t\t\t\tvar chr = value.charAt(value.length - 1);\n\t\t\t\t\tvar addLen = 3 - value.length;\n\n\t\t\t\t\tfor (var i = 0; i < addLen; i++) {\n\t\t\t\t\t\tvalue += chr;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._cookieChannel = value;\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cookieTransform\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cookieTransform;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._cookieTransform === value) return;\n\t\t\t\tthis._cookieTransform = value;\n\t\t\t\tthis._cookieTransformSet = !!value;\n\n\t\t\t\tif (value && !this._cookieOffset) {\n\t\t\t\t\tthis.cookieOffset = new Vec2();\n\t\t\t\t\tthis._cookieOffsetSet = false;\n\t\t\t\t}\n\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"cookieOffset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._cookieOffset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._cookieOffset === value) return;\n\t\t\t\tvar xformNew = !!(this._cookieTransformSet || value);\n\n\t\t\t\tif (xformNew && !value && this._cookieOffset) {\n\t\t\t\t\tthis._cookieOffset.set(0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._cookieOffset = value;\n\t\t\t\t}\n\n\t\t\t\tthis._cookieOffsetSet = !!value;\n\n\t\t\t\tif (value && !this._cookieTransform) {\n\t\t\t\t\tthis.cookieTransform = new Vec4(1, 1, 0, 0);\n\t\t\t\t\tthis._cookieTransformSet = false;\n\t\t\t\t}\n\n\t\t\t\tthis.updateKey();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Light;\n\t}();\n\n\tvar _lightProps = [];\n\tvar _lightPropsDefault = [];\n\n\tvar LightComponent = function (_Component) {\n\t\t_inheritsLoose(LightComponent, _Component);\n\n\t\tfunction LightComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._cookieAsset = null;\n\t\t\t_this._cookieAssetId = null;\n\t\t\t_this._cookieAssetAdd = false;\n\t\t\t_this._cookieMatrix = null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LightComponent.prototype;\n\n\t\t_proto.addLightToLayers = function addLightToLayers() {\n\t\t\tvar layer;\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addLight(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeLightFromLayers = function removeLightFromLayers() {\n\t\t\tvar layer;\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeLight(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\tthis.addLightToLayers();\n\t\t\t}\n\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\n\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\tlayer.addLight(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeLight(this);\n\t\t};\n\n\t\t_proto.refreshProperties = function refreshProperties() {\n\t\t\tvar name;\n\n\t\t\tfor (var i = 0; i < _lightProps.length; i++) {\n\t\t\t\tname = _lightProps[i];\n\t\t\t\tthis[name] = this[name];\n\t\t\t}\n\n\t\t\tif (this.enabled && this.entity.enabled) this.onEnable();\n\t\t};\n\n\t\t_proto.updateShadow = function updateShadow() {\n\t\t\tthis.light.updateShadow();\n\t\t};\n\n\t\t_proto.onCookieAssetSet = function onCookieAssetSet() {\n\t\t\tvar forceLoad = false;\n\n\t\t\tif (this._cookieAsset.type === 'cubemap' && !this._cookieAsset.loadFaces) {\n\t\t\t\tthis._cookieAsset.loadFaces = true;\n\t\t\t\tforceLoad = true;\n\t\t\t}\n\n\t\t\tif (!this._cookieAsset.resource || forceLoad) this.system.app.assets.load(this._cookieAsset);\n\t\t\tif (this._cookieAsset.resource) this.onCookieAssetLoad();\n\t\t};\n\n\t\t_proto.onCookieAssetAdd = function onCookieAssetAdd(asset) {\n\t\t\tif (this._cookieAssetId !== asset.id) return;\n\t\t\tthis._cookieAsset = asset;\n\t\t\tif (this.light.enabled) this.onCookieAssetSet();\n\n\t\t\tthis._cookieAsset.on('load', this.onCookieAssetLoad, this);\n\n\t\t\tthis._cookieAsset.on('remove', this.onCookieAssetRemove, this);\n\t\t};\n\n\t\t_proto.onCookieAssetLoad = function onCookieAssetLoad() {\n\t\t\tif (!this._cookieAsset || !this._cookieAsset.resource) return;\n\t\t\tthis.cookie = this._cookieAsset.resource;\n\t\t};\n\n\t\t_proto.onCookieAssetRemove = function onCookieAssetRemove() {\n\t\t\tif (!this._cookieAssetId) return;\n\n\t\t\tif (this._cookieAssetAdd) {\n\t\t\t\tthis.system.app.assets.off('add:' + this._cookieAssetId, this.onCookieAssetAdd, this);\n\t\t\t\tthis._cookieAssetAdd = false;\n\t\t\t}\n\n\t\t\tif (this._cookieAsset) {\n\t\t\t\tthis._cookieAsset.off('load', this.onCookieAssetLoad, this);\n\n\t\t\t\tthis._cookieAsset.off('remove', this.onCookieAssetRemove, this);\n\n\t\t\t\tthis._cookieAsset = null;\n\t\t\t}\n\n\t\t\tthis.cookie = null;\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis.light.enabled = true;\n\t\t\tthis.system.app.scene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\tthis.addLightToLayers();\n\t\t\t}\n\n\t\t\tif (this._cookieAsset && !this.cookie) this.onCookieAssetSet();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.light.enabled = false;\n\t\t\tthis.system.app.scene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tthis.removeLightFromLayers();\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.onDisable();\n\t\t\tthis.light.destroy();\n\t\t\tthis.cookieAsset = null;\n\t\t};\n\n\t\treturn LightComponent;\n\t}(Component);\n\n\tfunction _defineProperty(name, defaultValue, setFunc, skipEqualsCheck) {\n\t\tvar c = LightComponent.prototype;\n\n\t\t_lightProps.push(name);\n\n\t\t_lightPropsDefault.push(defaultValue);\n\n\t\tObject.defineProperty(c, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this.data[name];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar data = this.data;\n\t\t\t\tvar oldValue = data[name];\n\t\t\t\tif (!skipEqualsCheck && oldValue === value) return;\n\t\t\t\tdata[name] = value;\n\t\t\t\tif (setFunc) setFunc.call(this, value, oldValue);\n\t\t\t},\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\tfunction _defineProps() {\n\t\t_defineProperty(\"enabled\", true, function (newValue, oldValue) {\n\t\t\tthis.onSetEnabled(null, oldValue, newValue);\n\t\t});\n\n\t\t_defineProperty(\"light\", null);\n\n\t\t_defineProperty(\"type\", 'directional', function (newValue, oldValue) {\n\t\t\tthis.system.changeType(this, oldValue, newValue);\n\t\t\tthis.refreshProperties();\n\t\t});\n\n\t\t_defineProperty(\"color\", new Color(1, 1, 1), function (newValue, oldValue) {\n\t\t\tthis.light.setColor(newValue);\n\t\t}, true);\n\n\t\t_defineProperty(\"intensity\", 1, function (newValue, oldValue) {\n\t\t\tthis.light.intensity = newValue;\n\t\t});\n\n\t\t_defineProperty(\"shape\", LIGHTSHAPE_PUNCTUAL, function (newValue, oldValue) {\n\t\t\tthis.light.shape = newValue;\n\t\t});\n\n\t\t_defineProperty(\"castShadows\", false, function (newValue, oldValue) {\n\t\t\tthis.light.castShadows = newValue;\n\t\t});\n\n\t\t_defineProperty(\"shadowDistance\", 40, function (newValue, oldValue) {\n\t\t\tthis.light.shadowDistance = newValue;\n\t\t});\n\n\t\t_defineProperty(\"shadowResolution\", 1024, function (newValue, oldValue) {\n\t\t\tthis.light.shadowResolution = newValue;\n\t\t});\n\n\t\t_defineProperty(\"shadowBias\", 0.05, function (newValue, oldValue) {\n\t\t\tthis.light.shadowBias = -0.01 * newValue;\n\t\t});\n\n\t\t_defineProperty(\"normalOffsetBias\", 0, function (newValue, oldValue) {\n\t\t\tthis.light.normalOffsetBias = newValue;\n\t\t});\n\n\t\t_defineProperty(\"range\", 10, function (newValue, oldValue) {\n\t\t\tthis.light.attenuationEnd = newValue;\n\t\t});\n\n\t\t_defineProperty(\"innerConeAngle\", 40, function (newValue, oldValue) {\n\t\t\tthis.light.innerConeAngle = newValue;\n\t\t});\n\n\t\t_defineProperty(\"outerConeAngle\", 45, function (newValue, oldValue) {\n\t\t\tthis.light.outerConeAngle = newValue;\n\t\t});\n\n\t\t_defineProperty(\"falloffMode\", LIGHTFALLOFF_LINEAR, function (newValue, oldValue) {\n\t\t\tthis.light.falloffMode = newValue;\n\t\t});\n\n\t\t_defineProperty(\"shadowType\", SHADOW_PCF3, function (newValue, oldValue) {\n\t\t\tthis.light.shadowType = newValue;\n\t\t});\n\n\t\t_defineProperty(\"vsmBlurSize\", 11, function (newValue, oldValue) {\n\t\t\tthis.light.vsmBlurSize = newValue;\n\t\t});\n\n\t\t_defineProperty(\"vsmBlurMode\", BLUR_GAUSSIAN, function (newValue, oldValue) {\n\t\t\tthis.light.vsmBlurMode = newValue;\n\t\t});\n\n\t\t_defineProperty(\"vsmBias\", 0.01 * 0.25, function (newValue, oldValue) {\n\t\t\tthis.light.vsmBias = newValue;\n\t\t});\n\n\t\t_defineProperty(\"cookieAsset\", null, function (newValue, oldValue) {\n\t\t\tif (this._cookieAssetId && (newValue instanceof Asset && newValue.id === this._cookieAssetId || newValue === this._cookieAssetId)) return;\n\t\t\tthis.onCookieAssetRemove();\n\t\t\tthis._cookieAssetId = null;\n\n\t\t\tif (newValue instanceof Asset) {\n\t\t\t\tthis.data.cookieAsset = newValue.id;\n\t\t\t\tthis._cookieAssetId = newValue.id;\n\t\t\t\tthis.onCookieAssetAdd(newValue);\n\t\t\t} else if (typeof newValue === 'number') {\n\t\t\t\tthis._cookieAssetId = newValue;\n\t\t\t\tvar asset = this.system.app.assets.get(newValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tthis.onCookieAssetAdd(asset);\n\t\t\t\t} else {\n\t\t\t\t\tthis._cookieAssetAdd = true;\n\t\t\t\t\tthis.system.app.assets.on('add:' + this._cookieAssetId, this.onCookieAssetAdd, this);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(\"cookie\", null, function (newValue, oldValue) {\n\t\t\tthis.light.cookie = newValue;\n\t\t});\n\n\t\t_defineProperty(\"cookieIntensity\", 1, function (newValue, oldValue) {\n\t\t\tthis.light.cookieIntensity = newValue;\n\t\t});\n\n\t\t_defineProperty(\"cookieFalloff\", true, function (newValue, oldValue) {\n\t\t\tthis.light.cookieFalloff = newValue;\n\t\t});\n\n\t\t_defineProperty(\"cookieChannel\", \"rgb\", function (newValue, oldValue) {\n\t\t\tthis.light.cookieChannel = newValue;\n\t\t});\n\n\t\t_defineProperty(\"cookieAngle\", 0, function (newValue, oldValue) {\n\t\t\tif (newValue !== 0 || this.cookieScale !== null) {\n\t\t\t\tif (!this._cookieMatrix) this._cookieMatrix = new Vec4();\n\t\t\t\tvar scx = 1;\n\t\t\t\tvar scy = 1;\n\n\t\t\t\tif (this.cookieScale) {\n\t\t\t\t\tscx = this.cookieScale.x;\n\t\t\t\t\tscy = this.cookieScale.y;\n\t\t\t\t}\n\n\t\t\t\tvar c = Math.cos(newValue * math.DEG_TO_RAD);\n\t\t\t\tvar s = Math.sin(newValue * math.DEG_TO_RAD);\n\n\t\t\t\tthis._cookieMatrix.set(c / scx, -s / scx, s / scy, c / scy);\n\n\t\t\t\tthis.light.cookieTransform = this._cookieMatrix;\n\t\t\t} else {\n\t\t\t\tthis.light.cookieTransform = null;\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(\"cookieScale\", null, function (newValue, oldValue) {\n\t\t\tif (newValue !== null || this.cookieAngle !== 0) {\n\t\t\t\tif (!this._cookieMatrix) this._cookieMatrix = new Vec4();\n\t\t\t\tvar scx = newValue.x;\n\t\t\t\tvar scy = newValue.y;\n\t\t\t\tvar c = Math.cos(this.cookieAngle * math.DEG_TO_RAD);\n\t\t\t\tvar s = Math.sin(this.cookieAngle * math.DEG_TO_RAD);\n\n\t\t\t\tthis._cookieMatrix.set(c / scx, -s / scx, s / scy, c / scy);\n\n\t\t\t\tthis.light.cookieTransform = this._cookieMatrix;\n\t\t\t} else {\n\t\t\t\tthis.light.cookieTransform = null;\n\t\t\t}\n\t\t}, true);\n\n\t\t_defineProperty(\"cookieOffset\", null, function (newValue, oldValue) {\n\t\t\tthis.light.cookieOffset = newValue;\n\t\t}, true);\n\n\t\t_defineProperty(\"shadowUpdateMode\", SHADOWUPDATE_REALTIME, function (newValue, oldValue) {\n\t\t\tthis.light.shadowUpdateMode = newValue;\n\t\t});\n\n\t\t_defineProperty(\"mask\", 1, function (newValue, oldValue) {\n\t\t\tthis.light.mask = newValue;\n\t\t});\n\n\t\t_defineProperty(\"affectDynamic\", true, function (newValue, oldValue) {\n\t\t\tif (newValue) {\n\t\t\t\tthis.light.mask |= MASK_DYNAMIC;\n\t\t\t} else {\n\t\t\t\tthis.light.mask &= ~MASK_DYNAMIC;\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(\"affectLightmapped\", false, function (newValue, oldValue) {\n\t\t\tif (newValue) {\n\t\t\t\tthis.light.mask |= MASK_BAKED;\n\t\t\t\tif (this.bake) this.light.mask &= ~MASK_LIGHTMAP;\n\t\t\t} else {\n\t\t\t\tthis.light.mask &= ~MASK_BAKED;\n\t\t\t\tif (this.bake) this.light.mask |= MASK_LIGHTMAP;\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(\"bake\", false, function (newValue, oldValue) {\n\t\t\tif (newValue) {\n\t\t\t\tthis.light.mask |= MASK_LIGHTMAP;\n\t\t\t\tif (this.affectLightmapped) this.light.mask &= ~MASK_BAKED;\n\t\t\t} else {\n\t\t\t\tthis.light.mask &= ~MASK_LIGHTMAP;\n\t\t\t\tif (this.affectLightmapped) this.light.mask |= MASK_BAKED;\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(\"bakeDir\", true, function (newValue, oldValue) {\n\t\t\tthis.light.bakeDir = newValue;\n\t\t});\n\n\t\t_defineProperty(\"isStatic\", false, function (newValue, oldValue) {\n\t\t\tthis.light.isStatic = newValue;\n\t\t});\n\n\t\t_defineProperty(\"layers\", [LAYERID_WORLD], function (newValue, oldValue) {\n\t\t\tvar i, layer;\n\n\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(oldValue[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeLight(this);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < newValue.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(newValue[i]);\n\t\t\t\tif (!layer) continue;\n\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tlayer.addLight(this);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t_defineProps();\n\n\tvar LightComponentData = function LightComponentData() {\n\t\tvar _props = _lightProps;\n\t\tvar _propsDefault = _lightPropsDefault;\n\t\tvar value;\n\n\t\tfor (var i = 0; i < _props.length; i++) {\n\t\t\tvalue = _propsDefault[i];\n\n\t\t\tif (value && value.clone) {\n\t\t\t\tthis[_props[i]] = value.clone();\n\t\t\t} else {\n\t\t\t\tthis[_props[i]] = value;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar lightTypes = {\n\t\t'directional': LIGHTTYPE_DIRECTIONAL,\n\t\t'omni': LIGHTTYPE_OMNI,\n\t\t'point': LIGHTTYPE_OMNI,\n\t\t'spot': LIGHTTYPE_SPOT\n\t};\n\n\tvar LightComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(LightComponentSystem, _ComponentSystem);\n\n\t\tfunction LightComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'light';\n\t\t\t_this.ComponentType = LightComponent;\n\t\t\t_this.DataType = LightComponentData;\n\n\t\t\t_this.on('beforeremove', _this._onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = LightComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, _data) {\n\t\t\tvar properties = _lightProps;\n\t\t\tvar data = {};\n\n\t\t\tfor (var i = 0, len = properties.length; i < len; i++) {\n\t\t\t\tvar property = properties[i];\n\t\t\t\tdata[property] = _data[property];\n\t\t\t}\n\n\t\t\tif (!data.type) data.type = component.data.type;\n\t\t\tcomponent.data.type = data.type;\n\n\t\t\tif (data.layers && Array.isArray(data.layers)) {\n\t\t\t\tdata.layers = data.layers.slice(0);\n\t\t\t}\n\n\t\t\tif (data.color && Array.isArray(data.color)) data.color = new Color(data.color[0], data.color[1], data.color[2]);\n\t\t\tif (data.cookieOffset && data.cookieOffset instanceof Array) data.cookieOffset = new Vec2(data.cookieOffset[0], data.cookieOffset[1]);\n\t\t\tif (data.cookieScale && data.cookieScale instanceof Array) data.cookieScale = new Vec2(data.cookieScale[0], data.cookieScale[1]);\n\n\t\t\tif (data.enable) {\n\t\t\t\tconsole.warn(\"WARNING: enable: Property is deprecated. Set enabled property instead.\");\n\t\t\t\tdata.enabled = data.enable;\n\t\t\t}\n\n\t\t\tvar light = new Light();\n\t\t\tlight.type = lightTypes[data.type];\n\t\t\tlight._node = component.entity;\n\t\t\tlight._scene = this.app.scene;\n\t\t\tcomponent.data.light = light;\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto._onRemoveComponent = function _onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar light = entity.light;\n\t\t\tvar data = [];\n\t\t\tvar name;\n\t\t\tvar _props = _lightProps;\n\n\t\t\tfor (var i = 0; i < _props.length; i++) {\n\t\t\t\tname = _props[i];\n\t\t\t\tif (name === \"light\") continue;\n\n\t\t\t\tif (light[name] && light[name].clone) {\n\t\t\t\t\tdata[name] = light[name].clone();\n\t\t\t\t} else {\n\t\t\t\t\tdata[name] = light[name];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.addComponent(clone, data);\n\t\t};\n\n\t\t_proto.changeType = function changeType(component, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tcomponent.light.type = lightTypes[newValue];\n\t\t\t}\n\t\t};\n\n\t\treturn LightComponentSystem;\n\t}(ComponentSystem);\n\n\tvar ModelComponent = function (_Component) {\n\t\t_inheritsLoose(ModelComponent, _Component);\n\n\t\tfunction ModelComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._type = 'asset';\n\t\t\t_this._asset = null;\n\t\t\t_this._model = null;\n\t\t\t_this._mapping = {};\n\t\t\t_this._castShadows = true;\n\t\t\t_this._receiveShadows = true;\n\t\t\t_this._materialAsset = null;\n\t\t\t_this._material = system.defaultMaterial;\n\t\t\t_this._castShadowsLightmap = true;\n\t\t\t_this._lightmapped = false;\n\t\t\t_this._lightmapSizeMultiplier = 1;\n\t\t\t_this._isStatic = false;\n\t\t\t_this._layers = [LAYERID_WORLD];\n\t\t\t_this._batchGroupId = -1;\n\t\t\t_this._aabb = null;\n\t\t\t_this._area = null;\n\t\t\t_this._assetOld = 0;\n\t\t\t_this._materialEvents = null;\n\t\t\t_this._dirtyModelAsset = false;\n\t\t\t_this._dirtyMaterialAsset = false;\n\t\t\t_this._clonedModel = false;\n\t\t\tentity.on('remove', _this.onRemoveChild, _assertThisInitialized(_this));\n\t\t\tentity.on('insert', _this.onInsertChild, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ModelComponent.prototype;\n\n\t\t_proto.addModelToLayers = function addModelToLayers() {\n\t\t\tvar layer;\n\t\t\tvar layers = this.system.app.scene.layers;\n\n\t\t\tfor (var i = 0; i < this._layers.length; i++) {\n\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addMeshInstances(this.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeModelFromLayers = function removeModelFromLayers() {\n\t\t\tvar layer;\n\t\t\tvar layers = this.system.app.scene.layers;\n\n\t\t\tfor (var i = 0; i < this._layers.length; i++) {\n\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeMeshInstances(this.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemoveChild = function onRemoveChild() {\n\t\t\tif (this._model) this.removeModelFromLayers();\n\t\t};\n\n\t\t_proto.onInsertChild = function onInsertChild() {\n\t\t\tif (this._model && this.enabled && this.entity.enabled) this.addModelToLayers();\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tif (this.type === 'asset') {\n\t\t\t\tthis.asset = null;\n\t\t\t} else {\n\t\t\t\tthis.model = null;\n\t\t\t}\n\n\t\t\tthis.materialAsset = null;\n\n\t\t\tthis._unsetMaterialEvents();\n\n\t\t\tthis.entity.off('remove', this.onRemoveChild, this);\n\t\t\tthis.entity.off('insert', this.onInsertChild, this);\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tthis.addModelToLayers();\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.addMeshInstances(this.meshInstances);\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeMeshInstances(this.meshInstances);\n\t\t};\n\n\t\t_proto._setMaterialEvent = function _setMaterialEvent(index, event, id, handler) {\n\t\t\tvar evt = event + ':' + id;\n\t\t\tthis.system.app.assets.on(evt, handler, this);\n\t\t\tif (!this._materialEvents) this._materialEvents = [];\n\t\t\tif (!this._materialEvents[index]) this._materialEvents[index] = {};\n\t\t\tthis._materialEvents[index][evt] = {\n\t\t\t\tid: id,\n\t\t\t\thandler: handler\n\t\t\t};\n\t\t};\n\n\t\t_proto._unsetMaterialEvents = function _unsetMaterialEvents() {\n\t\t\tvar assets = this.system.app.assets;\n\t\t\tvar events = this._materialEvents;\n\t\t\tif (!events) return;\n\n\t\t\tfor (var i = 0, len = events.length; i < len; i++) {\n\t\t\t\tif (!events[i]) continue;\n\t\t\t\tvar evt = events[i];\n\n\t\t\t\tfor (var key in evt) {\n\t\t\t\t\tassets.off(key, evt[key].handler, this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._materialEvents = null;\n\t\t};\n\n\t\t_proto._getAssetByIdOrPath = function _getAssetByIdOrPath(idOrPath) {\n\t\t\tvar asset = null;\n\t\t\tvar isPath = isNaN(parseInt(idOrPath, 10));\n\n\t\t\tif (!isPath) {\n\t\t\t\tasset = this.system.app.assets.get(idOrPath);\n\t\t\t} else if (this.asset) {\n\t\t\t\tvar url = this._getMaterialAssetUrl(idOrPath);\n\n\t\t\t\tif (url) asset = this.system.app.assets.getByUrl(url);\n\t\t\t}\n\n\t\t\treturn asset;\n\t\t};\n\n\t\t_proto._getMaterialAssetUrl = function _getMaterialAssetUrl(path) {\n\t\t\tif (!this.asset) return null;\n\t\t\tvar modelAsset = this.system.app.assets.get(this.asset);\n\t\t\treturn modelAsset ? modelAsset.getAbsoluteUrl(path) : null;\n\t\t};\n\n\t\t_proto._loadAndSetMeshInstanceMaterial = function _loadAndSetMeshInstanceMaterial(materialAsset, meshInstance, index) {\n\t\t\tvar assets = this.system.app.assets;\n\t\t\tif (!materialAsset) return;\n\n\t\t\tif (materialAsset.resource) {\n\t\t\t\tmeshInstance.material = materialAsset.resource;\n\n\t\t\t\tthis._setMaterialEvent(index, 'remove', materialAsset.id, function () {\n\t\t\t\t\tmeshInstance.material = this.system.defaultMaterial;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._setMaterialEvent(index, 'load', materialAsset.id, function (asset) {\n\t\t\t\t\tmeshInstance.material = asset.resource;\n\n\t\t\t\t\tthis._setMaterialEvent(index, 'remove', materialAsset.id, function () {\n\t\t\t\t\t\tmeshInstance.material = this.system.defaultMaterial;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tif (this.enabled && this.entity.enabled) assets.load(materialAsset);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\t\t\tscene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tscene.layers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tvar isAsset = this._type === 'asset';\n\t\t\tvar asset;\n\n\t\t\tif (this._model) {\n\t\t\t\tthis.addModelToLayers();\n\t\t\t} else if (isAsset && this._asset) {\n\t\t\t\tasset = app.assets.get(this._asset);\n\n\t\t\t\tif (asset && asset.resource !== this._model) {\n\t\t\t\t\tthis._bindModelAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._materialAsset) {\n\t\t\t\tasset = app.assets.get(this._materialAsset);\n\n\t\t\t\tif (asset && asset.resource !== this._material) {\n\t\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isAsset) {\n\t\t\t\tif (this._mapping) {\n\t\t\t\t\tfor (var index in this._mapping) {\n\t\t\t\t\t\tif (this._mapping[index]) {\n\t\t\t\t\t\t\tasset = this._getAssetByIdOrPath(this._mapping[index]);\n\n\t\t\t\t\t\t\tif (asset && !asset.resource) {\n\t\t\t\t\t\t\t\tapp.assets.load(asset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.insert(BatchGroup.MODEL, this.batchGroupId, this.entity);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\t\t\tscene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tscene.layers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.remove(BatchGroup.MODEL, this.batchGroupId, this.entity);\n\t\t\t}\n\n\t\t\tif (this._model) {\n\t\t\t\tthis.removeModelFromLayers();\n\t\t\t}\n\t\t};\n\n\t\t_proto.hide = function hide() {\n\t\t\tif (this._model) {\n\t\t\t\tvar i, l;\n\t\t\t\tvar instances = this._model.meshInstances;\n\n\t\t\t\tfor (i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\tinstances[i].visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.show = function show() {\n\t\t\tif (this._model) {\n\t\t\t\tvar i, l;\n\t\t\t\tvar instances = this._model.meshInstances;\n\n\t\t\t\tfor (i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\tinstances[i].visible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindMaterialAsset = function _bindMaterialAsset(asset) {\n\t\t\tasset.on('load', this._onMaterialAssetLoad, this);\n\t\t\tasset.on('unload', this._onMaterialAssetUnload, this);\n\t\t\tasset.on('remove', this._onMaterialAssetRemove, this);\n\t\t\tasset.on('change', this._onMaterialAssetChange, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onMaterialAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindMaterialAsset = function _unbindMaterialAsset(asset) {\n\t\t\tasset.off('load', this._onMaterialAssetLoad, this);\n\t\t\tasset.off('unload', this._onMaterialAssetUnload, this);\n\t\t\tasset.off('remove', this._onMaterialAssetRemove, this);\n\t\t\tasset.off('change', this._onMaterialAssetChange, this);\n\t\t};\n\n\t\t_proto._onMaterialAssetAdd = function _onMaterialAssetAdd(asset) {\n\t\t\tthis.system.app.assets.off('add:' + asset.id, this._onMaterialAssetAdd, this);\n\n\t\t\tif (this._materialAsset === asset.id) {\n\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMaterialAssetLoad = function _onMaterialAssetLoad(asset) {\n\t\t\tthis._setMaterial(asset.resource);\n\t\t};\n\n\t\t_proto._onMaterialAssetUnload = function _onMaterialAssetUnload(asset) {\n\t\t\tthis._setMaterial(this.system.defaultMaterial);\n\t\t};\n\n\t\t_proto._onMaterialAssetRemove = function _onMaterialAssetRemove(asset) {\n\t\t\tthis._onMaterialAssetUnload(asset);\n\t\t};\n\n\t\t_proto._onMaterialAssetChange = function _onMaterialAssetChange(asset) {};\n\n\t\t_proto._bindModelAsset = function _bindModelAsset(asset) {\n\t\t\tthis._unbindModelAsset(asset);\n\n\t\t\tasset.on('load', this._onModelAssetLoad, this);\n\t\t\tasset.on('unload', this._onModelAssetUnload, this);\n\t\t\tasset.on('change', this._onModelAssetChange, this);\n\t\t\tasset.on('remove', this._onModelAssetRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onModelAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindModelAsset = function _unbindModelAsset(asset) {\n\t\t\tasset.off('load', this._onModelAssetLoad, this);\n\t\t\tasset.off('unload', this._onModelAssetUnload, this);\n\t\t\tasset.off('change', this._onModelAssetChange, this);\n\t\t\tasset.off('remove', this._onModelAssetRemove, this);\n\t\t};\n\n\t\t_proto._onModelAssetAdded = function _onModelAssetAdded(asset) {\n\t\t\tthis.system.app.assets.off('add:' + asset.id, this._onModelAssetAdded, this);\n\n\t\t\tif (asset.id === this._asset) {\n\t\t\t\tthis._bindModelAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onModelAssetLoad = function _onModelAssetLoad(asset) {\n\t\t\tthis.model = asset.resource.clone();\n\t\t\tthis._clonedModel = true;\n\t\t};\n\n\t\t_proto._onModelAssetUnload = function _onModelAssetUnload(asset) {\n\t\t\tthis.model = null;\n\t\t};\n\n\t\t_proto._onModelAssetChange = function _onModelAssetChange(asset, attr, _new, _old) {\n\t\t\tif (attr === 'data') {\n\t\t\t\tthis.mapping = this._mapping;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onModelAssetRemove = function _onModelAssetRemove(asset) {\n\t\t\tthis.model = null;\n\t\t};\n\n\t\t_proto._setMaterial = function _setMaterial(material) {\n\t\t\tif (this._material === material) return;\n\t\t\tthis._material = material;\n\t\t\tvar model = this._model;\n\n\t\t\tif (model && this._type !== 'asset') {\n\t\t\t\tvar meshInstances = model.meshInstances;\n\n\t\t\t\tfor (var i = 0, len = meshInstances.length; i < len; i++) {\n\t\t\t\t\tmeshInstances[i].material = material;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(ModelComponent, [{\n\t\t\tkey: \"meshInstances\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._model) return null;\n\t\t\t\treturn this._model.meshInstances;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (!this._model) return;\n\t\t\t\tthis._model.meshInstances = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._aabb;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._aabb = value;\n\t\t\t\tvar mi = this._model.meshInstances;\n\n\t\t\t\tif (mi) {\n\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\tmi[i].setOverrideAabb(this._aabb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._type === value) return;\n\t\t\t\tthis._area = null;\n\t\t\t\tthis._type = value;\n\n\t\t\t\tif (value === 'asset') {\n\t\t\t\t\tif (this._asset !== null) {\n\t\t\t\t\t\tthis._bindModelAsset(this._asset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.model = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar primData = getShapePrimitive(this.system.app.graphicsDevice, value);\n\t\t\t\t\tthis._area = primData.area;\n\t\t\t\t\tvar mesh = primData.mesh;\n\t\t\t\t\tvar node = new GraphNode();\n\t\t\t\t\tvar model = new Model();\n\t\t\t\t\tmodel.graph = node;\n\t\t\t\t\tmodel.meshInstances = [new MeshInstance(node, mesh, this._material)];\n\t\t\t\t\tif (this.system._inTools) model.generateWireframe();\n\t\t\t\t\tthis.model = model;\n\t\t\t\t\tthis._asset = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"asset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._asset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar assets = this.system.app.assets;\n\t\t\t\tvar _id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._asset !== _id) {\n\t\t\t\t\tif (this._asset) {\n\t\t\t\t\t\tassets.off('add:' + this._asset, this._onModelAssetAdded, this);\n\n\t\t\t\t\t\tvar _prev = assets.get(this._asset);\n\n\t\t\t\t\t\tif (_prev) {\n\t\t\t\t\t\t\tthis._unbindModelAsset(_prev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._asset = _id;\n\n\t\t\t\t\tif (this._asset) {\n\t\t\t\t\t\tvar asset = assets.get(this._asset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis.model = null;\n\t\t\t\t\t\t\tassets.on('add:' + this._asset, this._onModelAssetAdded, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindModelAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.model = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"model\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._model;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i;\n\t\t\t\tif (this._model === value) return;\n\n\t\t\t\tif (value && value._immutable) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tthis._model._immutable = false;\n\t\t\t\t\tthis.removeModelFromLayers();\n\t\t\t\t\tthis.entity.removeChild(this._model.getGraph());\n\t\t\t\t\tdelete this._model._entity;\n\n\t\t\t\t\tif (this._clonedModel) {\n\t\t\t\t\t\tthis._model.destroy();\n\n\t\t\t\t\t\tthis._clonedModel = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._model = value;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tthis._model._immutable = true;\n\t\t\t\t\tvar meshInstances = this._model.meshInstances;\n\n\t\t\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\t\tmeshInstances[i].castShadow = this._castShadows;\n\t\t\t\t\t\tmeshInstances[i].receiveShadow = this._receiveShadows;\n\t\t\t\t\t\tmeshInstances[i].isStatic = this._isStatic;\n\t\t\t\t\t\tmeshInstances[i].setOverrideAabb(this._aabb);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.lightmapped = this._lightmapped;\n\t\t\t\t\tthis.entity.addChild(this._model.graph);\n\n\t\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis.addModelToLayers();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._model._entity = this.entity;\n\t\t\t\t\tif (this.entity.animation) this.entity.animation.setModel(this._model);\n\n\t\t\t\t\tif (this.entity.anim) {\n\t\t\t\t\t\tthis.entity.anim.resetStateGraph();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.type === 'asset') {\n\t\t\t\t\t\tthis.mapping = this._mapping;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._unsetMaterialEvents();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lightmapped\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lightmapped;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value !== this._lightmapped) {\n\t\t\t\t\tthis._lightmapped = value;\n\n\t\t\t\t\tif (this._model) {\n\t\t\t\t\t\tvar mi = this._model.meshInstances;\n\n\t\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\t\tmi[i].setLightmapped(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"castShadows\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._castShadows;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._castShadows === value) return;\n\t\t\t\tvar layer;\n\t\t\t\tvar i;\n\t\t\t\tvar model = this._model;\n\n\t\t\t\tif (model) {\n\t\t\t\t\tvar layers = this.layers;\n\t\t\t\t\tvar scene = this.system.app.scene;\n\n\t\t\t\t\tif (this._castShadows && !value) {\n\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\t\t\tlayer.removeShadowCasters(model.meshInstances);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meshInstances = model.meshInstances;\n\n\t\t\t\t\tfor (i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\t\tmeshInstances[i].castShadow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this._castShadows && value) {\n\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\tlayer = scene.layers.getLayerById(layers[i]);\n\t\t\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\t\t\tlayer.addShadowCasters(model.meshInstances);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._castShadows = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"receiveShadows\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._receiveShadows;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._receiveShadows === value) return;\n\t\t\t\tthis._receiveShadows = value;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tvar meshInstances = this._model.meshInstances;\n\n\t\t\t\t\tfor (var i = 0, len = meshInstances.length; i < len; i++) {\n\t\t\t\t\t\tmeshInstances[i].receiveShadow = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"castShadowsLightmap\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._castShadowsLightmap;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._castShadowsLightmap = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lightmapSizeMultiplier\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lightmapSizeMultiplier;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._lightmapSizeMultiplier = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isStatic\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._isStatic;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._isStatic === value) return;\n\t\t\t\tthis._isStatic = value;\n\t\t\t\tvar i, m;\n\n\t\t\t\tif (this._model) {\n\t\t\t\t\tvar rcv = this._model.meshInstances;\n\n\t\t\t\t\tfor (i = 0; i < rcv.length; i++) {\n\t\t\t\t\t\tm = rcv[i];\n\t\t\t\t\t\tm.isStatic = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i, layer;\n\t\t\t\tvar layers = this.system.app.scene.layers;\n\n\t\t\t\tif (this.meshInstances) {\n\t\t\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\t\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\t\tlayer.removeMeshInstances(this.meshInstances);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._layers.length = 0;\n\n\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\tthis._layers[i] = value[i];\n\t\t\t\t}\n\n\t\t\t\tif (!this.enabled || !this.entity.enabled || !this.meshInstances) return;\n\n\t\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\t\t\t\t\tif (!layer) continue;\n\t\t\t\t\tlayer.addMeshInstances(this.meshInstances);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"batchGroupId\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._batchGroupId;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._batchGroupId === value) return;\n\t\t\t\tvar batcher = this.system.app.batcher;\n\n\t\t\t\tif (this.entity.enabled && this._batchGroupId >= 0) {\n\t\t\t\t\tbatcher.remove(BatchGroup.MODEL, this.batchGroupId, this.entity);\n\t\t\t\t}\n\n\t\t\t\tif (this.entity.enabled && value >= 0) {\n\t\t\t\t\tbatcher.insert(BatchGroup.MODEL, value, this.entity);\n\t\t\t\t}\n\n\t\t\t\tif (value < 0 && this._batchGroupId >= 0 && this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis.addModelToLayers();\n\t\t\t\t}\n\n\t\t\t\tthis._batchGroupId = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"materialAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._materialAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar _id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\t_id = value.id;\n\t\t\t\t}\n\n\t\t\t\tvar assets = this.system.app.assets;\n\n\t\t\t\tif (_id !== this._materialAsset) {\n\t\t\t\t\tif (this._materialAsset) {\n\t\t\t\t\t\tassets.off('add:' + this._materialAsset, this._onMaterialAssetAdd, this);\n\n\t\t\t\t\t\tvar _prev = assets.get(this._materialAsset);\n\n\t\t\t\t\t\tif (_prev) {\n\t\t\t\t\t\t\tthis._unbindMaterialAsset(_prev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._materialAsset = _id;\n\n\t\t\t\t\tif (this._materialAsset) {\n\t\t\t\t\t\tvar asset = assets.get(this._materialAsset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis._setMaterial(this.system.defaultMaterial);\n\n\t\t\t\t\t\t\tassets.on('add:' + this._materialAsset, this._onMaterialAssetAdd, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindMaterialAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._setMaterial(this.system.defaultMaterial);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"material\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._material;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._material === value) return;\n\t\t\t\tthis.materialAsset = null;\n\n\t\t\t\tthis._setMaterial(value);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"mapping\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._mapping;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._type !== 'asset') return;\n\n\t\t\t\tthis._unsetMaterialEvents();\n\n\t\t\t\tif (!value) value = {};\n\t\t\t\tthis._mapping = value;\n\t\t\t\tif (!this._model) return;\n\t\t\t\tvar meshInstances = this._model.meshInstances;\n\t\t\t\tvar modelAsset = this.asset ? this.system.app.assets.get(this.asset) : null;\n\t\t\t\tvar assetMapping = modelAsset ? modelAsset.data.mapping : null;\n\t\t\t\tvar asset = null;\n\n\t\t\t\tfor (var i = 0, len = meshInstances.length; i < len; i++) {\n\t\t\t\t\tif (value[i] !== undefined) {\n\t\t\t\t\t\tif (value[i]) {\n\t\t\t\t\t\t\tasset = this.system.app.assets.get(value[i]);\n\n\t\t\t\t\t\t\tthis._loadAndSetMeshInstanceMaterial(asset, meshInstances[i], i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmeshInstances[i].material = this.system.defaultMaterial;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (assetMapping) {\n\t\t\t\t\t\tif (assetMapping[i] && (assetMapping[i].material || assetMapping[i].path)) {\n\t\t\t\t\t\t\tif (assetMapping[i].material !== undefined) {\n\t\t\t\t\t\t\t\tasset = this.system.app.assets.get(assetMapping[i].material);\n\t\t\t\t\t\t\t} else if (assetMapping[i].path !== undefined) {\n\t\t\t\t\t\t\t\tvar url = this._getMaterialAssetUrl(assetMapping[i].path);\n\n\t\t\t\t\t\t\t\tif (url) {\n\t\t\t\t\t\t\t\t\tasset = this.system.app.assets.getByUrl(url);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._loadAndSetMeshInstanceMaterial(asset, meshInstances[i], i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmeshInstances[i].material = this.system.defaultMaterial;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn ModelComponent;\n\t}(Component);\n\n\tvar ModelComponentData = function ModelComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$a = ['enabled'];\n\n\tvar ModelComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ModelComponentSystem, _ComponentSystem);\n\n\t\tfunction ModelComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'model';\n\t\t\t_this.ComponentType = ModelComponent;\n\t\t\t_this.DataType = ModelComponentData;\n\t\t\t_this.schema = _schema$a;\n\t\t\t_this.defaultMaterial = app.scene.defaultMaterial;\n\n\t\t\t_this.on('beforeremove', _this.onRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ModelComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, _data, properties) {\n\t\t\tproperties = ['material', 'materialAsset', 'asset', 'castShadows', 'receiveShadows', 'castShadowsLightmap', 'lightmapped', 'lightmapSizeMultiplier', 'type', 'mapping', 'layers', 'isStatic', 'batchGroupId'];\n\n\t\t\tif (_data.batchGroupId === null || _data.batchGroupId === undefined) {\n\t\t\t\t_data.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tif (_data.layers && _data.layers.length) {\n\t\t\t\t_data.layers = _data.layers.slice(0);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\tif (_data.hasOwnProperty(properties[i])) {\n\t\t\t\t\tcomponent[properties[i]] = _data[properties[i]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, _data, ['enabled']);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar data = {\n\t\t\t\ttype: entity.model.type,\n\t\t\t\tasset: entity.model.asset,\n\t\t\t\tcastShadows: entity.model.castShadows,\n\t\t\t\treceiveShadows: entity.model.receiveShadows,\n\t\t\t\tcastShadowsLightmap: entity.model.castShadowsLightmap,\n\t\t\t\tlightmapped: entity.model.lightmapped,\n\t\t\t\tlightmapSizeMultiplier: entity.model.lightmapSizeMultiplier,\n\t\t\t\tisStatic: entity.model.isStatic,\n\t\t\t\tenabled: entity.model.enabled,\n\t\t\t\tlayers: entity.model.layers,\n\t\t\t\tbatchGroupId: entity.model.batchGroupId,\n\t\t\t\tmapping: extend({}, entity.model.mapping)\n\t\t\t};\n\t\t\tvar materialAsset = entity.model.materialAsset;\n\n\t\t\tif (!(materialAsset instanceof Asset) && materialAsset != null) {\n\t\t\t\tmaterialAsset = this.app.assets.get(materialAsset);\n\t\t\t}\n\n\t\t\tvar material = entity.model.material;\n\n\t\t\tif (!material || material === this.defaultMaterial || !materialAsset || material === materialAsset.resource) {\n\t\t\t\tdata.materialAsset = materialAsset;\n\t\t\t}\n\n\t\t\tvar component = this.addComponent(clone, data);\n\n\t\t\tif (entity.model.model && entity.model.type === 'asset' && !entity.model.asset) {\n\t\t\t\tcomponent.model = entity.model.model.clone();\n\t\t\t\tcomponent._clonedModel = true;\n\t\t\t}\n\n\t\t\tif (!data.materialAsset) component.material = material;\n\n\t\t\tif (entity.model.model) {\n\t\t\t\tvar meshInstances = entity.model.model.meshInstances;\n\t\t\t\tvar meshInstancesClone = component.model.meshInstances;\n\n\t\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\tmeshInstancesClone[i].mask = meshInstances[i].mask;\n\t\t\t\t\tmeshInstancesClone[i].material = meshInstances[i].material;\n\t\t\t\t\tmeshInstancesClone[i].layer = meshInstances[i].layer;\n\t\t\t\t\tmeshInstancesClone[i].receiveShadow = meshInstances[i].receiveShadow;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemove = function onRemove(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn ModelComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ModelComponent.prototype, _schema$a);\n\n\tvar RenderComponent = function (_Component) {\n\t\t_inheritsLoose(RenderComponent, _Component);\n\n\t\tfunction RenderComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._type = 'asset';\n\t\t\t_this._castShadows = true;\n\t\t\t_this._receiveShadows = true;\n\t\t\t_this._castShadowsLightmap = true;\n\t\t\t_this._lightmapped = false;\n\t\t\t_this._lightmapSizeMultiplier = 1;\n\t\t\t_this._isStatic = false;\n\t\t\t_this._batchGroupId = -1;\n\t\t\t_this._meshInstances = [];\n\t\t\t_this._layers = [LAYERID_WORLD];\n\t\t\t_this._aabb = null;\n\t\t\t_this._area = null;\n\t\t\t_this._rootBone = new EntityReference(_assertThisInitialized(_this), 'rootBone');\n\n\t\t\t_this._rootBone.on('set:entity', _this._onSetRootBone, _assertThisInitialized(_this));\n\n\t\t\t_this._assetReference = new AssetReference('asset', _assertThisInitialized(_this), system.app.assets, {\n\t\t\t\tadd: _this._onRenderAssetAdded,\n\t\t\t\tload: _this._onRenderAssetLoad,\n\t\t\t\tremove: _this._onRenderAssetRemove,\n\t\t\t\tunload: _this._onRenderAssetUnload\n\t\t\t}, _assertThisInitialized(_this));\n\t\t\t_this._material = system.defaultMaterial;\n\t\t\t_this._materialReferences = [];\n\t\t\tentity.on('remove', _this.onRemoveChild, _assertThisInitialized(_this));\n\t\t\tentity.on('insert', _this.onInsertChild, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = RenderComponent.prototype;\n\n\t\t_proto._onSetRootBone = function _onSetRootBone(entity) {\n\t\t\tif (entity) {\n\t\t\t\tthis._onRootBoneChanged();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRootBoneChanged = function _onRootBoneChanged() {\n\t\t\tthis._clearSkinInstances();\n\n\t\t\tthis._cloneSkinInstances();\n\t\t};\n\n\t\t_proto.destroyMeshInstances = function destroyMeshInstances() {\n\t\t\tvar meshInstances = this._meshInstances;\n\n\t\t\tif (meshInstances) {\n\t\t\t\tthis.removeFromLayers();\n\n\t\t\t\tfor (var i = 0; i < meshInstances.length; i++) {\n\t\t\t\t\tmeshInstances[i].destroy();\n\t\t\t\t}\n\n\t\t\t\tthis._meshInstances.length = 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto.addToLayers = function addToLayers() {\n\t\t\tvar layer,\n\t\t\t\t\tlayers = this.system.app.scene.layers;\n\n\t\t\tfor (var i = 0; i < this._layers.length; i++) {\n\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.addMeshInstances(this._meshInstances);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeFromLayers = function removeFromLayers() {\n\t\t\tif (this._meshInstances && this._meshInstances.length) {\n\t\t\t\tvar layer,\n\t\t\t\t\t\tlayers = this.system.app.scene.layers;\n\n\t\t\t\tfor (var i = 0; i < this._layers.length; i++) {\n\t\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\n\t\t\t\t\tif (layer) {\n\t\t\t\t\t\tlayer.removeMeshInstances(this._meshInstances);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemoveChild = function onRemoveChild() {\n\t\t\tthis.removeFromLayers();\n\t\t};\n\n\t\t_proto.onInsertChild = function onInsertChild() {\n\t\t\tif (this._meshInstances && this.enabled && this.entity.enabled) {\n\t\t\t\tthis.addToLayers();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.destroyMeshInstances();\n\t\t\tthis.asset = null;\n\t\t\tthis.materialAsset = null;\n\t\t\tthis.entity.off('remove', this.onRemoveChild, this);\n\t\t\tthis.entity.off('insert', this.onInsertChild, this);\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tthis.addToLayers();\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.addMeshInstances(this._meshInstances);\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeMeshInstances(this._meshInstances);\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\n\t\t\tthis._rootBone.onParentComponentEnable();\n\n\t\t\tscene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tscene.layers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tvar isAsset = this._type === 'asset';\n\n\t\t\tif (this._meshInstances && this._meshInstances.length) {\n\t\t\t\tthis.addToLayers();\n\t\t\t} else if (isAsset && this.asset) {\n\t\t\t\tthis._onRenderAssetAdded();\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this._materialReferences.length; i++) {\n\t\t\t\tif (this._materialReferences[i].asset) {\n\t\t\t\t\tthis.system.app.assets.load(this._materialReferences[i].asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.insert(BatchGroup.RENDER, this.batchGroupId, this.entity);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\t\t\tscene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tscene.layers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.remove(BatchGroup.RENDER, this.batchGroupId, this.entity);\n\t\t\t}\n\n\t\t\tthis.removeFromLayers();\n\t\t};\n\n\t\t_proto.hide = function hide() {\n\t\t\tif (this._meshInstances) {\n\t\t\t\tfor (var i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\t\tthis._meshInstances[i].visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.show = function show() {\n\t\t\tif (this._meshInstances) {\n\t\t\t\tfor (var i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\t\tthis._meshInstances[i].visible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRenderAssetAdded = function _onRenderAssetAdded() {\n\t\t\tif (!this._assetReference.asset) return;\n\n\t\t\tif (this._assetReference.asset.resource) {\n\t\t\t\tthis._onRenderAssetLoad();\n\t\t\t} else if (this.enabled && this.entity.enabled) {\n\t\t\t\tthis.system.app.assets.load(this._assetReference.asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRenderAssetLoad = function _onRenderAssetLoad() {\n\t\t\tthis.destroyMeshInstances();\n\n\t\t\tif (this._assetReference.asset) {\n\t\t\t\tvar render = this._assetReference.asset.resource;\n\t\t\t\trender.off('set:meshes', this._onSetMeshes, this);\n\t\t\t\trender.on('set:meshes', this._onSetMeshes, this);\n\n\t\t\t\tif (render.meshes) {\n\t\t\t\t\tthis._onSetMeshes(render.meshes);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetMeshes = function _onSetMeshes(meshes) {\n\t\t\tthis._cloneMeshes(meshes);\n\t\t};\n\n\t\t_proto._clearSkinInstances = function _clearSkinInstances() {\n\t\t\tfor (var i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\tthis._meshInstances[i].skinInstance = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._cloneSkinInstances = function _cloneSkinInstances() {\n\t\t\tif (this._meshInstances.length && this._rootBone.entity instanceof GraphNode) {\n\t\t\t\tvar j, skin, skinInst;\n\t\t\t\tvar skins = new Map();\n\n\t\t\t\tfor (var i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\t\tvar meshInstance = this._meshInstances[i];\n\t\t\t\t\tvar mesh = meshInstance.mesh;\n\n\t\t\t\t\tif (mesh.skin && !mesh.skinInstance) {\n\t\t\t\t\t\tskin = mesh.skin;\n\t\t\t\t\t\tskinInst = skins.get(skin);\n\n\t\t\t\t\t\tif (!skinInst) {\n\t\t\t\t\t\t\tskinInst = new SkinInstance(skin);\n\t\t\t\t\t\t\tskins.set(skin, skinInst);\n\t\t\t\t\t\t\tvar bones = [];\n\n\t\t\t\t\t\t\tfor (j = 0; j < skin.boneNames.length; j++) {\n\t\t\t\t\t\t\t\tvar boneName = skin.boneNames[j];\n\n\t\t\t\t\t\t\t\tvar bone = this._rootBone.entity.findByName(boneName);\n\n\t\t\t\t\t\t\t\tif (!bone) {\n\t\t\t\t\t\t\t\t\tconsole.error(\"Failed to find bone [\" + boneName + \"] in the entity hierarchy, RenderComponent on \" + this.entity.name + \", rootBone: \" + this._rootBone.entity.name);\n\t\t\t\t\t\t\t\t\tbone = this.entity;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbones.push(bone);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tskinInst.bones = bones;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmeshInstance.skinInstance = skinInst;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._cloneMeshes = function _cloneMeshes(meshes) {\n\t\t\tif (meshes && meshes.length) {\n\t\t\t\tvar meshInstances = [];\n\n\t\t\t\tfor (var i = 0; i < meshes.length; i++) {\n\t\t\t\t\tvar mesh = meshes[i];\n\t\t\t\t\tvar material = this._materialReferences[i] && this._materialReferences[i].asset && this._materialReferences[i].asset.resource;\n\t\t\t\t\tvar meshInst = new MeshInstance(this.entity, mesh, material || this.system.defaultMaterial);\n\t\t\t\t\tmeshInstances.push(meshInst);\n\n\t\t\t\t\tif (mesh.morph) {\n\t\t\t\t\t\tmeshInst.morphInstance = new MorphInstance(mesh.morph);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.meshInstances = meshInstances;\n\n\t\t\t\tthis._cloneSkinInstances();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRenderAssetUnload = function _onRenderAssetUnload() {\n\t\t\tif (this._type === 'asset') {\n\t\t\t\tthis.destroyMeshInstances();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRenderAssetRemove = function _onRenderAssetRemove() {\n\t\t\tif (this._assetReference.asset && this._assetReference.asset.resource) {\n\t\t\t\tthis._assetReference.asset.resource.off('set:meshes', this._onSetMeshes, this);\n\t\t\t}\n\n\t\t\tthis._onRenderAssetUnload();\n\t\t};\n\n\t\t_proto._onMaterialAdded = function _onMaterialAdded(index, component, asset) {\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onMaterialLoad(index, component, asset);\n\t\t\t} else {\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMaterialLoad = function _onMaterialLoad(index, component, asset) {\n\t\t\tif (this._meshInstances[index]) {\n\t\t\t\tthis._meshInstances[index].material = asset.resource;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMaterialRemove = function _onMaterialRemove(index, component, asset) {\n\t\t\tif (this._meshInstances[index]) {\n\t\t\t\tthis._meshInstances[index].material = this.system.defaultMaterial;\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMaterialUnload = function _onMaterialUnload(index, component, asset) {\n\t\t\tif (this._meshInstances[index]) {\n\t\t\t\tthis._meshInstances[index].material = this.system.defaultMaterial;\n\t\t\t}\n\t\t};\n\n\t\t_proto.generateWireframe = function generateWireframe() {\n\t\t\tvar i,\n\t\t\t\t\tmesh,\n\t\t\t\t\tmeshes = [];\n\n\t\t\tfor (i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\tmesh = this._meshInstances[i].mesh;\n\n\t\t\t\tif (meshes.indexOf(mesh) === -1) {\n\t\t\t\t\tmeshes.push(mesh);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < meshes.length; ++i) {\n\t\t\t\tmesh = meshes[i];\n\n\t\t\t\tif (!mesh.primitive[RENDERSTYLE_WIREFRAME]) {\n\t\t\t\t\tmesh.generateWireframe();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(RenderComponent, [{\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._aabb;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._aabb = value;\n\t\t\t\tvar mi = this._meshInstances;\n\n\t\t\t\tif (mi) {\n\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\tmi[i].setOverrideAabb(this._aabb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._type !== value) {\n\t\t\t\t\tthis._area = null;\n\t\t\t\t\tthis._type = value;\n\t\t\t\t\tthis.destroyMeshInstances();\n\n\t\t\t\t\tif (value !== 'asset') {\n\t\t\t\t\t\tvar material = this._material;\n\n\t\t\t\t\t\tif (!material || material === this.system.defaultMaterial) {\n\t\t\t\t\t\t\tmaterial = this._materialReferences[0] && this._materialReferences[0].asset && this._materialReferences[0].asset.resource;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar primData = getShapePrimitive(this.system.app.graphicsDevice, value);\n\t\t\t\t\t\tthis._area = primData.area;\n\t\t\t\t\t\tthis.meshInstances = [new MeshInstance(this.entity, primData.mesh, material || this.system.defaultMaterial)];\n\t\t\t\t\t\tif (this.system._inTools) this.generateWireframe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"meshInstances\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._meshInstances;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.destroyMeshInstances();\n\t\t\t\tthis._meshInstances = value;\n\n\t\t\t\tif (this._meshInstances) {\n\t\t\t\t\tvar mi = this._meshInstances;\n\n\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\tmi[i].castShadow = this._castShadows;\n\t\t\t\t\t\tmi[i].receiveShadow = this._receiveShadows;\n\t\t\t\t\t\tmi[i].isStatic = this._isStatic;\n\t\t\t\t\t\tmi[i].setLightmapped(this._lightmapped);\n\t\t\t\t\t\tmi[i].setOverrideAabb(this._aabb);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis.addToLayers();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lightmapped\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lightmapped;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value !== this._lightmapped) {\n\t\t\t\t\tthis._lightmapped = value;\n\t\t\t\t\tvar mi = this._meshInstances;\n\n\t\t\t\t\tif (mi) {\n\t\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\t\tmi[i].setLightmapped(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"castShadows\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._castShadows;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._castShadows !== value) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\t\tlayer,\n\t\t\t\t\t\t\tmi = this._meshInstances;\n\n\t\t\t\t\tif (mi) {\n\t\t\t\t\t\tvar layers = this.layers;\n\t\t\t\t\t\tvar scene = this.system.app.scene;\n\n\t\t\t\t\t\tif (this._castShadows && !value) {\n\t\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\t\tlayer = scene.layers.getLayerById(this.layers[i]);\n\n\t\t\t\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t\t\t\tlayer.removeShadowCasters(mi);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0; i < mi.length; i++) {\n\t\t\t\t\t\t\tmi[i].castShadow = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this._castShadows && value) {\n\t\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\t\tlayer = scene.layers.getLayerById(layers[i]);\n\n\t\t\t\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t\t\t\tlayer.addShadowCasters(mi);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._castShadows = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"receiveShadows\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._receiveShadows;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._receiveShadows !== value) {\n\t\t\t\t\tthis._receiveShadows = value;\n\t\t\t\t\tvar mi = this._meshInstances;\n\n\t\t\t\t\tif (mi) {\n\t\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\t\tmi[i].receiveShadow = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"castShadowsLightmap\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._castShadowsLightmap;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._castShadowsLightmap = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lightmapSizeMultiplier\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._lightmapSizeMultiplier;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._lightmapSizeMultiplier = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isStatic\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._isStatic;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._isStatic !== value) {\n\t\t\t\t\tthis._isStatic = value;\n\t\t\t\t\tvar mi = this._meshInstances;\n\n\t\t\t\t\tif (mi) {\n\t\t\t\t\t\tfor (var i = 0; i < mi.length; i++) {\n\t\t\t\t\t\t\tmi[i].isStatic = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i,\n\t\t\t\t\t\tlayer,\n\t\t\t\t\t\tlayers = this.system.app.scene.layers;\n\n\t\t\t\tif (this._meshInstances) {\n\t\t\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\n\t\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t\tlayer.removeMeshInstances(this._meshInstances);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._layers.length = 0;\n\n\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\tthis._layers[i] = value[i];\n\t\t\t\t}\n\n\t\t\t\tif (!this.enabled || !this.entity.enabled || !this._meshInstances) return;\n\n\t\t\t\tfor (i = 0; i < this._layers.length; i++) {\n\t\t\t\t\tlayer = layers.getLayerById(this._layers[i]);\n\n\t\t\t\t\tif (layer) {\n\t\t\t\t\t\tlayer.addMeshInstances(this._meshInstances);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"batchGroupId\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._batchGroupId;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._batchGroupId !== value) {\n\t\t\t\t\tvar batcher = this.system.app.batcher;\n\n\t\t\t\t\tif (this.entity.enabled && this._batchGroupId >= 0) {\n\t\t\t\t\t\tbatcher.remove(BatchGroup.RENDER, this.batchGroupId, this.entity);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.entity.enabled && value >= 0) {\n\t\t\t\t\t\tbatcher.insert(BatchGroup.RENDER, value, this.entity);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value < 0 && this._batchGroupId >= 0 && this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis.addToLayers();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._batchGroupId = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"material\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._material;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._material !== value) {\n\t\t\t\t\tthis._material = value;\n\n\t\t\t\t\tif (this._meshInstances && this._type !== 'asset') {\n\t\t\t\t\t\tfor (var i = 0; i < this._meshInstances.length; i++) {\n\t\t\t\t\t\t\tthis._meshInstances[i].material = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"materialAssets\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._materialReferences.map(function (ref) {\n\t\t\t\t\treturn ref.id;\n\t\t\t\t});\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar i;\n\t\t\t\tvalue = value || [];\n\n\t\t\t\tif (this._materialReferences.length > value.length) {\n\t\t\t\t\tfor (i = value.length; i < this._materialReferences.length; i++) {\n\t\t\t\t\t\tthis._materialReferences[i].id = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._materialReferences.length = value.length;\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\tif (!this._materialReferences[i]) {\n\t\t\t\t\t\tthis._materialReferences.push(new AssetReference(i, this, this.system.app.assets, {\n\t\t\t\t\t\t\tadd: this._onMaterialAdded,\n\t\t\t\t\t\t\tload: this._onMaterialLoad,\n\t\t\t\t\t\t\tremove: this._onMaterialRemove,\n\t\t\t\t\t\t\tunload: this._onMaterialUnload\n\t\t\t\t\t\t}, this));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value[i]) {\n\t\t\t\t\t\tvar id = value[i] instanceof Asset ? value[i].id : value[i];\n\n\t\t\t\t\t\tif (this._materialReferences[i].id !== id) {\n\t\t\t\t\t\t\tthis._materialReferences[i].id = id;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._materialReferences[i].asset) {\n\t\t\t\t\t\t\tthis._onMaterialAdded(i, this, this._materialReferences[i].asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._materialReferences[i].id = null;\n\n\t\t\t\t\t\tif (this._meshInstances[i]) {\n\t\t\t\t\t\t\tthis._meshInstances[i].material = this.system.defaultMaterial;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"asset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._assetReference.id;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar id = value instanceof Asset ? value.id : value;\n\t\t\t\tif (this._assetReference.id === id) return;\n\n\t\t\t\tif (this._assetReference.asset && this._assetReference.asset.resource) {\n\t\t\t\t\tthis._onRenderAssetRemove();\n\t\t\t\t}\n\n\t\t\t\tthis._assetReference.id = id;\n\n\t\t\t\tif (this._assetReference.asset) {\n\t\t\t\t\tthis._onRenderAssetAdded();\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn RenderComponent;\n\t}(Component);\n\n\tvar RenderComponentData = function RenderComponentData() {\n\t\tthis.enabled = true;\n\t\tthis.rootBone = null;\n\t};\n\n\tvar _schema$b = [{\n\t\tname: 'rootBone',\n\t\ttype: 'entity'\n\t}, 'enabled'];\n\tvar _properties = ['material', 'asset', 'materialAssets', 'castShadows', 'receiveShadows', 'castShadowsLightmap', 'lightmapped', 'lightmapSizeMultiplier', 'type', 'layers', 'isStatic', 'batchGroupId'];\n\n\tvar RenderComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(RenderComponentSystem, _ComponentSystem);\n\n\t\tfunction RenderComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'render';\n\t\t\t_this.ComponentType = RenderComponent;\n\t\t\t_this.DataType = RenderComponentData;\n\t\t\t_this.schema = _schema$b;\n\t\t\t_this.defaultMaterial = app.scene.defaultMaterial;\n\n\t\t\t_this.on('beforeremove', _this.onRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = RenderComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, _data, properties) {\n\t\t\tif (_data.batchGroupId === null || _data.batchGroupId === undefined) {\n\t\t\t\t_data.batchGroupId = -1;\n\t\t\t}\n\n\t\t\tif (_data.layers && _data.layers.length) {\n\t\t\t\t_data.layers = _data.layers.slice(0);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < _properties.length; i++) {\n\t\t\t\tif (_data.hasOwnProperty(_properties[i])) {\n\t\t\t\t\tcomponent[_properties[i]] = _data[_properties[i]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, _data, _schema$b);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar i;\n\t\t\tvar data = {};\n\n\t\t\tfor (i = 0; i < _properties.length; i++) {\n\t\t\t\tdata[_properties[i]] = entity.render[_properties[i]];\n\t\t\t}\n\n\t\t\tvar component = this.addComponent(clone, data);\n\n\t\t\tif (entity.render) {\n\t\t\t\tvar meshInstances = entity.render.meshInstances;\n\t\t\t\tvar meshInstancesClone = component.meshInstances;\n\n\t\t\t\tfor (i = 0; i < meshInstances.length && i < meshInstancesClone.length; i++) {\n\t\t\t\t\tmeshInstancesClone[i].mask = meshInstances[i].mask;\n\t\t\t\t\tmeshInstancesClone[i].material = meshInstances[i].material;\n\t\t\t\t\tmeshInstancesClone[i].layer = meshInstances[i].layer;\n\t\t\t\t\tmeshInstancesClone[i].receiveShadow = meshInstances[i].receiveShadow;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemove = function onRemove(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn RenderComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(RenderComponent.prototype, _schema$b);\n\n\tvar SIMPLE_PROPERTIES = ['emitterExtents', 'emitterRadius', 'emitterExtentsInner', 'emitterRadiusInner', 'loop', 'initialVelocity', 'animSpeed', 'normalMap', 'particleNormal'];\n\tvar COMPLEX_PROPERTIES = ['numParticles', 'lifetime', 'rate', 'rate2', 'startAngle', 'startAngle2', 'lighting', 'halfLambert', 'intensity', 'wrap', 'wrapBounds', 'depthWrite', 'noFog', 'sort', 'stretch', 'alignToMotion', 'preWarm', 'emitterShape', 'animTilesX', 'animTilesY', 'animStartFrame', 'animNumFrames', 'animNumAnimations', 'animIndex', 'randomizeAnimIndex', 'animLoop', 'colorMap', 'localSpace', 'screenSpace', 'orientation'];\n\tvar GRAPH_PROPERTIES = ['scaleGraph', 'scaleGraph2', 'colorGraph', 'colorGraph2', 'alphaGraph', 'alphaGraph2', 'velocityGraph', 'velocityGraph2', 'localVelocityGraph', 'localVelocityGraph2', 'rotationSpeedGraph', 'rotationSpeedGraph2', 'radialSpeedGraph', 'radialSpeedGraph2'];\n\tvar ASSET_PROPERTIES = ['colorMapAsset', 'normalMapAsset', 'meshAsset'];\n\tvar depthLayer$1;\n\n\tvar ParticleSystemComponent = function (_Component) {\n\t\t_inheritsLoose(ParticleSystemComponent, _Component);\n\n\t\tfunction ParticleSystemComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\n\t\t\t_this.on(\"set_colorMapAsset\", _this.onSetColorMapAsset, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_normalMapAsset\", _this.onSetNormalMapAsset, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_meshAsset\", _this.onSetMeshAsset, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_mesh\", _this.onSetMesh, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_loop\", _this.onSetLoop, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_blendType\", _this.onSetBlendType, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_depthSoftening\", _this.onSetDepthSoftening, _assertThisInitialized(_this));\n\n\t\t\t_this.on(\"set_layers\", _this.onSetLayers, _assertThisInitialized(_this));\n\n\t\t\tSIMPLE_PROPERTIES.forEach(function (prop) {\n\t\t\t\tthis.on('set_' + prop, this.onSetSimpleProperty, this);\n\t\t\t}.bind(_assertThisInitialized(_this)));\n\t\t\tCOMPLEX_PROPERTIES.forEach(function (prop) {\n\t\t\t\tthis.on('set_' + prop, this.onSetComplexProperty, this);\n\t\t\t}.bind(_assertThisInitialized(_this)));\n\t\t\tGRAPH_PROPERTIES.forEach(function (prop) {\n\t\t\t\tthis.on('set_' + prop, this.onSetGraphProperty, this);\n\t\t\t}.bind(_assertThisInitialized(_this)));\n\t\t\t_this._requestedDepth = false;\n\t\t\t_this._drawOrder = 0;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ParticleSystemComponent.prototype;\n\n\t\t_proto.addModelToLayers = function addModelToLayers() {\n\t\t\tif (!this.data.model) return;\n\t\t\tvar layer;\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addMeshInstances(this.data.model.meshInstances);\n\t\t\t\tthis.emitter._layer = layer;\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeModelFromLayers = function removeModelFromLayers(model) {\n\t\t\tif (!this.data.model) return;\n\t\t\tvar layer;\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeMeshInstances(this.data.model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetLayers = function onSetLayers(name, oldValue, newValue) {\n\t\t\tif (!this.data.model) return;\n\t\t\tvar i, layer;\n\n\t\t\tfor (i = 0; i < oldValue.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(oldValue[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeMeshInstances(this.data.model.meshInstances);\n\t\t\t}\n\n\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\n\t\t\tfor (i = 0; i < newValue.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(newValue[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.addMeshInstances(this.data.model.meshInstances);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onLayersChanged = function onLayersChanged(oldComp, newComp) {\n\t\t\tthis.addModelToLayers();\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\t\t};\n\n\t\t_proto.onLayerAdded = function onLayerAdded(layer) {\n\t\t\tif (!this.data.model) return;\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.addMeshInstances(this.data.model.meshInstances);\n\t\t};\n\n\t\t_proto.onLayerRemoved = function onLayerRemoved(layer) {\n\t\t\tif (!this.data.model) return;\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeMeshInstances(this.data.model.meshInstances);\n\t\t};\n\n\t\t_proto._bindColorMapAsset = function _bindColorMapAsset(asset) {\n\t\t\tasset.on('load', this._onColorMapAssetLoad, this);\n\t\t\tasset.on('unload', this._onColorMapAssetUnload, this);\n\t\t\tasset.on('remove', this._onColorMapAssetRemove, this);\n\t\t\tasset.on('change', this._onColorMapAssetChange, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onColorMapAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindColorMapAsset = function _unbindColorMapAsset(asset) {\n\t\t\tasset.off('load', this._onColorMapAssetLoad, this);\n\t\t\tasset.off('unload', this._onColorMapAssetUnload, this);\n\t\t\tasset.off('remove', this._onColorMapAssetRemove, this);\n\t\t\tasset.off('change', this._onColorMapAssetChange, this);\n\t\t};\n\n\t\t_proto._onColorMapAssetLoad = function _onColorMapAssetLoad(asset) {\n\t\t\tthis.colorMap = asset.resource;\n\t\t};\n\n\t\t_proto._onColorMapAssetUnload = function _onColorMapAssetUnload(asset) {\n\t\t\tthis.colorMap = null;\n\t\t};\n\n\t\t_proto._onColorMapAssetRemove = function _onColorMapAssetRemove(asset) {\n\t\t\tthis._onColorMapAssetUnload(asset);\n\t\t};\n\n\t\t_proto._onColorMapAssetChange = function _onColorMapAssetChange(asset) {};\n\n\t\t_proto.onSetColorMapAsset = function onSetColorMapAsset(name, oldValue, newValue) {\n\t\t\tvar self = this;\n\t\t\tvar asset;\n\t\t\tvar assets = this.system.app.assets;\n\n\t\t\tif (oldValue) {\n\t\t\t\tasset = assets.get(oldValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tthis._unbindColorMapAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newValue) {\n\t\t\t\tif (newValue instanceof Asset) {\n\t\t\t\t\tthis.data.colorMapAsset = newValue.id;\n\t\t\t\t\tnewValue = newValue.id;\n\t\t\t\t}\n\n\t\t\t\tasset = assets.get(newValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tself._bindColorMapAsset(asset);\n\t\t\t\t} else {\n\t\t\t\t\tassets.once(\"add:\" + newValue, function (asset) {\n\t\t\t\t\t\tself._bindColorMapAsset(asset);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.colorMap = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindNormalMapAsset = function _bindNormalMapAsset(asset) {\n\t\t\tasset.on('load', this._onNormalMapAssetLoad, this);\n\t\t\tasset.on('unload', this._onNormalMapAssetUnload, this);\n\t\t\tasset.on('remove', this._onNormalMapAssetRemove, this);\n\t\t\tasset.on('change', this._onNormalMapAssetChange, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onNormalMapAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindNormalMapAsset = function _unbindNormalMapAsset(asset) {\n\t\t\tasset.off('load', this._onNormalMapAssetLoad, this);\n\t\t\tasset.off('unload', this._onNormalMapAssetUnload, this);\n\t\t\tasset.off('remove', this._onNormalMapAssetRemove, this);\n\t\t\tasset.off('change', this._onNormalMapAssetChange, this);\n\t\t};\n\n\t\t_proto._onNormalMapAssetLoad = function _onNormalMapAssetLoad(asset) {\n\t\t\tthis.normalMap = asset.resource;\n\t\t};\n\n\t\t_proto._onNormalMapAssetUnload = function _onNormalMapAssetUnload(asset) {\n\t\t\tthis.normalMap = null;\n\t\t};\n\n\t\t_proto._onNormalMapAssetRemove = function _onNormalMapAssetRemove(asset) {\n\t\t\tthis._onNormalMapAssetUnload(asset);\n\t\t};\n\n\t\t_proto._onNormalMapAssetChange = function _onNormalMapAssetChange(asset) {};\n\n\t\t_proto.onSetNormalMapAsset = function onSetNormalMapAsset(name, oldValue, newValue) {\n\t\t\tvar self = this;\n\t\t\tvar asset;\n\t\t\tvar assets = this.system.app.assets;\n\n\t\t\tif (oldValue) {\n\t\t\t\tasset = assets.get(oldValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tthis._unbindNormalMapAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newValue) {\n\t\t\t\tif (newValue instanceof Asset) {\n\t\t\t\t\tthis.data.normalMapAsset = newValue.id;\n\t\t\t\t\tnewValue = newValue.id;\n\t\t\t\t}\n\n\t\t\t\tasset = assets.get(newValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tself._bindNormalMapAsset(asset);\n\t\t\t\t} else {\n\t\t\t\t\tassets.once(\"add:\" + newValue, function (asset) {\n\t\t\t\t\t\tself._bindNormalMapAsset(asset);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.normalMap = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindMeshAsset = function _bindMeshAsset(asset) {\n\t\t\tasset.on('load', this._onMeshAssetLoad, this);\n\t\t\tasset.on('unload', this._onMeshAssetUnload, this);\n\t\t\tasset.on('remove', this._onMeshAssetRemove, this);\n\t\t\tasset.on('change', this._onMeshAssetChange, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onMeshAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this.enabled || !this.entity.enabled) return;\n\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindMeshAsset = function _unbindMeshAsset(asset) {\n\t\t\tasset.off('load', this._onMeshAssetLoad, this);\n\t\t\tasset.off('unload', this._onMeshAssetUnload, this);\n\t\t\tasset.off('remove', this._onMeshAssetRemove, this);\n\t\t\tasset.off('change', this._onMeshAssetChange, this);\n\t\t};\n\n\t\t_proto._onMeshAssetLoad = function _onMeshAssetLoad(asset) {\n\t\t\tthis._onMeshChanged(asset.resource);\n\t\t};\n\n\t\t_proto._onMeshAssetUnload = function _onMeshAssetUnload(asset) {\n\t\t\tthis.mesh = null;\n\t\t};\n\n\t\t_proto._onMeshAssetRemove = function _onMeshAssetRemove(asset) {\n\t\t\tthis._onMeshAssetUnload(asset);\n\t\t};\n\n\t\t_proto._onMeshAssetChange = function _onMeshAssetChange(asset) {};\n\n\t\t_proto.onSetMeshAsset = function onSetMeshAsset(name, oldValue, newValue) {\n\t\t\tvar asset;\n\t\t\tvar assets = this.system.app.assets;\n\n\t\t\tif (oldValue) {\n\t\t\t\tasset = assets.get(oldValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tthis._unbindMeshAsset(asset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newValue) {\n\t\t\t\tif (newValue instanceof Asset) {\n\t\t\t\t\tthis.data.meshAsset = newValue.id;\n\t\t\t\t\tnewValue = newValue.id;\n\t\t\t\t}\n\n\t\t\t\tasset = assets.get(newValue);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tthis._bindMeshAsset(asset);\n\n\t\t\t\t\tif (asset.resource) {\n\t\t\t\t\t\tthis._onMeshChanged(asset.resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassets.load(asset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._onMeshChanged(null);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetMesh = function onSetMesh(name, oldValue, newValue) {\n\t\t\tif (!newValue || newValue instanceof Asset || typeof newValue === 'number') {\n\t\t\t\tthis.meshAsset = newValue;\n\t\t\t} else {\n\t\t\t\tthis._onMeshChanged(newValue);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMeshChanged = function _onMeshChanged(mesh) {\n\t\t\tif (mesh && !(mesh instanceof Mesh)) {\n\t\t\t\tif (mesh.meshInstances[0]) {\n\t\t\t\t\tmesh = mesh.meshInstances[0].mesh;\n\t\t\t\t} else {\n\t\t\t\t\tmesh = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.data.mesh = mesh;\n\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.mesh = mesh;\n\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t\tthis.rebuild();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetLoop = function onSetLoop(name, oldValue, newValue) {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter[name] = newValue;\n\t\t\t\tthis.emitter.resetTime();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetBlendType = function onSetBlendType(name, oldValue, newValue) {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter[name] = newValue;\n\t\t\t\tthis.emitter.material.blendType = newValue;\n\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t\tthis.rebuild();\n\t\t\t}\n\t\t};\n\n\t\t_proto._requestDepth = function _requestDepth() {\n\t\t\tif (this._requestedDepth) return;\n\t\t\tif (!depthLayer$1) depthLayer$1 = this.system.app.scene.layers.getLayerById(LAYERID_DEPTH);\n\n\t\t\tif (depthLayer$1) {\n\t\t\t\tdepthLayer$1.incrementCounter();\n\t\t\t\tthis._requestedDepth = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto._releaseDepth = function _releaseDepth() {\n\t\t\tif (!this._requestedDepth) return;\n\n\t\t\tif (depthLayer$1) {\n\t\t\t\tdepthLayer$1.decrementCounter();\n\t\t\t\tthis._requestedDepth = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetDepthSoftening = function onSetDepthSoftening(name, oldValue, newValue) {\n\t\t\tif (oldValue !== newValue) {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tif (this.enabled && this.entity.enabled) this._requestDepth();\n\t\t\t\t\tif (this.emitter) this.emitter[name] = newValue;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.enabled && this.entity.enabled) this._releaseDepth();\n\t\t\t\t\tif (this.emitter) this.emitter[name] = newValue;\n\t\t\t\t}\n\n\t\t\t\tif (this.emitter) {\n\t\t\t\t\tthis.reset();\n\t\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t\t\tthis.rebuild();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetSimpleProperty = function onSetSimpleProperty(name, oldValue, newValue) {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter[name] = newValue;\n\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetComplexProperty = function onSetComplexProperty(name, oldValue, newValue) {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter[name] = newValue;\n\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t\tthis.rebuild();\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetGraphProperty = function onSetGraphProperty(name, oldValue, newValue) {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter[name] = newValue;\n\t\t\t\tthis.emitter.rebuildGraphs();\n\t\t\t\tthis.emitter.resetMaterial();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar data = this.data;\n\n\t\t\tfor (var i = 0, len = ASSET_PROPERTIES.length; i < len; i++) {\n\t\t\t\tvar asset = data[ASSET_PROPERTIES[i]];\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tif (!(asset instanceof Asset)) {\n\t\t\t\t\t\tvar id = parseInt(asset, 10);\n\n\t\t\t\t\t\tif (id >= 0) {\n\t\t\t\t\t\t\tasset = this.system.app.assets.get(asset);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (asset && !asset.resource) {\n\t\t\t\t\t\tthis.system.app.assets.load(asset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.emitter) {\n\t\t\t\tvar mesh = data.mesh;\n\t\t\t\tif (!(mesh instanceof Mesh)) mesh = null;\n\t\t\t\tthis.emitter = new ParticleEmitter(this.system.app.graphicsDevice, {\n\t\t\t\t\tnumParticles: data.numParticles,\n\t\t\t\t\temitterExtents: data.emitterExtents,\n\t\t\t\t\temitterExtentsInner: data.emitterExtentsInner,\n\t\t\t\t\temitterRadius: data.emitterRadius,\n\t\t\t\t\temitterRadiusInner: data.emitterRadiusInner,\n\t\t\t\t\temitterShape: data.emitterShape,\n\t\t\t\t\tinitialVelocity: data.initialVelocity,\n\t\t\t\t\twrap: data.wrap,\n\t\t\t\t\tlocalSpace: data.localSpace,\n\t\t\t\t\tscreenSpace: data.screenSpace,\n\t\t\t\t\twrapBounds: data.wrapBounds,\n\t\t\t\t\tlifetime: data.lifetime,\n\t\t\t\t\trate: data.rate,\n\t\t\t\t\trate2: data.rate2,\n\t\t\t\t\torientation: data.orientation,\n\t\t\t\t\tparticleNormal: data.particleNormal,\n\t\t\t\t\tanimTilesX: data.animTilesX,\n\t\t\t\t\tanimTilesY: data.animTilesY,\n\t\t\t\t\tanimStartFrame: data.animStartFrame,\n\t\t\t\t\tanimNumFrames: data.animNumFrames,\n\t\t\t\t\tanimNumAnimations: data.animNumAnimations,\n\t\t\t\t\tanimIndex: data.animIndex,\n\t\t\t\t\trandomizeAnimIndex: data.randomizeAnimIndex,\n\t\t\t\t\tanimSpeed: data.animSpeed,\n\t\t\t\t\tanimLoop: data.animLoop,\n\t\t\t\t\tstartAngle: data.startAngle,\n\t\t\t\t\tstartAngle2: data.startAngle2,\n\t\t\t\t\tscaleGraph: data.scaleGraph,\n\t\t\t\t\tscaleGraph2: data.scaleGraph2,\n\t\t\t\t\tcolorGraph: data.colorGraph,\n\t\t\t\t\tcolorGraph2: data.colorGraph2,\n\t\t\t\t\talphaGraph: data.alphaGraph,\n\t\t\t\t\talphaGraph2: data.alphaGraph2,\n\t\t\t\t\tlocalVelocityGraph: data.localVelocityGraph,\n\t\t\t\t\tlocalVelocityGraph2: data.localVelocityGraph2,\n\t\t\t\t\tvelocityGraph: data.velocityGraph,\n\t\t\t\t\tvelocityGraph2: data.velocityGraph2,\n\t\t\t\t\trotationSpeedGraph: data.rotationSpeedGraph,\n\t\t\t\t\trotationSpeedGraph2: data.rotationSpeedGraph2,\n\t\t\t\t\tradialSpeedGraph: data.radialSpeedGraph,\n\t\t\t\t\tradialSpeedGraph2: data.radialSpeedGraph2,\n\t\t\t\t\tcolorMap: data.colorMap,\n\t\t\t\t\tnormalMap: data.normalMap,\n\t\t\t\t\tloop: data.loop,\n\t\t\t\t\tpreWarm: data.preWarm,\n\t\t\t\t\tsort: data.sort,\n\t\t\t\t\tstretch: data.stretch,\n\t\t\t\t\talignToMotion: data.alignToMotion,\n\t\t\t\t\tlighting: data.lighting,\n\t\t\t\t\thalfLambert: data.halfLambert,\n\t\t\t\t\tintensity: data.intensity,\n\t\t\t\t\tdepthSoftening: data.depthSoftening,\n\t\t\t\t\tscene: this.system.app.scene,\n\t\t\t\t\tmesh: mesh,\n\t\t\t\t\tdepthWrite: data.depthWrite,\n\t\t\t\t\tnoFog: data.noFog,\n\t\t\t\t\tnode: this.entity,\n\t\t\t\t\tblendType: data.blendType\n\t\t\t\t});\n\t\t\t\tthis.emitter.meshInstance.node = this.entity;\n\t\t\t\tthis.emitter.drawOrder = this.drawOrder;\n\t\t\t\tthis.psys = new Model();\n\t\t\t\tthis.psys.graph = this.entity;\n\t\t\t\tthis.psys.emitter = this.emitter;\n\t\t\t\tthis.psys.meshInstances = [this.emitter.meshInstance];\n\t\t\t\tdata.model = this.psys;\n\t\t\t\tthis.emitter.psys = this.psys;\n\n\t\t\t\tif (!data.autoPlay) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t\tthis.emitter.meshInstance.visible = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.model && this.emitter.colorMap) {\n\t\t\t\tthis.addModelToLayers();\n\t\t\t}\n\n\t\t\tthis.system.app.scene.on(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.on(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.on(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this.enabled && this.entity.enabled && data.depthSoftening) {\n\t\t\t\tthis._requestDepth();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.system.app.scene.off(\"set:layers\", this.onLayersChanged, this);\n\n\t\t\tif (this.system.app.scene.layers) {\n\t\t\t\tthis.system.app.scene.layers.off(\"add\", this.onLayerAdded, this);\n\t\t\t\tthis.system.app.scene.layers.off(\"remove\", this.onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tif (this.data.model) {\n\t\t\t\tthis.removeModelFromLayers();\n\t\t\t\tif (this.data.depthSoftening) this._releaseDepth();\n\t\t\t}\n\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.camera = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove() {\n\t\t\tif (this.enabled) {\n\t\t\t\tthis.enabled = false;\n\t\t\t}\n\n\t\t\tvar data = this.data;\n\n\t\t\tif (data.model) {\n\t\t\t\tthis.entity.removeChild(data.model.getGraph());\n\t\t\t\tdata.model.destroy();\n\t\t\t\tdata.model = null;\n\t\t\t}\n\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.destroy();\n\t\t\t\tthis.emitter = null;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < ASSET_PROPERTIES.length; i++) {\n\t\t\t\tvar prop = ASSET_PROPERTIES[i];\n\n\t\t\t\tif (data[prop]) {\n\t\t\t\t\tthis[prop] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.reset();\n\t\t\t}\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.loop = false;\n\t\t\t\tthis.emitter.resetTime();\n\t\t\t\tthis.emitter.addTime(0, true);\n\t\t\t}\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tthis.data.paused = true;\n\t\t};\n\n\t\t_proto.unpause = function unpause() {\n\t\t\tthis.data.paused = false;\n\t\t};\n\n\t\t_proto.play = function play() {\n\t\t\tthis.data.paused = false;\n\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.meshInstance.visible = true;\n\t\t\t\tthis.emitter.loop = this.data.loop;\n\t\t\t\tthis.emitter.resetTime();\n\t\t\t}\n\t\t};\n\n\t\t_proto.isPlaying = function isPlaying() {\n\t\t\tif (this.data.paused) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.emitter && this.emitter.loop) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn Date.now() <= this.emitter.endTime;\n\t\t};\n\n\t\t_proto.rebuild = function rebuild() {\n\t\t\tvar enabled = this.enabled;\n\t\t\tthis.enabled = false;\n\n\t\t\tif (this.emitter) {\n\t\t\t\tthis.emitter.rebuild();\n\t\t\t\tthis.emitter.meshInstance.node = this.entity;\n\t\t\t\tthis.data.model.meshInstances = [this.emitter.meshInstance];\n\t\t\t}\n\n\t\t\tthis.enabled = enabled;\n\t\t};\n\n\t\t_createClass(ParticleSystemComponent, [{\n\t\t\tkey: \"drawOrder\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._drawOrder;\n\t\t\t},\n\t\t\tset: function set(drawOrder) {\n\t\t\t\tthis._drawOrder = drawOrder;\n\n\t\t\t\tif (this.emitter) {\n\t\t\t\t\tthis.emitter.drawOrder = drawOrder;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn ParticleSystemComponent;\n\t}(Component);\n\n\tvar ParticleSystemComponentData = function ParticleSystemComponentData() {\n\t\tthis.numParticles = 1;\n\t\tthis.rate = 1;\n\t\tthis.rate2 = null;\n\t\tthis.startAngle = 0;\n\t\tthis.startAngle2 = null;\n\t\tthis.lifetime = 50;\n\t\tthis.emitterExtents = new Vec3();\n\t\tthis.emitterExtentsInner = new Vec3();\n\t\tthis.emitterRadius = 0;\n\t\tthis.emitterRadiusInner = 0;\n\t\tthis.emitterShape = EMITTERSHAPE_BOX;\n\t\tthis.initialVelocity = 0;\n\t\tthis.wrapBounds = new Vec3();\n\t\tthis.localSpace = false;\n\t\tthis.screenSpace = false;\n\t\tthis.colorMap = null;\n\t\tthis.colorMapAsset = null;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapAsset = null;\n\t\tthis.loop = true;\n\t\tthis.preWarm = false;\n\t\tthis.sort = 0;\n\t\tthis.mode = PARTICLEMODE_GPU;\n\t\tthis.scene = null;\n\t\tthis.lighting = false;\n\t\tthis.halfLambert = false;\n\t\tthis.intensity = 1;\n\t\tthis.stretch = 0.0;\n\t\tthis.alignToMotion = false;\n\t\tthis.depthSoftening = 0;\n\t\tthis.meshAsset = null;\n\t\tthis.mesh = null;\n\t\tthis.depthWrite = false;\n\t\tthis.noFog = false;\n\t\tthis.orientation = PARTICLEORIENTATION_SCREEN;\n\t\tthis.particleNormal = new Vec3(0, 1, 0);\n\t\tthis.animTilesX = 1;\n\t\tthis.animTilesY = 1;\n\t\tthis.animStartFrame = 0;\n\t\tthis.animNumFrames = 1;\n\t\tthis.animNumAnimations = 1;\n\t\tthis.animIndex = 0;\n\t\tthis.randomizeAnimIndex = false;\n\t\tthis.animSpeed = 1;\n\t\tthis.animLoop = true;\n\t\tthis.scaleGraph = null;\n\t\tthis.scaleGraph2 = null;\n\t\tthis.colorGraph = null;\n\t\tthis.colorGraph2 = null;\n\t\tthis.alphaGraph = null;\n\t\tthis.alphaGraph2 = null;\n\t\tthis.localVelocityGraph = null;\n\t\tthis.localVelocityGraph2 = null;\n\t\tthis.velocityGraph = null;\n\t\tthis.velocityGraph2 = null;\n\t\tthis.rotationSpeedGraph = null;\n\t\tthis.rotationSpeedGraph2 = null;\n\t\tthis.radialSpeedGraph = null;\n\t\tthis.radialSpeedGraph2 = null;\n\t\tthis.blendType = BLEND_NORMAL;\n\t\tthis.model = null;\n\t\tthis.enabled = true;\n\t\tthis.paused = false;\n\t\tthis.autoPlay = true;\n\t\tthis.layers = [LAYERID_WORLD];\n\t};\n\n\tvar _schema$c = ['enabled', 'autoPlay', 'numParticles', 'lifetime', 'rate', 'rate2', 'startAngle', 'startAngle2', 'loop', 'preWarm', 'lighting', 'halfLambert', 'intensity', 'depthWrite', 'noFog', 'depthSoftening', 'sort', 'blendType', 'stretch', 'alignToMotion', 'emitterShape', 'emitterExtents', 'emitterExtentsInner', 'emitterRadius', 'emitterRadiusInner', 'initialVelocity', 'wrap', 'wrapBounds', 'localSpace', 'screenSpace', 'colorMapAsset', 'normalMapAsset', 'mesh', 'meshAsset', 'orientation', 'particleNormal', 'localVelocityGraph', 'localVelocityGraph2', 'velocityGraph', 'velocityGraph2', 'rotationSpeedGraph', 'rotationSpeedGraph2', 'radialSpeedGraph', 'radialSpeedGraph2', 'scaleGraph', 'scaleGraph2', 'colorGraph', 'colorGraph2', 'alphaGraph', 'alphaGraph2', 'colorMap', 'normalMap', 'animTilesX', 'animTilesY', 'animStartFrame', 'animNumFrames', 'animNumAnimations', 'animIndex', 'randomizeAnimIndex', 'animSpeed', 'animLoop', 'layers'];\n\n\tvar ParticleSystemComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ParticleSystemComponentSystem, _ComponentSystem);\n\n\t\tfunction ParticleSystemComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'particlesystem';\n\t\t\t_this.ComponentType = ParticleSystemComponent;\n\t\t\t_this.DataType = ParticleSystemComponentData;\n\t\t\t_this.schema = _schema$c;\n\t\t\t_this.propertyTypes = {\n\t\t\t\temitterExtents: 'vec3',\n\t\t\t\temitterExtentsInner: 'vec3',\n\t\t\t\tparticleNormal: 'vec3',\n\t\t\t\twrapBounds: 'vec3',\n\t\t\t\tlocalVelocityGraph: 'curveset',\n\t\t\t\tlocalVelocityGraph2: 'curveset',\n\t\t\t\tvelocityGraph: 'curveset',\n\t\t\t\tvelocityGraph2: 'curveset',\n\t\t\t\tcolorGraph: 'curveset',\n\t\t\t\tcolorGraph2: 'curveset',\n\t\t\t\talphaGraph: 'curve',\n\t\t\t\talphaGraph2: 'curve',\n\t\t\t\trotationSpeedGraph: 'curve',\n\t\t\t\trotationSpeedGraph2: 'curve',\n\t\t\t\tradialSpeedGraph: 'curve',\n\t\t\t\tradialSpeedGraph2: 'curve',\n\t\t\t\tscaleGraph: 'curve',\n\t\t\t\tscaleGraph2: 'curve'\n\t\t\t};\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ParticleSystemComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, _data, properties) {\n\t\t\tvar data = {};\n\t\t\tproperties = [];\n\t\t\tvar types = this.propertyTypes;\n\t\t\tvar t;\n\n\t\t\tif (_data.mesh instanceof Asset || typeof _data.mesh === 'number') {\n\t\t\t\t_data.meshAsset = _data.mesh;\n\t\t\t\tdelete _data.mesh;\n\t\t\t}\n\n\t\t\tfor (var prop in _data) {\n\t\t\t\tif (_data.hasOwnProperty(prop)) {\n\t\t\t\t\tproperties.push(prop);\n\t\t\t\t\tdata[prop] = _data[prop];\n\t\t\t\t}\n\n\t\t\t\tif (types[prop] === 'vec3') {\n\t\t\t\t\tif (Array.isArray(data[prop])) {\n\t\t\t\t\t\tdata[prop] = new Vec3(data[prop][0], data[prop][1], data[prop][2]);\n\t\t\t\t\t}\n\t\t\t\t} else if (types[prop] === 'curve') {\n\t\t\t\t\tif (!(data[prop] instanceof Curve)) {\n\t\t\t\t\t\tt = data[prop].type;\n\t\t\t\t\t\tdata[prop] = new Curve(data[prop].keys);\n\t\t\t\t\t\tdata[prop].type = t;\n\t\t\t\t\t}\n\t\t\t\t} else if (types[prop] === 'curveset') {\n\t\t\t\t\tif (!(data[prop] instanceof CurveSet)) {\n\t\t\t\t\t\tt = data[prop].type;\n\t\t\t\t\t\tdata[prop] = new CurveSet(data[prop].keys);\n\t\t\t\t\t\tdata[prop].type = t;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (data.layers && Array.isArray(data.layers)) {\n\t\t\t\t\tdata.layers = data.layers.slice(0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar source = entity.particlesystem.data;\n\t\t\tvar schema = this.schema;\n\t\t\tvar data = {};\n\n\t\t\tfor (var i = 0, len = schema.length; i < len; i++) {\n\t\t\t\tvar prop = schema[i];\n\t\t\t\tvar sourceProp = source[prop];\n\n\t\t\t\tif (sourceProp instanceof Vec3 || sourceProp instanceof Curve || sourceProp instanceof CurveSet) {\n\t\t\t\t\tsourceProp = sourceProp.clone();\n\t\t\t\t\tdata[prop] = sourceProp;\n\t\t\t\t} else if (prop === \"layers\") {\n\t\t\t\t\tdata.layers = source.layers.slice(0);\n\t\t\t\t} else {\n\t\t\t\t\tif (sourceProp !== null && sourceProp !== undefined) {\n\t\t\t\t\t\tdata[prop] = sourceProp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.addComponent(clone, data);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\t\t\tvar numSteps, i, j, c;\n\t\t\tvar stats = this.app.stats.particles;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components.hasOwnProperty(id)) {\n\t\t\t\t\tc = components[id];\n\t\t\t\t\tvar entity = c.entity;\n\t\t\t\t\tvar data = c.data;\n\n\t\t\t\t\tif (data.enabled && entity.enabled) {\n\t\t\t\t\t\tvar emitter = data.model.emitter;\n\t\t\t\t\t\tif (!emitter.meshInstance.visible) continue;\n\n\t\t\t\t\t\tif (emitter.lighting) {\n\t\t\t\t\t\t\tvar layer, lightCube;\n\t\t\t\t\t\t\tvar layers = data.layers;\n\n\t\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\t\tlayer = this.app.scene.layers.getLayerById(layers[i]);\n\t\t\t\t\t\t\t\tif (!layer) continue;\n\n\t\t\t\t\t\t\t\tif (!layer._lightCube) {\n\t\t\t\t\t\t\t\t\tlayer._lightCube = new Float32Array(6 * 3);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlightCube = layer._lightCube;\n\n\t\t\t\t\t\t\t\tfor (i = 0; i < 6; i++) {\n\t\t\t\t\t\t\t\t\tlightCube[i * 3] = this.app.scene.ambientLight.r;\n\t\t\t\t\t\t\t\t\tlightCube[i * 3 + 1] = this.app.scene.ambientLight.g;\n\t\t\t\t\t\t\t\t\tlightCube[i * 3 + 2] = this.app.scene.ambientLight.b;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar dirs = layer._splitLights[LIGHTTYPE_DIRECTIONAL];\n\n\t\t\t\t\t\t\t\tfor (j = 0; j < dirs.length; j++) {\n\t\t\t\t\t\t\t\t\tfor (c = 0; c < 6; c++) {\n\t\t\t\t\t\t\t\t\t\tvar weight = Math.max(emitter.lightCubeDir[c].dot(dirs[j]._direction), 0) * dirs[j]._intensity;\n\n\t\t\t\t\t\t\t\t\t\tlightCube[c * 3] += dirs[j]._color.r * weight;\n\t\t\t\t\t\t\t\t\t\tlightCube[c * 3 + 1] += dirs[j]._color.g * weight;\n\t\t\t\t\t\t\t\t\t\tlightCube[c * 3 + 2] += dirs[j]._color.b * weight;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\temitter.constantLightCube.setValue(lightCube);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!data.paused) {\n\t\t\t\t\t\t\temitter.simTime += dt;\n\n\t\t\t\t\t\t\tif (emitter.simTime > emitter.fixedTimeStep) {\n\t\t\t\t\t\t\t\tnumSteps = Math.floor(emitter.simTime / emitter.fixedTimeStep);\n\t\t\t\t\t\t\t\temitter.simTime -= numSteps * emitter.fixedTimeStep;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (numSteps) {\n\t\t\t\t\t\t\t\tnumSteps = Math.min(numSteps, emitter.maxSubSteps);\n\n\t\t\t\t\t\t\t\tfor (i = 0; i < numSteps; i++) {\n\t\t\t\t\t\t\t\t\temitter.addTime(emitter.fixedTimeStep, false);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tstats._updatesPerFrame += numSteps;\n\t\t\t\t\t\t\t\tstats._frameTime += emitter._addTimeTime;\n\t\t\t\t\t\t\t\temitter._addTimeTime = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\temitter.finishFrame();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tcomponent.onBeforeRemove();\n\t\t};\n\n\t\treturn ParticleSystemComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ParticleSystemComponent.prototype, _schema$c);\n\n\tvar ObjectPool = function () {\n\t\tfunction ObjectPool(constructorFunc, size) {\n\t\t\tthis._constructor = constructorFunc;\n\t\t\tthis._pool = [];\n\t\t\tthis._count = 0;\n\n\t\t\tthis._resize(size);\n\t\t}\n\n\t\tvar _proto = ObjectPool.prototype;\n\n\t\t_proto._resize = function _resize(size) {\n\t\t\tif (size > this._pool.length) {\n\t\t\t\tfor (var i = this._pool.length; i < size; i++) {\n\t\t\t\t\tthis._pool[i] = new this._constructor();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.allocate = function allocate() {\n\t\t\tif (this._count >= this._pool.length) {\n\t\t\t\tthis._resize(this._pool.length * 2);\n\t\t\t}\n\n\t\t\treturn this._pool[this._count++];\n\t\t};\n\n\t\t_proto.freeAll = function freeAll() {\n\t\t\tthis._count = 0;\n\t\t};\n\n\t\treturn ObjectPool;\n\t}();\n\n\tvar ammoTransform$1;\n\tvar ammoVec1$1, ammoVec2, ammoQuat$1, ammoOrigin;\n\n\tvar RigidBodyComponent = function (_Component) {\n\t\t_inheritsLoose(RigidBodyComponent, _Component);\n\n\t\tfunction RigidBodyComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\n\t\t\tif (typeof Ammo !== 'undefined' && !ammoTransform$1) {\n\t\t\t\tammoTransform$1 = new Ammo.btTransform();\n\t\t\t\tammoVec1$1 = new Ammo.btVector3();\n\t\t\t\tammoVec2 = new Ammo.btVector3();\n\t\t\t\tammoQuat$1 = new Ammo.btQuaternion();\n\t\t\t\tammoOrigin = new Ammo.btVector3(0, 0, 0);\n\t\t\t}\n\n\t\t\t_this.on('set_mass', _this.onSetMass, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_linearDamping', _this.onSetLinearDamping, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_angularDamping', _this.onSetAngularDamping, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_linearFactor', _this.onSetLinearFactor, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_angularFactor', _this.onSetAngularFactor, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_friction', _this.onSetFriction, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_restitution', _this.onSetRestitution, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_type', _this.onSetType, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_group', _this.onSetGroupOrMask, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_mask', _this.onSetGroupOrMask, _assertThisInitialized(_this));\n\n\t\t\t_this.on('set_body', _this.onSetBody, _assertThisInitialized(_this));\n\n\t\t\t_this._linearVelocity = new Vec3(0, 0, 0);\n\t\t\t_this._angularVelocity = new Vec3(0, 0, 0);\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = RigidBodyComponent.prototype;\n\n\t\t_proto.createBody = function createBody() {\n\t\t\tvar entity = this.entity;\n\t\t\tvar shape;\n\n\t\t\tif (entity.collision) {\n\t\t\t\tshape = entity.collision.shape;\n\n\t\t\t\tif (entity.trigger) {\n\t\t\t\t\tentity.trigger.destroy();\n\t\t\t\t\tdelete entity.trigger;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (shape) {\n\t\t\t\tif (this.body) this.system.onRemove(this.entity, this);\n\t\t\t\tvar mass = this.type === BODYTYPE_DYNAMIC ? this.mass : 0;\n\n\t\t\t\tthis._getEntityTransform(ammoTransform$1);\n\n\t\t\t\tvar body = this.system.createBody(mass, shape, ammoTransform$1);\n\t\t\t\tbody.setRestitution(this.restitution);\n\t\t\t\tbody.setFriction(this.friction);\n\t\t\t\tbody.setDamping(this.linearDamping, this.angularDamping);\n\n\t\t\t\tif (this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tvar linearFactor = this.linearFactor;\n\t\t\t\t\tammoVec1$1.setValue(linearFactor.x, linearFactor.y, linearFactor.z);\n\t\t\t\t\tbody.setLinearFactor(ammoVec1$1);\n\t\t\t\t\tvar angularFactor = this.angularFactor;\n\t\t\t\t\tammoVec1$1.setValue(angularFactor.x, angularFactor.y, angularFactor.z);\n\t\t\t\t\tbody.setAngularFactor(ammoVec1$1);\n\t\t\t\t} else if (this.type === BODYTYPE_KINEMATIC) {\n\t\t\t\t\tbody.setCollisionFlags(body.getCollisionFlags() | BODYFLAG_KINEMATIC_OBJECT);\n\t\t\t\t\tbody.setActivationState(BODYSTATE_DISABLE_DEACTIVATION);\n\t\t\t\t}\n\n\t\t\t\tbody.entity = entity;\n\t\t\t\tentity.rigidbody.body = body;\n\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis.enableSimulation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.isActive = function isActive() {\n\t\t\tvar body = this.body;\n\t\t\treturn body ? body.isActive() : false;\n\t\t};\n\n\t\t_proto.activate = function activate() {\n\t\t\tvar body = this.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.activate();\n\t\t\t}\n\t\t};\n\n\t\t_proto.enableSimulation = function enableSimulation() {\n\t\t\tif (this.entity.collision && this.entity.collision.enabled && !this.data.simulationEnabled) {\n\t\t\t\tvar body = this.body;\n\n\t\t\t\tif (body) {\n\t\t\t\t\tthis.system.addBody(body, this.group, this.mask);\n\n\t\t\t\t\tswitch (this.type) {\n\t\t\t\t\t\tcase BODYTYPE_DYNAMIC:\n\t\t\t\t\t\t\tthis.system._dynamic.push(this);\n\n\t\t\t\t\t\t\tbody.forceActivationState(BODYSTATE_ACTIVE_TAG);\n\t\t\t\t\t\t\tthis.syncEntityToBody();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BODYTYPE_KINEMATIC:\n\t\t\t\t\t\t\tthis.system._kinematic.push(this);\n\n\t\t\t\t\t\t\tbody.forceActivationState(BODYSTATE_DISABLE_DEACTIVATION);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BODYTYPE_STATIC:\n\t\t\t\t\t\t\tbody.forceActivationState(BODYSTATE_ACTIVE_TAG);\n\t\t\t\t\t\t\tthis.syncEntityToBody();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.entity.collision.type === 'compound') {\n\t\t\t\t\t\tthis.system._compounds.push(this.entity.collision);\n\t\t\t\t\t}\n\n\t\t\t\t\tbody.activate();\n\t\t\t\t\tthis.data.simulationEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.disableSimulation = function disableSimulation() {\n\t\t\tvar body = this.body;\n\n\t\t\tif (body && this.data.simulationEnabled) {\n\t\t\t\tvar idx;\n\t\t\t\tidx = this.system._compounds.indexOf(this.entity.collision);\n\n\t\t\t\tif (idx > -1) {\n\t\t\t\t\tthis.system._compounds.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tidx = this.system._dynamic.indexOf(this);\n\n\t\t\t\tif (idx > -1) {\n\t\t\t\t\tthis.system._dynamic.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tidx = this.system._kinematic.indexOf(this);\n\n\t\t\t\tif (idx > -1) {\n\t\t\t\t\tthis.system._kinematic.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.system.removeBody(body);\n\t\t\t\tbody.forceActivationState(BODYSTATE_DISABLE_SIMULATION);\n\t\t\t\tthis.data.simulationEnabled = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.applyForce = function applyForce() {\n\t\t\tvar x, y, z;\n\t\t\tvar px, py, pz;\n\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tpx = arguments[1].x;\n\t\t\t\t\tpy = arguments[1].y;\n\t\t\t\t\tpz = arguments[1].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 6:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tpx = arguments[3];\n\t\t\t\t\tpy = arguments[4];\n\t\t\t\t\tpz = arguments[5];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar body = this.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.activate();\n\t\t\t\tammoVec1$1.setValue(x, y, z);\n\n\t\t\t\tif (px !== undefined) {\n\t\t\t\t\tammoVec2.setValue(px, py, pz);\n\t\t\t\t\tbody.applyForce(ammoVec1$1, ammoVec2);\n\t\t\t\t} else {\n\t\t\t\t\tbody.applyForce(ammoVec1$1, ammoOrigin);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.applyTorque = function applyTorque() {\n\t\t\tvar x, y, z;\n\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar body = this.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.activate();\n\t\t\t\tammoVec1$1.setValue(x, y, z);\n\t\t\t\tbody.applyTorque(ammoVec1$1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.applyImpulse = function applyImpulse() {\n\t\t\tvar x, y, z;\n\t\t\tvar px, py, pz;\n\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tpx = arguments[1].x;\n\t\t\t\t\tpy = arguments[1].y;\n\t\t\t\t\tpz = arguments[1].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 6:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tpx = arguments[3];\n\t\t\t\t\tpy = arguments[4];\n\t\t\t\t\tpz = arguments[5];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar body = this.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.activate();\n\t\t\t\tammoVec1$1.setValue(x, y, z);\n\n\t\t\t\tif (px !== undefined) {\n\t\t\t\t\tammoVec2.setValue(px, py, pz);\n\t\t\t\t\tbody.applyImpulse(ammoVec1$1, ammoVec2);\n\t\t\t\t} else {\n\t\t\t\t\tbody.applyImpulse(ammoVec1$1, ammoOrigin);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.applyTorqueImpulse = function applyTorqueImpulse() {\n\t\t\tvar x, y, z;\n\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\tx = arguments[0].x;\n\t\t\t\t\ty = arguments[0].y;\n\t\t\t\t\tz = arguments[0].z;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tx = arguments[0];\n\t\t\t\t\ty = arguments[1];\n\t\t\t\t\tz = arguments[2];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar body = this.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.activate();\n\t\t\t\tammoVec1$1.setValue(x, y, z);\n\t\t\t\tbody.applyTorqueImpulse(ammoVec1$1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.isStatic = function isStatic() {\n\t\t\treturn this.type === BODYTYPE_STATIC;\n\t\t};\n\n\t\t_proto.isStaticOrKinematic = function isStaticOrKinematic() {\n\t\t\treturn this.type === BODYTYPE_STATIC || this.type === BODYTYPE_KINEMATIC;\n\t\t};\n\n\t\t_proto.isKinematic = function isKinematic() {\n\t\t\treturn this.type === BODYTYPE_KINEMATIC;\n\t\t};\n\n\t\t_proto._getEntityTransform = function _getEntityTransform(transform) {\n\t\t\tvar pos = this.entity.getPosition();\n\t\t\tvar rot = this.entity.getRotation();\n\t\t\tammoVec1$1.setValue(pos.x, pos.y, pos.z);\n\t\t\tammoQuat$1.setValue(rot.x, rot.y, rot.z, rot.w);\n\t\t\ttransform.setOrigin(ammoVec1$1);\n\t\t\ttransform.setRotation(ammoQuat$1);\n\t\t};\n\n\t\t_proto.syncEntityToBody = function syncEntityToBody() {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body) {\n\t\t\t\tthis._getEntityTransform(ammoTransform$1);\n\n\t\t\t\tbody.setWorldTransform(ammoTransform$1);\n\n\t\t\t\tif (this.type === BODYTYPE_KINEMATIC) {\n\t\t\t\t\tvar motionState = body.getMotionState();\n\n\t\t\t\t\tif (motionState) {\n\t\t\t\t\t\tmotionState.setWorldTransform(ammoTransform$1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbody.activate();\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateDynamic = function _updateDynamic() {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body.isActive()) {\n\t\t\t\tvar motionState = body.getMotionState();\n\n\t\t\t\tif (motionState) {\n\t\t\t\t\tmotionState.getWorldTransform(ammoTransform$1);\n\t\t\t\t\tvar p = ammoTransform$1.getOrigin();\n\t\t\t\t\tvar q = ammoTransform$1.getRotation();\n\t\t\t\t\tthis.entity.setPosition(p.x(), p.y(), p.z());\n\t\t\t\t\tthis.entity.setRotation(q.x(), q.y(), q.z(), q.w());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateKinematic = function _updateKinematic() {\n\t\t\tvar body = this.data.body;\n\t\t\tvar motionState = body.getMotionState();\n\n\t\t\tif (motionState) {\n\t\t\t\tthis._getEntityTransform(ammoTransform$1);\n\n\t\t\t\tmotionState.setWorldTransform(ammoTransform$1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.teleport = function teleport() {\n\t\t\tif (arguments.length < 3) {\n\t\t\t\tif (arguments[0]) {\n\t\t\t\t\tthis.entity.setPosition(arguments[0]);\n\t\t\t\t}\n\n\t\t\t\tif (arguments[1]) {\n\t\t\t\t\tif (arguments[1] instanceof Quat) {\n\t\t\t\t\t\tthis.entity.setRotation(arguments[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.entity.setEulerAngles(arguments[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length === 6) {\n\t\t\t\t\tthis.entity.setEulerAngles(arguments[3], arguments[4], arguments[5]);\n\t\t\t\t}\n\n\t\t\t\tthis.entity.setPosition(arguments[0], arguments[1], arguments[2]);\n\t\t\t}\n\n\t\t\tthis.syncEntityToBody();\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tif (!this.body) {\n\t\t\t\tthis.createBody();\n\t\t\t}\n\n\t\t\tthis.enableSimulation();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.disableSimulation();\n\t\t};\n\n\t\t_proto.onSetMass = function onSetMass(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\tvar enabled = this.enabled && this.entity.enabled;\n\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.disableSimulation();\n\t\t\t\t}\n\n\t\t\t\tbody.getCollisionShape().calculateLocalInertia(newValue, ammoVec1$1);\n\t\t\t\tbody.setMassProps(newValue, ammoVec1$1);\n\t\t\t\tbody.updateInertiaTensor();\n\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableSimulation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetLinearDamping = function onSetLinearDamping(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.setDamping(newValue, this.data.angularDamping);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAngularDamping = function onSetAngularDamping(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.setDamping(this.data.linearDamping, newValue);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetLinearFactor = function onSetLinearFactor(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\tammoVec1$1.setValue(newValue.x, newValue.y, newValue.z);\n\t\t\t\tbody.setLinearFactor(ammoVec1$1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetAngularFactor = function onSetAngularFactor(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\tammoVec1$1.setValue(newValue.x, newValue.y, newValue.z);\n\t\t\t\tbody.setAngularFactor(ammoVec1$1);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetFriction = function onSetFriction(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.setFriction(newValue);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetRestitution = function onSetRestitution(name, oldValue, newValue) {\n\t\t\tvar body = this.data.body;\n\n\t\t\tif (body) {\n\t\t\t\tbody.setRestitution(newValue);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetType = function onSetType(name, oldValue, newValue) {\n\t\t\tif (newValue !== oldValue) {\n\t\t\t\tthis.disableSimulation();\n\n\t\t\t\tif (newValue === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tthis.data.group = BODYGROUP_DYNAMIC;\n\t\t\t\t\tthis.data.mask = BODYMASK_ALL;\n\t\t\t\t} else if (newValue === BODYTYPE_KINEMATIC) {\n\t\t\t\t\tthis.data.group = BODYGROUP_KINEMATIC;\n\t\t\t\t\tthis.data.mask = BODYMASK_ALL;\n\t\t\t\t} else {\n\t\t\t\t\tthis.data.group = BODYGROUP_STATIC;\n\t\t\t\t\tthis.data.mask = BODYMASK_NOT_STATIC;\n\t\t\t\t}\n\n\t\t\t\tthis.createBody();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetGroupOrMask = function onSetGroupOrMask(name, oldValue, newValue) {\n\t\t\tif (newValue !== oldValue) {\n\t\t\t\tvar isEnabled = this.enabled && this.entity.enabled;\n\n\t\t\t\tif (isEnabled) {\n\t\t\t\t\tthis.disableSimulation();\n\t\t\t\t\tthis.enableSimulation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onSetBody = function onSetBody(name, oldValue, newValue) {\n\t\t\tif (this.body && this.data.simulationEnabled) {\n\t\t\t\tthis.body.activate();\n\t\t\t}\n\t\t};\n\n\t\t_createClass(RigidBodyComponent, [{\n\t\t\tkey: \"linearVelocity\",\n\t\t\tget: function get() {\n\t\t\t\tvar body = this.body;\n\n\t\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tvar vel = body.getLinearVelocity();\n\n\t\t\t\t\tthis._linearVelocity.set(vel.x(), vel.y(), vel.z());\n\t\t\t\t}\n\n\t\t\t\treturn this._linearVelocity;\n\t\t\t},\n\t\t\tset: function set(lv) {\n\t\t\t\tvar body = this.body;\n\n\t\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tbody.activate();\n\t\t\t\t\tammoVec1$1.setValue(lv.x, lv.y, lv.z);\n\t\t\t\t\tbody.setLinearVelocity(ammoVec1$1);\n\n\t\t\t\t\tthis._linearVelocity.copy(lv);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"angularVelocity\",\n\t\t\tget: function get() {\n\t\t\t\tvar body = this.body;\n\n\t\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tvar vel = body.getAngularVelocity();\n\n\t\t\t\t\tthis._angularVelocity.set(vel.x(), vel.y(), vel.z());\n\t\t\t\t}\n\n\t\t\t\treturn this._angularVelocity;\n\t\t\t},\n\t\t\tset: function set(av) {\n\t\t\t\tvar body = this.body;\n\n\t\t\t\tif (body && this.type === BODYTYPE_DYNAMIC) {\n\t\t\t\t\tbody.activate();\n\t\t\t\t\tammoVec1$1.setValue(av.x, av.y, av.z);\n\t\t\t\t\tbody.setAngularVelocity(ammoVec1$1);\n\n\t\t\t\t\tthis._angularVelocity.copy(av);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn RigidBodyComponent;\n\t}(Component);\n\n\tvar RigidBodyComponentData = function RigidBodyComponentData() {\n\t\tthis.enabled = true;\n\t\tthis.mass = 1;\n\t\tthis.linearDamping = 0;\n\t\tthis.angularDamping = 0;\n\t\tthis.linearFactor = new Vec3(1, 1, 1);\n\t\tthis.angularFactor = new Vec3(1, 1, 1);\n\t\tthis.friction = 0.5;\n\t\tthis.restitution = 0;\n\t\tthis.type = BODYTYPE_STATIC;\n\t\tthis.group = BODYGROUP_STATIC;\n\t\tthis.mask = BODYMASK_NOT_STATIC;\n\t\tthis.body = null;\n\t\tthis.simulationEnabled = false;\n\t};\n\n\tvar ammoRayStart, ammoRayEnd;\n\tvar collisions = {};\n\tvar frameCollisions = {};\n\n\tvar RaycastResult = function RaycastResult(entity, point, normal) {\n\t\tthis.entity = entity;\n\t\tthis.point = point;\n\t\tthis.normal = normal;\n\t};\n\n\tvar SingleContactResult = function SingleContactResult(a, b, contactPoint) {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.a = null;\n\t\t\tthis.b = null;\n\t\t\tthis.localPointA = new Vec3();\n\t\t\tthis.localPointB = new Vec3();\n\t\t\tthis.pointA = new Vec3();\n\t\t\tthis.pointB = new Vec3();\n\t\t\tthis.normal = new Vec3();\n\t\t} else {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.localPointA = contactPoint.localPoint;\n\t\t\tthis.localPointB = contactPoint.localPointOther;\n\t\t\tthis.pointA = contactPoint.point;\n\t\t\tthis.pointB = contactPoint.pointOther;\n\t\t\tthis.normal = contactPoint.normal;\n\t\t}\n\t};\n\n\tvar ContactPoint = function ContactPoint(localPoint, localPointOther, point, pointOther, normal) {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.localPoint = new Vec3();\n\t\t\tthis.localPointOther = new Vec3();\n\t\t\tthis.point = new Vec3();\n\t\t\tthis.pointOther = new Vec3();\n\t\t\tthis.normal = new Vec3();\n\t\t} else {\n\t\t\tthis.localPoint = localPoint;\n\t\t\tthis.localPointOther = localPointOther;\n\t\t\tthis.point = point;\n\t\t\tthis.pointOther = pointOther;\n\t\t\tthis.normal = normal;\n\t\t}\n\t};\n\n\tvar ContactResult = function ContactResult(other, contacts) {\n\t\tthis.other = other;\n\t\tthis.contacts = contacts;\n\t};\n\n\tvar _schema$d = ['enabled', 'type', 'mass', 'linearDamping', 'angularDamping', 'linearFactor', 'angularFactor', 'friction', 'restitution', 'group', 'mask', 'body'];\n\n\tvar RigidBodyComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(RigidBodyComponentSystem, _ComponentSystem);\n\n\t\tfunction RigidBodyComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'rigidbody';\n\t\t\t_this._stats = app.stats.frame;\n\t\t\t_this.ComponentType = RigidBodyComponent;\n\t\t\t_this.DataType = RigidBodyComponentData;\n\t\t\t_this.contactPointPool = null;\n\t\t\t_this.contactResultPool = null;\n\t\t\t_this.singleContactResultPool = null;\n\t\t\t_this.schema = _schema$d;\n\t\t\t_this.maxSubSteps = 10;\n\t\t\t_this.fixedTimeStep = 1 / 60;\n\t\t\t_this.gravity = new Vec3(0, -9.81, 0);\n\t\t\t_this._dynamic = [];\n\t\t\t_this._kinematic = [];\n\t\t\t_this._triggers = [];\n\t\t\t_this._compounds = [];\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\t_this.on('remove', _this.onRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = RigidBodyComponentSystem.prototype;\n\n\t\t_proto.onLibraryLoaded = function onLibraryLoaded() {\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tthis.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n\t\t\t\tthis.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\n\t\t\t\tthis.overlappingPairCache = new Ammo.btDbvtBroadphase();\n\t\t\t\tthis.solver = new Ammo.btSequentialImpulseConstraintSolver();\n\t\t\t\tthis.dynamicsWorld = new Ammo.btDiscreteDynamicsWorld(this.dispatcher, this.overlappingPairCache, this.solver, this.collisionConfiguration);\n\n\t\t\t\tif (this.dynamicsWorld.setInternalTickCallback) {\n\t\t\t\t\tvar checkForCollisionsPointer = Ammo.addFunction(this._checkForCollisions.bind(this), 'vif');\n\t\t\t\t\tthis.dynamicsWorld.setInternalTickCallback(checkForCollisionsPointer);\n\t\t\t\t}\n\n\t\t\t\tammoRayStart = new Ammo.btVector3();\n\t\t\t\tammoRayEnd = new Ammo.btVector3();\n\t\t\t\tthis.contactPointPool = new ObjectPool(ContactPoint, 1);\n\t\t\t\tthis.contactResultPool = new ObjectPool(ContactResult, 1);\n\t\t\t\tthis.singleContactResultPool = new ObjectPool(SingleContactResult, 1);\n\t\t\t\tComponentSystem.bind('update', this.onUpdate, this);\n\t\t\t} else {\n\t\t\t\tComponentSystem.unbind('update', this.onUpdate, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, _data, properties) {\n\t\t\tproperties = ['enabled', 'mass', 'linearDamping', 'angularDamping', 'linearFactor', 'angularFactor', 'friction', 'restitution', 'type', 'group', 'mask'];\n\t\t\tvar data = {};\n\n\t\t\tfor (var i = 0, len = properties.length; i < len; i++) {\n\t\t\t\tvar property = properties[i];\n\t\t\t\tdata[property] = _data[property];\n\t\t\t}\n\n\t\t\tif (_data.bodyType) {\n\t\t\t\tdata.type = _data.bodyType;\n\t\t\t}\n\n\t\t\tif (data.linearFactor && Array.isArray(data.linearFactor)) {\n\t\t\t\tdata.linearFactor = new Vec3(data.linearFactor[0], data.linearFactor[1], data.linearFactor[2]);\n\t\t\t}\n\n\t\t\tif (data.angularFactor && Array.isArray(data.angularFactor)) {\n\t\t\t\tdata.angularFactor = new Vec3(data.angularFactor[0], data.angularFactor[1], data.angularFactor[2]);\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar data = {\n\t\t\t\tenabled: entity.rigidbody.enabled,\n\t\t\t\tmass: entity.rigidbody.mass,\n\t\t\t\tlinearDamping: entity.rigidbody.linearDamping,\n\t\t\t\tangularDamping: entity.rigidbody.angularDamping,\n\t\t\t\tlinearFactor: [entity.rigidbody.linearFactor.x, entity.rigidbody.linearFactor.y, entity.rigidbody.linearFactor.z],\n\t\t\t\tangularFactor: [entity.rigidbody.angularFactor.x, entity.rigidbody.angularFactor.y, entity.rigidbody.angularFactor.z],\n\t\t\t\tfriction: entity.rigidbody.friction,\n\t\t\t\trestitution: entity.rigidbody.restitution,\n\t\t\t\ttype: entity.rigidbody.type,\n\t\t\t\tgroup: entity.rigidbody.group,\n\t\t\t\tmask: entity.rigidbody.mask\n\t\t\t};\n\t\t\tthis.addComponent(clone, data);\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tif (component.enabled) {\n\t\t\t\tcomponent.enabled = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.onRemove = function onRemove(entity, data) {\n\t\t\tvar body = data.body;\n\n\t\t\tif (body) {\n\t\t\t\tthis.removeBody(body);\n\t\t\t\tthis.destroyBody(body);\n\t\t\t\tdata.body = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.addBody = function addBody(body, group, mask) {\n\t\t\tif (group !== undefined && mask !== undefined) {\n\t\t\t\tthis.dynamicsWorld.addRigidBody(body, group, mask);\n\t\t\t} else {\n\t\t\t\tthis.dynamicsWorld.addRigidBody(body);\n\t\t\t}\n\t\t};\n\n\t\t_proto.removeBody = function removeBody(body) {\n\t\t\tthis.dynamicsWorld.removeRigidBody(body);\n\t\t};\n\n\t\t_proto.createBody = function createBody(mass, shape, transform) {\n\t\t\tvar localInertia = new Ammo.btVector3(0, 0, 0);\n\n\t\t\tif (mass !== 0) {\n\t\t\t\tshape.calculateLocalInertia(mass, localInertia);\n\t\t\t}\n\n\t\t\tvar motionState = new Ammo.btDefaultMotionState(transform);\n\t\t\tvar bodyInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, shape, localInertia);\n\t\t\tvar body = new Ammo.btRigidBody(bodyInfo);\n\t\t\tAmmo.destroy(bodyInfo);\n\t\t\tAmmo.destroy(localInertia);\n\t\t\treturn body;\n\t\t};\n\n\t\t_proto.destroyBody = function destroyBody(body) {\n\t\t\tvar motionState = body.getMotionState();\n\n\t\t\tif (motionState) {\n\t\t\t\tAmmo.destroy(motionState);\n\t\t\t}\n\n\t\t\tAmmo.destroy(body);\n\t\t};\n\n\t\t_proto.raycastFirst = function raycastFirst(start, end) {\n\t\t\tvar result = null;\n\t\t\tammoRayStart.setValue(start.x, start.y, start.z);\n\t\t\tammoRayEnd.setValue(end.x, end.y, end.z);\n\t\t\tvar rayCallback = new Ammo.ClosestRayResultCallback(ammoRayStart, ammoRayEnd);\n\t\t\tthis.dynamicsWorld.rayTest(ammoRayStart, ammoRayEnd, rayCallback);\n\n\t\t\tif (rayCallback.hasHit()) {\n\t\t\t\tvar collisionObj = rayCallback.get_m_collisionObject();\n\t\t\t\tvar body = Ammo.castObject(collisionObj, Ammo.btRigidBody);\n\n\t\t\t\tif (body) {\n\t\t\t\t\tvar point = rayCallback.get_m_hitPointWorld();\n\t\t\t\t\tvar normal = rayCallback.get_m_hitNormalWorld();\n\t\t\t\t\tresult = new RaycastResult(body.entity, new Vec3(point.x(), point.y(), point.z()), new Vec3(normal.x(), normal.y(), normal.z()));\n\n\t\t\t\t\tif (arguments.length > 2) {\n\t\t\t\t\t\tvar callback = arguments[2];\n\t\t\t\t\t\tcallback(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tAmmo.destroy(rayCallback);\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto.raycastAll = function raycastAll(start, end) {\n\t\t\tvar results = [];\n\t\t\tammoRayStart.setValue(start.x, start.y, start.z);\n\t\t\tammoRayEnd.setValue(end.x, end.y, end.z);\n\t\t\tvar rayCallback = new Ammo.AllHitsRayResultCallback(ammoRayStart, ammoRayEnd);\n\t\t\tthis.dynamicsWorld.rayTest(ammoRayStart, ammoRayEnd, rayCallback);\n\n\t\t\tif (rayCallback.hasHit()) {\n\t\t\t\tvar collisionObjs = rayCallback.get_m_collisionObjects();\n\t\t\t\tvar points = rayCallback.get_m_hitPointWorld();\n\t\t\t\tvar normals = rayCallback.get_m_hitNormalWorld();\n\t\t\t\tvar numHits = collisionObjs.size();\n\n\t\t\t\tfor (var i = 0; i < numHits; i++) {\n\t\t\t\t\tvar body = Ammo.castObject(collisionObjs.at(i), Ammo.btRigidBody);\n\n\t\t\t\t\tif (body) {\n\t\t\t\t\t\tvar point = points.at(i);\n\t\t\t\t\t\tvar normal = normals.at(i);\n\t\t\t\t\t\tvar result = new RaycastResult(body.entity, new Vec3(point.x(), point.y(), point.z()), new Vec3(normal.x(), normal.y(), normal.z()));\n\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tAmmo.destroy(rayCallback);\n\t\t\treturn results;\n\t\t};\n\n\t\t_proto._storeCollision = function _storeCollision(entity, other) {\n\t\t\tvar isNewCollision = false;\n\t\t\tvar guid = entity.getGuid();\n\t\t\tcollisions[guid] = collisions[guid] || {\n\t\t\t\tothers: [],\n\t\t\t\tentity: entity\n\t\t\t};\n\n\t\t\tif (collisions[guid].others.indexOf(other) < 0) {\n\t\t\t\tcollisions[guid].others.push(other);\n\t\t\t\tisNewCollision = true;\n\t\t\t}\n\n\t\t\tframeCollisions[guid] = frameCollisions[guid] || {\n\t\t\t\tothers: [],\n\t\t\t\tentity: entity\n\t\t\t};\n\t\t\tframeCollisions[guid].others.push(other);\n\t\t\treturn isNewCollision;\n\t\t};\n\n\t\t_proto._createContactPointFromAmmo = function _createContactPointFromAmmo(contactPoint) {\n\t\t\tvar localPointA = contactPoint.get_m_localPointA();\n\t\t\tvar localPointB = contactPoint.get_m_localPointB();\n\t\t\tvar positionWorldOnA = contactPoint.getPositionWorldOnA();\n\t\t\tvar positionWorldOnB = contactPoint.getPositionWorldOnB();\n\t\t\tvar normalWorldOnB = contactPoint.get_m_normalWorldOnB();\n\t\t\tvar contact = this.contactPointPool.allocate();\n\t\t\tcontact.localPoint.set(localPointA.x(), localPointA.y(), localPointA.z());\n\t\t\tcontact.localPointOther.set(localPointB.x(), localPointB.y(), localPointB.z());\n\t\t\tcontact.point.set(positionWorldOnA.x(), positionWorldOnA.y(), positionWorldOnA.z());\n\t\t\tcontact.pointOther.set(positionWorldOnB.x(), positionWorldOnB.y(), positionWorldOnB.z());\n\t\t\tcontact.normal.set(normalWorldOnB.x(), normalWorldOnB.y(), normalWorldOnB.z());\n\t\t\treturn contact;\n\t\t};\n\n\t\t_proto._createReverseContactPointFromAmmo = function _createReverseContactPointFromAmmo(contactPoint) {\n\t\t\tvar localPointA = contactPoint.get_m_localPointA();\n\t\t\tvar localPointB = contactPoint.get_m_localPointB();\n\t\t\tvar positionWorldOnA = contactPoint.getPositionWorldOnA();\n\t\t\tvar positionWorldOnB = contactPoint.getPositionWorldOnB();\n\t\t\tvar normalWorldOnB = contactPoint.get_m_normalWorldOnB();\n\t\t\tvar contact = this.contactPointPool.allocate();\n\t\t\tcontact.localPointOther.set(localPointA.x(), localPointA.y(), localPointA.z());\n\t\t\tcontact.localPoint.set(localPointB.x(), localPointB.y(), localPointB.z());\n\t\t\tcontact.pointOther.set(positionWorldOnA.x(), positionWorldOnA.y(), positionWorldOnA.z());\n\t\t\tcontact.point.set(positionWorldOnB.x(), positionWorldOnB.y(), positionWorldOnB.z());\n\t\t\tcontact.normal.set(normalWorldOnB.x(), normalWorldOnB.y(), normalWorldOnB.z());\n\t\t\treturn contact;\n\t\t};\n\n\t\t_proto._createSingleContactResult = function _createSingleContactResult(a, b, contactPoint) {\n\t\t\tvar result = this.singleContactResultPool.allocate();\n\t\t\tresult.a = a;\n\t\t\tresult.b = b;\n\t\t\tresult.localPointA = contactPoint.localPoint;\n\t\t\tresult.localPointB = contactPoint.localPointOther;\n\t\t\tresult.pointA = contactPoint.point;\n\t\t\tresult.pointB = contactPoint.pointOther;\n\t\t\tresult.normal = contactPoint.normal;\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._createContactResult = function _createContactResult(other, contacts) {\n\t\t\tvar result = this.contactResultPool.allocate();\n\t\t\tresult.other = other;\n\t\t\tresult.contacts = contacts;\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._cleanOldCollisions = function _cleanOldCollisions() {\n\t\t\tfor (var guid in collisions) {\n\t\t\t\tif (collisions.hasOwnProperty(guid)) {\n\t\t\t\t\tvar frameCollision = frameCollisions[guid];\n\t\t\t\t\tvar collision = collisions[guid];\n\t\t\t\t\tvar entity = collision.entity;\n\t\t\t\t\tvar entityCollision = entity.collision;\n\t\t\t\t\tvar entityRigidbody = entity.rigidbody;\n\t\t\t\t\tvar others = collision.others;\n\t\t\t\t\tvar length = others.length;\n\t\t\t\t\tvar i = length;\n\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tvar other = others[i];\n\n\t\t\t\t\t\tif (!frameCollision || frameCollision.others.indexOf(other) < 0) {\n\t\t\t\t\t\t\tothers.splice(i, 1);\n\n\t\t\t\t\t\t\tif (entity.trigger) {\n\t\t\t\t\t\t\t\tif (entityCollision) {\n\t\t\t\t\t\t\t\t\tentityCollision.fire(\"triggerleave\", other);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (other.rigidbody) {\n\t\t\t\t\t\t\t\t\tother.rigidbody.fire('triggerleave', entity);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (!other.trigger) {\n\t\t\t\t\t\t\t\tif (entityRigidbody) {\n\t\t\t\t\t\t\t\t\tentityRigidbody.fire(\"collisionend\", other);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (entityCollision) {\n\t\t\t\t\t\t\t\t\tentityCollision.fire(\"collisionend\", other);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (others.length === 0) {\n\t\t\t\t\t\tdelete collisions[guid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._hasContactEvent = function _hasContactEvent(entity) {\n\t\t\tvar c = entity.collision;\n\n\t\t\tif (c && (c.hasEvent(\"collisionstart\") || c.hasEvent(\"collisionend\") || c.hasEvent(\"contact\"))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar r = entity.rigidbody;\n\t\t\treturn r && (r.hasEvent(\"collisionstart\") || r.hasEvent(\"collisionend\") || r.hasEvent(\"contact\"));\n\t\t};\n\n\t\t_proto._checkForCollisions = function _checkForCollisions(world, timeStep) {\n\t\t\tvar dynamicsWorld = Ammo.wrapPointer(world, Ammo.btDynamicsWorld);\n\t\t\tvar dispatcher = dynamicsWorld.getDispatcher();\n\t\t\tvar numManifolds = dispatcher.getNumManifolds();\n\t\t\tframeCollisions = {};\n\n\t\t\tfor (var i = 0; i < numManifolds; i++) {\n\t\t\t\tvar manifold = dispatcher.getManifoldByIndexInternal(i);\n\t\t\t\tvar body0 = manifold.getBody0();\n\t\t\t\tvar body1 = manifold.getBody1();\n\t\t\t\tvar wb0 = Ammo.castObject(body0, Ammo.btRigidBody);\n\t\t\t\tvar wb1 = Ammo.castObject(body1, Ammo.btRigidBody);\n\t\t\t\tvar e0 = wb0.entity;\n\t\t\t\tvar e1 = wb1.entity;\n\n\t\t\t\tif (!e0 || !e1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar flags0 = wb0.getCollisionFlags();\n\t\t\t\tvar flags1 = wb1.getCollisionFlags();\n\t\t\t\tvar numContacts = manifold.getNumContacts();\n\t\t\t\tvar forwardContacts = [];\n\t\t\t\tvar reverseContacts = [];\n\t\t\t\tvar newCollision, e0Events, e1Events, e0BodyEvents, e1BodyEvents;\n\n\t\t\t\tif (numContacts > 0) {\n\t\t\t\t\tif (flags0 & BODYFLAG_NORESPONSE_OBJECT || flags1 & BODYFLAG_NORESPONSE_OBJECT) {\n\t\t\t\t\t\te0Events = e0.collision && (e0.collision.hasEvent(\"triggerenter\") || e0.collision.hasEvent(\"triggerleave\"));\n\t\t\t\t\t\te1Events = e1.collision && (e1.collision.hasEvent(\"triggerenter\") || e1.collision.hasEvent(\"triggerleave\"));\n\t\t\t\t\t\te0BodyEvents = e0.rigidbody && (e0.rigidbody.hasEvent(\"triggerenter\") || e0.rigidbody.hasEvent(\"triggerleave\"));\n\t\t\t\t\t\te1BodyEvents = e1.rigidbody && (e1.rigidbody.hasEvent(\"triggerenter\") || e1.rigidbody.hasEvent(\"triggerleave\"));\n\n\t\t\t\t\t\tif (e0Events) {\n\t\t\t\t\t\t\tnewCollision = this._storeCollision(e0, e1);\n\n\t\t\t\t\t\t\tif (newCollision && !(flags1 & BODYFLAG_NORESPONSE_OBJECT)) {\n\t\t\t\t\t\t\t\te0.collision.fire(\"triggerenter\", e1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e1Events) {\n\t\t\t\t\t\t\tnewCollision = this._storeCollision(e1, e0);\n\n\t\t\t\t\t\t\tif (newCollision && !(flags0 & BODYFLAG_NORESPONSE_OBJECT)) {\n\t\t\t\t\t\t\t\te1.collision.fire(\"triggerenter\", e0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e0BodyEvents) {\n\t\t\t\t\t\t\tif (!newCollision) {\n\t\t\t\t\t\t\t\tnewCollision = this._storeCollision(e1, e0);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\te0.rigidbody.fire(\"triggerenter\", e1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e1BodyEvents) {\n\t\t\t\t\t\t\tif (!newCollision) {\n\t\t\t\t\t\t\t\tnewCollision = this._storeCollision(e0, e1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\te1.rigidbody.fire(\"triggerenter\", e0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\te0Events = this._hasContactEvent(e0);\n\t\t\t\t\t\te1Events = this._hasContactEvent(e1);\n\t\t\t\t\t\tvar globalEvents = this.hasEvent(\"contact\");\n\n\t\t\t\t\t\tif (globalEvents || e0Events || e1Events) {\n\t\t\t\t\t\t\tfor (var j = 0; j < numContacts; j++) {\n\t\t\t\t\t\t\t\tvar btContactPoint = manifold.getContactPoint(j);\n\n\t\t\t\t\t\t\t\tvar contactPoint = this._createContactPointFromAmmo(btContactPoint);\n\n\t\t\t\t\t\t\t\tvar reverseContactPoint = null;\n\n\t\t\t\t\t\t\t\tif (e0Events || e1Events) {\n\t\t\t\t\t\t\t\t\treverseContactPoint = this._createReverseContactPointFromAmmo(btContactPoint);\n\t\t\t\t\t\t\t\t\tforwardContacts.push(contactPoint);\n\t\t\t\t\t\t\t\t\treverseContacts.push(reverseContactPoint);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (globalEvents) {\n\t\t\t\t\t\t\t\t\tvar result = this._createSingleContactResult(e0, e1, contactPoint);\n\n\t\t\t\t\t\t\t\t\tthis.fire(\"contact\", result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (e0Events) {\n\t\t\t\t\t\t\t\tvar forwardResult = this._createContactResult(e1, forwardContacts);\n\n\t\t\t\t\t\t\t\tnewCollision = this._storeCollision(e0, e1);\n\n\t\t\t\t\t\t\t\tif (e0.collision) {\n\t\t\t\t\t\t\t\t\te0.collision.fire(\"contact\", forwardResult);\n\n\t\t\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\t\t\te0.collision.fire(\"collisionstart\", forwardResult);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (e0.rigidbody) {\n\t\t\t\t\t\t\t\t\te0.rigidbody.fire(\"contact\", forwardResult);\n\n\t\t\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\t\t\te0.rigidbody.fire(\"collisionstart\", forwardResult);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (e1Events) {\n\t\t\t\t\t\t\t\tvar reverseResult = this._createContactResult(e0, reverseContacts);\n\n\t\t\t\t\t\t\t\tnewCollision = this._storeCollision(e1, e0);\n\n\t\t\t\t\t\t\t\tif (e1.collision) {\n\t\t\t\t\t\t\t\t\te1.collision.fire(\"contact\", reverseResult);\n\n\t\t\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\t\t\te1.collision.fire(\"collisionstart\", reverseResult);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (e1.rigidbody) {\n\t\t\t\t\t\t\t\t\te1.rigidbody.fire(\"contact\", reverseResult);\n\n\t\t\t\t\t\t\t\t\tif (newCollision) {\n\t\t\t\t\t\t\t\t\t\te1.rigidbody.fire(\"collisionstart\", reverseResult);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cleanOldCollisions();\n\n\t\t\tthis.contactPointPool.freeAll();\n\t\t\tthis.contactResultPool.freeAll();\n\t\t\tthis.singleContactResultPool.freeAll();\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar i, len;\n\t\t\tvar gravity = this.dynamicsWorld.getGravity();\n\n\t\t\tif (gravity.x() !== this.gravity.x || gravity.y() !== this.gravity.y || gravity.z() !== this.gravity.z) {\n\t\t\t\tgravity.setValue(this.gravity.x, this.gravity.y, this.gravity.z);\n\t\t\t\tthis.dynamicsWorld.setGravity(gravity);\n\t\t\t}\n\n\t\t\tvar triggers = this._triggers;\n\n\t\t\tfor (i = 0, len = triggers.length; i < len; i++) {\n\t\t\t\ttriggers[i].updateTransform();\n\t\t\t}\n\n\t\t\tvar compounds = this._compounds;\n\n\t\t\tfor (i = 0, len = compounds.length; i < len; i++) {\n\t\t\t\tcompounds[i]._updateCompound();\n\t\t\t}\n\n\t\t\tvar kinematic = this._kinematic;\n\n\t\t\tfor (i = 0, len = kinematic.length; i < len; i++) {\n\t\t\t\tkinematic[i]._updateKinematic();\n\t\t\t}\n\n\t\t\tthis.dynamicsWorld.stepSimulation(dt, this.maxSubSteps, this.fixedTimeStep);\n\t\t\tvar dynamic = this._dynamic;\n\n\t\t\tfor (i = 0, len = dynamic.length; i < len; i++) {\n\t\t\t\tdynamic[i]._updateDynamic();\n\t\t\t}\n\n\t\t\tif (!this.dynamicsWorld.setInternalTickCallback) this._checkForCollisions(Ammo.getPointer(this.dynamicsWorld), dt);\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (typeof Ammo !== 'undefined') {\n\t\t\t\tAmmo.destroy(this.dynamicsWorld);\n\t\t\t\tAmmo.destroy(this.solver);\n\t\t\t\tAmmo.destroy(this.overlappingPairCache);\n\t\t\t\tAmmo.destroy(this.dispatcher);\n\t\t\t\tAmmo.destroy(this.collisionConfiguration);\n\t\t\t\tthis.dynamicsWorld = null;\n\t\t\t\tthis.solver = null;\n\t\t\t\tthis.overlappingPairCache = null;\n\t\t\t\tthis.dispatcher = null;\n\t\t\t\tthis.collisionConfiguration = null;\n\t\t\t}\n\t\t};\n\n\t\treturn RigidBodyComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(RigidBodyComponent.prototype, _schema$d);\n\n\tvar SCALEMODE_NONE = \"none\";\n\tvar SCALEMODE_BLEND = \"blend\";\n\n\tvar _transform = new Mat4();\n\n\tvar ScreenComponent = function (_Component) {\n\t\t_inheritsLoose(ScreenComponent, _Component);\n\n\t\tfunction ScreenComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._resolution = new Vec2(640, 320);\n\t\t\t_this._referenceResolution = new Vec2(640, 320);\n\t\t\t_this._scaleMode = SCALEMODE_NONE;\n\t\t\t_this.scale = 1;\n\t\t\t_this._scaleBlend = 0.5;\n\t\t\t_this._priority = 0;\n\t\t\t_this._screenSpace = false;\n\t\t\t_this.cull = _this._screenSpace;\n\t\t\t_this._screenMatrix = new Mat4();\n\t\t\t_this._elements = new Set();\n\t\t\tsystem.app.graphicsDevice.on(\"resizecanvas\", _this._onResize, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScreenComponent.prototype;\n\n\t\t_proto.syncDrawOrder = function syncDrawOrder() {\n\t\t\tthis.system.queueDrawOrderSync(this.entity.getGuid(), this._processDrawOrderSync, this);\n\t\t};\n\n\t\t_proto._recurseDrawOrderSync = function _recurseDrawOrderSync(e, i) {\n\t\t\tif (!(e instanceof Entity)) {\n\t\t\t\treturn i;\n\t\t\t}\n\n\t\t\tif (e.element) {\n\t\t\t\tvar prevDrawOrder = e.element.drawOrder;\n\t\t\t\te.element.drawOrder = i++;\n\n\t\t\t\tif (e.element._batchGroupId >= 0 && prevDrawOrder != e.element.drawOrder) {\n\t\t\t\t\tthis.system.app.batcher.markGroupDirty(e.element._batchGroupId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.particlesystem) {\n\t\t\t\te.particlesystem.drawOrder = i++;\n\t\t\t}\n\n\t\t\tvar children = e.children;\n\n\t\t\tfor (var j = 0; j < children.length; j++) {\n\t\t\t\ti = this._recurseDrawOrderSync(children[j], i);\n\t\t\t}\n\n\t\t\treturn i;\n\t\t};\n\n\t\t_proto._processDrawOrderSync = function _processDrawOrderSync() {\n\t\t\tvar i = 1;\n\n\t\t\tthis._recurseDrawOrderSync(this.entity, i);\n\n\t\t\tthis.fire('syncdraworder');\n\t\t};\n\n\t\t_proto._calcProjectionMatrix = function _calcProjectionMatrix() {\n\t\t\tvar left;\n\t\t\tvar right;\n\t\t\tvar bottom;\n\t\t\tvar top;\n\t\t\tvar near = 1;\n\t\t\tvar far = -1;\n\t\t\tvar w = this._resolution.x / this.scale;\n\t\t\tvar h = this._resolution.y / this.scale;\n\t\t\tleft = 0;\n\t\t\tright = w;\n\t\t\tbottom = -h;\n\t\t\ttop = 0;\n\n\t\t\tthis._screenMatrix.setOrtho(left, right, bottom, top, near, far);\n\n\t\t\tif (!this._screenSpace) {\n\t\t\t\t_transform.setScale(0.5 * w, 0.5 * h, 1);\n\n\t\t\t\tthis._screenMatrix.mul2(_transform, this._screenMatrix);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateScale = function _updateScale() {\n\t\t\tthis.scale = this._calcScale(this._resolution, this.referenceResolution);\n\t\t};\n\n\t\t_proto._calcScale = function _calcScale(resolution, referenceResolution) {\n\t\t\tvar lx = Math.log2(resolution.x / referenceResolution.x);\n\t\t\tvar ly = Math.log2(resolution.y / referenceResolution.y);\n\t\t\treturn Math.pow(2, lx * (1 - this._scaleBlend) + ly * this._scaleBlend);\n\t\t};\n\n\t\t_proto._onResize = function _onResize(width, height) {\n\t\t\tif (this._screenSpace) {\n\t\t\t\tthis._resolution.set(width, height);\n\n\t\t\t\tthis.resolution = this._resolution;\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindElement = function _bindElement(element) {\n\t\t\tthis._elements.add(element);\n\t\t};\n\n\t\t_proto._unbindElement = function _unbindElement(element) {\n\t\t\tthis._elements.delete(element);\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.system.app.graphicsDevice.off(\"resizecanvas\", this._onResize, this);\n\t\t\tthis.fire('remove');\n\n\t\t\tthis._elements.forEach(function (element) {\n\t\t\t\treturn element._onScreenRemove();\n\t\t\t});\n\n\t\t\tthis._elements.clear();\n\n\t\t\tthis.off();\n\t\t};\n\n\t\t_createClass(ScreenComponent, [{\n\t\t\tkey: \"resolution\",\n\t\t\tset: function set(value) {\n\t\t\t\tvar _this2 = this;\n\n\t\t\t\tif (!this._screenSpace) {\n\t\t\t\t\tthis._resolution.set(value.x, value.y);\n\t\t\t\t} else {\n\t\t\t\t\tthis._resolution.set(this.system.app.graphicsDevice.width, this.system.app.graphicsDevice.height);\n\t\t\t\t}\n\n\t\t\t\tthis._updateScale();\n\n\t\t\t\tthis._calcProjectionMatrix();\n\n\t\t\t\tif (!this.entity._dirtyLocal) this.entity._dirtifyLocal();\n\t\t\t\tthis.fire(\"set:resolution\", this._resolution);\n\n\t\t\t\tthis._elements.forEach(function (element) {\n\t\t\t\t\treturn element._onScreenResize(_this2._resolution);\n\t\t\t\t});\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._resolution;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"referenceResolution\",\n\t\t\tset: function set(value) {\n\t\t\t\tvar _this3 = this;\n\n\t\t\t\tthis._referenceResolution.set(value.x, value.y);\n\n\t\t\t\tthis._updateScale();\n\n\t\t\t\tthis._calcProjectionMatrix();\n\n\t\t\t\tif (!this.entity._dirtyLocal) this.entity._dirtifyLocal();\n\t\t\t\tthis.fire(\"set:referenceresolution\", this._resolution);\n\n\t\t\t\tthis._elements.forEach(function (element) {\n\t\t\t\t\treturn element._onScreenResize(_this3._resolution);\n\t\t\t\t});\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\tif (this._scaleMode === SCALEMODE_NONE) {\n\t\t\t\t\treturn this._resolution;\n\t\t\t\t}\n\n\t\t\t\treturn this._referenceResolution;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"screenSpace\",\n\t\t\tset: function set(value) {\n\t\t\t\tthis._screenSpace = value;\n\n\t\t\t\tif (this._screenSpace) {\n\t\t\t\t\tthis._resolution.set(this.system.app.graphicsDevice.width, this.system.app.graphicsDevice.height);\n\t\t\t\t}\n\n\t\t\t\tthis.resolution = this._resolution;\n\t\t\t\tif (!this.entity._dirtyLocal) this.entity._dirtifyLocal();\n\t\t\t\tthis.fire('set:screenspace', this._screenSpace);\n\n\t\t\t\tthis._elements.forEach(function (element) {\n\t\t\t\t\treturn element._onScreenSpaceChange();\n\t\t\t\t});\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._screenSpace;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"scaleMode\",\n\t\t\tset: function set(value) {\n\t\t\t\tif (value !== SCALEMODE_NONE && value !== SCALEMODE_BLEND) {\n\t\t\t\t\tvalue = SCALEMODE_NONE;\n\t\t\t\t}\n\n\t\t\t\tif (!this._screenSpace && value !== SCALEMODE_NONE) {\n\t\t\t\t\tvalue = SCALEMODE_NONE;\n\t\t\t\t}\n\n\t\t\t\tthis._scaleMode = value;\n\t\t\t\tthis.resolution = this._resolution;\n\t\t\t\tthis.fire(\"set:scalemode\", this._scaleMode);\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._scaleMode;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"scaleBlend\",\n\t\t\tset: function set(value) {\n\t\t\t\tvar _this4 = this;\n\n\t\t\t\tthis._scaleBlend = value;\n\n\t\t\t\tthis._updateScale();\n\n\t\t\t\tthis._calcProjectionMatrix();\n\n\t\t\t\tif (!this.entity._dirtyLocal) this.entity._dirtifyLocal();\n\t\t\t\tthis.fire(\"set:scaleblend\", this._scaleBlend);\n\n\t\t\t\tthis._elements.forEach(function (element) {\n\t\t\t\t\treturn element._onScreenResize(_this4._resolution);\n\t\t\t\t});\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._scaleBlend;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"priority\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._priority;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value > 0xFF) {\n\t\t\t\t\tvalue = 0xFF;\n\t\t\t\t}\n\n\t\t\t\tthis._priority = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ScreenComponent;\n\t}(Component);\n\n\tvar ScreenComponentData = function ScreenComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$e = ['enabled'];\n\n\tvar ScreenComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ScreenComponentSystem, _ComponentSystem);\n\n\t\tfunction ScreenComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'screen';\n\t\t\t_this.ComponentType = ScreenComponent;\n\t\t\t_this.DataType = ScreenComponentData;\n\t\t\t_this.schema = _schema$e;\n\t\t\t_this.windowResolution = new Vec2();\n\t\t\t_this._drawOrderSyncQueue = new IndexedList();\n\n\t\t\t_this.app.graphicsDevice.on(\"resizecanvas\", _this._onResize, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this._onUpdate, _assertThisInitialized(_this));\n\n\t\t\t_this.on('beforeremove', _this.onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScreenComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data.priority !== undefined) component.priority = data.priority;\n\t\t\tif (data.screenSpace !== undefined) component.screenSpace = data.screenSpace;\n\t\t\tcomponent.cull = component.screenSpace;\n\t\t\tif (data.scaleMode !== undefined) component.scaleMode = data.scaleMode;\n\t\t\tif (data.scaleBlend !== undefined) component.scaleBlend = data.scaleBlend;\n\n\t\t\tif (data.resolution !== undefined) {\n\t\t\t\tif (data.resolution instanceof Vec2) {\n\t\t\t\t\tcomponent._resolution.copy(data.resolution);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent._resolution.set(data.resolution[0], data.resolution[1]);\n\t\t\t\t}\n\n\t\t\t\tcomponent.resolution = component._resolution;\n\t\t\t}\n\n\t\t\tif (data.referenceResolution !== undefined) {\n\t\t\t\tif (data.referenceResolution instanceof Vec2) {\n\t\t\t\t\tcomponent._referenceResolution.copy(data.referenceResolution);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent._referenceResolution.set(data.referenceResolution[0], data.referenceResolution[1]);\n\t\t\t\t}\n\n\t\t\t\tcomponent.referenceResolution = component._referenceResolution;\n\t\t\t}\n\n\t\t\tcomponent.syncDrawOrder();\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis.off();\n\t\t\tthis.app.graphicsDevice.off(\"resizecanvas\", this._onResize, this);\n\t\t};\n\n\t\t_proto._onUpdate = function _onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components[id].entity.screen.update) components[id].entity.screen.update(dt);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onResize = function _onResize(width, height) {\n\t\t\tthis.windowResolution.x = width;\n\t\t\tthis.windowResolution.y = height;\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar screen = entity.screen;\n\t\t\treturn this.addComponent(clone, {\n\t\t\t\tenabled: screen.enabled,\n\t\t\t\tscreenSpace: screen.screenSpace,\n\t\t\t\tscaleMode: screen.scaleMode,\n\t\t\t\tresolution: screen.resolution.clone(),\n\t\t\t\treferenceResolution: screen.referenceResolution.clone()\n\t\t\t});\n\t\t};\n\n\t\t_proto.onRemoveComponent = function onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\t_proto.processDrawOrderSyncQueue = function processDrawOrderSyncQueue() {\n\t\t\tvar list = this._drawOrderSyncQueue.list();\n\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tvar item = list[i];\n\t\t\t\titem.callback.call(item.scope);\n\t\t\t}\n\n\t\t\tthis._drawOrderSyncQueue.clear();\n\t\t};\n\n\t\t_proto.queueDrawOrderSync = function queueDrawOrderSync(id, fn, scope) {\n\t\t\tif (!this._drawOrderSyncQueue.list().length) {\n\t\t\t\tthis.app.once('prerender', this.processDrawOrderSyncQueue, this);\n\t\t\t}\n\n\t\t\tif (!this._drawOrderSyncQueue.has(id)) {\n\t\t\t\tthis._drawOrderSyncQueue.push(id, {\n\t\t\t\t\tcallback: fn,\n\t\t\t\t\tscope: scope\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn ScreenComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ScreenComponent.prototype, _schema$e);\n\n\tvar components = ['x', 'y', 'z', 'w'];\n\tvar vecLookup = [undefined, undefined, Vec2, Vec3, Vec4];\n\n\tfunction rawToValue(app, args, value, old) {\n\t\tvar i;\n\t\tvar j;\n\n\t\tswitch (args.type) {\n\t\t\tcase 'boolean':\n\t\t\t\treturn !!value;\n\n\t\t\tcase 'number':\n\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\tvar v = parseInt(value, 10);\n\t\t\t\t\tif (isNaN(v)) return null;\n\t\t\t\t\treturn v;\n\t\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\t\treturn 0 + value;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\tcase 'json':\n\t\t\t\tvar result = {};\n\n\t\t\t\tif (Array.isArray(args.schema)) {\n\t\t\t\t\tif (!value || typeof value !== 'object') {\n\t\t\t\t\t\tvalue = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < args.schema.length; i++) {\n\t\t\t\t\t\tvar field = args.schema[i];\n\t\t\t\t\t\tif (!field.name) continue;\n\n\t\t\t\t\t\tif (field.array) {\n\t\t\t\t\t\t\tresult[field.name] = [];\n\t\t\t\t\t\t\tvar arr = Array.isArray(value[field.name]) ? value[field.name] : [];\n\n\t\t\t\t\t\t\tfor (j = 0; j < arr.length; j++) {\n\t\t\t\t\t\t\t\tresult[field.name].push(rawToValue(app, field, arr[j]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar val = value.hasOwnProperty(field.name) ? value[field.name] : field.default;\n\t\t\t\t\t\t\tresult[field.name] = rawToValue(app, field, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\tcase 'asset':\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\treturn app.assets.get(value) || null;\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\treturn app.assets.get(parseInt(value, 10)) || null;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\tcase 'entity':\n\t\t\t\tif (value instanceof GraphNode) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\treturn app.getEntityFromIndex(value);\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\tcase 'rgb':\n\t\t\tcase 'rgba':\n\t\t\t\tif (value instanceof Color) {\n\t\t\t\t\tif (old instanceof Color) {\n\t\t\t\t\t\told.copy(value);\n\t\t\t\t\t\treturn old;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn value.clone();\n\t\t\t\t} else if (value instanceof Array && value.length >= 3 && value.length <= 4) {\n\t\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\t\tif (typeof value[i] !== 'number') return null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!old) old = new Color();\n\t\t\t\t\told.r = value[0];\n\t\t\t\t\told.g = value[1];\n\t\t\t\t\told.b = value[2];\n\t\t\t\t\told.a = value.length === 3 ? 1 : value[3];\n\t\t\t\t\treturn old;\n\t\t\t\t} else if (typeof value === 'string' && /#([0-9abcdef]{2}){3,4}/i.test(value)) {\n\t\t\t\t\tif (!old) old = new Color();\n\t\t\t\t\told.fromString(value);\n\t\t\t\t\treturn old;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\tcase 'vec2':\n\t\t\tcase 'vec3':\n\t\t\tcase 'vec4':\n\t\t\t\tvar len = parseInt(args.type.slice(3), 10);\n\t\t\t\tvar vecType = vecLookup[len];\n\n\t\t\t\tif (value instanceof vecType) {\n\t\t\t\t\tif (old instanceof vecType) {\n\t\t\t\t\t\told.copy(value);\n\t\t\t\t\t\treturn old;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn value.clone();\n\t\t\t\t} else if (value instanceof Array && value.length === len) {\n\t\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\t\tif (typeof value[i] !== 'number') return null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!old) old = new vecType();\n\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\told[components[i]] = value[i];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn old;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\tcase 'curve':\n\t\t\t\tif (value) {\n\t\t\t\t\tvar curve;\n\n\t\t\t\t\tif (value instanceof Curve || value instanceof CurveSet) {\n\t\t\t\t\t\tcurve = value.clone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar CurveType = value.keys[0] instanceof Array ? CurveSet : Curve;\n\t\t\t\t\t\tcurve = new CurveType(value.keys);\n\t\t\t\t\t\tcurve.type = value.type;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn curve;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tvar ScriptAttributes = function () {\n\t\tfunction ScriptAttributes(scriptType) {\n\t\t\tthis.scriptType = scriptType;\n\t\t\tthis.index = {};\n\t\t}\n\n\t\tvar _proto = ScriptAttributes.prototype;\n\n\t\t_proto.add = function add(name, args) {\n\t\t\tif (this.index[name]) {\n\t\t\t\treturn;\n\t\t\t} else if (ScriptAttributes.reservedNames.has(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.index[name] = args;\n\t\t\tObject.defineProperty(this.scriptType.prototype, name, {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this.__attributes[name];\n\t\t\t\t},\n\t\t\t\tset: function set(raw) {\n\t\t\t\t\tvar evt = 'attr';\n\t\t\t\t\tvar evtName = 'attr:' + name;\n\t\t\t\t\tvar old = this.__attributes[name];\n\t\t\t\t\tvar oldCopy = old;\n\n\t\t\t\t\tif (old && args.type !== 'json' && old.clone) {\n\t\t\t\t\t\tif (this._callbacks[evt] || this._callbacks[evtName]) {\n\t\t\t\t\t\t\toldCopy = old.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (args.array) {\n\t\t\t\t\t\tthis.__attributes[name] = [];\n\n\t\t\t\t\t\tif (raw) {\n\t\t\t\t\t\t\tvar i;\n\t\t\t\t\t\t\tvar len;\n\n\t\t\t\t\t\t\tfor (i = 0, len = raw.length; i < len; i++) {\n\t\t\t\t\t\t\t\tthis.__attributes[name].push(rawToValue(this.app, args, raw[i], old ? old[i] : null));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.__attributes[name] = rawToValue(this.app, args, raw, old);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.fire(evt, name, this.__attributes[name], oldCopy);\n\t\t\t\t\tthis.fire(evtName, this.__attributes[name], oldCopy);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.remove = function remove(name) {\n\t\t\tif (!this.index[name]) return false;\n\t\t\tdelete this.index[name];\n\t\t\tdelete this.scriptType.prototype[name];\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.has = function has(name) {\n\t\t\treturn !!this.index[name];\n\t\t};\n\n\t\t_proto.get = function get(name) {\n\t\t\treturn this.index[name] || null;\n\t\t};\n\n\t\treturn ScriptAttributes;\n\t}();\n\n\tScriptAttributes.reservedNames = new Set(['app', 'entity', 'enabled', '_enabled', '_enabledOld', '_destroyed', '__attributes', '__attributesRaw', '__scriptType', '__executionOrder', '_callbacks', 'has', 'get', 'on', 'off', 'fire', 'once', 'hasEvent']);\n\n\tvar ScriptComponent = function (_Component) {\n\t\t_inheritsLoose(ScriptComponent, _Component);\n\n\t\tfunction ScriptComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._scripts = [];\n\t\t\t_this._updateList = new SortedLoopArray({\n\t\t\t\tsortBy: '__executionOrder'\n\t\t\t});\n\t\t\t_this._postUpdateList = new SortedLoopArray({\n\t\t\t\tsortBy: '__executionOrder'\n\t\t\t});\n\t\t\t_this._scriptsIndex = {};\n\t\t\t_this._destroyedScripts = [];\n\t\t\t_this._destroyed = false;\n\t\t\t_this._scriptsData = null;\n\t\t\t_this._oldState = true;\n\t\t\t_this._enabled = true;\n\t\t\t_this._beingEnabled = false;\n\t\t\t_this._isLoopingThroughScripts = false;\n\t\t\t_this._executionOrder = -1;\n\n\t\t\t_this.on('set_enabled', _this._onSetEnabled, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScriptComponent.prototype;\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._beingEnabled = true;\n\n\t\t\tthis._checkState();\n\n\t\t\tif (!this.entity._beingEnabled) {\n\t\t\t\tthis.onPostStateChange();\n\t\t\t}\n\n\t\t\tthis._beingEnabled = false;\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._checkState();\n\t\t};\n\n\t\t_proto.onPostStateChange = function onPostStateChange() {\n\t\t\tvar script;\n\n\t\t\tvar wasLooping = this._beginLooping();\n\n\t\t\tfor (var i = 0, len = this.scripts.length; i < len; i++) {\n\t\t\t\tscript = this.scripts[i];\n\n\t\t\t\tif (script._initialized && !script._postInitialized && script.enabled) {\n\t\t\t\t\tscript._postInitialized = true;\n\t\t\t\t\tif (script.postInitialize) this._scriptMethod(script, ScriptComponent.scriptMethods.postInitialize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._beginLooping = function _beginLooping() {\n\t\t\tvar looping = this._isLoopingThroughScripts;\n\t\t\tthis._isLoopingThroughScripts = true;\n\t\t\treturn looping;\n\t\t};\n\n\t\t_proto._endLooping = function _endLooping(wasLoopingBefore) {\n\t\t\tthis._isLoopingThroughScripts = wasLoopingBefore;\n\n\t\t\tif (!this._isLoopingThroughScripts) {\n\t\t\t\tthis._removeDestroyedScripts();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetEnabled = function _onSetEnabled(prop, old, value) {\n\t\t\tthis._beingEnabled = true;\n\n\t\t\tthis._checkState();\n\n\t\t\tthis._beingEnabled = false;\n\t\t};\n\n\t\t_proto._checkState = function _checkState() {\n\t\t\tvar state = this.enabled && this.entity.enabled;\n\t\t\tif (state === this._oldState) return;\n\t\t\tthis._oldState = state;\n\t\t\tthis.fire(state ? 'enable' : 'disable');\n\t\t\tthis.fire('state', state);\n\n\t\t\tif (state) {\n\t\t\t\tthis.system._addComponentToEnabled(this);\n\t\t\t} else {\n\t\t\t\tthis.system._removeComponentFromEnabled(this);\n\t\t\t}\n\n\t\t\tvar wasLooping = this._beginLooping();\n\n\t\t\tvar script;\n\n\t\t\tfor (var i = 0, len = this.scripts.length; i < len; i++) {\n\t\t\t\tscript = this.scripts[i];\n\t\t\t\tscript.enabled = script._enabled;\n\t\t\t}\n\n\t\t\tthis._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._onBeforeRemove = function _onBeforeRemove() {\n\t\t\tthis.fire('remove');\n\n\t\t\tvar wasLooping = this._beginLooping();\n\n\t\t\tfor (var i = 0; i < this.scripts.length; i++) {\n\t\t\t\tvar script = this.scripts[i];\n\t\t\t\tif (!script) continue;\n\t\t\t\tthis.destroy(script.__scriptType.__name);\n\t\t\t}\n\n\t\t\tthis._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._removeDestroyedScripts = function _removeDestroyedScripts() {\n\t\t\tvar len = this._destroyedScripts.length;\n\t\t\tif (!len) return;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tvar script = this._destroyedScripts[i];\n\n\t\t\t\tthis._removeScriptInstance(script);\n\t\t\t}\n\n\t\t\tthis._destroyedScripts.length = 0;\n\n\t\t\tthis._resetExecutionOrder(0, this._scripts.length);\n\t\t};\n\n\t\t_proto._onInitializeAttributes = function _onInitializeAttributes() {\n\t\t\tfor (var i = 0, len = this.scripts.length; i < len; i++) {\n\t\t\t\tthis.scripts[i].__initializeAttributes();\n\t\t\t}\n\t\t};\n\n\t\t_proto._scriptMethod = function _scriptMethod(script, method, arg) {\n\t\t\tscript[method](arg);\n\t\t};\n\n\t\t_proto._onInitialize = function _onInitialize() {\n\t\t\tvar script,\n\t\t\t\t\tscripts = this._scripts;\n\n\t\t\tvar wasLooping = this._beginLooping();\n\n\t\t\tfor (var i = 0, len = scripts.length; i < len; i++) {\n\t\t\t\tscript = scripts[i];\n\n\t\t\t\tif (!script._initialized && script.enabled) {\n\t\t\t\t\tscript._initialized = true;\n\t\t\t\t\tif (script.initialize) this._scriptMethod(script, ScriptComponent.scriptMethods.initialize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._onPostInitialize = function _onPostInitialize() {\n\t\t\tthis.onPostStateChange();\n\t\t};\n\n\t\t_proto._onUpdate = function _onUpdate(dt) {\n\t\t\tvar self = this;\n\t\t\tvar list = self._updateList;\n\t\t\tif (!list.length) return;\n\t\t\tvar script;\n\n\t\t\tvar wasLooping = self._beginLooping();\n\n\t\t\tfor (list.loopIndex = 0; list.loopIndex < list.length; list.loopIndex++) {\n\t\t\t\tscript = list.items[list.loopIndex];\n\n\t\t\t\tif (script.enabled) {\n\t\t\t\t\tself._scriptMethod(script, ScriptComponent.scriptMethods.update, dt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._onPostUpdate = function _onPostUpdate(dt) {\n\t\t\tvar self = this;\n\t\t\tvar list = self._postUpdateList;\n\t\t\tif (!list.length) return;\n\n\t\t\tvar wasLooping = self._beginLooping();\n\n\t\t\tvar script;\n\n\t\t\tfor (list.loopIndex = 0; list.loopIndex < list.length; list.loopIndex++) {\n\t\t\t\tscript = list.items[list.loopIndex];\n\n\t\t\t\tif (script.enabled) {\n\t\t\t\t\tself._scriptMethod(script, ScriptComponent.scriptMethods.postUpdate, dt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself._endLooping(wasLooping);\n\t\t};\n\n\t\t_proto._insertScriptInstance = function _insertScriptInstance(scriptInstance, index, scriptsLength) {\n\t\t\tif (index === -1) {\n\t\t\t\tthis._scripts.push(scriptInstance);\n\n\t\t\t\tscriptInstance.__executionOrder = scriptsLength;\n\n\t\t\t\tif (scriptInstance.update) {\n\t\t\t\t\tthis._updateList.append(scriptInstance);\n\t\t\t\t}\n\n\t\t\t\tif (scriptInstance.postUpdate) {\n\t\t\t\t\tthis._postUpdateList.append(scriptInstance);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._scripts.splice(index, 0, scriptInstance);\n\n\t\t\t\tscriptInstance.__executionOrder = index;\n\n\t\t\t\tthis._resetExecutionOrder(index + 1, scriptsLength + 1);\n\n\t\t\t\tif (scriptInstance.update) {\n\t\t\t\t\tthis._updateList.insert(scriptInstance);\n\t\t\t\t}\n\n\t\t\t\tif (scriptInstance.postUpdate) {\n\t\t\t\t\tthis._postUpdateList.insert(scriptInstance);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._removeScriptInstance = function _removeScriptInstance(scriptInstance) {\n\t\t\tvar idx = this._scripts.indexOf(scriptInstance);\n\n\t\t\tif (idx === -1) return idx;\n\n\t\t\tthis._scripts.splice(idx, 1);\n\n\t\t\tif (scriptInstance.update) {\n\t\t\t\tthis._updateList.remove(scriptInstance);\n\t\t\t}\n\n\t\t\tif (scriptInstance.postUpdate) {\n\t\t\t\tthis._postUpdateList.remove(scriptInstance);\n\t\t\t}\n\n\t\t\treturn idx;\n\t\t};\n\n\t\t_proto._resetExecutionOrder = function _resetExecutionOrder(startIndex, scriptsLength) {\n\t\t\tfor (var i = startIndex; i < scriptsLength; i++) {\n\t\t\t\tthis._scripts[i].__executionOrder = i;\n\t\t\t}\n\t\t};\n\n\t\t_proto._resolveEntityScriptAttribute = function _resolveEntityScriptAttribute(attribute, attributeName, oldValue, useGuid, newAttributes, duplicatedIdsMap) {\n\t\t\tif (attribute.array) {\n\t\t\t\tvar len = oldValue.length;\n\n\t\t\t\tif (!len) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar newGuidArray = oldValue.slice();\n\n\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\tvar guid = newGuidArray[i] instanceof Entity ? newGuidArray[i].getGuid() : newGuidArray[i];\n\n\t\t\t\t\tif (duplicatedIdsMap[guid]) {\n\t\t\t\t\t\tnewGuidArray[i] = useGuid ? duplicatedIdsMap[guid].getGuid() : duplicatedIdsMap[guid];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewAttributes[attributeName] = newGuidArray;\n\t\t\t} else {\n\t\t\t\tif (oldValue instanceof Entity) {\n\t\t\t\t\toldValue = oldValue.getGuid();\n\t\t\t\t} else if (typeof oldValue !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (duplicatedIdsMap[oldValue]) {\n\t\t\t\t\tnewAttributes[attributeName] = duplicatedIdsMap[oldValue];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.has = function has(nameOrType) {\n\t\t\tif (typeof nameOrType === 'string') {\n\t\t\t\treturn !!this._scriptsIndex[nameOrType];\n\t\t\t}\n\n\t\t\tif (!nameOrType) return false;\n\t\t\tvar scriptType = nameOrType;\n\t\t\tvar scriptName = scriptType.__name;\n\t\t\tvar scriptData = this._scriptsIndex[scriptName];\n\t\t\tvar scriptInstance = scriptData && scriptData.instance;\n\t\t\treturn scriptInstance instanceof scriptType;\n\t\t};\n\n\t\t_proto.get = function get(nameOrType) {\n\t\t\tif (typeof nameOrType === 'string') {\n\t\t\t\tvar data = this._scriptsIndex[nameOrType];\n\t\t\t\treturn data ? data.instance : null;\n\t\t\t}\n\n\t\t\tif (!nameOrType) return null;\n\t\t\tvar scriptType = nameOrType;\n\t\t\tvar scriptName = scriptType.__name;\n\t\t\tvar scriptData = this._scriptsIndex[scriptName];\n\t\t\tvar scriptInstance = scriptData && scriptData.instance;\n\t\t\treturn scriptInstance instanceof scriptType ? scriptInstance : null;\n\t\t};\n\n\t\t_proto.create = function create(nameOrType, args) {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = {};\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tvar scriptType = nameOrType;\n\t\t\tvar scriptName = nameOrType;\n\n\t\t\tif (typeof scriptType === 'string') {\n\t\t\t\tscriptType = this.system.app.scripts.get(scriptType);\n\t\t\t} else if (scriptType) {\n\t\t\t\tscriptName = scriptType.__name;\n\t\t\t}\n\n\t\t\tif (scriptType) {\n\t\t\t\tif (!this._scriptsIndex[scriptName] || !this._scriptsIndex[scriptName].instance) {\n\t\t\t\t\tvar scriptInstance = new scriptType({\n\t\t\t\t\t\tapp: this.system.app,\n\t\t\t\t\t\tentity: this.entity,\n\t\t\t\t\t\tenabled: args.hasOwnProperty('enabled') ? args.enabled : true,\n\t\t\t\t\t\tattributes: args.attributes\n\t\t\t\t\t});\n\t\t\t\t\tvar len = this._scripts.length;\n\t\t\t\t\tvar ind = -1;\n\t\t\t\t\tif (typeof args.ind === 'number' && args.ind !== -1 && len > args.ind) ind = args.ind;\n\n\t\t\t\t\tthis._insertScriptInstance(scriptInstance, ind, len);\n\n\t\t\t\t\tthis._scriptsIndex[scriptName] = {\n\t\t\t\t\t\tinstance: scriptInstance,\n\t\t\t\t\t\tonSwap: function onSwap() {\n\t\t\t\t\t\t\tself.swap(scriptName);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tthis[scriptName] = scriptInstance;\n\t\t\t\t\tif (!args.preloading) scriptInstance.__initializeAttributes();\n\t\t\t\t\tthis.fire('create', scriptName, scriptInstance);\n\t\t\t\t\tthis.fire('create:' + scriptName, scriptInstance);\n\t\t\t\t\tthis.system.app.scripts.on('swap:' + scriptName, this._scriptsIndex[scriptName].onSwap);\n\n\t\t\t\t\tif (!args.preloading) {\n\t\t\t\t\t\tif (scriptInstance.enabled && !scriptInstance._initialized) {\n\t\t\t\t\t\t\tscriptInstance._initialized = true;\n\t\t\t\t\t\t\tif (scriptInstance.initialize) this._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.initialize);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scriptInstance.enabled && !scriptInstance._postInitialized) {\n\t\t\t\t\t\t\tscriptInstance._postInitialized = true;\n\t\t\t\t\t\t\tif (scriptInstance.postInitialize) this._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.postInitialize);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn scriptInstance;\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('script \\'' + scriptName + '\\' is already added to entity \\'' + this.entity.name + '\\'');\n\t\t\t} else {\n\t\t\t\tthis._scriptsIndex[scriptName] = {\n\t\t\t\t\tawaiting: true,\n\t\t\t\t\tind: this._scripts.length\n\t\t\t\t};\n\t\t\t\tconsole.warn('script \\'' + scriptName + '\\' is not found, awaiting it to be added to registry');\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.destroy = function destroy(nameOrType) {\n\t\t\tvar scriptName = nameOrType;\n\t\t\tvar scriptType = nameOrType;\n\n\t\t\tif (typeof scriptType === 'string') {\n\t\t\t\tscriptType = this.system.app.scripts.get(scriptType);\n\t\t\t} else if (scriptType) {\n\t\t\t\tscriptName = scriptType.__name;\n\t\t\t}\n\n\t\t\tvar scriptData = this._scriptsIndex[scriptName];\n\t\t\tdelete this._scriptsIndex[scriptName];\n\t\t\tif (!scriptData) return false;\n\t\t\tvar scriptInstance = scriptData.instance;\n\n\t\t\tif (scriptInstance && !scriptInstance._destroyed) {\n\t\t\t\tscriptInstance.enabled = false;\n\t\t\t\tscriptInstance._destroyed = true;\n\n\t\t\t\tif (!this._isLoopingThroughScripts) {\n\t\t\t\t\tvar ind = this._removeScriptInstance(scriptInstance);\n\n\t\t\t\t\tif (ind >= 0) {\n\t\t\t\t\t\tthis._resetExecutionOrder(ind, this._scripts.length);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._destroyedScripts.push(scriptInstance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.system.app.scripts.off('swap:' + scriptName, scriptData.onSwap);\n\t\t\tdelete this[scriptName];\n\t\t\tthis.fire('destroy', scriptName, scriptInstance || null);\n\t\t\tthis.fire('destroy:' + scriptName, scriptInstance || null);\n\t\t\tif (scriptInstance) scriptInstance.fire('destroy');\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.swap = function swap(nameOrType) {\n\t\t\tvar scriptName = nameOrType;\n\t\t\tvar scriptType = nameOrType;\n\n\t\t\tif (typeof scriptType === 'string') {\n\t\t\t\tscriptType = this.system.app.scripts.get(scriptType);\n\t\t\t} else if (scriptType) {\n\t\t\t\tscriptName = scriptType.__name;\n\t\t\t}\n\n\t\t\tvar old = this._scriptsIndex[scriptName];\n\t\t\tif (!old || !old.instance) return false;\n\t\t\tvar scriptInstanceOld = old.instance;\n\n\t\t\tvar ind = this._scripts.indexOf(scriptInstanceOld);\n\n\t\t\tvar scriptInstance = new scriptType({\n\t\t\t\tapp: this.system.app,\n\t\t\t\tentity: this.entity,\n\t\t\t\tenabled: scriptInstanceOld.enabled,\n\t\t\t\tattributes: scriptInstanceOld.__attributes\n\t\t\t});\n\t\t\tif (!scriptInstance.swap) return false;\n\n\t\t\tscriptInstance.__initializeAttributes();\n\n\t\t\tthis._scripts[ind] = scriptInstance;\n\t\t\tthis._scriptsIndex[scriptName].instance = scriptInstance;\n\t\t\tthis[scriptName] = scriptInstance;\n\t\t\tscriptInstance.__executionOrder = ind;\n\n\t\t\tif (scriptInstanceOld.update) {\n\t\t\t\tthis._updateList.remove(scriptInstanceOld);\n\t\t\t}\n\n\t\t\tif (scriptInstanceOld.postUpdate) {\n\t\t\t\tthis._postUpdateList.remove(scriptInstanceOld);\n\t\t\t}\n\n\t\t\tif (scriptInstance.update) {\n\t\t\t\tthis._updateList.insert(scriptInstance);\n\t\t\t}\n\n\t\t\tif (scriptInstance.postUpdate) {\n\t\t\t\tthis._postUpdateList.insert(scriptInstance);\n\t\t\t}\n\n\t\t\tthis._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.swap, scriptInstanceOld);\n\n\t\t\tthis.fire('swap', scriptName, scriptInstance);\n\t\t\tthis.fire('swap:' + scriptName, scriptInstance);\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.resolveDuplicatedEntityReferenceProperties = function resolveDuplicatedEntityReferenceProperties(oldScriptComponent, duplicatedIdsMap) {\n\t\t\tvar newScriptComponent = this.entity.script;\n\t\t\tvar i, j;\n\n\t\t\tfor (var scriptName in oldScriptComponent._scriptsIndex) {\n\t\t\t\tvar scriptType = this.system.app.scripts.get(scriptName);\n\n\t\t\t\tif (!scriptType) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar script = oldScriptComponent._scriptsIndex[scriptName];\n\n\t\t\t\tif (!script || !script.instance) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar newAttributesRaw = newScriptComponent[scriptName].__attributesRaw;\n\t\t\t\tvar newAttributes = newScriptComponent[scriptName].__attributes;\n\n\t\t\t\tif (!newAttributesRaw && !newAttributes) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar useGuid = !!newAttributesRaw;\n\t\t\t\tvar oldAttributes = script.instance.__attributes;\n\n\t\t\t\tfor (var attributeName in oldAttributes) {\n\t\t\t\t\tif (!oldAttributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar attribute = scriptType.attributes.get(attributeName);\n\n\t\t\t\t\tif (!attribute) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attribute.type === 'entity') {\n\t\t\t\t\t\tthis._resolveEntityScriptAttribute(attribute, attributeName, oldAttributes[attributeName], useGuid, newAttributesRaw || newAttributes, duplicatedIdsMap);\n\t\t\t\t\t} else if (attribute.type === 'json' && Array.isArray(attribute.schema)) {\n\t\t\t\t\t\tvar oldValue = oldAttributes[attributeName];\n\t\t\t\t\t\tvar newJsonValue = newAttributesRaw ? newAttributesRaw[attributeName] : newAttributes[attributeName];\n\n\t\t\t\t\t\tfor (i = 0; i < attribute.schema.length; i++) {\n\t\t\t\t\t\t\tvar field = attribute.schema[i];\n\n\t\t\t\t\t\t\tif (field.type !== 'entity') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (attribute.array) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < oldValue.length; j++) {\n\t\t\t\t\t\t\t\t\tthis._resolveEntityScriptAttribute(field, field.name, oldValue[j][field.name], useGuid, newJsonValue[j], duplicatedIdsMap);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._resolveEntityScriptAttribute(field, field.name, oldValue[field.name], useGuid, newJsonValue, duplicatedIdsMap);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.move = function move(nameOrType, ind) {\n\t\t\tvar len = this._scripts.length;\n\t\t\tif (ind >= len || ind < 0) return false;\n\t\t\tvar scriptType = nameOrType;\n\t\t\tvar scriptName = nameOrType;\n\n\t\t\tif (typeof scriptName !== 'string') {\n\t\t\t\tscriptName = nameOrType.__name;\n\t\t\t} else {\n\t\t\t\tscriptType = null;\n\t\t\t}\n\n\t\t\tvar scriptData = this._scriptsIndex[scriptName];\n\t\t\tif (!scriptData || !scriptData.instance) return false;\n\t\t\tvar scriptInstance = scriptData.instance;\n\t\t\tif (scriptType && !(scriptInstance instanceof scriptType)) return false;\n\n\t\t\tvar indOld = this._scripts.indexOf(scriptInstance);\n\n\t\t\tif (indOld === -1 || indOld === ind) return false;\n\n\t\t\tthis._scripts.splice(ind, 0, this._scripts.splice(indOld, 1)[0]);\n\n\t\t\tthis._resetExecutionOrder(0, len);\n\n\t\t\tthis._updateList.sort();\n\n\t\t\tthis._postUpdateList.sort();\n\n\t\t\tthis.fire('move', scriptName, scriptInstance, ind, indOld);\n\t\t\tthis.fire('move:' + scriptName, scriptInstance, ind, indOld);\n\t\t\treturn true;\n\t\t};\n\n\t\t_createClass(ScriptComponent, [{\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar oldValue = this._enabled;\n\t\t\t\tthis._enabled = value;\n\t\t\t\tthis.fire('set', 'enabled', oldValue, value);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"scripts\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._scripts;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._scriptsData = value;\n\n\t\t\t\tfor (var key in value) {\n\t\t\t\t\tif (!value.hasOwnProperty(key)) continue;\n\t\t\t\t\tvar script = this._scriptsIndex[key];\n\n\t\t\t\t\tif (script) {\n\t\t\t\t\t\tif (typeof value[key].enabled === 'boolean') script.enabled = !!value[key].enabled;\n\n\t\t\t\t\t\tif (typeof value[key].attributes === 'object') {\n\t\t\t\t\t\t\tfor (var attr in value[key].attributes) {\n\t\t\t\t\t\t\t\tif (ScriptAttributes.reservedNames.has(attr)) continue;\n\n\t\t\t\t\t\t\t\tif (!script.__attributes.hasOwnProperty(attr)) {\n\t\t\t\t\t\t\t\t\tvar scriptType = this.system.app.scripts.get(key);\n\t\t\t\t\t\t\t\t\tif (scriptType) scriptType.attributes.add(attr, {});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tscript[attr] = value[key].attributes[attr];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(this.order);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn ScriptComponent;\n\t}(Component);\n\n\tScriptComponent.scriptMethods = {\n\t\tinitialize: 'initialize',\n\t\tpostInitialize: 'postInitialize',\n\t\tupdate: 'update',\n\t\tpostUpdate: 'postUpdate',\n\t\tswap: 'swap'\n\t};\n\n\tvar ScriptComponentData = function ScriptComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar METHOD_INITIALIZE_ATTRIBUTES = '_onInitializeAttributes';\n\tvar METHOD_INITIALIZE = '_onInitialize';\n\tvar METHOD_POST_INITIALIZE = '_onPostInitialize';\n\tvar METHOD_UPDATE = '_onUpdate';\n\tvar METHOD_POST_UPDATE = '_onPostUpdate';\n\tvar executionOrderCounter = 0;\n\n\tvar ScriptComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ScriptComponentSystem, _ComponentSystem);\n\n\t\tfunction ScriptComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'script';\n\t\t\t_this.ComponentType = ScriptComponent;\n\t\t\t_this.DataType = ScriptComponentData;\n\t\t\t_this._components = new SortedLoopArray({\n\t\t\t\tsortBy: '_executionOrder'\n\t\t\t});\n\t\t\t_this._enabledComponents = new SortedLoopArray({\n\t\t\t\tsortBy: '_executionOrder'\n\t\t\t});\n\t\t\t_this.preloading = true;\n\n\t\t\t_this.on('beforeremove', _this._onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('initialize', _this._onInitialize, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind('postInitialize', _this._onPostInitialize, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind('update', _this._onUpdate, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind('postUpdate', _this._onPostUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScriptComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data) {\n\t\t\tcomponent._executionOrder = executionOrderCounter++;\n\n\t\t\tthis._components.append(component);\n\n\t\t\tif (executionOrderCounter > Number.MAX_SAFE_INTEGER) {\n\t\t\t\tthis._resetExecutionOrder();\n\t\t\t}\n\n\t\t\tcomponent.enabled = data.hasOwnProperty('enabled') ? !!data.enabled : true;\n\n\t\t\tif (component.enabled && component.entity.enabled) {\n\t\t\t\tthis._enabledComponents.append(component);\n\t\t\t}\n\n\t\t\tif (data.hasOwnProperty('order') && data.hasOwnProperty('scripts')) {\n\t\t\t\tcomponent._scriptsData = data.scripts;\n\n\t\t\t\tfor (var i = 0; i < data.order.length; i++) {\n\t\t\t\t\tcomponent.create(data.order[i], {\n\t\t\t\t\t\tenabled: data.scripts[data.order[i]].enabled,\n\t\t\t\t\t\tattributes: data.scripts[data.order[i]].attributes,\n\t\t\t\t\t\tpreloading: this.preloading\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar i, key;\n\t\t\tvar order = [];\n\t\t\tvar scripts = {};\n\n\t\t\tfor (i = 0; i < entity.script._scripts.length; i++) {\n\t\t\t\tvar scriptInstance = entity.script._scripts[i];\n\t\t\t\tvar scriptName = scriptInstance.__scriptType.__name;\n\t\t\t\torder.push(scriptName);\n\t\t\t\tvar attributes = {};\n\n\t\t\t\tfor (key in scriptInstance.__attributes) {\n\t\t\t\t\tattributes[key] = scriptInstance.__attributes[key];\n\t\t\t\t}\n\n\t\t\t\tscripts[scriptName] = {\n\t\t\t\t\tenabled: scriptInstance._enabled,\n\t\t\t\t\tattributes: attributes\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfor (key in entity.script._scriptsIndex) {\n\t\t\t\tif (key.awaiting) {\n\t\t\t\t\torder.splice(key.ind, 0, key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tenabled: entity.script.enabled,\n\t\t\t\torder: order,\n\t\t\t\tscripts: scripts\n\t\t\t};\n\t\t\treturn this.addComponent(clone, data);\n\t\t};\n\n\t\t_proto._resetExecutionOrder = function _resetExecutionOrder() {\n\t\t\texecutionOrderCounter = 0;\n\n\t\t\tfor (var i = 0, len = this._components.length; i < len; i++) {\n\t\t\t\tthis._components.items[i]._executionOrder = executionOrderCounter++;\n\t\t\t}\n\t\t};\n\n\t\t_proto._callComponentMethod = function _callComponentMethod(components, name, dt) {\n\t\t\tfor (components.loopIndex = 0; components.loopIndex < components.length; components.loopIndex++) {\n\t\t\t\tcomponents.items[components.loopIndex][name](dt);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onInitialize = function _onInitialize() {\n\t\t\tthis.preloading = false;\n\n\t\t\tthis._callComponentMethod(this._components, METHOD_INITIALIZE_ATTRIBUTES);\n\n\t\t\tthis._callComponentMethod(this._enabledComponents, METHOD_INITIALIZE);\n\t\t};\n\n\t\t_proto._onPostInitialize = function _onPostInitialize() {\n\t\t\tthis._callComponentMethod(this._enabledComponents, METHOD_POST_INITIALIZE);\n\t\t};\n\n\t\t_proto._onUpdate = function _onUpdate(dt) {\n\t\t\tthis._callComponentMethod(this._enabledComponents, METHOD_UPDATE, dt);\n\t\t};\n\n\t\t_proto._onPostUpdate = function _onPostUpdate(dt) {\n\t\t\tthis._callComponentMethod(this._enabledComponents, METHOD_POST_UPDATE, dt);\n\t\t};\n\n\t\t_proto._addComponentToEnabled = function _addComponentToEnabled(component) {\n\t\t\tthis._enabledComponents.insert(component);\n\t\t};\n\n\t\t_proto._removeComponentFromEnabled = function _removeComponentFromEnabled(component) {\n\t\t\tthis._enabledComponents.remove(component);\n\t\t};\n\n\t\t_proto._onBeforeRemove = function _onBeforeRemove(entity, component) {\n\t\t\tvar ind = this._components.items.indexOf(component);\n\n\t\t\tif (ind >= 0) {\n\t\t\t\tcomponent._onBeforeRemove();\n\t\t\t}\n\n\t\t\tthis._removeComponentFromEnabled(component);\n\n\t\t\tthis._components.remove(component);\n\t\t};\n\n\t\treturn ScriptComponentSystem;\n\t}(ComponentSystem);\n\n\tvar ScriptLegacyComponent = function (_Component) {\n\t\t_inheritsLoose(ScriptLegacyComponent, _Component);\n\n\t\tfunction ScriptLegacyComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\n\t\t\t_this.on(\"set_scripts\", _this.onSetScripts, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScriptLegacyComponent.prototype;\n\n\t\t_proto.send = function send(name, functionName) {\n\t\t\tvar args = Array.prototype.slice.call(arguments, 2);\n\t\t\tvar instances = this.entity.script.instances;\n\t\t\tvar fn;\n\n\t\t\tif (instances && instances[name]) {\n\t\t\t\tfn = instances[name].instance[functionName];\n\n\t\t\t\tif (fn) {\n\t\t\t\t\treturn fn.apply(instances[name].instance, args);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tif (this.data.areScriptsLoaded && !this.system.preloading) {\n\t\t\t\tif (!this.data.initialized) {\n\t\t\t\t\tthis.system._initializeScriptComponent(this);\n\t\t\t\t} else {\n\t\t\t\t\tthis.system._enableScriptComponent(this);\n\t\t\t\t}\n\n\t\t\t\tif (!this.data.postInitialized) {\n\t\t\t\t\tthis.system._postInitializeScriptComponent(this);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis.system._disableScriptComponent(this);\n\t\t};\n\n\t\t_proto.onSetScripts = function onSetScripts(name, oldValue, newValue) {\n\t\t\tif (!this.system._inTools || this.runInTools) {\n\t\t\t\tif (this._updateScriptAttributes(oldValue, newValue)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.enabled) {\n\t\t\t\t\tthis.system._disableScriptComponent(this);\n\t\t\t\t}\n\n\t\t\t\tthis.system._destroyScriptComponent(this);\n\n\t\t\t\tthis.data.areScriptsLoaded = false;\n\t\t\t\tvar scripts = newValue;\n\t\t\t\tvar urls = scripts.map(function (s) {\n\t\t\t\t\treturn s.url;\n\t\t\t\t});\n\n\t\t\t\tif (this._loadFromCache(urls)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._loadScripts(urls);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateScriptAttributes = function _updateScriptAttributes(oldValue, newValue) {\n\t\t\tvar onlyUpdateAttributes = true;\n\n\t\t\tif (oldValue.length !== newValue.length) {\n\t\t\t\tonlyUpdateAttributes = false;\n\t\t\t} else {\n\t\t\t\tvar i,\n\t\t\t\t\t\tlen = newValue.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (oldValue[i].url !== newValue[i].url) {\n\t\t\t\t\t\tonlyUpdateAttributes = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onlyUpdateAttributes) {\n\t\t\t\tfor (var key in this.instances) {\n\t\t\t\t\tif (this.instances.hasOwnProperty(key)) {\n\t\t\t\t\t\tthis.system._updateAccessors(this.entity, this.instances[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn onlyUpdateAttributes;\n\t\t};\n\n\t\t_proto._loadFromCache = function _loadFromCache(urls) {\n\t\t\tvar i, len;\n\t\t\tvar cached = [];\n\t\t\tvar prefix = this.system.app._scriptPrefix || \"\";\n\t\t\tvar regex = /^http(s)?:\\/\\//i;\n\n\t\t\tfor (i = 0, len = urls.length; i < len; i++) {\n\t\t\t\tvar url = urls[i];\n\n\t\t\t\tif (!regex.test(url)) {\n\t\t\t\t\turl = path.join(prefix, url);\n\t\t\t\t}\n\n\t\t\t\tvar type = this.system.app.loader.getFromCache(url, 'script');\n\n\t\t\t\tif (!type) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tcached.push(type);\n\t\t\t}\n\n\t\t\tfor (i = 0, len = cached.length; i < len; i++) {\n\t\t\t\tvar ScriptType = cached[i];\n\n\t\t\t\tif (ScriptType === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ScriptType && this.entity.script) {\n\t\t\t\t\tif (!this.entity.script.instances[ScriptType._pcScriptName]) {\n\t\t\t\t\t\tvar instance = new ScriptType(this.entity);\n\n\t\t\t\t\t\tthis.system._preRegisterInstance(this.entity, urls[i], ScriptType._pcScriptName, instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.data) {\n\t\t\t\tthis.data.areScriptsLoaded = true;\n\t\t\t}\n\n\t\t\tif (!this.system.preloading) {\n\t\t\t\tthis.system.onInitialize(this.entity);\n\t\t\t\tthis.system.onPostInitialize(this.entity);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto._loadScripts = function _loadScripts(urls) {\n\t\t\tvar count = urls.length;\n\t\t\tvar prefix = this.system.app._scriptPrefix || \"\";\n\t\t\turls.forEach(function (url) {\n\t\t\t\tvar _url = null;\n\t\t\t\tvar _unprefixed = null;\n\n\t\t\t\tif (url.toLowerCase().startsWith(\"http://\") || url.toLowerCase().startsWith(\"https://\")) {\n\t\t\t\t\t_unprefixed = url;\n\t\t\t\t\t_url = url;\n\t\t\t\t} else {\n\t\t\t\t\t_unprefixed = url;\n\t\t\t\t\t_url = path.join(prefix, url);\n\t\t\t\t}\n\n\t\t\t\tthis.system.app.loader.load(_url, \"script\", function (err, ScriptType) {\n\t\t\t\t\tcount--;\n\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tif (ScriptType && this.entity.script) {\n\t\t\t\t\t\t\tif (!this.entity.script.instances[ScriptType._pcScriptName]) {\n\t\t\t\t\t\t\t\tvar instance = new ScriptType(this.entity);\n\n\t\t\t\t\t\t\t\tthis.system._preRegisterInstance(this.entity, _unprefixed, ScriptType._pcScriptName, instance);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tthis.data.areScriptsLoaded = true;\n\n\t\t\t\t\t\tif (!this.system.preloading) {\n\t\t\t\t\t\t\tthis.system.onInitialize(this.entity);\n\t\t\t\t\t\t\tthis.system.onPostInitialize(this.entity);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\t\t};\n\n\t\treturn ScriptLegacyComponent;\n\t}(Component);\n\n\tvar ScriptLegacyComponentData = function ScriptLegacyComponentData() {\n\t\tthis.scripts = [];\n\t\tthis.enabled = true;\n\t\tthis.instances = {};\n\t\tthis._instances = {};\n\t\tthis.runInTools = false;\n\t\tthis.attributes = {};\n\t\tthis.initialized = false;\n\t\tthis.postInitialized = false;\n\t\tthis.areScriptsLoaded = false;\n\t};\n\n\tvar _schema$f = ['enabled', 'scripts', 'instances', 'runInTools'];\n\tvar INITIALIZE = \"initialize\";\n\tvar POST_INITIALIZE = \"postInitialize\";\n\tvar UPDATE = \"update\";\n\tvar POST_UPDATE = \"postUpdate\";\n\tvar FIXED_UPDATE = \"fixedUpdate\";\n\tvar TOOLS_UPDATE = \"toolsUpdate\";\n\tvar ON_ENABLE = 'onEnable';\n\tvar ON_DISABLE = 'onDisable';\n\n\tvar ScriptLegacyComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ScriptLegacyComponentSystem, _ComponentSystem);\n\n\t\tfunction ScriptLegacyComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'script';\n\t\t\t_this.ComponentType = ScriptLegacyComponent;\n\t\t\t_this.DataType = ScriptLegacyComponentData;\n\t\t\t_this.schema = _schema$f;\n\t\t\t_this.preloading = false;\n\t\t\t_this.instancesWithUpdate = [];\n\t\t\t_this.instancesWithFixedUpdate = [];\n\t\t\t_this.instancesWithPostUpdate = [];\n\t\t\t_this.instancesWithToolsUpdate = [];\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind(INITIALIZE, _this.onInitialize, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind(POST_INITIALIZE, _this.onPostInitialize, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind(UPDATE, _this.onUpdate, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind(FIXED_UPDATE, _this.onFixedUpdate, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind(POST_UPDATE, _this.onPostUpdate, _assertThisInitialized(_this));\n\t\t\tComponentSystem.bind(TOOLS_UPDATE, _this.onToolsUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScriptLegacyComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['runInTools', 'enabled', 'scripts'];\n\n\t\t\tif (data.scripts && data.scripts.length) {\n\t\t\t\tdata.scripts.forEach(function (script) {\n\t\t\t\t\tif (script.attributes && Array.isArray(script.attributes)) {\n\t\t\t\t\t\tvar dict = {};\n\n\t\t\t\t\t\tfor (var i = 0; i < script.attributes.length; i++) {\n\t\t\t\t\t\t\tdict[script.attributes[i].name] = script.attributes[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscript.attributes = dict;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar src = this.store[entity.getGuid()];\n\t\t\tvar data = {\n\t\t\t\trunInTools: src.data.runInTools,\n\t\t\t\tscripts: [],\n\t\t\t\tenabled: src.data.enabled\n\t\t\t};\n\t\t\tvar scripts = src.data.scripts;\n\n\t\t\tfor (var i = 0, len = scripts.length; i < len; i++) {\n\t\t\t\tvar attributes = scripts[i].attributes;\n\n\t\t\t\tif (attributes) {\n\t\t\t\t\tdelete scripts[i].attributes;\n\t\t\t\t}\n\n\t\t\t\tdata.scripts.push(extend({}, scripts[i]));\n\n\t\t\t\tif (attributes) {\n\t\t\t\t\tdata.scripts[i].attributes = this._cloneAttributes(attributes);\n\t\t\t\t\tscripts[i].attributes = attributes;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.addComponent(clone, data);\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tif (component.enabled) {\n\t\t\t\tthis._disableScriptComponent(component);\n\t\t\t}\n\n\t\t\tthis._destroyScriptComponent(component);\n\t\t};\n\n\t\t_proto.onInitialize = function onInitialize(root) {\n\t\t\tthis._registerInstances(root);\n\n\t\t\tif (root.enabled) {\n\t\t\t\tif (root.script && root.script.enabled) {\n\t\t\t\t\tthis._initializeScriptComponent(root.script);\n\t\t\t\t}\n\n\t\t\t\tvar children = root._children;\n\t\t\t\tvar i,\n\t\t\t\t\t\tlen = children.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (children[i] instanceof Entity) {\n\t\t\t\t\t\tthis.onInitialize(children[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onPostInitialize = function onPostInitialize(root) {\n\t\t\tif (root.enabled) {\n\t\t\t\tif (root.script && root.script.enabled) {\n\t\t\t\t\tthis._postInitializeScriptComponent(root.script);\n\t\t\t\t}\n\n\t\t\t\tvar children = root._children;\n\t\t\t\tvar i,\n\t\t\t\t\t\tlen = children.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (children[i] instanceof Entity) {\n\t\t\t\t\t\tthis.onPostInitialize(children[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._callInstancesMethod = function _callInstancesMethod(script, method) {\n\t\t\tvar instances = script.data.instances;\n\n\t\t\tfor (var name in instances) {\n\t\t\t\tif (instances.hasOwnProperty(name)) {\n\t\t\t\t\tvar instance = instances[name].instance;\n\n\t\t\t\t\tif (instance[method]) {\n\t\t\t\t\t\tinstance[method]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._initializeScriptComponent = function _initializeScriptComponent(script) {\n\t\t\tthis._callInstancesMethod(script, INITIALIZE);\n\n\t\t\tscript.data.initialized = true;\n\n\t\t\tif (script.enabled && script.entity.enabled) {\n\t\t\t\tthis._enableScriptComponent(script);\n\t\t\t}\n\t\t};\n\n\t\t_proto._enableScriptComponent = function _enableScriptComponent(script) {\n\t\t\tthis._callInstancesMethod(script, ON_ENABLE);\n\t\t};\n\n\t\t_proto._disableScriptComponent = function _disableScriptComponent(script) {\n\t\t\tthis._callInstancesMethod(script, ON_DISABLE);\n\t\t};\n\n\t\t_proto._destroyScriptComponent = function _destroyScriptComponent(script) {\n\t\t\tvar index;\n\t\t\tvar instances = script.data.instances;\n\n\t\t\tfor (var name in instances) {\n\t\t\t\tif (instances.hasOwnProperty(name)) {\n\t\t\t\t\tvar instance = instances[name].instance;\n\n\t\t\t\t\tif (instance.destroy) {\n\t\t\t\t\t\tinstance.destroy();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance.update) {\n\t\t\t\t\t\tindex = this.instancesWithUpdate.indexOf(instance);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis.instancesWithUpdate.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance.fixedUpdate) {\n\t\t\t\t\t\tindex = this.instancesWithFixedUpdate.indexOf(instance);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis.instancesWithFixedUpdate.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance.postUpdate) {\n\t\t\t\t\t\tindex = this.instancesWithPostUpdate.indexOf(instance);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis.instancesWithPostUpdate.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance.toolsUpdate) {\n\t\t\t\t\t\tindex = this.instancesWithToolsUpdate.indexOf(instance);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis.instancesWithToolsUpdate.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (script.instances[name].instance === script[name]) {\n\t\t\t\t\t\tdelete script[name];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete script.instances[name];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._postInitializeScriptComponent = function _postInitializeScriptComponent(script) {\n\t\t\tthis._callInstancesMethod(script, POST_INITIALIZE);\n\n\t\t\tscript.data.postInitialized = true;\n\t\t};\n\n\t\t_proto._updateInstances = function _updateInstances(method, updateList, dt) {\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0, len = updateList.length; i < len; i++) {\n\t\t\t\titem = updateList[i];\n\n\t\t\t\tif (item && item.entity && item.entity.enabled && item.entity.script.enabled) {\n\t\t\t\t\titem[method](dt);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tthis._updateInstances(UPDATE, this.instancesWithUpdate, dt);\n\t\t};\n\n\t\t_proto.onFixedUpdate = function onFixedUpdate(dt) {\n\t\t\tthis._updateInstances(FIXED_UPDATE, this.instancesWithFixedUpdate, dt);\n\t\t};\n\n\t\t_proto.onPostUpdate = function onPostUpdate(dt) {\n\t\t\tthis._updateInstances(POST_UPDATE, this.instancesWithPostUpdate, dt);\n\t\t};\n\n\t\t_proto.onToolsUpdate = function onToolsUpdate(dt) {\n\t\t\tthis._updateInstances(TOOLS_UPDATE, this.instancesWithToolsUpdate, dt);\n\t\t};\n\n\t\t_proto.broadcast = function broadcast(name, functionName) {\n\t\t\tvar args = Array.prototype.slice.call(arguments, 2);\n\t\t\tvar id, data, fn;\n\t\t\tvar dataStore = this.store;\n\n\t\t\tfor (id in dataStore) {\n\t\t\t\tif (dataStore.hasOwnProperty(id)) {\n\t\t\t\t\tdata = dataStore[id].data;\n\n\t\t\t\t\tif (data.instances[name]) {\n\t\t\t\t\t\tfn = data.instances[name].instance[functionName];\n\n\t\t\t\t\t\tif (fn) {\n\t\t\t\t\t\t\tfn.apply(data.instances[name].instance, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._preRegisterInstance = function _preRegisterInstance(entity, url, name, instance) {\n\t\t\tif (entity.script) {\n\t\t\t\tentity.script.data._instances = entity.script.data._instances || {};\n\n\t\t\t\tif (entity.script.data._instances[name]) {\n\t\t\t\t\tthrow Error(\"Script name collision '\" + name + \"'. Scripts from '\" + url + \"' and '\" + entity.script.data._instances[name].url + \"' {\" + entity.getGuid() + \"}\");\n\t\t\t\t}\n\n\t\t\t\tentity.script.data._instances[name] = {\n\t\t\t\t\turl: url,\n\t\t\t\t\tname: name,\n\t\t\t\t\tinstance: instance\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t_proto._registerInstances = function _registerInstances(entity) {\n\t\t\tvar preRegistered, instance, instanceName;\n\n\t\t\tif (entity.script) {\n\t\t\t\tif (entity.script.data._instances) {\n\t\t\t\t\tentity.script.instances = entity.script.data._instances;\n\n\t\t\t\t\tfor (instanceName in entity.script.instances) {\n\t\t\t\t\t\tpreRegistered = entity.script.instances[instanceName];\n\t\t\t\t\t\tinstance = preRegistered.instance;\n\t\t\t\t\t\tevents.attach(instance);\n\n\t\t\t\t\t\tif (instance.update) {\n\t\t\t\t\t\t\tthis.instancesWithUpdate.push(instance);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (instance.fixedUpdate) {\n\t\t\t\t\t\t\tthis.instancesWithFixedUpdate.push(instance);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (instance.postUpdate) {\n\t\t\t\t\t\t\tthis.instancesWithPostUpdate.push(instance);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (instance.toolsUpdate) {\n\t\t\t\t\t\t\tthis.instancesWithToolsUpdate.push(instance);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (entity.script.scripts) {\n\t\t\t\t\t\t\tthis._createAccessors(entity, preRegistered);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (entity.script[instanceName]) {\n\t\t\t\t\t\t\tthrow Error(\"Script with name '\" + instanceName + \"' is already attached to Script Component\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tentity.script[instanceName] = instance;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete entity.script.data._instances;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar children = entity._children;\n\t\t\tvar i,\n\t\t\t\t\tlen = children.length;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (children[i] instanceof Entity) {\n\t\t\t\t\tthis._registerInstances(children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._cloneAttributes = function _cloneAttributes(attributes) {\n\t\t\tvar result = {};\n\n\t\t\tfor (var key in attributes) {\n\t\t\t\tif (!attributes.hasOwnProperty(key)) continue;\n\n\t\t\t\tif (attributes[key].type !== 'entity') {\n\t\t\t\t\tresult[key] = extend({}, attributes[key]);\n\t\t\t\t} else {\n\t\t\t\t\tvar val = attributes[key].value;\n\t\t\t\t\tdelete attributes[key].value;\n\t\t\t\t\tresult[key] = extend({}, attributes[key]);\n\t\t\t\t\tresult[key].value = val;\n\t\t\t\t\tattributes[key].value = val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto._createAccessors = function _createAccessors(entity, instance) {\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar len = entity.script.scripts.length;\n\t\t\tvar url = instance.url;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tvar script = entity.script.scripts[i];\n\n\t\t\t\tif (script.url === url) {\n\t\t\t\t\tvar attributes = script.attributes;\n\n\t\t\t\t\tif (script.name && attributes) {\n\t\t\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\t\t\tif (attributes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tself._createAccessor(attributes[key], instance);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tentity.script.data.attributes[script.name] = self._cloneAttributes(attributes);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._createAccessor = function _createAccessor(attribute, instance) {\n\t\t\tvar self = this;\n\t\t\tattribute = {\n\t\t\t\tname: attribute.name,\n\t\t\t\tvalue: attribute.value,\n\t\t\t\ttype: attribute.type\n\t\t\t};\n\n\t\t\tself._convertAttributeValue(attribute);\n\n\t\t\tObject.defineProperty(instance.instance, attribute.name, {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn attribute.value;\n\t\t\t\t},\n\t\t\t\tset: function set(value) {\n\t\t\t\t\tvar oldValue = attribute.value;\n\t\t\t\t\tattribute.value = value;\n\n\t\t\t\t\tself._convertAttributeValue(attribute);\n\n\t\t\t\t\tinstance.instance.fire(\"set\", attribute.name, oldValue, attribute.value);\n\t\t\t\t},\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t};\n\n\t\t_proto._updateAccessors = function _updateAccessors(entity, instance) {\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar len = entity.script.scripts.length;\n\t\t\tvar key;\n\t\t\tvar url = instance.url;\n\t\t\tvar scriptComponent, script, name, attributes;\n\t\t\tvar previousAttributes;\n\t\t\tvar oldAttribute;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tscriptComponent = entity.script;\n\t\t\t\tscript = scriptComponent.scripts[i];\n\n\t\t\t\tif (script.url === url) {\n\t\t\t\t\tname = script.name;\n\t\t\t\t\tattributes = script.attributes;\n\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tif (attributes) {\n\t\t\t\t\t\t\tfor (key in attributes) {\n\t\t\t\t\t\t\t\tif (attributes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\tself._createAccessor(attributes[key], instance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousAttributes = scriptComponent.data.attributes[name];\n\n\t\t\t\t\t\tif (previousAttributes) {\n\t\t\t\t\t\t\tfor (key in previousAttributes) {\n\t\t\t\t\t\t\t\toldAttribute = previousAttributes[key];\n\n\t\t\t\t\t\t\t\tif (!(key in attributes)) {\n\t\t\t\t\t\t\t\t\tdelete instance.instance[oldAttribute.name];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (attributes[key].value !== oldAttribute.value) {\n\t\t\t\t\t\t\t\t\t\tif (instance.instance.onAttributeChanged) {\n\t\t\t\t\t\t\t\t\t\t\tinstance.instance.onAttributeChanged(oldAttribute.name, oldAttribute.value, attributes[key].value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attributes) {\n\t\t\t\t\t\t\tscriptComponent.data.attributes[name] = self._cloneAttributes(attributes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete scriptComponent.data.attributes[name];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._convertAttributeValue = function _convertAttributeValue(attribute) {\n\t\t\tif (attribute.type === 'rgb' || attribute.type === 'rgba') {\n\t\t\t\tif (Array.isArray(attribute.value)) {\n\t\t\t\t\tattribute.value = attribute.value.length === 3 ? new Color(attribute.value[0], attribute.value[1], attribute.value[2]) : new Color(attribute.value[0], attribute.value[1], attribute.value[2], attribute.value[3]);\n\t\t\t\t}\n\t\t\t} else if (attribute.type === 'vec2') {\n\t\t\t\tif (Array.isArray(attribute.value)) attribute.value = new Vec2(attribute.value[0], attribute.value[1]);\n\t\t\t} else if (attribute.type === 'vec3' || attribute.type === 'vector') {\n\t\t\t\tif (Array.isArray(attribute.value)) attribute.value = new Vec3(attribute.value[0], attribute.value[1], attribute.value[2]);\n\t\t\t} else if (attribute.type === 'vec4') {\n\t\t\t\tif (Array.isArray(attribute.value)) attribute.value = new Vec4(attribute.value[0], attribute.value[1], attribute.value[2], attribute.value[3]);\n\t\t\t} else if (attribute.type === 'entity') {\n\t\t\t\tif (attribute.value !== null && typeof attribute.value === 'string') attribute.value = this.app.root.findByGuid(attribute.value);\n\t\t\t} else if (attribute.type === 'curve' || attribute.type === 'colorcurve') {\n\t\t\t\tvar curveType = attribute.value.keys[0] instanceof Array ? CurveSet : Curve;\n\t\t\t\tattribute.value = new curveType(attribute.value.keys);\n\t\t\t\tattribute.value.type = attribute.value.type;\n\t\t\t}\n\t\t};\n\n\t\treturn ScriptLegacyComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ScriptLegacyComponent.prototype, _schema$f);\n\n\tvar _inputScreenPosition = new Vec2();\n\n\tvar _inputWorldPosition = new Vec3();\n\n\tvar _rayOrigin = new Vec3();\n\n\tvar _rayDirection = new Vec3();\n\n\tvar _planeOrigin = new Vec3();\n\n\tvar _planeNormal = new Vec3();\n\n\tvar _entityRotation = new Quat();\n\n\tvar OPPOSITE_AXIS = {\n\t\tx: 'y',\n\t\ty: 'x'\n\t};\n\n\tvar ElementDragHelper = function (_EventHandler) {\n\t\t_inheritsLoose(ElementDragHelper, _EventHandler);\n\n\t\tfunction ElementDragHelper(element, axis) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\n\t\t\tif (!element || !(element instanceof ElementComponent)) {\n\t\t\t\tthrow new Error('Element was null or not an ElementComponent');\n\t\t\t}\n\n\t\t\tif (axis && axis !== 'x' && axis !== 'y') {\n\t\t\t\tthrow new Error('Unrecognized axis: ' + axis);\n\t\t\t}\n\n\t\t\t_this._element = element;\n\t\t\t_this._app = element.system.app;\n\t\t\t_this._axis = axis || null;\n\t\t\t_this._enabled = true;\n\t\t\t_this._dragScale = new Vec3();\n\t\t\t_this._dragStartMousePosition = new Vec3();\n\t\t\t_this._dragStartHandlePosition = new Vec3();\n\t\t\t_this._deltaMousePosition = new Vec3();\n\t\t\t_this._deltaHandlePosition = new Vec3();\n\t\t\t_this._isDragging = false;\n\n\t\t\t_this._toggleLifecycleListeners('on');\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ElementDragHelper.prototype;\n\n\t\t_proto._toggleLifecycleListeners = function _toggleLifecycleListeners(onOrOff) {\n\t\t\tthis._element[onOrOff]('mousedown', this._onMouseDownOrTouchStart, this);\n\n\t\t\tthis._element[onOrOff]('touchstart', this._onMouseDownOrTouchStart, this);\n\t\t};\n\n\t\t_proto._toggleDragListeners = function _toggleDragListeners(onOrOff) {\n\t\t\tvar isOn = onOrOff === 'on';\n\t\t\tvar addOrRemoveEventListener = isOn ? 'addEventListener' : 'removeEventListener';\n\n\t\t\tif (this._hasDragListeners && isOn) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._handleMouseUpOrTouchEnd) {\n\t\t\t\tthis._handleMouseUpOrTouchEnd = this._onMouseUpOrTouchEnd.bind(this);\n\t\t\t}\n\n\t\t\tif (this._app.mouse) {\n\t\t\t\tthis._app.mouse[onOrOff]('mousemove', this._onMove, this);\n\n\t\t\t\twindow[addOrRemoveEventListener]('mouseup', this._handleMouseUpOrTouchEnd, false);\n\t\t\t}\n\n\t\t\tif (platform.touch) {\n\t\t\t\tthis._app.touch[onOrOff]('touchmove', this._onMove, this);\n\n\t\t\t\twindow[addOrRemoveEventListener]('touchend', this._handleMouseUpOrTouchEnd, false);\n\t\t\t\twindow[addOrRemoveEventListener]('touchcancel', this._handleMouseUpOrTouchEnd, false);\n\t\t\t}\n\n\t\t\tthis._hasDragListeners = isOn;\n\t\t};\n\n\t\t_proto._onMouseDownOrTouchStart = function _onMouseDownOrTouchStart(event) {\n\t\t\tif (this._element && !this._isDragging && this.enabled) {\n\t\t\t\tthis._dragCamera = event.camera;\n\n\t\t\t\tthis._calculateDragScale();\n\n\t\t\t\tvar currentMousePosition = this._screenToLocal(event);\n\n\t\t\t\tif (currentMousePosition) {\n\t\t\t\t\tthis._toggleDragListeners('on');\n\n\t\t\t\t\tthis._isDragging = true;\n\n\t\t\t\t\tthis._dragStartMousePosition.copy(currentMousePosition);\n\n\t\t\t\t\tthis._dragStartHandlePosition.copy(this._element.entity.getLocalPosition());\n\n\t\t\t\t\tthis.fire('drag:start');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onMouseUpOrTouchEnd = function _onMouseUpOrTouchEnd() {\n\t\t\tif (this._isDragging) {\n\t\t\t\tthis._isDragging = false;\n\n\t\t\t\tthis._toggleDragListeners('off');\n\n\t\t\t\tthis.fire('drag:end');\n\t\t\t}\n\t\t};\n\n\t\t_proto._screenToLocal = function _screenToLocal(event) {\n\t\t\tthis._determineInputPosition(event);\n\n\t\t\tthis._chooseRayOriginAndDirection();\n\n\t\t\t_planeOrigin.copy(this._element.entity.getPosition());\n\n\t\t\t_planeNormal.copy(this._element.entity.forward).scale(-1);\n\n\t\t\tvar denominator = _planeNormal.dot(_rayDirection);\n\n\t\t\tif (Math.abs(denominator) > 0) {\n\t\t\t\tvar rayOriginToPlaneOrigin = _planeOrigin.sub(_rayOrigin);\n\n\t\t\t\tvar collisionDistance = rayOriginToPlaneOrigin.dot(_planeNormal) / denominator;\n\n\t\t\t\tvar position = _rayOrigin.add(_rayDirection.scale(collisionDistance));\n\n\t\t\t\t_entityRotation.copy(this._element.entity.getRotation()).invert().transformVector(position, position);\n\n\t\t\t\tposition.mul(this._dragScale);\n\t\t\t\treturn position;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto._determineInputPosition = function _determineInputPosition(event) {\n\t\t\tvar devicePixelRatio = this._app.graphicsDevice.maxPixelRatio;\n\n\t\t\tif (typeof event.x !== 'undefined' && typeof event.y !== 'undefined') {\n\t\t\t\t_inputScreenPosition.x = event.x * devicePixelRatio;\n\t\t\t\t_inputScreenPosition.y = event.y * devicePixelRatio;\n\t\t\t} else if (event.changedTouches) {\n\t\t\t\t_inputScreenPosition.x = event.changedTouches[0].x * devicePixelRatio;\n\t\t\t\t_inputScreenPosition.y = event.changedTouches[0].y * devicePixelRatio;\n\t\t\t} else {\n\t\t\t\tconsole.warn('Could not determine position from input event');\n\t\t\t}\n\t\t};\n\n\t\t_proto._chooseRayOriginAndDirection = function _chooseRayOriginAndDirection() {\n\t\t\tif (this._element.screen && this._element.screen.screen.screenSpace) {\n\t\t\t\t_rayOrigin.set(_inputScreenPosition.x, -_inputScreenPosition.y, 0);\n\n\t\t\t\t_rayDirection.set(0, 0, -1);\n\t\t\t} else {\n\t\t\t\t_inputWorldPosition.copy(this._dragCamera.screenToWorld(_inputScreenPosition.x, _inputScreenPosition.y, 1));\n\n\t\t\t\t_rayOrigin.copy(this._dragCamera.entity.getPosition());\n\n\t\t\t\t_rayDirection.copy(_inputWorldPosition).sub(_rayOrigin).normalize();\n\t\t\t}\n\t\t};\n\n\t\t_proto._calculateDragScale = function _calculateDragScale() {\n\t\t\tvar current = this._element.entity.parent;\n\t\t\tvar screen = this._element.screen && this._element.screen.screen;\n\t\t\tvar isWithin2DScreen = screen && screen.screenSpace;\n\t\t\tvar screenScale = isWithin2DScreen ? screen.scale : 1;\n\t\t\tvar dragScale = this._dragScale;\n\t\t\tdragScale.set(screenScale, screenScale, screenScale);\n\n\t\t\twhile (current) {\n\t\t\t\tdragScale.mul(current.getLocalScale());\n\t\t\t\tcurrent = current.parent;\n\n\t\t\t\tif (isWithin2DScreen && current.screen) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdragScale.x = 1 / dragScale.x;\n\t\t\tdragScale.y = 1 / dragScale.y;\n\t\t\tdragScale.z = 1 / dragScale.z;\n\t\t};\n\n\t\t_proto._onMove = function _onMove(event) {\n\t\t\tif (this._element && this._isDragging && this.enabled && this._element.enabled && this._element.entity.enabled) {\n\t\t\t\tvar currentMousePosition = this._screenToLocal(event);\n\n\t\t\t\tif (this._dragStartMousePosition && currentMousePosition) {\n\t\t\t\t\tthis._deltaMousePosition.copy(currentMousePosition).sub(this._dragStartMousePosition);\n\n\t\t\t\t\tthis._deltaHandlePosition.copy(this._dragStartHandlePosition).add(this._deltaMousePosition);\n\n\t\t\t\t\tif (this._axis) {\n\t\t\t\t\t\tvar currentPosition = this._element.entity.getLocalPosition();\n\n\t\t\t\t\t\tvar constrainedAxis = OPPOSITE_AXIS[this._axis];\n\t\t\t\t\t\tthis._deltaHandlePosition[constrainedAxis] = currentPosition[constrainedAxis];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._element.entity.setLocalPosition(this._deltaHandlePosition);\n\n\t\t\t\t\tthis.fire('drag:move', this._deltaHandlePosition);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._toggleLifecycleListeners('off');\n\n\t\t\tthis._toggleDragListeners('off');\n\t\t};\n\n\t\t_createClass(ElementDragHelper, [{\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._enabled = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isDragging\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._isDragging;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ElementDragHelper;\n\t}(EventHandler);\n\n\tvar SCROLL_MODE_CLAMP = 0;\n\tvar SCROLL_MODE_BOUNCE = 1;\n\tvar SCROLL_MODE_INFINITE = 2;\n\tvar SCROLLBAR_VISIBILITY_SHOW_ALWAYS = 0;\n\tvar SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED = 1;\n\n\tvar _tempScrollValue = new Vec2();\n\n\tvar ScrollViewComponent = function (_Component) {\n\t\t_inheritsLoose(ScrollViewComponent, _Component);\n\n\t\tfunction ScrollViewComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._viewportReference = new EntityReference(_assertThisInitialized(_this), 'viewportEntity', {\n\t\t\t\t'element#gain': _this._onViewportElementGain,\n\t\t\t\t'element#resize': _this._onSetContentOrViewportSize\n\t\t\t});\n\t\t\t_this._contentReference = new EntityReference(_assertThisInitialized(_this), 'contentEntity', {\n\t\t\t\t'element#gain': _this._onContentElementGain,\n\t\t\t\t'element#lose': _this._onContentElementLose,\n\t\t\t\t'element#resize': _this._onSetContentOrViewportSize\n\t\t\t});\n\t\t\t_this._scrollbarUpdateFlags = {};\n\t\t\t_this._scrollbarReferences = {};\n\t\t\t_this._scrollbarReferences[ORIENTATION_HORIZONTAL] = new EntityReference(_assertThisInitialized(_this), 'horizontalScrollbarEntity', {\n\t\t\t\t'scrollbar#set:value': _this._onSetHorizontalScrollbarValue,\n\t\t\t\t'scrollbar#gain': _this._onHorizontalScrollbarGain\n\t\t\t});\n\t\t\t_this._scrollbarReferences[ORIENTATION_VERTICAL] = new EntityReference(_assertThisInitialized(_this), 'verticalScrollbarEntity', {\n\t\t\t\t'scrollbar#set:value': _this._onSetVerticalScrollbarValue,\n\t\t\t\t'scrollbar#gain': _this._onVerticalScrollbarGain\n\t\t\t});\n\t\t\t_this._prevContentSizes = {};\n\t\t\t_this._prevContentSizes[ORIENTATION_HORIZONTAL] = null;\n\t\t\t_this._prevContentSizes[ORIENTATION_VERTICAL] = null;\n\t\t\t_this._scroll = new Vec2();\n\t\t\t_this._velocity = new Vec3();\n\t\t\t_this._dragStartPosition = new Vec3();\n\t\t\t_this._disabledContentInput = false;\n\t\t\t_this._disabledContentInputEntities = [];\n\n\t\t\t_this._toggleLifecycleListeners('on', system);\n\n\t\t\t_this._toggleElementListeners('on');\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScrollViewComponent.prototype;\n\n\t\t_proto._toggleLifecycleListeners = function _toggleLifecycleListeners(onOrOff, system) {\n\t\t\tthis[onOrOff]('set_horizontal', this._onSetHorizontalScrollingEnabled, this);\n\t\t\tthis[onOrOff]('set_vertical', this._onSetVerticalScrollingEnabled, this);\n\t\t\tsystem.app.systems.element[onOrOff]('add', this._onElementComponentAdd, this);\n\t\t\tsystem.app.systems.element[onOrOff]('beforeremove', this._onElementComponentRemove, this);\n\t\t};\n\n\t\t_proto._toggleElementListeners = function _toggleElementListeners(onOrOff) {\n\t\t\tif (this.entity.element) {\n\t\t\t\tif (onOrOff === 'on' && this._hasElementListeners) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.entity.element[onOrOff]('resize', this._onSetContentOrViewportSize, this);\n\t\t\t\tthis._hasElementListeners = onOrOff === 'on';\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementComponentAdd = function _onElementComponentAdd(entity) {\n\t\t\tif (this.entity === entity) {\n\t\t\t\tthis._toggleElementListeners('on');\n\t\t\t}\n\t\t};\n\n\t\t_proto._onElementComponentRemove = function _onElementComponentRemove(entity) {\n\t\t\tif (this.entity === entity) {\n\t\t\t\tthis._toggleElementListeners('off');\n\t\t\t}\n\t\t};\n\n\t\t_proto._onViewportElementGain = function _onViewportElementGain() {\n\t\t\tthis._syncAll();\n\t\t};\n\n\t\t_proto._onContentElementGain = function _onContentElementGain() {\n\t\t\tthis._destroyDragHelper();\n\n\t\t\tthis._contentDragHelper = new ElementDragHelper(this._contentReference.entity.element);\n\n\t\t\tthis._contentDragHelper.on('drag:start', this._onContentDragStart, this);\n\n\t\t\tthis._contentDragHelper.on('drag:end', this._onContentDragEnd, this);\n\n\t\t\tthis._contentDragHelper.on('drag:move', this._onContentDragMove, this);\n\n\t\t\tthis._prevContentSizes[ORIENTATION_HORIZONTAL] = null;\n\t\t\tthis._prevContentSizes[ORIENTATION_VERTICAL] = null;\n\n\t\t\tthis._syncAll();\n\t\t};\n\n\t\t_proto._onContentElementLose = function _onContentElementLose() {\n\t\t\tthis._destroyDragHelper();\n\t\t};\n\n\t\t_proto._onContentDragStart = function _onContentDragStart() {\n\t\t\tif (this._contentReference.entity && this.enabled && this.entity.enabled) {\n\t\t\t\tthis._dragStartPosition.copy(this._contentReference.entity.getLocalPosition());\n\t\t\t}\n\t\t};\n\n\t\t_proto._onContentDragEnd = function _onContentDragEnd() {\n\t\t\tthis._prevContentDragPosition = null;\n\n\t\t\tthis._enableContentInput();\n\t\t};\n\n\t\t_proto._onContentDragMove = function _onContentDragMove(position) {\n\t\t\tif (this._contentReference.entity && this.enabled && this.entity.enabled) {\n\t\t\t\tthis._wasDragged = true;\n\n\t\t\t\tthis._setScrollFromContentPosition(position);\n\n\t\t\t\tthis._setVelocityFromContentPositionDelta(position);\n\n\t\t\t\tif (!this._disabledContentInput) {\n\t\t\t\t\tvar dx = position.x - this._dragStartPosition.x;\n\t\t\t\t\tvar dy = position.y - this._dragStartPosition.y;\n\n\t\t\t\t\tif (Math.abs(dx) > this.dragThreshold || Math.abs(dy) > this.dragThreshold) {\n\t\t\t\t\t\tthis._disableContentInput();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetContentOrViewportSize = function _onSetContentOrViewportSize() {\n\t\t\tthis._syncAll();\n\t\t};\n\n\t\t_proto._onSetHorizontalScrollbarValue = function _onSetHorizontalScrollbarValue(scrollValueX) {\n\t\t\tif (!this._scrollbarUpdateFlags[ORIENTATION_HORIZONTAL] && this.enabled && this.entity.enabled) {\n\t\t\t\tthis._onSetScroll(scrollValueX, null);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetVerticalScrollbarValue = function _onSetVerticalScrollbarValue(scrollValueY) {\n\t\t\tif (!this._scrollbarUpdateFlags[ORIENTATION_VERTICAL] && this.enabled && this.entity.enabled) {\n\t\t\t\tthis._onSetScroll(null, scrollValueY);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetHorizontalScrollingEnabled = function _onSetHorizontalScrollingEnabled() {\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_HORIZONTAL);\n\t\t};\n\n\t\t_proto._onSetVerticalScrollingEnabled = function _onSetVerticalScrollingEnabled() {\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_VERTICAL);\n\t\t};\n\n\t\t_proto._onHorizontalScrollbarGain = function _onHorizontalScrollbarGain() {\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_HORIZONTAL);\n\n\t\t\tthis._syncScrollbarPosition(ORIENTATION_HORIZONTAL);\n\t\t};\n\n\t\t_proto._onVerticalScrollbarGain = function _onVerticalScrollbarGain() {\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_VERTICAL);\n\n\t\t\tthis._syncScrollbarPosition(ORIENTATION_VERTICAL);\n\t\t};\n\n\t\t_proto._onSetScroll = function _onSetScroll(x, y, resetVelocity) {\n\t\t\tif (resetVelocity !== false) {\n\t\t\t\tthis._velocity.set(0, 0, 0);\n\t\t\t}\n\n\t\t\tvar hasChanged = false;\n\t\t\thasChanged |= this._updateAxis(x, 'x', ORIENTATION_HORIZONTAL);\n\t\t\thasChanged |= this._updateAxis(y, 'y', ORIENTATION_VERTICAL);\n\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.fire('set:scroll', this._scroll);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateAxis = function _updateAxis(scrollValue, axis, orientation) {\n\t\t\tvar hasChanged = scrollValue !== null && Math.abs(scrollValue - this._scroll[axis]) > 1e-5;\n\n\t\t\tif (hasChanged || this._isDragging() || scrollValue === 0) {\n\t\t\t\tthis._scroll[axis] = this._determineNewScrollValue(scrollValue, axis, orientation);\n\n\t\t\t\tthis._syncContentPosition(orientation);\n\n\t\t\t\tthis._syncScrollbarPosition(orientation);\n\t\t\t}\n\n\t\t\treturn hasChanged;\n\t\t};\n\n\t\t_proto._determineNewScrollValue = function _determineNewScrollValue(scrollValue, axis, orientation) {\n\t\t\tif (!this._getScrollingEnabled(orientation)) {\n\t\t\t\treturn this._scroll[axis];\n\t\t\t}\n\n\t\t\tswitch (this.scrollMode) {\n\t\t\t\tcase SCROLL_MODE_CLAMP:\n\t\t\t\t\treturn math.clamp(scrollValue, 0, this._getMaxScrollValue(orientation));\n\n\t\t\t\tcase SCROLL_MODE_BOUNCE:\n\t\t\t\t\tthis._setVelocityFromOvershoot(scrollValue, axis, orientation);\n\n\t\t\t\t\treturn scrollValue;\n\n\t\t\t\tcase SCROLL_MODE_INFINITE:\n\t\t\t\t\treturn scrollValue;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('Unhandled scroll mode:' + this.scrollMode);\n\t\t\t\t\treturn scrollValue;\n\t\t\t}\n\t\t};\n\n\t\t_proto._syncAll = function _syncAll() {\n\t\t\tthis._syncContentPosition(ORIENTATION_HORIZONTAL);\n\n\t\t\tthis._syncContentPosition(ORIENTATION_VERTICAL);\n\n\t\t\tthis._syncScrollbarPosition(ORIENTATION_HORIZONTAL);\n\n\t\t\tthis._syncScrollbarPosition(ORIENTATION_VERTICAL);\n\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_HORIZONTAL);\n\n\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_VERTICAL);\n\t\t};\n\n\t\t_proto._syncContentPosition = function _syncContentPosition(orientation) {\n\t\t\tvar axis = this._getAxis(orientation);\n\n\t\t\tvar sign = this._getSign(orientation);\n\n\t\t\tvar contentEntity = this._contentReference.entity;\n\n\t\t\tif (contentEntity) {\n\t\t\t\tvar prevContentSize = this._prevContentSizes[orientation];\n\n\t\t\t\tvar currContentSize = this._getContentSize(orientation);\n\n\t\t\t\tif (prevContentSize !== null && Math.abs(prevContentSize - currContentSize) > 1e-4) {\n\t\t\t\t\tvar prevMaxOffset = this._getMaxOffset(orientation, prevContentSize);\n\n\t\t\t\t\tvar currMaxOffset = this._getMaxOffset(orientation, currContentSize);\n\n\t\t\t\t\tif (currMaxOffset === 0) {\n\t\t\t\t\t\tthis._scroll[axis] = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._scroll[axis] = math.clamp(this._scroll[axis] * prevMaxOffset / currMaxOffset, 0, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar offset = this._scroll[axis] * this._getMaxOffset(orientation);\n\n\t\t\t\tvar contentPosition = contentEntity.getLocalPosition();\n\t\t\t\tcontentPosition[axis] = offset * sign;\n\t\t\t\tcontentEntity.setLocalPosition(contentPosition);\n\t\t\t\tthis._prevContentSizes[orientation] = currContentSize;\n\t\t\t}\n\t\t};\n\n\t\t_proto._syncScrollbarPosition = function _syncScrollbarPosition(orientation) {\n\t\t\tvar axis = this._getAxis(orientation);\n\n\t\t\tvar scrollbarEntity = this._scrollbarReferences[orientation].entity;\n\n\t\t\tif (scrollbarEntity && scrollbarEntity.scrollbar) {\n\t\t\t\tthis._scrollbarUpdateFlags[orientation] = true;\n\t\t\t\tscrollbarEntity.scrollbar.value = this._scroll[axis];\n\t\t\t\tscrollbarEntity.scrollbar.handleSize = this._getScrollbarHandleSize(axis, orientation);\n\t\t\t\tthis._scrollbarUpdateFlags[orientation] = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto._syncScrollbarEnabledState = function _syncScrollbarEnabledState(orientation) {\n\t\t\tvar entity = this._scrollbarReferences[orientation].entity;\n\n\t\t\tif (entity) {\n\t\t\t\tvar isScrollingEnabled = this._getScrollingEnabled(orientation);\n\n\t\t\t\tvar requestedVisibility = this._getScrollbarVisibility(orientation);\n\n\t\t\t\tswitch (requestedVisibility) {\n\t\t\t\t\tcase SCROLLBAR_VISIBILITY_SHOW_ALWAYS:\n\t\t\t\t\t\tentity.enabled = isScrollingEnabled;\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tcase SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED:\n\t\t\t\t\t\tentity.enabled = isScrollingEnabled && this._contentIsLargerThanViewport(orientation);\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('Unhandled scrollbar visibility:' + requestedVisibility);\n\t\t\t\t\t\tentity.enabled = isScrollingEnabled;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._contentIsLargerThanViewport = function _contentIsLargerThanViewport(orientation) {\n\t\t\treturn this._getContentSize(orientation) > this._getViewportSize(orientation);\n\t\t};\n\n\t\t_proto._contentPositionToScrollValue = function _contentPositionToScrollValue(contentPosition) {\n\t\t\tvar maxOffsetH = this._getMaxOffset(ORIENTATION_HORIZONTAL);\n\n\t\t\tvar maxOffsetV = this._getMaxOffset(ORIENTATION_VERTICAL);\n\n\t\t\tif (maxOffsetH === 0) {\n\t\t\t\t_tempScrollValue.x = 0;\n\t\t\t} else {\n\t\t\t\t_tempScrollValue.x = contentPosition.x / maxOffsetH;\n\t\t\t}\n\n\t\t\tif (maxOffsetV === 0) {\n\t\t\t\t_tempScrollValue.y = 0;\n\t\t\t} else {\n\t\t\t\t_tempScrollValue.y = contentPosition.y / -maxOffsetV;\n\t\t\t}\n\n\t\t\treturn _tempScrollValue;\n\t\t};\n\n\t\t_proto._getMaxOffset = function _getMaxOffset(orientation, contentSize) {\n\t\t\tcontentSize = contentSize === undefined ? this._getContentSize(orientation) : contentSize;\n\n\t\t\tvar viewportSize = this._getViewportSize(orientation);\n\n\t\t\tif (contentSize < viewportSize) {\n\t\t\t\treturn -this._getViewportSize(orientation);\n\t\t\t}\n\n\t\t\treturn viewportSize - contentSize;\n\t\t};\n\n\t\t_proto._getMaxScrollValue = function _getMaxScrollValue(orientation) {\n\t\t\treturn this._contentIsLargerThanViewport(orientation) ? 1 : 0;\n\t\t};\n\n\t\t_proto._getScrollbarHandleSize = function _getScrollbarHandleSize(axis, orientation) {\n\t\t\tvar viewportSize = this._getViewportSize(orientation);\n\n\t\t\tvar contentSize = this._getContentSize(orientation);\n\n\t\t\tif (Math.abs(contentSize) < 0.001) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tvar handleSize = Math.min(viewportSize / contentSize, 1);\n\n\t\t\tvar overshoot = this._toOvershoot(this._scroll[axis], orientation);\n\n\t\t\tif (overshoot === 0) {\n\t\t\t\treturn handleSize;\n\t\t\t}\n\n\t\t\treturn handleSize / (1 + Math.abs(overshoot));\n\t\t};\n\n\t\t_proto._getViewportSize = function _getViewportSize(orientation) {\n\t\t\treturn this._getSize(orientation, this._viewportReference);\n\t\t};\n\n\t\t_proto._getContentSize = function _getContentSize(orientation) {\n\t\t\treturn this._getSize(orientation, this._contentReference);\n\t\t};\n\n\t\t_proto._getSize = function _getSize(orientation, entityReference) {\n\t\t\tif (entityReference.entity && entityReference.entity.element) {\n\t\t\t\treturn entityReference.entity.element[this._getCalculatedDimension(orientation)];\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\n\t\t_proto._getScrollingEnabled = function _getScrollingEnabled(orientation) {\n\t\t\tif (orientation === ORIENTATION_HORIZONTAL) {\n\t\t\t\treturn this.horizontal;\n\t\t\t} else if (orientation === ORIENTATION_VERTICAL) {\n\t\t\t\treturn this.vertical;\n\t\t\t}\n\n\t\t\tconsole.warn('Unrecognized orientation: ' + orientation);\n\t\t};\n\n\t\t_proto._getScrollbarVisibility = function _getScrollbarVisibility(orientation) {\n\t\t\tif (orientation === ORIENTATION_HORIZONTAL) {\n\t\t\t\treturn this.horizontalScrollbarVisibility;\n\t\t\t} else if (orientation === ORIENTATION_VERTICAL) {\n\t\t\t\treturn this.verticalScrollbarVisibility;\n\t\t\t}\n\n\t\t\tconsole.warn('Unrecognized orientation: ' + orientation);\n\t\t};\n\n\t\t_proto._getSign = function _getSign(orientation) {\n\t\t\treturn orientation === ORIENTATION_HORIZONTAL ? 1 : -1;\n\t\t};\n\n\t\t_proto._getAxis = function _getAxis(orientation) {\n\t\t\treturn orientation === ORIENTATION_HORIZONTAL ? 'x' : 'y';\n\t\t};\n\n\t\t_proto._getCalculatedDimension = function _getCalculatedDimension(orientation) {\n\t\t\treturn orientation === ORIENTATION_HORIZONTAL ? 'calculatedWidth' : 'calculatedHeight';\n\t\t};\n\n\t\t_proto._destroyDragHelper = function _destroyDragHelper() {\n\t\t\tif (this._contentDragHelper) {\n\t\t\t\tthis._contentDragHelper.destroy();\n\t\t\t}\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate() {\n\t\t\tif (this._contentReference.entity) {\n\t\t\t\tthis._updateVelocity();\n\n\t\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_HORIZONTAL);\n\n\t\t\t\tthis._syncScrollbarEnabledState(ORIENTATION_VERTICAL);\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateVelocity = function _updateVelocity() {\n\t\t\tif (!this._isDragging()) {\n\t\t\t\tif (this.scrollMode === SCROLL_MODE_BOUNCE) {\n\t\t\t\t\tif (this._hasOvershoot('x', ORIENTATION_HORIZONTAL)) {\n\t\t\t\t\t\tthis._setVelocityFromOvershoot(this.scroll.x, 'x', ORIENTATION_HORIZONTAL);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._hasOvershoot('y', ORIENTATION_VERTICAL)) {\n\t\t\t\t\t\tthis._setVelocityFromOvershoot(this.scroll.y, 'y', ORIENTATION_VERTICAL);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._velocity.x *= 1 - this.friction;\n\t\t\t\tthis._velocity.y *= 1 - this.friction;\n\n\t\t\t\tif (Math.abs(this._velocity.x) > 1e-4 || Math.abs(this._velocity.y) > 1e-4) {\n\t\t\t\t\tvar position = this._contentReference.entity.getLocalPosition();\n\n\t\t\t\t\tposition.x += this._velocity.x;\n\t\t\t\t\tposition.y += this._velocity.y;\n\n\t\t\t\t\tthis._contentReference.entity.setLocalPosition(position);\n\n\t\t\t\t\tthis._setScrollFromContentPosition(position);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._hasOvershoot = function _hasOvershoot(axis, orientation) {\n\t\t\treturn Math.abs(this._toOvershoot(this.scroll[axis], orientation)) > 0.001;\n\t\t};\n\n\t\t_proto._toOvershoot = function _toOvershoot(scrollValue, orientation) {\n\t\t\tvar maxScrollValue = this._getMaxScrollValue(orientation);\n\n\t\t\tif (scrollValue < 0) {\n\t\t\t\treturn scrollValue;\n\t\t\t} else if (scrollValue > maxScrollValue) {\n\t\t\t\treturn scrollValue - maxScrollValue;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\n\t\t_proto._setVelocityFromOvershoot = function _setVelocityFromOvershoot(scrollValue, axis, orientation) {\n\t\t\tvar overshootValue = this._toOvershoot(scrollValue, orientation);\n\n\t\t\tvar overshootPixels = overshootValue * this._getMaxOffset(orientation) * this._getSign(orientation);\n\n\t\t\tif (Math.abs(overshootPixels) > 0) {\n\t\t\t\tthis._velocity[axis] = -overshootPixels / (this.bounceAmount * 50 + 1);\n\t\t\t}\n\t\t};\n\n\t\t_proto._setVelocityFromContentPositionDelta = function _setVelocityFromContentPositionDelta(position) {\n\t\t\tif (this._prevContentDragPosition) {\n\t\t\t\tthis._velocity.sub2(position, this._prevContentDragPosition);\n\n\t\t\t\tthis._prevContentDragPosition.copy(position);\n\t\t\t} else {\n\t\t\t\tthis._velocity.set(0, 0, 0);\n\n\t\t\t\tthis._prevContentDragPosition = position.clone();\n\t\t\t}\n\t\t};\n\n\t\t_proto._setScrollFromContentPosition = function _setScrollFromContentPosition(position) {\n\t\t\tvar scrollValue = this._contentPositionToScrollValue(position);\n\n\t\t\tif (this._isDragging()) {\n\t\t\t\tscrollValue = this._applyScrollValueTension(scrollValue);\n\t\t\t}\n\n\t\t\tthis._onSetScroll(scrollValue.x, scrollValue.y, false);\n\t\t};\n\n\t\t_proto._applyScrollValueTension = function _applyScrollValueTension(scrollValue) {\n\t\t\tvar max;\n\t\t\tvar overshoot;\n\t\t\tvar factor = 1;\n\t\t\tmax = this._getMaxScrollValue(ORIENTATION_HORIZONTAL);\n\t\t\tovershoot = this._toOvershoot(scrollValue.x, ORIENTATION_HORIZONTAL);\n\n\t\t\tif (overshoot > 0) {\n\t\t\t\tscrollValue.x = max + factor * Math.log10(1 + overshoot);\n\t\t\t} else if (overshoot < 0) {\n\t\t\t\tscrollValue.x = -factor * Math.log10(1 - overshoot);\n\t\t\t}\n\n\t\t\tmax = this._getMaxScrollValue(ORIENTATION_VERTICAL);\n\t\t\tovershoot = this._toOvershoot(scrollValue.y, ORIENTATION_VERTICAL);\n\n\t\t\tif (overshoot > 0) {\n\t\t\t\tscrollValue.y = max + factor * Math.log10(1 + overshoot);\n\t\t\t} else if (overshoot < 0) {\n\t\t\t\tscrollValue.y = -factor * Math.log10(1 - overshoot);\n\t\t\t}\n\n\t\t\treturn scrollValue;\n\t\t};\n\n\t\t_proto._isDragging = function _isDragging() {\n\t\t\treturn this._contentDragHelper && this._contentDragHelper.isDragging;\n\t\t};\n\n\t\t_proto._setScrollbarComponentsEnabled = function _setScrollbarComponentsEnabled(enabled) {\n\t\t\tif (this._scrollbarReferences[ORIENTATION_HORIZONTAL].hasComponent('scrollbar')) {\n\t\t\t\tthis._scrollbarReferences[ORIENTATION_HORIZONTAL].entity.scrollbar.enabled = enabled;\n\t\t\t}\n\n\t\t\tif (this._scrollbarReferences[ORIENTATION_VERTICAL].hasComponent('scrollbar')) {\n\t\t\t\tthis._scrollbarReferences[ORIENTATION_VERTICAL].entity.scrollbar.enabled = enabled;\n\t\t\t}\n\t\t};\n\n\t\t_proto._setContentDraggingEnabled = function _setContentDraggingEnabled(enabled) {\n\t\t\tif (this._contentDragHelper) {\n\t\t\t\tthis._contentDragHelper.enabled = enabled;\n\t\t\t}\n\t\t};\n\n\t\t_proto._enableContentInput = function _enableContentInput() {\n\t\t\twhile (this._disabledContentInputEntities.length) {\n\t\t\t\tvar e = this._disabledContentInputEntities.pop();\n\n\t\t\t\tif (e.element) {\n\t\t\t\t\te.element.useInput = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._disabledContentInput = false;\n\t\t};\n\n\t\t_proto._disableContentInput = function _disableContentInput() {\n\t\t\tvar self = this;\n\n\t\t\tvar _disableInput = function _disableInput(e) {\n\t\t\t\tif (e.element && e.element.useInput) {\n\t\t\t\t\tself._disabledContentInputEntities.push(e);\n\n\t\t\t\t\te.element.useInput = false;\n\t\t\t\t}\n\n\t\t\t\tvar children = e.children;\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\t_disableInput(children[i]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar contentEntity = this._contentReference.entity;\n\n\t\t\tif (contentEntity) {\n\t\t\t\tvar children = contentEntity.children;\n\t\t\t\tvar i,\n\t\t\t\t\t\tl = children.length;\n\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t_disableInput(children[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._disabledContentInput = true;\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._viewportReference.onParentComponentEnable();\n\n\t\t\tthis._contentReference.onParentComponentEnable();\n\n\t\t\tthis._scrollbarReferences[ORIENTATION_HORIZONTAL].onParentComponentEnable();\n\n\t\t\tthis._scrollbarReferences[ORIENTATION_VERTICAL].onParentComponentEnable();\n\n\t\t\tthis._setScrollbarComponentsEnabled(true);\n\n\t\t\tthis._setContentDraggingEnabled(true);\n\n\t\t\tthis._syncAll();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._setScrollbarComponentsEnabled(false);\n\n\t\t\tthis._setContentDraggingEnabled(false);\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis._toggleLifecycleListeners('off', this.system);\n\n\t\t\tthis._toggleElementListeners('off');\n\n\t\t\tthis._destroyDragHelper();\n\t\t};\n\n\t\t_createClass(ScrollViewComponent, [{\n\t\t\tkey: \"scroll\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._scroll;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._onSetScroll(value.x, value.y);\n\t\t\t}\n\t\t}]);\n\n\t\treturn ScrollViewComponent;\n\t}(Component);\n\n\tvar ScrollViewComponentData = function ScrollViewComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$g = [{\n\t\tname: 'enabled',\n\t\ttype: 'boolean'\n\t}, {\n\t\tname: 'horizontal',\n\t\ttype: 'boolean'\n\t}, {\n\t\tname: 'vertical',\n\t\ttype: 'boolean'\n\t}, {\n\t\tname: 'scrollMode',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'bounceAmount',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'friction',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'dragThreshold',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'horizontalScrollbarVisibility',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'verticalScrollbarVisibility',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'viewportEntity',\n\t\ttype: 'entity'\n\t}, {\n\t\tname: 'contentEntity',\n\t\ttype: 'entity'\n\t}, {\n\t\tname: 'horizontalScrollbarEntity',\n\t\ttype: 'entity'\n\t}, {\n\t\tname: 'verticalScrollbarEntity',\n\t\ttype: 'entity'\n\t}];\n\tvar DEFAULT_DRAG_THRESHOLD = 10;\n\n\tvar ScrollViewComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ScrollViewComponentSystem, _ComponentSystem);\n\n\t\tfunction ScrollViewComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'scrollview';\n\t\t\t_this.ComponentType = ScrollViewComponent;\n\t\t\t_this.DataType = ScrollViewComponentData;\n\t\t\t_this.schema = _schema$g;\n\n\t\t\t_this.on('beforeremove', _this._onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScrollViewComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data.dragThreshold === undefined) {\n\t\t\t\tdata.dragThreshold = DEFAULT_DRAG_THRESHOLD;\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, _schema$g);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tvar entity = components[id].entity;\n\t\t\t\tvar component = entity.scrollview;\n\n\t\t\t\tif (component.enabled && entity.enabled) {\n\t\t\t\t\tcomponent.onUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onRemoveComponent = function _onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn ScrollViewComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ScrollViewComponent.prototype, _schema$g);\n\n\tvar ScrollbarComponent = function (_Component) {\n\t\t_inheritsLoose(ScrollbarComponent, _Component);\n\n\t\tfunction ScrollbarComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._app = system.app;\n\t\t\t_this._handleReference = new EntityReference(_assertThisInitialized(_this), 'handleEntity', {\n\t\t\t\t'element#gain': _this._onHandleElementGain,\n\t\t\t\t'element#lose': _this._onHandleElementLose,\n\t\t\t\t'element#set:anchor': _this._onSetHandleAlignment,\n\t\t\t\t'element#set:margin': _this._onSetHandleAlignment,\n\t\t\t\t'element#set:pivot': _this._onSetHandleAlignment\n\t\t\t});\n\n\t\t\t_this._toggleLifecycleListeners('on');\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScrollbarComponent.prototype;\n\n\t\t_proto._toggleLifecycleListeners = function _toggleLifecycleListeners(onOrOff) {\n\t\t\tthis[onOrOff]('set_value', this._onSetValue, this);\n\t\t\tthis[onOrOff]('set_handleSize', this._onSetHandleSize, this);\n\t\t\tthis[onOrOff]('set_orientation', this._onSetOrientation, this);\n\t\t};\n\n\t\t_proto._onHandleElementGain = function _onHandleElementGain() {\n\t\t\tthis._destroyDragHelper();\n\n\t\t\tthis._handleDragHelper = new ElementDragHelper(this._handleReference.entity.element, this._getAxis());\n\n\t\t\tthis._handleDragHelper.on('drag:move', this._onHandleDrag, this);\n\n\t\t\tthis._updateHandlePositionAndSize();\n\t\t};\n\n\t\t_proto._onHandleElementLose = function _onHandleElementLose() {\n\t\t\tthis._destroyDragHelper();\n\t\t};\n\n\t\t_proto._onHandleDrag = function _onHandleDrag(position) {\n\t\t\tif (this._handleReference.entity && this.enabled && this.entity.enabled) {\n\t\t\t\tthis.value = this._handlePositionToScrollValue(position[this._getAxis()]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetValue = function _onSetValue(name, oldValue, newValue) {\n\t\t\tif (Math.abs(newValue - oldValue) > 1e-5) {\n\t\t\t\tthis.data.value = math.clamp(newValue, 0, 1);\n\n\t\t\t\tthis._updateHandlePositionAndSize();\n\n\t\t\t\tthis.fire('set:value', this.data.value);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetHandleSize = function _onSetHandleSize(name, oldValue, newValue) {\n\t\t\tif (Math.abs(newValue - oldValue) > 1e-5) {\n\t\t\t\tthis.data.handleSize = math.clamp(newValue, 0, 1);\n\n\t\t\t\tthis._updateHandlePositionAndSize();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSetHandleAlignment = function _onSetHandleAlignment() {\n\t\t\tthis._updateHandlePositionAndSize();\n\t\t};\n\n\t\t_proto._onSetOrientation = function _onSetOrientation(name, oldValue, newValue) {\n\t\t\tif (newValue !== oldValue && this._handleReference.hasComponent('element')) {\n\t\t\t\tthis._handleReference.entity.element[this._getOppositeDimension()] = 0;\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateHandlePositionAndSize = function _updateHandlePositionAndSize() {\n\t\t\tvar handleEntity = this._handleReference.entity;\n\t\t\tvar handleElement = handleEntity && handleEntity.element;\n\n\t\t\tif (handleEntity) {\n\t\t\t\tvar position = handleEntity.getLocalPosition();\n\t\t\t\tposition[this._getAxis()] = this._getHandlePosition();\n\n\t\t\t\tthis._handleReference.entity.setLocalPosition(position);\n\t\t\t}\n\n\t\t\tif (handleElement) {\n\t\t\t\thandleElement[this._getDimension()] = this._getHandleLength();\n\t\t\t}\n\t\t};\n\n\t\t_proto._handlePositionToScrollValue = function _handlePositionToScrollValue(handlePosition) {\n\t\t\treturn handlePosition * this._getSign() / this._getUsableTrackLength();\n\t\t};\n\n\t\t_proto._scrollValueToHandlePosition = function _scrollValueToHandlePosition(value) {\n\t\t\treturn value * this._getSign() * this._getUsableTrackLength();\n\t\t};\n\n\t\t_proto._getUsableTrackLength = function _getUsableTrackLength() {\n\t\t\treturn Math.max(this._getTrackLength() - this._getHandleLength(), 0.001);\n\t\t};\n\n\t\t_proto._getTrackLength = function _getTrackLength() {\n\t\t\tif (this.entity.element) {\n\t\t\t\treturn this.orientation === ORIENTATION_HORIZONTAL ? this.entity.element.calculatedWidth : this.entity.element.calculatedHeight;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\n\t\t_proto._getHandleLength = function _getHandleLength() {\n\t\t\treturn this._getTrackLength() * this.handleSize;\n\t\t};\n\n\t\t_proto._getHandlePosition = function _getHandlePosition() {\n\t\t\treturn this._scrollValueToHandlePosition(this.value);\n\t\t};\n\n\t\t_proto._getSign = function _getSign() {\n\t\t\treturn this.orientation === ORIENTATION_HORIZONTAL ? 1 : -1;\n\t\t};\n\n\t\t_proto._getAxis = function _getAxis() {\n\t\t\treturn this.orientation === ORIENTATION_HORIZONTAL ? 'x' : 'y';\n\t\t};\n\n\t\t_proto._getDimension = function _getDimension() {\n\t\t\treturn this.orientation === ORIENTATION_HORIZONTAL ? 'width' : 'height';\n\t\t};\n\n\t\t_proto._getOppositeDimension = function _getOppositeDimension() {\n\t\t\treturn this.orientation === ORIENTATION_HORIZONTAL ? 'height' : 'width';\n\t\t};\n\n\t\t_proto._destroyDragHelper = function _destroyDragHelper() {\n\t\t\tif (this._handleDragHelper) {\n\t\t\t\tthis._handleDragHelper.destroy();\n\t\t\t}\n\t\t};\n\n\t\t_proto._setHandleDraggingEnabled = function _setHandleDraggingEnabled(enabled) {\n\t\t\tif (this._handleDragHelper) {\n\t\t\t\tthis._handleDragHelper.enabled = enabled;\n\t\t\t}\n\t\t};\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._handleReference.onParentComponentEnable();\n\n\t\t\tthis._setHandleDraggingEnabled(true);\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._setHandleDraggingEnabled(false);\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis._destroyDragHelper();\n\n\t\t\tthis._toggleLifecycleListeners('off');\n\t\t};\n\n\t\treturn ScrollbarComponent;\n\t}(Component);\n\n\tvar ScrollbarComponentData = function ScrollbarComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$h = [{\n\t\tname: 'enabled',\n\t\ttype: 'boolean'\n\t}, {\n\t\tname: 'orientation',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'value',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'handleSize',\n\t\ttype: 'number'\n\t}, {\n\t\tname: 'handleEntity',\n\t\ttype: 'entity'\n\t}];\n\n\tvar ScrollbarComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ScrollbarComponentSystem, _ComponentSystem);\n\n\t\tfunction ScrollbarComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'scrollbar';\n\t\t\t_this.ComponentType = ScrollbarComponent;\n\t\t\t_this.DataType = ScrollbarComponentData;\n\t\t\t_this.schema = _schema$h;\n\n\t\t\t_this.on('beforeremove', _this._onRemoveComponent, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ScrollbarComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, _schema$h);\n\t\t};\n\n\t\t_proto._onRemoveComponent = function _onRemoveComponent(entity, component) {\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\treturn ScrollbarComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ScrollbarComponent.prototype, _schema$h);\n\n\tvar STATE_PLAYING = 0;\n\tvar STATE_PAUSED = 1;\n\tvar STATE_STOPPED = 2;\n\n\tfunction capTime(time, duration) {\n\t\treturn time % duration || 0;\n\t}\n\n\tvar SoundInstance = function (_EventHandler) {\n\t\t_inheritsLoose(SoundInstance, _EventHandler);\n\n\t\tfunction SoundInstance(manager, sound, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._manager = manager;\n\t\t\t_this._volume = options.volume !== undefined ? math.clamp(Number(options.volume) || 0, 0, 1) : 1;\n\t\t\t_this._pitch = options.pitch !== undefined ? Math.max(0.01, Number(options.pitch) || 0) : 1;\n\t\t\t_this._loop = !!(options.loop !== undefined ? options.loop : false);\n\t\t\t_this._sound = sound;\n\t\t\t_this._state = STATE_STOPPED;\n\t\t\t_this._suspended = false;\n\t\t\t_this._suspendEndEvent = false;\n\t\t\t_this._suspendInstanceEvents = false;\n\t\t\t_this._playWhenLoaded = true;\n\t\t\t_this._startTime = Math.max(0, Number(options.startTime) || 0);\n\t\t\t_this._duration = Math.max(0, Number(options.duration) || 0);\n\t\t\t_this._startOffset = null;\n\t\t\t_this.source = null;\n\t\t\t_this._onPlayCallback = options.onPlay;\n\t\t\t_this._onPauseCallback = options.onPause;\n\t\t\t_this._onResumeCallback = options.onResume;\n\t\t\t_this._onStopCallback = options.onStop;\n\t\t\t_this._onEndCallback = options.onEnd;\n\n\t\t\tif (hasAudioContext()) {\n\t\t\t\t_this._startedAt = 0;\n\t\t\t\t_this._currentTime = 0;\n\t\t\t\t_this._currentOffset = 0;\n\t\t\t\t_this._inputNode = null;\n\t\t\t\t_this._connectorNode = null;\n\t\t\t\t_this._firstNode = null;\n\t\t\t\t_this._lastNode = null;\n\n\t\t\t\t_this._initializeNodes();\n\n\t\t\t\t_this._endedHandler = _this._onEnded.bind(_assertThisInitialized(_this));\n\t\t\t} else {\n\t\t\t\t_this._isReady = false;\n\t\t\t\t_this._loadedMetadataHandler = _this._onLoadedMetadata.bind(_assertThisInitialized(_this));\n\t\t\t\t_this._timeUpdateHandler = _this._onTimeUpdate.bind(_assertThisInitialized(_this));\n\t\t\t\t_this._endedHandler = _this._onEnded.bind(_assertThisInitialized(_this));\n\n\t\t\t\t_this._createSource();\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SoundInstance.prototype;\n\n\t\t_proto._onPlay = function _onPlay() {\n\t\t\tthis.fire('play');\n\t\t\tif (this._onPlayCallback) this._onPlayCallback(this);\n\t\t};\n\n\t\t_proto._onPause = function _onPause() {\n\t\t\tthis.fire('pause');\n\t\t\tif (this._onPauseCallback) this._onPauseCallback(this);\n\t\t};\n\n\t\t_proto._onResume = function _onResume() {\n\t\t\tthis.fire('resume');\n\t\t\tif (this._onResumeCallback) this._onResumeCallback(this);\n\t\t};\n\n\t\t_proto._onStop = function _onStop() {\n\t\t\tthis.fire('stop');\n\t\t\tif (this._onStopCallback) this._onStopCallback(this);\n\t\t};\n\n\t\t_proto._onEnded = function _onEnded() {\n\t\t\tif (this._suspendEndEvent) {\n\t\t\t\tthis._suspendEndEvent = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.fire('end');\n\t\t\tif (this._onEndCallback) this._onEndCallback(this);\n\t\t\tthis.stop();\n\t\t};\n\n\t\t_proto._onManagerVolumeChange = function _onManagerVolumeChange() {\n\t\t\tthis.volume = this._volume;\n\t\t};\n\n\t\t_proto._onManagerSuspend = function _onManagerSuspend() {\n\t\t\tif (this._state === STATE_PLAYING && !this._suspended) {\n\t\t\t\tthis._suspended = true;\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onManagerResume = function _onManagerResume() {\n\t\t\tif (this._suspended) {\n\t\t\t\tthis._suspended = false;\n\t\t\t\tthis.resume();\n\t\t\t}\n\t\t};\n\n\t\t_createClass(SoundInstance, [{\n\t\t\tkey: \"loop\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._loop;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._loop = !!value;\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.loop = this._loop;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"startTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._startTime;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._startTime = Math.max(0, Number(value) || 0);\n\t\t\t\tvar isPlaying = this._state === STATE_PLAYING;\n\t\t\t\tthis.stop();\n\n\t\t\t\tif (isPlaying) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._sound) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tif (this._duration) {\n\t\t\t\t\treturn capTime(this._duration, this._sound.duration);\n\t\t\t\t}\n\n\t\t\t\treturn this._sound.duration;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._duration = Math.max(0, Number(value) || 0);\n\t\t\t\tvar isPlaying = this._state === STATE_PLAYING;\n\t\t\t\tthis.stop();\n\n\t\t\t\tif (isPlaying) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPlaying\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._state === STATE_PLAYING;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPaused\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._state === STATE_PAUSED;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isStopped\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._state === STATE_STOPPED;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isSuspended\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._suspended;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SoundInstance;\n\t}(EventHandler);\n\n\tif (hasAudioContext()) {\n\t\tObject.assign(SoundInstance.prototype, {\n\t\t\t_initializeNodes: function _initializeNodes() {\n\t\t\t\tthis.gain = this._manager.context.createGain();\n\t\t\t\tthis._inputNode = this.gain;\n\t\t\t\tthis._connectorNode = this.gain;\n\n\t\t\t\tthis._connectorNode.connect(this._manager.context.destination);\n\t\t\t},\n\t\t\tplay: function play() {\n\t\t\t\tif (this._state !== STATE_STOPPED) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\n\t\t\t\tif (!this.source) {\n\t\t\t\t\tthis._createSource();\n\t\t\t\t}\n\n\t\t\t\tvar offset = capTime(this._startOffset, this.duration);\n\t\t\t\toffset = capTime(this._startTime + offset, this._sound.duration);\n\t\t\t\tthis._startOffset = null;\n\n\t\t\t\tif (this._duration) {\n\t\t\t\t\tthis.source.start(0, offset, this._duration);\n\t\t\t\t} else {\n\t\t\t\t\tthis.source.start(0, offset);\n\t\t\t\t}\n\n\t\t\t\tthis._startedAt = this._manager.context.currentTime;\n\t\t\t\tthis._currentTime = 0;\n\t\t\t\tthis._currentOffset = offset;\n\t\t\t\tthis._state = STATE_PLAYING;\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tthis.volume = this._volume;\n\t\t\t\tthis.loop = this._loop;\n\t\t\t\tthis.pitch = this._pitch;\n\n\t\t\t\tthis._manager.on('volumechange', this._onManagerVolumeChange, this);\n\n\t\t\t\tthis._manager.on('suspend', this._onManagerSuspend, this);\n\n\t\t\t\tthis._manager.on('resume', this._onManagerResume, this);\n\n\t\t\t\tthis._manager.on('destroy', this._onManagerDestroy, this);\n\n\t\t\t\tif (this._manager.suspended) {\n\t\t\t\t\tthis._onManagerSuspend();\n\t\t\t\t}\n\n\t\t\t\tif (!this._suspendInstanceEvents) this._onPlay();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tpause: function pause() {\n\t\t\t\tif (this._state !== STATE_PLAYING || !this.source) return false;\n\n\t\t\t\tthis._updateCurrentTime();\n\n\t\t\t\tthis._state = STATE_PAUSED;\n\t\t\t\tthis._suspendEndEvent = true;\n\t\t\t\tthis.source.stop(0);\n\t\t\t\tthis.source = null;\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tthis._startOffset = null;\n\t\t\t\tif (!this._suspendInstanceEvents) this._onPause();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tresume: function resume() {\n\t\t\t\tif (this._state !== STATE_PAUSED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!this.source) {\n\t\t\t\t\tthis._createSource();\n\t\t\t\t}\n\n\t\t\t\tvar offset = this.currentTime;\n\n\t\t\t\tif (this._startOffset !== null) {\n\t\t\t\t\toffset = capTime(this._startOffset, this.duration);\n\t\t\t\t\toffset = capTime(this._startTime + offset, this._sound.duration);\n\t\t\t\t\tthis._startOffset = null;\n\t\t\t\t}\n\n\t\t\t\tif (this._duration) {\n\t\t\t\t\tthis.source.start(0, offset, this._duration);\n\t\t\t\t} else {\n\t\t\t\t\tthis.source.start(0, offset);\n\t\t\t\t}\n\n\t\t\t\tthis._state = STATE_PLAYING;\n\t\t\t\tthis._startedAt = this._manager.context.currentTime;\n\t\t\t\tthis._currentOffset = offset;\n\t\t\t\tthis.volume = this._volume;\n\t\t\t\tthis.loop = this._loop;\n\t\t\t\tthis.pitch = this._pitch;\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tif (!this._suspendInstanceEvents) this._onResume();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tif (this._state === STATE_STOPPED || !this.source) return false;\n\n\t\t\t\tthis._manager.off('volumechange', this._onManagerVolumeChange, this);\n\n\t\t\t\tthis._manager.off('suspend', this._onManagerSuspend, this);\n\n\t\t\t\tthis._manager.off('resume', this._onManagerResume, this);\n\n\t\t\t\tthis._manager.off('destroy', this._onManagerDestroy, this);\n\n\t\t\t\tthis._startedAt = 0;\n\t\t\t\tthis._currentTime = 0;\n\t\t\t\tthis._currentOffset = 0;\n\t\t\t\tthis._startOffset = null;\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tthis._suspendEndEvent = true;\n\n\t\t\t\tif (this._state === STATE_PLAYING) {\n\t\t\t\t\tthis.source.stop(0);\n\t\t\t\t}\n\n\t\t\t\tthis.source = null;\n\t\t\t\tthis._state = STATE_STOPPED;\n\t\t\t\tif (!this._suspendInstanceEvents) this._onStop();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tsetExternalNodes: function setExternalNodes(firstNode, lastNode) {\n\t\t\t\tif (!firstNode) {\n\t\t\t\t\tconsole.error('The firstNode must be a valid Audio Node');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!lastNode) {\n\t\t\t\t\tlastNode = firstNode;\n\t\t\t\t}\n\n\t\t\t\tvar speakers = this._manager.context.destination;\n\n\t\t\t\tif (this._firstNode !== firstNode) {\n\t\t\t\t\tif (this._firstNode) {\n\t\t\t\t\t\tthis._connectorNode.disconnect(this._firstNode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._connectorNode.disconnect(speakers);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._firstNode = firstNode;\n\n\t\t\t\t\tthis._connectorNode.connect(firstNode);\n\t\t\t\t}\n\n\t\t\t\tif (this._lastNode !== lastNode) {\n\t\t\t\t\tif (this._lastNode) {\n\t\t\t\t\t\tthis._lastNode.disconnect(speakers);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._lastNode = lastNode;\n\n\t\t\t\t\tthis._lastNode.connect(speakers);\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearExternalNodes: function clearExternalNodes() {\n\t\t\t\tvar speakers = this._manager.context.destination;\n\n\t\t\t\tif (this._firstNode) {\n\t\t\t\t\tthis._connectorNode.disconnect(this._firstNode);\n\n\t\t\t\t\tthis._firstNode = null;\n\t\t\t\t}\n\n\t\t\t\tif (this._lastNode) {\n\t\t\t\t\tthis._lastNode.disconnect(speakers);\n\n\t\t\t\t\tthis._lastNode = null;\n\t\t\t\t}\n\n\t\t\t\tthis._connectorNode.connect(speakers);\n\t\t\t},\n\t\t\tgetExternalNodes: function getExternalNodes() {\n\t\t\t\treturn [this._firstNode, this._lastNode];\n\t\t\t},\n\t\t\t_createSource: function _createSource() {\n\t\t\t\tif (!this._sound) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tvar context = this._manager.context;\n\n\t\t\t\tif (this._sound.buffer) {\n\t\t\t\t\tthis.source = context.createBufferSource();\n\t\t\t\t\tthis.source.buffer = this._sound.buffer;\n\t\t\t\t\tthis.source.connect(this._inputNode);\n\t\t\t\t\tthis.source.onended = this._endedHandler;\n\t\t\t\t\tthis.source.loopStart = capTime(this._startTime, this.source.buffer.duration);\n\n\t\t\t\t\tif (this._duration) {\n\t\t\t\t\t\tthis.source.loopEnd = Math.max(this.source.loopStart, capTime(this._startTime + this._duration, this.source.buffer.duration));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.source;\n\t\t\t},\n\t\t\t_updateCurrentTime: function _updateCurrentTime() {\n\t\t\t\tthis._currentTime = capTime((this._manager.context.currentTime - this._startedAt) * this._pitch + this._currentOffset, this.duration);\n\t\t\t},\n\t\t\t_onManagerDestroy: function _onManagerDestroy() {\n\t\t\t\tif (this.source && this._state === STATE_PLAYING) {\n\t\t\t\t\tthis.source.stop(0);\n\t\t\t\t\tthis.source = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'volume', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._volume;\n\t\t\t},\n\t\t\tset: function set(volume) {\n\t\t\t\tvolume = math.clamp(volume, 0, 1);\n\t\t\t\tthis._volume = volume;\n\n\t\t\t\tif (this.gain) {\n\t\t\t\t\tthis.gain.gain.value = volume * this._manager.volume;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'pitch', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._pitch;\n\t\t\t},\n\t\t\tset: function set(pitch) {\n\t\t\t\tthis._currentOffset = this.currentTime;\n\t\t\t\tthis._startedAt = this._manager.context.currentTime;\n\t\t\t\tthis._pitch = Math.max(Number(pitch) || 0, 0.01);\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.playbackRate.value = this._pitch;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'sound', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._sound;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._sound = value;\n\n\t\t\t\tif (this._state !== STATE_STOPPED) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t} else {\n\t\t\t\t\tthis._createSource();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'currentTime', {\n\t\t\tget: function get() {\n\t\t\t\tif (this._startOffset !== null) {\n\t\t\t\t\treturn this._startOffset;\n\t\t\t\t}\n\n\t\t\t\tif (this._state === STATE_PAUSED) {\n\t\t\t\t\treturn this._currentTime;\n\t\t\t\t}\n\n\t\t\t\tif (this._state === STATE_STOPPED || !this.source) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tthis._updateCurrentTime();\n\n\t\t\t\treturn this._currentTime;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value < 0) return;\n\n\t\t\t\tif (this._state === STATE_PLAYING) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t\tvar suspend = this._suspendInstanceEvents;\n\t\t\t\t\tthis._suspendInstanceEvents = true;\n\t\t\t\t\tthis._startOffset = value;\n\t\t\t\t\tthis.play();\n\t\t\t\t\tthis._suspendInstanceEvents = suspend;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startOffset = value;\n\t\t\t\t\tthis._currentTime = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else {\n\t\tObject.assign(SoundInstance.prototype, {\n\t\t\tplay: function play() {\n\t\t\t\tif (this._state !== STATE_STOPPED) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\n\t\t\t\tif (!this.source) {\n\t\t\t\t\tif (!this._createSource()) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.volume = this._volume;\n\t\t\t\tthis.pitch = this._pitch;\n\t\t\t\tthis.loop = this._loop;\n\t\t\t\tthis.source.play();\n\t\t\t\tthis._state = STATE_PLAYING;\n\t\t\t\tthis._playWhenLoaded = false;\n\n\t\t\t\tthis._manager.on('volumechange', this._onManagerVolumeChange, this);\n\n\t\t\t\tthis._manager.on('suspend', this._onManagerSuspend, this);\n\n\t\t\t\tthis._manager.on('resume', this._onManagerResume, this);\n\n\t\t\t\tthis._manager.on('destroy', this._onManagerDestroy, this);\n\n\t\t\t\tif (this._manager.suspended) this._onManagerSuspend();\n\t\t\t\tif (!this._suspendInstanceEvents) this._onPlay();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tpause: function pause() {\n\t\t\t\tif (!this.source || this._state !== STATE_PLAYING) return false;\n\t\t\t\tthis._suspendEndEvent = true;\n\t\t\t\tthis.source.pause();\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tthis._state = STATE_PAUSED;\n\t\t\t\tthis._startOffset = null;\n\t\t\t\tif (!this._suspendInstanceEvents) this._onPause();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tresume: function resume() {\n\t\t\t\tif (!this.source || this._state !== STATE_PAUSED) return false;\n\t\t\t\tthis._state = STATE_PLAYING;\n\t\t\t\tthis._playWhenLoaded = false;\n\n\t\t\t\tif (this.source.paused) {\n\t\t\t\t\tthis.source.play();\n\t\t\t\t\tif (!this._suspendInstanceEvents) this._onResume();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tif (!this.source || this._state === STATE_STOPPED) return false;\n\n\t\t\t\tthis._manager.off('volumechange', this._onManagerVolumeChange, this);\n\n\t\t\t\tthis._manager.off('suspend', this._onManagerSuspend, this);\n\n\t\t\t\tthis._manager.off('resume', this._onManagerResume, this);\n\n\t\t\t\tthis._manager.off('destroy', this._onManagerDestroy, this);\n\n\t\t\t\tthis._suspendEndEvent = true;\n\t\t\t\tthis.source.pause();\n\t\t\t\tthis._playWhenLoaded = false;\n\t\t\t\tthis._state = STATE_STOPPED;\n\t\t\t\tthis._startOffset = null;\n\t\t\t\tif (!this._suspendInstanceEvents) this._onStop();\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tsetExternalNodes: function setExternalNodes() {},\n\t\t\tclearExternalNodes: function clearExternalNodes() {},\n\t\t\tgetExternalNodes: function getExternalNodes() {\n\t\t\t\treturn [null, null];\n\t\t\t},\n\t\t\t_onLoadedMetadata: function _onLoadedMetadata() {\n\t\t\t\tthis.source.removeEventListener('loadedmetadata', this._loadedMetadataHandler);\n\t\t\t\tthis._isReady = true;\n\t\t\t\tvar offset = capTime(this._startOffset, this.duration);\n\t\t\t\toffset = capTime(this._startTime + offset, this._sound.duration);\n\t\t\t\tthis._startOffset = null;\n\t\t\t\tthis.source.currentTime = offset;\n\t\t\t},\n\t\t\t_createSource: function _createSource() {\n\t\t\t\tif (this._sound && this._sound.audio) {\n\t\t\t\t\tthis._isReady = false;\n\t\t\t\t\tthis.source = this._sound.audio.cloneNode(true);\n\t\t\t\t\tthis.source.addEventListener('loadedmetadata', this._loadedMetadataHandler);\n\t\t\t\t\tthis.source.addEventListener('timeupdate', this._timeUpdateHandler);\n\t\t\t\t\tthis.source.onended = this._endedHandler;\n\t\t\t\t}\n\n\t\t\t\treturn this.source;\n\t\t\t},\n\t\t\t_onTimeUpdate: function _onTimeUpdate() {\n\t\t\t\tif (!this._duration) return;\n\n\t\t\t\tif (this.source.currentTime > capTime(this._startTime + this._duration, this.source.duration)) {\n\t\t\t\t\tif (this.loop) {\n\t\t\t\t\t\tthis.source.currentTime = capTime(this._startTime, this.source.duration);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.source.removeEventListener('timeupdate', this._timeUpdateHandler);\n\t\t\t\t\t\tthis.source.pause();\n\n\t\t\t\t\t\tthis._onEnded();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onManagerDestroy: function _onManagerDestroy() {\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'volume', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._volume;\n\t\t\t},\n\t\t\tset: function set(volume) {\n\t\t\t\tvolume = math.clamp(volume, 0, 1);\n\t\t\t\tthis._volume = volume;\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.volume = volume * this._manager.volume;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'pitch', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._pitch;\n\t\t\t},\n\t\t\tset: function set(pitch) {\n\t\t\t\tthis._pitch = Math.max(Number(pitch) || 0, 0.01);\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.playbackRate = this._pitch;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'sound', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._sound;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.stop();\n\t\t\t\tthis._sound = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance.prototype, 'currentTime', {\n\t\t\tget: function get() {\n\t\t\t\tif (this._startOffset !== null) {\n\t\t\t\t\treturn this._startOffset;\n\t\t\t\t}\n\n\t\t\t\tif (this._state === STATE_STOPPED || !this.source) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn this.source.currentTime - this._startTime;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value < 0) return;\n\t\t\t\tthis._startOffset = value;\n\n\t\t\t\tif (this.source && this._isReady) {\n\t\t\t\t\tthis.source.currentTime = capTime(this._startTime + capTime(value, this.duration), this._sound.duration);\n\t\t\t\t\tthis._startOffset = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tvar MAX_DISTANCE$1 = 10000;\n\n\tvar SoundInstance3d = function (_SoundInstance) {\n\t\t_inheritsLoose(SoundInstance3d, _SoundInstance);\n\n\t\tfunction SoundInstance3d(manager, sound, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _SoundInstance.call(this, manager, sound, options) || this;\n\t\t\toptions = options || {};\n\t\t\t_this._position = new Vec3();\n\t\t\tif (options.position) _this.position = options.position;\n\t\t\t_this._velocity = new Vec3();\n\t\t\tif (options.velocity) _this.velocity = options.velocity;\n\t\t\t_this.maxDistance = options.maxDistance !== undefined ? Number(options.maxDistance) : MAX_DISTANCE$1;\n\t\t\t_this.refDistance = options.refDistance !== undefined ? Number(options.refDistance) : 1;\n\t\t\t_this.rollOffFactor = options.rollOffFactor !== undefined ? Number(options.rollOffFactor) : 1;\n\t\t\t_this.distanceModel = options.distanceModel !== undefined ? options.distanceModel : DISTANCE_LINEAR;\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn SoundInstance3d;\n\t}(SoundInstance);\n\n\tif (hasAudioContext()) {\n\t\tObject.assign(SoundInstance3d.prototype, {\n\t\t\t_initializeNodes: function _initializeNodes() {\n\t\t\t\tthis.gain = this._manager.context.createGain();\n\t\t\t\tthis.panner = this._manager.context.createPanner();\n\t\t\t\tthis.panner.connect(this.gain);\n\t\t\t\tthis._inputNode = this.panner;\n\t\t\t\tthis._connectorNode = this.gain;\n\n\t\t\t\tthis._connectorNode.connect(this._manager.context.destination);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'position', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._position;\n\t\t\t},\n\t\t\tset: function set(position) {\n\t\t\t\tthis._position.copy(position);\n\n\t\t\t\tthis.panner.setPosition(position.x, position.y, position.z);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'velocity', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._velocity;\n\t\t\t},\n\t\t\tset: function set(velocity) {\n\t\t\t\tthis._velocity.copy(velocity);\n\n\t\t\t\tthis.panner.setVelocity(velocity.x, velocity.y, velocity.z);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'maxDistance', {\n\t\t\tget: function get() {\n\t\t\t\treturn this.panner.maxDistance;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.panner.maxDistance = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'refDistance', {\n\t\t\tget: function get() {\n\t\t\t\treturn this.panner.refDistance;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.panner.refDistance = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'rollOffFactor', {\n\t\t\tget: function get() {\n\t\t\t\treturn this.panner.rolloffFactor;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.panner.rolloffFactor = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'distanceModel', {\n\t\t\tget: function get() {\n\t\t\t\treturn this.panner.distanceModel;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.panner.distanceModel = value;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tvar offset$1 = new Vec3();\n\n\t\tvar fallOff$1 = function fallOff(posOne, posTwo, refDistance, maxDistance, rollOffFactor, distanceModel) {\n\t\t\toffset$1 = offset$1.sub2(posOne, posTwo);\n\t\t\tvar distance = offset$1.length();\n\n\t\t\tif (distance < refDistance) {\n\t\t\t\treturn 1;\n\t\t\t} else if (distance > maxDistance) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar result = 0;\n\n\t\t\tif (distanceModel === DISTANCE_LINEAR) {\n\t\t\t\tresult = 1 - rollOffFactor * (distance - refDistance) / (maxDistance - refDistance);\n\t\t\t} else if (distanceModel === DISTANCE_INVERSE) {\n\t\t\t\tresult = refDistance / (refDistance + rollOffFactor * (distance - refDistance));\n\t\t\t} else if (distanceModel === DISTANCE_EXPONENTIAL) {\n\t\t\t\tresult = Math.pow(distance / refDistance, -rollOffFactor);\n\t\t\t}\n\n\t\t\treturn math.clamp(result, 0, 1);\n\t\t};\n\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'position', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._position;\n\t\t\t},\n\t\t\tset: function set(position) {\n\t\t\t\tthis._position.copy(position);\n\n\t\t\t\tif (this.source) {\n\t\t\t\t\tvar listener = this._manager.listener;\n\t\t\t\t\tvar lpos = listener.getPosition();\n\t\t\t\t\tvar factor = fallOff$1(lpos, this._position, this.refDistance, this.maxDistance, this.rollOffFactor, this.distanceModel);\n\t\t\t\t\tvar v = this.volume;\n\t\t\t\t\tthis.source.volume = v * factor * this._manager.volume;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'velocity', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._velocity;\n\t\t\t},\n\t\t\tset: function set(velocity) {\n\t\t\t\tthis._velocity.copy(velocity);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'maxDistance', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._maxDistance;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._maxDistance = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'refDistance', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._refDistance;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._refDistance = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'rollOffFactor', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._rollOffFactor;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._rollOffFactor = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(SoundInstance3d.prototype, 'distanceModel', {\n\t\t\tget: function get() {\n\t\t\t\treturn this._distanceModel;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._distanceModel = value;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar instanceOptions = {\n\t\tvolume: 0,\n\t\tpitch: 0,\n\t\tloop: false,\n\t\tstartTime: 0,\n\t\tduration: 0,\n\t\tposition: new Vec3(),\n\t\tmaxDistance: 0,\n\t\trefDistance: 0,\n\t\trollOffFactor: 0,\n\t\tdistanceModel: 0,\n\t\tonPlay: null,\n\t\tonPause: null,\n\t\tonResume: null,\n\t\tonStop: null,\n\t\tonEnd: null\n\t};\n\n\tvar SoundSlot = function (_EventHandler) {\n\t\t_inheritsLoose(SoundSlot, _EventHandler);\n\n\t\tfunction SoundSlot(component, name, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._component = component;\n\t\t\t_this._assets = component.system.app.assets;\n\t\t\t_this._manager = component.system.manager;\n\t\t\t_this.name = name || 'Untitled';\n\t\t\toptions = options || {};\n\t\t\t_this._volume = options.volume !== undefined ? math.clamp(Number(options.volume) || 0, 0, 1) : 1;\n\t\t\t_this._pitch = options.pitch !== undefined ? Math.max(0.01, Number(options.pitch) || 0) : 1;\n\t\t\t_this._loop = !!(options.loop !== undefined ? options.loop : false);\n\t\t\t_this._duration = options.duration > 0 ? options.duration : null;\n\t\t\t_this._startTime = Math.max(0, Number(options.startTime) || 0);\n\t\t\t_this._overlap = !!options.overlap;\n\t\t\t_this._autoPlay = !!options.autoPlay;\n\t\t\t_this._firstNode = null;\n\t\t\t_this._lastNode = null;\n\t\t\t_this._asset = options.asset;\n\n\t\t\tif (_this._asset instanceof Asset) {\n\t\t\t\t_this._asset = _this._asset.id;\n\t\t\t}\n\n\t\t\t_this._onInstancePlayHandler = _this._onInstancePlay.bind(_assertThisInitialized(_this));\n\t\t\t_this._onInstancePauseHandler = _this._onInstancePause.bind(_assertThisInitialized(_this));\n\t\t\t_this._onInstanceResumeHandler = _this._onInstanceResume.bind(_assertThisInitialized(_this));\n\t\t\t_this._onInstanceStopHandler = _this._onInstanceStop.bind(_assertThisInitialized(_this));\n\t\t\t_this._onInstanceEndHandler = _this._onInstanceEnd.bind(_assertThisInitialized(_this));\n\t\t\t_this.instances = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SoundSlot.prototype;\n\n\t\t_proto.play = function play() {\n\t\t\tif (!this.overlap) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tif (!this.isLoaded && !this._hasAsset()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar instance = this._createInstance();\n\n\t\t\tthis.instances.push(instance);\n\n\t\t\tif (!this.isLoaded) {\n\t\t\t\tvar onLoad = function onLoad(sound) {\n\t\t\t\t\tvar playWhenLoaded = instance._playWhenLoaded;\n\t\t\t\t\tinstance.sound = sound;\n\n\t\t\t\t\tif (playWhenLoaded) {\n\t\t\t\t\t\tinstance.play();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.off('load', onLoad);\n\t\t\t\tthis.once('load', onLoad);\n\t\t\t\tthis.load();\n\t\t\t} else {\n\t\t\t\tinstance.play();\n\t\t\t}\n\n\t\t\treturn instance;\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tvar paused = false;\n\t\t\tvar instances = this.instances;\n\n\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\tif (instances[i].pause()) {\n\t\t\t\t\tpaused = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn paused;\n\t\t};\n\n\t\t_proto.resume = function resume() {\n\t\t\tvar resumed = false;\n\t\t\tvar instances = this.instances;\n\n\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\tif (instances[i].resume()) resumed = true;\n\t\t\t}\n\n\t\t\treturn resumed;\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tvar stopped = false;\n\t\t\tvar instances = this.instances;\n\t\t\tvar i = instances.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tinstances[i].stop();\n\t\t\t\tstopped = true;\n\t\t\t}\n\n\t\t\tinstances.length = 0;\n\t\t\treturn stopped;\n\t\t};\n\n\t\t_proto.load = function load() {\n\t\t\tif (!this._hasAsset()) return;\n\n\t\t\tvar asset = this._assets.get(this._asset);\n\n\t\t\tif (!asset) {\n\t\t\t\tthis._assets.off('add:' + this._asset, this._onAssetAdd, this);\n\n\t\t\t\tthis._assets.once('add:' + this._asset, this._onAssetAdd, this);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tasset.off('remove', this._onAssetRemoved, this);\n\t\t\tasset.on('remove', this._onAssetRemoved, this);\n\n\t\t\tif (!asset.resource) {\n\t\t\t\tasset.off('load', this._onAssetLoad, this);\n\t\t\t\tasset.once('load', this._onAssetLoad, this);\n\n\t\t\t\tthis._assets.load(asset);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.fire('load', asset.resource);\n\t\t};\n\n\t\t_proto.setExternalNodes = function setExternalNodes(firstNode, lastNode) {\n\t\t\tif (!firstNode) {\n\t\t\t\tconsole.error('The firstNode must have a valid AudioNode');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!lastNode) {\n\t\t\t\tlastNode = firstNode;\n\t\t\t}\n\n\t\t\tthis._firstNode = firstNode;\n\t\t\tthis._lastNode = lastNode;\n\n\t\t\tif (!this._overlap) {\n\t\t\t\tvar instances = this.instances;\n\n\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\tinstances[i].setExternalNodes(firstNode, lastNode);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.clearExternalNodes = function clearExternalNodes() {\n\t\t\tthis._firstNode = null;\n\t\t\tthis._lastNode = null;\n\n\t\t\tif (!this._overlap) {\n\t\t\t\tvar instances = this.instances;\n\n\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\tinstances[i].clearExternalNodes();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.getExternalNodes = function getExternalNodes() {\n\t\t\treturn [this._firstNode, this._lastNode];\n\t\t};\n\n\t\t_proto._hasAsset = function _hasAsset() {\n\t\t\treturn this._asset != null;\n\t\t};\n\n\t\t_proto._createInstance = function _createInstance() {\n\t\t\tvar instance = null;\n\t\t\tvar component = this._component;\n\t\t\tvar sound = null;\n\n\t\t\tif (this._hasAsset()) {\n\t\t\t\tvar asset = this._assets.get(this._asset);\n\n\t\t\t\tif (asset) {\n\t\t\t\t\tsound = asset.resource;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar data = instanceOptions;\n\t\t\tdata.volume = this._volume * component.volume;\n\t\t\tdata.pitch = this._pitch * component.pitch;\n\t\t\tdata.loop = this._loop;\n\t\t\tdata.startTime = this._startTime;\n\t\t\tdata.duration = this._duration;\n\t\t\tdata.onPlay = this._onInstancePlayHandler;\n\t\t\tdata.onPause = this._onInstancePauseHandler;\n\t\t\tdata.onResume = this._onInstanceResumeHandler;\n\t\t\tdata.onStop = this._onInstanceStopHandler;\n\t\t\tdata.onEnd = this._onInstanceEndHandler;\n\n\t\t\tif (component.positional) {\n\t\t\t\tdata.position.copy(component.entity.getPosition());\n\t\t\t\tdata.maxDistance = component.maxDistance;\n\t\t\t\tdata.refDistance = component.refDistance;\n\t\t\t\tdata.rollOffFactor = component.rollOffFactor;\n\t\t\t\tdata.distanceModel = component.distanceModel;\n\t\t\t\tinstance = new SoundInstance3d(this._manager, sound, data);\n\t\t\t} else {\n\t\t\t\tinstance = new SoundInstance(this._manager, sound, data);\n\t\t\t}\n\n\t\t\tif (this._firstNode) {\n\t\t\t\tinstance.setExternalNodes(this._firstNode, this._lastNode);\n\t\t\t}\n\n\t\t\treturn instance;\n\t\t};\n\n\t\t_proto._onInstancePlay = function _onInstancePlay(instance) {\n\t\t\tthis.fire('play', instance);\n\n\t\t\tthis._component.fire('play', this, instance);\n\t\t};\n\n\t\t_proto._onInstancePause = function _onInstancePause(instance) {\n\t\t\tthis.fire('pause', instance);\n\n\t\t\tthis._component.fire('pause', this, instance);\n\t\t};\n\n\t\t_proto._onInstanceResume = function _onInstanceResume(instance) {\n\t\t\tthis.fire('resume', instance);\n\n\t\t\tthis._component.fire('resume', this, instance);\n\t\t};\n\n\t\t_proto._onInstanceStop = function _onInstanceStop(instance) {\n\t\t\tvar idx = this.instances.indexOf(instance);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis.instances.splice(idx, 1);\n\t\t\t}\n\n\t\t\tthis.fire('stop', instance);\n\n\t\t\tthis._component.fire('stop', this, instance);\n\t\t};\n\n\t\t_proto._onInstanceEnd = function _onInstanceEnd(instance) {\n\t\t\tvar idx = this.instances.indexOf(instance);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis.instances.splice(idx, 1);\n\t\t\t}\n\n\t\t\tthis.fire('end', instance);\n\n\t\t\tthis._component.fire('end', this, instance);\n\t\t};\n\n\t\t_proto._onAssetAdd = function _onAssetAdd(asset) {\n\t\t\tthis.load();\n\t\t};\n\n\t\t_proto._onAssetLoad = function _onAssetLoad(asset) {\n\t\t\tthis.load();\n\t\t};\n\n\t\t_proto._onAssetRemoved = function _onAssetRemoved(asset) {\n\t\t\tasset.off('remove', this._onAssetRemoved, this);\n\n\t\t\tthis._assets.off('add:' + asset.id, this._onAssetAdd, this);\n\n\t\t\tthis.stop();\n\t\t};\n\n\t\t_proto.updatePosition = function updatePosition(position) {\n\t\t\tvar instances = this.instances;\n\n\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\tinstances[i].position = position;\n\t\t\t}\n\t\t};\n\n\t\t_createClass(SoundSlot, [{\n\t\t\tkey: \"volume\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._volume;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._volume = math.clamp(Number(value) || 0, 0, 1);\n\n\t\t\t\tif (!this._overlap) {\n\t\t\t\t\tvar instances = this.instances;\n\n\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\tinstances[i].volume = this._volume * this._component.volume;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pitch\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._pitch;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._pitch = Math.max(Number(value) || 0, 0.01);\n\n\t\t\t\tif (!this._overlap) {\n\t\t\t\t\tvar instances = this.instances;\n\n\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\tinstances[i].pitch = this.pitch * this._component.pitch;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"loop\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._loop;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._loop = !!value;\n\t\t\t\tvar instances = this.instances;\n\n\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\tinstances[i].loop = this._loop;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoPlay\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoPlay;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._autoPlay = !!value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"overlap\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._overlap;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._overlap = !!value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"startTime\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._startTime;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._startTime = Math.max(0, Number(value) || 0);\n\n\t\t\t\tif (!this._overlap) {\n\t\t\t\t\tvar instances = this.instances;\n\n\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\tinstances[i].startTime = this._startTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\tvar assetDuration = 0;\n\n\t\t\t\tif (this._hasAsset()) {\n\t\t\t\t\tvar asset = this._assets.get(this._asset);\n\n\t\t\t\t\tassetDuration = asset.resource ? asset.resource.duration : 0;\n\t\t\t\t}\n\n\t\t\t\tif (this._duration != null) {\n\t\t\t\t\treturn this._duration % (assetDuration || 1);\n\t\t\t\t}\n\n\t\t\t\treturn assetDuration;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._duration = Math.max(0, Number(value) || 0) || null;\n\n\t\t\t\tif (!this._overlap) {\n\t\t\t\t\tvar instances = this.instances;\n\n\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\tinstances[i].duration = this._duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"asset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._asset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar old = this._asset;\n\n\t\t\t\tif (old) {\n\t\t\t\t\tthis._assets.off('add:' + old, this._onAssetAdd, this);\n\n\t\t\t\t\tvar oldAsset = this._assets.get(old);\n\n\t\t\t\t\tif (oldAsset) {\n\t\t\t\t\t\toldAsset.off('remove', this._onAssetRemoved, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._asset = value;\n\n\t\t\t\tif (this._asset instanceof Asset) {\n\t\t\t\t\tthis._asset = this._asset.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._hasAsset() && this._component.enabled && this._component.entity.enabled) {\n\t\t\t\t\tthis.load();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isLoaded\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._hasAsset()) {\n\t\t\t\t\tvar asset = this._assets.get(this._asset);\n\n\t\t\t\t\tif (asset) {\n\t\t\t\t\t\treturn !!asset.resource;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPlaying\",\n\t\t\tget: function get() {\n\t\t\t\tvar instances = this.instances;\n\n\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\tif (instances[i].isPlaying) return true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPaused\",\n\t\t\tget: function get() {\n\t\t\t\tvar instances = this.instances;\n\t\t\t\tvar len = instances.length;\n\t\t\t\tif (len === 0) return false;\n\n\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\tif (!instances[i].isPaused) return false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isStopped\",\n\t\t\tget: function get() {\n\t\t\t\tvar instances = this.instances;\n\n\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\tif (!instances[i].isStopped) return false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SoundSlot;\n\t}(EventHandler);\n\n\tvar SoundComponent = function (_Component) {\n\t\t_inheritsLoose(SoundComponent, _Component);\n\n\t\tfunction SoundComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._volume = 1;\n\t\t\t_this._pitch = 1;\n\t\t\t_this._positional = true;\n\t\t\t_this._refDistance = 1;\n\t\t\t_this._maxDistance = 10000;\n\t\t\t_this._rollOffFactor = 1;\n\t\t\t_this._distanceModel = DISTANCE_LINEAR;\n\t\t\t_this._slots = {};\n\t\t\t_this._playingBeforeDisable = {};\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SoundComponent.prototype;\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tif (this.system._inTools) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar slots = this._slots;\n\t\t\tvar playingBeforeDisable = this._playingBeforeDisable;\n\n\t\t\tfor (var key in slots) {\n\t\t\t\tvar slot = slots[key];\n\n\t\t\t\tif (slot.autoPlay && slot.isStopped) {\n\t\t\t\t\tslot.play();\n\t\t\t\t} else if (playingBeforeDisable[key]) {\n\t\t\t\t\tslot.resume();\n\t\t\t\t} else if (!slot.isLoaded) {\n\t\t\t\t\tslot.load();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tvar slots = this._slots;\n\t\t\tvar playingBeforeDisable = {};\n\n\t\t\tfor (var key in slots) {\n\t\t\t\tif (!slots[key].overlap) {\n\t\t\t\t\tif (slots[key].isPlaying) {\n\t\t\t\t\t\tslots[key].pause();\n\t\t\t\t\t\tplayingBeforeDisable[key] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._playingBeforeDisable = playingBeforeDisable;\n\t\t};\n\n\t\t_proto.onRemove = function onRemove() {\n\t\t\tthis.off();\n\t\t};\n\n\t\t_proto.addSlot = function addSlot(name, options) {\n\t\t\tvar slots = this._slots;\n\n\t\t\tif (slots[name]) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar slot = new SoundSlot(this, name, options);\n\t\t\tslots[name] = slot;\n\n\t\t\tif (slot.autoPlay && this.enabled && this.entity.enabled) {\n\t\t\t\tslot.play();\n\t\t\t}\n\n\t\t\treturn slot;\n\t\t};\n\n\t\t_proto.removeSlot = function removeSlot(name) {\n\t\t\tvar slots = this._slots;\n\n\t\t\tif (slots[name]) {\n\t\t\t\tslots[name].stop();\n\t\t\t\tdelete slots[name];\n\t\t\t}\n\t\t};\n\n\t\t_proto.slot = function slot(name) {\n\t\t\treturn this._slots[name];\n\t\t};\n\n\t\t_proto.play = function play(name) {\n\t\t\tif (!this.enabled || !this.entity.enabled) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar slot = this._slots[name];\n\n\t\t\tif (!slot) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn slot.play();\n\t\t};\n\n\t\t_proto.pause = function pause(name) {\n\t\t\tvar slot;\n\t\t\tvar slots = this._slots;\n\n\t\t\tif (name) {\n\t\t\t\tslot = slots[name];\n\n\t\t\t\tif (!slot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tslot.pause();\n\t\t\t} else {\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tslots[key].pause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.resume = function resume(name) {\n\t\t\tvar slots = this._slots;\n\n\t\t\tif (name) {\n\t\t\t\tvar slot = slots[name];\n\n\t\t\t\tif (!slot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (slot.isPaused) {\n\t\t\t\t\tslot.resume();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tslots[key].resume();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.stop = function stop(name) {\n\t\t\tvar slots = this._slots;\n\n\t\t\tif (name) {\n\t\t\t\tvar slot = slots[name];\n\n\t\t\t\tif (!slot) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tslot.stop();\n\t\t\t} else {\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tslots[key].stop();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_createClass(SoundComponent, [{\n\t\t\tkey: \"positional\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._positional;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis._positional = newValue;\n\t\t\t\tvar slots = this._slots;\n\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tvar slot = slots[key];\n\n\t\t\t\t\tif (!slot.overlap) {\n\t\t\t\t\t\tvar instances = slot.instances;\n\t\t\t\t\t\tvar oldLength = instances.length;\n\n\t\t\t\t\t\tfor (var i = oldLength - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tvar isPlaying = instances[i].isPlaying || instances[i].isSuspended;\n\t\t\t\t\t\t\tvar currentTime = instances[i].currentTime;\n\t\t\t\t\t\t\tif (isPlaying) instances[i].stop();\n\n\t\t\t\t\t\t\tvar instance = slot._createInstance();\n\n\t\t\t\t\t\t\tif (isPlaying) {\n\t\t\t\t\t\t\t\tinstance.play();\n\t\t\t\t\t\t\t\tinstance.currentTime = currentTime;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"slots\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._slots;\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tvar key;\n\t\t\t\tvar oldValue = this._slots;\n\n\t\t\t\tif (oldValue) {\n\t\t\t\t\tfor (key in oldValue) {\n\t\t\t\t\t\toldValue[key].stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar slots = {};\n\n\t\t\t\tfor (key in newValue) {\n\t\t\t\t\tif (!(newValue[key] instanceof SoundSlot)) {\n\t\t\t\t\t\tif (newValue[key].name) {\n\t\t\t\t\t\t\tslots[newValue[key].name] = new SoundSlot(this, newValue[key].name, newValue[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tslots[newValue[key].name] = newValue[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._slots = slots;\n\t\t\t\tif (this.enabled && this.entity.enabled) this.onEnable();\n\t\t\t}\n\t\t}]);\n\n\t\treturn SoundComponent;\n\t}(Component);\n\n\tfunction defineSoundPropertyBasic(publicName, privateName) {\n\t\tObject.defineProperty(SoundComponent.prototype, publicName, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privateName];\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis[privateName] = newValue;\n\t\t\t\tvar slots = this._slots;\n\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tvar slot = slots[key];\n\n\t\t\t\t\tif (!slot.overlap) {\n\t\t\t\t\t\tvar instances = slot.instances;\n\n\t\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\t\tinstances[i][publicName] = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction defineSoundPropertyFactor(publicName, privateName) {\n\t\tObject.defineProperty(SoundComponent.prototype, publicName, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privateName];\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tthis[privateName] = newValue;\n\t\t\t\tvar slots = this._slots;\n\n\t\t\t\tfor (var key in slots) {\n\t\t\t\t\tvar slot = slots[key];\n\n\t\t\t\t\tif (!slot.overlap) {\n\t\t\t\t\t\tvar instances = slot.instances;\n\n\t\t\t\t\t\tfor (var i = 0, len = instances.length; i < len; i++) {\n\t\t\t\t\t\t\tinstances[i][publicName] = slot[publicName] * newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdefineSoundPropertyFactor('pitch', '_pitch');\n\tdefineSoundPropertyFactor('volume', '_volume');\n\tdefineSoundPropertyBasic('refDistance', '_refDistance');\n\tdefineSoundPropertyBasic('maxDistance', '_maxDistance');\n\tdefineSoundPropertyBasic('rollOffFactor', '_rollOffFactor');\n\tdefineSoundPropertyBasic('distanceModel', '_distanceModel');\n\n\tvar SoundComponentData = function SoundComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$i = ['enabled'];\n\n\tvar SoundComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(SoundComponentSystem, _ComponentSystem);\n\n\t\tfunction SoundComponentSystem(app, manager) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = \"sound\";\n\t\t\t_this.ComponentType = SoundComponent;\n\t\t\t_this.DataType = SoundComponentData;\n\t\t\t_this.schema = _schema$i;\n\t\t\t_this.manager = manager;\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SoundComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tproperties = ['volume', 'pitch', 'positional', 'refDistance', 'maxDistance', 'rollOffFactor', 'distanceModel', 'slots'];\n\n\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\tif (data.hasOwnProperty(properties[i])) {\n\t\t\t\t\tcomponent[properties[i]] = data[properties[i]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, ['enabled']);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar srcComponent = entity.sound;\n\t\t\tvar srcSlots = srcComponent.slots;\n\t\t\tvar slots = {};\n\n\t\t\tfor (var key in srcSlots) {\n\t\t\t\tvar srcSlot = srcSlots[key];\n\t\t\t\tslots[key] = {\n\t\t\t\t\tname: srcSlot.name,\n\t\t\t\t\tvolume: srcSlot.volume,\n\t\t\t\t\tpitch: srcSlot.pitch,\n\t\t\t\t\tloop: srcSlot.loop,\n\t\t\t\t\tduration: srcSlot.duration,\n\t\t\t\t\tstartTime: srcSlot.startTime,\n\t\t\t\t\toverlap: srcSlot.overlap,\n\t\t\t\t\tautoPlay: srcSlot.autoPlay,\n\t\t\t\t\tasset: srcSlot.asset\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar cloneData = {\n\t\t\t\tdistanceModel: srcComponent.distanceModel,\n\t\t\t\tenabled: srcComponent.enabled,\n\t\t\t\tmaxDistance: srcComponent.maxDistance,\n\t\t\t\tpitch: srcComponent.pitch,\n\t\t\t\tpositional: srcComponent.positional,\n\t\t\t\trefDistance: srcComponent.refDistance,\n\t\t\t\trollOffFactor: srcComponent.rollOffFactor,\n\t\t\t\tslots: slots,\n\t\t\t\tvolume: srcComponent.volume\n\t\t\t};\n\t\t\treturn this.addComponent(clone, cloneData);\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar store = this.store;\n\n\t\t\tfor (var id in store) {\n\t\t\t\tif (store.hasOwnProperty(id)) {\n\t\t\t\t\tvar item = store[id];\n\t\t\t\t\tvar entity = item.entity;\n\n\t\t\t\t\tif (entity.enabled) {\n\t\t\t\t\t\tvar component = entity.sound;\n\n\t\t\t\t\t\tif (component.enabled && component.positional) {\n\t\t\t\t\t\t\tvar position = entity.getPosition();\n\t\t\t\t\t\t\tvar slots = component.slots;\n\n\t\t\t\t\t\t\tfor (var key in slots) {\n\t\t\t\t\t\t\t\tslots[key].updatePosition(position);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tvar slots = component.slots;\n\n\t\t\tfor (var key in slots) {\n\t\t\t\tif (!slots[key].overlap) {\n\t\t\t\t\tslots[key].stop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomponent.onRemove();\n\t\t};\n\n\t\t_createClass(SoundComponentSystem, [{\n\t\t\tkey: \"volume\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.manager.volume;\n\t\t\t},\n\t\t\tset: function set(volume) {\n\t\t\t\tthis.manager.volume = volume;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"context\",\n\t\t\tget: function get() {\n\t\t\t\tif (!hasAudioContext()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn this.manager.context;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SoundComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(SoundComponent.prototype, _schema$i);\n\n\tvar SPRITETYPE_SIMPLE = 'simple';\n\tvar SPRITETYPE_ANIMATED = 'animated';\n\n\tvar SpriteAnimationClip = function (_EventHandler) {\n\t\t_inheritsLoose(SpriteAnimationClip, _EventHandler);\n\n\t\tfunction SpriteAnimationClip(component, data) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._component = component;\n\t\t\t_this._frame = 0;\n\t\t\t_this._sprite = null;\n\t\t\t_this._spriteAsset = null;\n\t\t\t_this.spriteAsset = data.spriteAsset;\n\t\t\t_this.name = data.name;\n\t\t\t_this.fps = data.fps || 0;\n\t\t\t_this.loop = data.loop || false;\n\t\t\t_this._playing = false;\n\t\t\t_this._paused = false;\n\t\t\t_this._time = 0;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SpriteAnimationClip.prototype;\n\n\t\t_proto._onSpriteAssetAdded = function _onSpriteAssetAdded(asset) {\n\t\t\tthis._component.system.app.assets.off('add:' + asset.id, this._onSpriteAssetAdded, this);\n\n\t\t\tif (this._spriteAsset === asset.id) {\n\t\t\t\tthis._bindSpriteAsset(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._bindSpriteAsset = function _bindSpriteAsset(asset) {\n\t\t\tasset.on(\"load\", this._onSpriteAssetLoad, this);\n\t\t\tasset.on(\"remove\", this._onSpriteAssetRemove, this);\n\n\t\t\tif (asset.resource) {\n\t\t\t\tthis._onSpriteAssetLoad(asset);\n\t\t\t} else {\n\t\t\t\tthis._component.system.app.assets.load(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto._unbindSpriteAsset = function _unbindSpriteAsset(asset) {\n\t\t\tasset.off(\"load\", this._onSpriteAssetLoad, this);\n\t\t\tasset.off(\"remove\", this._onSpriteAssetRemove, this);\n\n\t\t\tif (asset.resource && asset.resource.atlas) {\n\t\t\t\tthis._component.system.app.assets.off('load:' + asset.data.textureAtlasAsset, this._onTextureAtlasLoad, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSpriteAssetLoad = function _onSpriteAssetLoad(asset) {\n\t\t\tif (!asset.resource) {\n\t\t\t\tthis.sprite = null;\n\t\t\t} else {\n\t\t\t\tif (!asset.resource.atlas) {\n\t\t\t\t\tvar atlasAssetId = asset.data.textureAtlasAsset;\n\t\t\t\t\tvar assets = this._component.system.app.assets;\n\t\t\t\t\tassets.off('load:' + atlasAssetId, this._onTextureAtlasLoad, this);\n\t\t\t\t\tassets.once('load:' + atlasAssetId, this._onTextureAtlasLoad, this);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sprite = asset.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onTextureAtlasLoad = function _onTextureAtlasLoad(atlasAsset) {\n\t\t\tvar spriteAsset = this._spriteAsset;\n\n\t\t\tif (spriteAsset instanceof Asset) {\n\t\t\t\tthis._onSpriteAssetLoad(spriteAsset);\n\t\t\t} else {\n\t\t\t\tthis._onSpriteAssetLoad(this._component.system.app.assets.get(spriteAsset));\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSpriteAssetRemove = function _onSpriteAssetRemove(asset) {\n\t\t\tthis.sprite = null;\n\t\t};\n\n\t\t_proto._onSpriteMeshesChange = function _onSpriteMeshesChange() {\n\t\t\tif (this._component.currentClip === this) {\n\t\t\t\tthis._component._showFrame(this.frame);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onSpritePpuChanged = function _onSpritePpuChanged() {\n\t\t\tif (this._component.currentClip === this) {\n\t\t\t\tif (this.sprite.renderMode !== SPRITE_RENDERMODE_SIMPLE) {\n\t\t\t\t\tthis._component._showFrame(this.frame);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._update = function _update(dt) {\n\t\t\tif (this.fps === 0) return;\n\t\t\tif (!this._playing || this._paused || !this._sprite) return;\n\t\t\tvar dir = this.fps < 0 ? -1 : 1;\n\t\t\tvar time = this._time + dt * this._component.speed * dir;\n\t\t\tvar duration = this.duration;\n\t\t\tvar end = time > duration || time < 0;\n\n\t\t\tthis._setTime(time);\n\n\t\t\tvar frame = this.frame;\n\n\t\t\tif (this._sprite) {\n\t\t\t\tframe = Math.floor(this._sprite.frameKeys.length * this._time / duration);\n\t\t\t} else {\n\t\t\t\tframe = 0;\n\t\t\t}\n\n\t\t\tif (frame !== this._frame) {\n\t\t\t\tthis._setFrame(frame);\n\t\t\t}\n\n\t\t\tif (end) {\n\t\t\t\tif (this.loop) {\n\t\t\t\t\tthis.fire('loop');\n\n\t\t\t\t\tthis._component.fire('loop', this);\n\t\t\t\t} else {\n\t\t\t\t\tthis._playing = false;\n\t\t\t\t\tthis._paused = false;\n\t\t\t\t\tthis.fire('end');\n\n\t\t\t\t\tthis._component.fire('end', this);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._setTime = function _setTime(value) {\n\t\t\tthis._time = value;\n\t\t\tvar duration = this.duration;\n\n\t\t\tif (this._time < 0) {\n\t\t\t\tif (this.loop) {\n\t\t\t\t\tthis._time = this._time % duration + duration;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = 0;\n\t\t\t\t}\n\t\t\t} else if (this._time > duration) {\n\t\t\t\tif (this.loop) {\n\t\t\t\t\tthis._time %= duration;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = duration;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._setFrame = function _setFrame(value) {\n\t\t\tif (this._sprite) {\n\t\t\t\tthis._frame = math.clamp(value, 0, this._sprite.frameKeys.length - 1);\n\t\t\t} else {\n\t\t\t\tthis._frame = value;\n\t\t\t}\n\n\t\t\tif (this._component.currentClip === this) {\n\t\t\t\tthis._component._showFrame(this._frame);\n\t\t\t}\n\t\t};\n\n\t\t_proto._destroy = function _destroy() {\n\t\t\tif (this._sprite) {\n\t\t\t\tthis.sprite = null;\n\t\t\t}\n\n\t\t\tif (this._spriteAsset) {\n\t\t\t\tthis.spriteAsset = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.play = function play() {\n\t\t\tif (this._playing) return;\n\t\t\tthis._playing = true;\n\t\t\tthis._paused = false;\n\t\t\tthis.frame = 0;\n\t\t\tthis.fire('play');\n\n\t\t\tthis._component.fire('play', this);\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tif (!this._playing || this._paused) return;\n\t\t\tthis._paused = true;\n\t\t\tthis.fire('pause');\n\n\t\t\tthis._component.fire('pause', this);\n\t\t};\n\n\t\t_proto.resume = function resume() {\n\t\t\tif (!this._paused) return;\n\t\t\tthis._paused = false;\n\t\t\tthis.fire('resume');\n\n\t\t\tthis._component.fire('resume', this);\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tif (!this._playing) return;\n\t\t\tthis._playing = false;\n\t\t\tthis._paused = false;\n\t\t\tthis._time = 0;\n\t\t\tthis.frame = 0;\n\t\t\tthis.fire('stop');\n\n\t\t\tthis._component.fire('stop', this);\n\t\t};\n\n\t\t_createClass(SpriteAnimationClip, [{\n\t\t\tkey: \"spriteAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._spriteAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar assets = this._component.system.app.assets;\n\t\t\t\tvar id = value;\n\n\t\t\t\tif (value instanceof Asset) {\n\t\t\t\t\tid = value.id;\n\t\t\t\t}\n\n\t\t\t\tif (this._spriteAsset !== id) {\n\t\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\t\tvar prev = assets.get(this._spriteAsset);\n\n\t\t\t\t\t\tif (prev) {\n\t\t\t\t\t\t\tthis._unbindSpriteAsset(prev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._spriteAsset = id;\n\n\t\t\t\t\tif (this._spriteAsset) {\n\t\t\t\t\t\tvar asset = assets.get(this._spriteAsset);\n\n\t\t\t\t\t\tif (!asset) {\n\t\t\t\t\t\t\tthis.sprite = null;\n\t\t\t\t\t\t\tassets.on('add:' + this._spriteAsset, this._onSpriteAssetAdded, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._bindSpriteAsset(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.sprite = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"sprite\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._sprite;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._sprite.off('set:meshes', this._onSpriteMeshesChange, this);\n\n\t\t\t\t\tthis._sprite.off('set:pixelsPerUnit', this._onSpritePpuChanged, this);\n\n\t\t\t\t\tthis._sprite.off('set:atlas', this._onSpriteMeshesChange, this);\n\n\t\t\t\t\tif (this._sprite.atlas) {\n\t\t\t\t\t\tthis._sprite.atlas.off('set:texture', this._onSpriteMeshesChange, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._sprite = value;\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis._sprite.on('set:meshes', this._onSpriteMeshesChange, this);\n\n\t\t\t\t\tthis._sprite.on('set:pixelsPerUnit', this._onSpritePpuChanged, this);\n\n\t\t\t\t\tthis._sprite.on('set:atlas', this._onSpriteMeshesChange, this);\n\n\t\t\t\t\tif (this._sprite.atlas) {\n\t\t\t\t\t\tthis._sprite.atlas.on('set:texture', this._onSpriteMeshesChange, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._component.currentClip === this) {\n\t\t\t\t\tvar mi;\n\n\t\t\t\t\tif (!value || !value.atlas) {\n\t\t\t\t\t\tmi = this._component._meshInstance;\n\n\t\t\t\t\t\tif (mi) {\n\t\t\t\t\t\t\tmi.deleteParameter('texture_emissiveMap');\n\t\t\t\t\t\t\tmi.deleteParameter('texture_opacityMap');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._component._hideModel();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value.atlas.texture) {\n\t\t\t\t\t\t\tmi = this._component._meshInstance;\n\n\t\t\t\t\t\t\tif (mi) {\n\t\t\t\t\t\t\t\tmi.setParameter('texture_emissiveMap', value.atlas.texture);\n\t\t\t\t\t\t\t\tmi.setParameter('texture_opacityMap', value.atlas.texture);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this._component.enabled && this._component.entity.enabled) {\n\t\t\t\t\t\t\t\tthis._component._showModel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.time && this.fps) {\n\t\t\t\t\t\t\tthis.time = this.time;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame = this.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"frame\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._frame;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._setFrame(value);\n\n\t\t\t\tvar fps = this.fps || Number.MIN_VALUE;\n\n\t\t\t\tthis._setTime(this._frame / fps);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPlaying\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._playing;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"isPaused\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._paused;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"duration\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tvar fps = this.fps || Number.MIN_VALUE;\n\t\t\t\t\treturn this._sprite.frameKeys.length / Math.abs(fps);\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"time\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._time;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._setTime(value);\n\n\t\t\t\tif (this._sprite) {\n\t\t\t\t\tthis.frame = Math.min(this._sprite.frameKeys.length - 1, Math.floor(this._time * Math.abs(this.fps)));\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn SpriteAnimationClip;\n\t}(EventHandler);\n\n\tvar PARAM_EMISSIVE_MAP = 'texture_emissiveMap';\n\tvar PARAM_OPACITY_MAP = 'texture_opacityMap';\n\tvar PARAM_EMISSIVE = 'material_emissive';\n\tvar PARAM_OPACITY = 'material_opacity';\n\tvar PARAM_INNER_OFFSET = 'innerOffset';\n\tvar PARAM_OUTER_SCALE = 'outerScale';\n\tvar PARAM_ATLAS_RECT = 'atlasRect';\n\n\tvar SpriteComponent = function (_Component) {\n\t\t_inheritsLoose(SpriteComponent, _Component);\n\n\t\tfunction SpriteComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._type = SPRITETYPE_SIMPLE;\n\t\t\t_this._material = system.defaultMaterial;\n\t\t\t_this._color = new Color(1, 1, 1, 1);\n\t\t\t_this._colorUniform = new Float32Array(3);\n\t\t\t_this._speed = 1;\n\t\t\t_this._flipX = false;\n\t\t\t_this._flipY = false;\n\t\t\t_this._width = 1;\n\t\t\t_this._height = 1;\n\t\t\t_this._drawOrder = 0;\n\t\t\t_this._layers = [LAYERID_WORLD];\n\t\t\t_this._outerScale = new Vec2(1, 1);\n\t\t\t_this._outerScaleUniform = new Float32Array(2);\n\t\t\t_this._innerOffset = new Vec4();\n\t\t\t_this._innerOffsetUniform = new Float32Array(4);\n\t\t\t_this._atlasRect = new Vec4();\n\t\t\t_this._atlasRectUniform = new Float32Array(4);\n\t\t\t_this._batchGroupId = -1;\n\t\t\t_this._batchGroup = null;\n\t\t\t_this._node = new GraphNode();\n\t\t\t_this._model = new Model();\n\t\t\t_this._model.graph = _this._node;\n\t\t\t_this._meshInstance = null;\n\t\t\tentity.addChild(_this._model.graph);\n\t\t\t_this._model._entity = entity;\n\t\t\t_this._updateAabbFunc = _this._updateAabb.bind(_assertThisInitialized(_this));\n\t\t\t_this._addedModel = false;\n\t\t\t_this._autoPlayClip = null;\n\t\t\t_this._clips = {};\n\t\t\t_this._defaultClip = new SpriteAnimationClip(_assertThisInitialized(_this), {\n\t\t\t\tname: _this.entity.name,\n\t\t\t\tfps: 0,\n\t\t\t\tloop: false,\n\t\t\t\tspriteAsset: null\n\t\t\t});\n\t\t\t_this._currentClip = _this._defaultClip;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SpriteComponent.prototype;\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\t\t\tscene.on(\"set:layers\", this._onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.on(\"add\", this._onLayerAdded, this);\n\t\t\t\tscene.layers.on(\"remove\", this._onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tthis._showModel();\n\n\t\t\tif (this._autoPlayClip) this._tryAutoPlay();\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.insert(BatchGroup.SPRITE, this._batchGroupId, this.entity);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tvar app = this.system.app;\n\t\t\tvar scene = app.scene;\n\t\t\tscene.off(\"set:layers\", this._onLayersChanged, this);\n\n\t\t\tif (scene.layers) {\n\t\t\t\tscene.layers.off(\"add\", this._onLayerAdded, this);\n\t\t\t\tscene.layers.off(\"remove\", this._onLayerRemoved, this);\n\t\t\t}\n\n\t\t\tthis.stop();\n\n\t\t\tthis._hideModel();\n\n\t\t\tif (this._batchGroupId >= 0) {\n\t\t\t\tapp.batcher.remove(BatchGroup.SPRITE, this._batchGroupId, this.entity);\n\t\t\t}\n\t\t};\n\n\t\t_proto.onDestroy = function onDestroy() {\n\t\t\tthis._currentClip = null;\n\n\t\t\tif (this._defaultClip) {\n\t\t\t\tthis._defaultClip._destroy();\n\n\t\t\t\tthis._defaultClip = null;\n\t\t\t}\n\n\t\t\tfor (var key in this._clips) {\n\t\t\t\tthis._clips[key]._destroy();\n\t\t\t}\n\n\t\t\tthis._clips = null;\n\n\t\t\tthis._hideModel();\n\n\t\t\tthis._model = null;\n\n\t\t\tif (this._node) {\n\t\t\t\tif (this._node.parent) this._node.parent.removeChild(this._node);\n\t\t\t\tthis._node = null;\n\t\t\t}\n\n\t\t\tif (this._meshInstance) {\n\t\t\t\tthis._meshInstance.material = null;\n\t\t\t\tthis._meshInstance.mesh = null;\n\t\t\t\tthis._meshInstance = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto._showModel = function _showModel() {\n\t\t\tif (this._addedModel) return;\n\t\t\tif (!this._meshInstance) return;\n\t\t\tvar i;\n\t\t\tvar len;\n\t\t\tvar meshInstances = [this._meshInstance];\n\n\t\t\tfor (i = 0, len = this._layers.length; i < len; i++) {\n\t\t\t\tvar layer = this.system.app.scene.layers.getLayerById(this._layers[i]);\n\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.addMeshInstances(meshInstances);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._addedModel = true;\n\t\t};\n\n\t\t_proto._hideModel = function _hideModel() {\n\t\t\tif (!this._addedModel || !this._meshInstance) return;\n\t\t\tvar i;\n\t\t\tvar len;\n\t\t\tvar meshInstances = [this._meshInstance];\n\n\t\t\tfor (i = 0, len = this._layers.length; i < len; i++) {\n\t\t\t\tvar layer = this.system.app.scene.layers.getLayerById(this._layers[i]);\n\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.removeMeshInstances(meshInstances);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._addedModel = false;\n\t\t};\n\n\t\t_proto._showFrame = function _showFrame(frame) {\n\t\t\tif (!this.sprite) return;\n\t\t\tvar mesh = this.sprite.meshes[frame];\n\n\t\t\tif (!mesh) {\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._meshInstance.mesh = null;\n\t\t\t\t\tthis._meshInstance.visible = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar material;\n\n\t\t\tif (this.sprite.renderMode === SPRITE_RENDERMODE_SLICED) {\n\t\t\t\tmaterial = this.system.default9SlicedMaterialSlicedMode;\n\t\t\t} else if (this.sprite.renderMode === SPRITE_RENDERMODE_TILED) {\n\t\t\t\tmaterial = this.system.default9SlicedMaterialTiledMode;\n\t\t\t} else {\n\t\t\t\tmaterial = this.system.defaultMaterial;\n\t\t\t}\n\n\t\t\tif (!this._meshInstance) {\n\t\t\t\tthis._meshInstance = new MeshInstance(this._node, mesh, this._material);\n\t\t\t\tthis._meshInstance.castShadow = false;\n\t\t\t\tthis._meshInstance.receiveShadow = false;\n\t\t\t\tthis._meshInstance.drawOrder = this._drawOrder;\n\n\t\t\t\tthis._model.meshInstances.push(this._meshInstance);\n\n\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\tthis._colorUniform[2] = this._color.b;\n\n\t\t\t\tthis._meshInstance.setParameter(PARAM_EMISSIVE, this._colorUniform);\n\n\t\t\t\tthis._meshInstance.setParameter(PARAM_OPACITY, this._color.a);\n\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis._showModel();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._meshInstance.material !== material) {\n\t\t\t\tthis._meshInstance.material = material;\n\t\t\t}\n\n\t\t\tif (this._meshInstance.mesh !== mesh) {\n\t\t\t\tthis._meshInstance.mesh = mesh;\n\t\t\t\tthis._meshInstance.visible = true;\n\t\t\t\tthis._meshInstance._aabbVer = -1;\n\t\t\t}\n\n\t\t\tif (this.sprite.atlas && this.sprite.atlas.texture) {\n\t\t\t\tthis._meshInstance.setParameter(PARAM_EMISSIVE_MAP, this.sprite.atlas.texture);\n\n\t\t\t\tthis._meshInstance.setParameter(PARAM_OPACITY_MAP, this.sprite.atlas.texture);\n\t\t\t} else {\n\t\t\t\tthis._meshInstance.deleteParameter(PARAM_EMISSIVE_MAP);\n\n\t\t\t\tthis._meshInstance.deleteParameter(PARAM_OPACITY_MAP);\n\t\t\t}\n\n\t\t\tif (this.sprite.atlas && (this.sprite.renderMode === SPRITE_RENDERMODE_SLICED || this.sprite.renderMode === SPRITE_RENDERMODE_TILED)) {\n\t\t\t\tthis._meshInstance._updateAabbFunc = this._updateAabbFunc;\n\t\t\t\tvar frameData = this.sprite.atlas.frames[this.sprite.frameKeys[frame]];\n\n\t\t\t\tif (frameData) {\n\t\t\t\t\tvar borderWidthScale = 2 / frameData.rect.z;\n\t\t\t\t\tvar borderHeightScale = 2 / frameData.rect.w;\n\n\t\t\t\t\tthis._innerOffset.set(frameData.border.x * borderWidthScale, frameData.border.y * borderHeightScale, frameData.border.z * borderWidthScale, frameData.border.w * borderHeightScale);\n\n\t\t\t\t\tvar tex = this.sprite.atlas.texture;\n\n\t\t\t\t\tthis._atlasRect.set(frameData.rect.x / tex.width, frameData.rect.y / tex.height, frameData.rect.z / tex.width, frameData.rect.w / tex.height);\n\t\t\t\t} else {\n\t\t\t\t\tthis._innerOffset.set(0, 0, 0, 0);\n\t\t\t\t}\n\n\t\t\t\tthis._innerOffsetUniform[0] = this._innerOffset.x;\n\t\t\t\tthis._innerOffsetUniform[1] = this._innerOffset.y;\n\t\t\t\tthis._innerOffsetUniform[2] = this._innerOffset.z;\n\t\t\t\tthis._innerOffsetUniform[3] = this._innerOffset.w;\n\n\t\t\t\tthis._meshInstance.setParameter(PARAM_INNER_OFFSET, this._innerOffsetUniform);\n\n\t\t\t\tthis._atlasRectUniform[0] = this._atlasRect.x;\n\t\t\t\tthis._atlasRectUniform[1] = this._atlasRect.y;\n\t\t\t\tthis._atlasRectUniform[2] = this._atlasRect.z;\n\t\t\t\tthis._atlasRectUniform[3] = this._atlasRect.w;\n\n\t\t\t\tthis._meshInstance.setParameter(PARAM_ATLAS_RECT, this._atlasRectUniform);\n\t\t\t} else {\n\t\t\t\tthis._meshInstance._updateAabbFunc = null;\n\t\t\t}\n\n\t\t\tthis._updateTransform();\n\t\t};\n\n\t\t_proto._updateTransform = function _updateTransform() {\n\t\t\tvar scaleX = this.flipX ? -1 : 1;\n\t\t\tvar scaleY = this.flipY ? -1 : 1;\n\t\t\tvar posX = 0;\n\t\t\tvar posY = 0;\n\n\t\t\tif (this.sprite && (this.sprite.renderMode === SPRITE_RENDERMODE_SLICED || this.sprite.renderMode === SPRITE_RENDERMODE_TILED)) {\n\t\t\t\tvar w = 1;\n\t\t\t\tvar h = 1;\n\n\t\t\t\tif (this.sprite.atlas) {\n\t\t\t\t\tvar frameData = this.sprite.atlas.frames[this.sprite.frameKeys[this.frame]];\n\n\t\t\t\t\tif (frameData) {\n\t\t\t\t\t\tw = frameData.rect.z;\n\t\t\t\t\t\th = frameData.rect.w;\n\t\t\t\t\t\tposX = (0.5 - frameData.pivot.x) * this._width;\n\t\t\t\t\t\tposY = (0.5 - frameData.pivot.y) * this._height;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar scaleMulX = w / this.sprite.pixelsPerUnit;\n\t\t\t\tvar scaleMulY = h / this.sprite.pixelsPerUnit;\n\n\t\t\t\tthis._outerScale.set(Math.max(this._width, this._innerOffset.x * scaleMulX), Math.max(this._height, this._innerOffset.y * scaleMulY));\n\n\t\t\t\tscaleX *= scaleMulX;\n\t\t\t\tscaleY *= scaleMulY;\n\t\t\t\tthis._outerScale.x /= scaleMulX;\n\t\t\t\tthis._outerScale.y /= scaleMulY;\n\t\t\t\tscaleX *= math.clamp(this._width / (this._innerOffset.x * scaleMulX), 0.0001, 1);\n\t\t\t\tscaleY *= math.clamp(this._height / (this._innerOffset.y * scaleMulY), 0.0001, 1);\n\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._outerScaleUniform[0] = this._outerScale.x;\n\t\t\t\t\tthis._outerScaleUniform[1] = this._outerScale.y;\n\n\t\t\t\t\tthis._meshInstance.setParameter(PARAM_OUTER_SCALE, this._outerScaleUniform);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._node.setLocalScale(scaleX, scaleY, 1);\n\n\t\t\tthis._node.setLocalPosition(posX, posY, 0);\n\t\t};\n\n\t\t_proto._updateAabb = function _updateAabb(aabb) {\n\t\t\taabb.center.set(0, 0, 0);\n\t\t\taabb.halfExtents.set(this._outerScale.x * 0.5, this._outerScale.y * 0.5, 0.001);\n\t\t\taabb.setFromTransformedAabb(aabb, this._node.getWorldTransform());\n\t\t\treturn aabb;\n\t\t};\n\n\t\t_proto._tryAutoPlay = function _tryAutoPlay() {\n\t\t\tif (!this._autoPlayClip) return;\n\t\t\tif (this.type !== SPRITETYPE_ANIMATED) return;\n\t\t\tvar clip = this._clips[this._autoPlayClip];\n\n\t\t\tif (clip && !clip.isPlaying && (!this._currentClip || !this._currentClip.isPlaying)) {\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis.play(clip.name);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._onLayersChanged = function _onLayersChanged(oldComp, newComp) {\n\t\t\toldComp.off(\"add\", this.onLayerAdded, this);\n\t\t\toldComp.off(\"remove\", this.onLayerRemoved, this);\n\t\t\tnewComp.on(\"add\", this.onLayerAdded, this);\n\t\t\tnewComp.on(\"remove\", this.onLayerRemoved, this);\n\n\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\tthis._showModel();\n\t\t\t}\n\t\t};\n\n\t\t_proto._onLayerAdded = function _onLayerAdded(layer) {\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\n\t\t\tif (this._addedModel && this.enabled && this.entity.enabled && this._meshInstance) {\n\t\t\t\tlayer.addMeshInstances([this._meshInstance]);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onLayerRemoved = function _onLayerRemoved(layer) {\n\t\t\tif (!this._meshInstance) return;\n\t\t\tvar index = this.layers.indexOf(layer.id);\n\t\t\tif (index < 0) return;\n\t\t\tlayer.removeMeshInstances([this._meshInstance]);\n\t\t};\n\n\t\t_proto.removeModelFromLayers = function removeModelFromLayers() {\n\t\t\tvar layer;\n\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\n\t\t\t\tlayer = this.system.app.scene.layers.getLayerById(this.layers[i]);\n\t\t\t\tif (!layer) continue;\n\t\t\t\tlayer.removeMeshInstances([this._meshInstance]);\n\t\t\t}\n\t\t};\n\n\t\t_proto.addClip = function addClip(data) {\n\t\t\tvar clip = new SpriteAnimationClip(this, {\n\t\t\t\tname: data.name,\n\t\t\t\tfps: data.fps,\n\t\t\t\tloop: data.loop,\n\t\t\t\tspriteAsset: data.spriteAsset\n\t\t\t});\n\t\t\tthis._clips[data.name] = clip;\n\t\t\tif (clip.name && clip.name === this._autoPlayClip) this._tryAutoPlay();\n\t\t\treturn clip;\n\t\t};\n\n\t\t_proto.removeClip = function removeClip(name) {\n\t\t\tdelete this._clips[name];\n\t\t};\n\n\t\t_proto.clip = function clip(name) {\n\t\t\treturn this._clips[name];\n\t\t};\n\n\t\t_proto.play = function play(name) {\n\t\t\tvar clip = this._clips[name];\n\t\t\tvar current = this._currentClip;\n\n\t\t\tif (current && current !== clip) {\n\t\t\t\tcurrent._playing = false;\n\t\t\t}\n\n\t\t\tthis._currentClip = clip;\n\n\t\t\tif (this._currentClip) {\n\t\t\t\tthis._currentClip = clip;\n\n\t\t\t\tthis._currentClip.play();\n\t\t\t}\n\n\t\t\treturn clip;\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tif (this._currentClip === this._defaultClip) return;\n\n\t\t\tif (this._currentClip.isPlaying) {\n\t\t\t\tthis._currentClip.pause();\n\t\t\t}\n\t\t};\n\n\t\t_proto.resume = function resume() {\n\t\t\tif (this._currentClip === this._defaultClip) return;\n\n\t\t\tif (this._currentClip.isPaused) {\n\t\t\t\tthis._currentClip.resume();\n\t\t\t}\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tif (this._currentClip === this._defaultClip) return;\n\n\t\t\tthis._currentClip.stop();\n\t\t};\n\n\t\t_createClass(SpriteComponent, [{\n\t\t\tkey: \"type\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._type === value) return;\n\t\t\t\tthis._type = value;\n\n\t\t\t\tif (this._type === SPRITETYPE_SIMPLE) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t\tthis._currentClip = this._defaultClip;\n\n\t\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis._currentClip.frame = this.frame;\n\n\t\t\t\t\t\tif (this._currentClip.sprite) {\n\t\t\t\t\t\t\tthis._showModel();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._hideModel();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this._type === SPRITETYPE_ANIMATED) {\n\t\t\t\t\tthis.stop();\n\n\t\t\t\t\tif (this._autoPlayClip) {\n\t\t\t\t\t\tthis._tryAutoPlay();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._currentClip && this._currentClip.isPlaying && this.enabled && this.entity.enabled) {\n\t\t\t\t\t\tthis._showModel();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._hideModel();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"frame\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._currentClip.frame;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._currentClip.frame = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"spriteAsset\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._defaultClip._spriteAsset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._defaultClip.spriteAsset = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"sprite\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._currentClip.sprite;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._currentClip.sprite = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"material\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._material;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._material = value;\n\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._meshInstance.material = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"color\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._color.r = value.r;\n\t\t\t\tthis._color.g = value.g;\n\t\t\t\tthis._color.b = value.b;\n\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._colorUniform[0] = this._color.r;\n\t\t\t\t\tthis._colorUniform[1] = this._color.g;\n\t\t\t\t\tthis._colorUniform[2] = this._color.b;\n\n\t\t\t\t\tthis._meshInstance.setParameter(PARAM_EMISSIVE, this._colorUniform);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"opacity\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._color.a;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._color.a = value;\n\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._meshInstance.setParameter(PARAM_OPACITY, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"clips\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._clips;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar name, key;\n\n\t\t\t\tif (!value) {\n\t\t\t\t\tfor (name in this._clips) {\n\t\t\t\t\t\tthis.removeClip(name);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (name in this._clips) {\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tfor (key in value) {\n\t\t\t\t\t\tif (value[key].name === name) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tthis._clips[name].fps = value[key].fps;\n\t\t\t\t\t\t\tthis._clips[name].loop = value[key].loop;\n\n\t\t\t\t\t\t\tif (value[key].hasOwnProperty('sprite')) {\n\t\t\t\t\t\t\t\tthis._clips[name].sprite = value[key].sprite;\n\t\t\t\t\t\t\t} else if (value[key].hasOwnProperty('spriteAsset')) {\n\t\t\t\t\t\t\t\tthis._clips[name].spriteAsset = value[key].spriteAsset;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tthis.removeClip(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (key in value) {\n\t\t\t\t\tif (this._clips[value[key].name]) continue;\n\t\t\t\t\tthis.addClip(value[key]);\n\t\t\t\t}\n\n\t\t\t\tif (this._autoPlayClip) {\n\t\t\t\t\tthis._tryAutoPlay();\n\t\t\t\t}\n\n\t\t\t\tif (!this._currentClip || !this._currentClip.sprite) {\n\t\t\t\t\tthis._hideModel();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"currentClip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._currentClip;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"speed\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._speed;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._speed = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"flipX\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._flipX;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._flipX === value) return;\n\t\t\t\tthis._flipX = value;\n\n\t\t\t\tthis._updateTransform();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"flipY\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._flipY;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._flipY === value) return;\n\t\t\t\tthis._flipY = value;\n\n\t\t\t\tthis._updateTransform();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._width;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === this._width) return;\n\t\t\t\tthis._width = value;\n\t\t\t\tthis._outerScale.x = this._width;\n\n\t\t\t\tif (this.sprite && (this.sprite.renderMode === SPRITE_RENDERMODE_TILED || this.sprite.renderMode === SPRITE_RENDERMODE_SLICED)) {\n\t\t\t\t\tthis._updateTransform();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._height;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (value === this._height) return;\n\t\t\t\tthis._height = value;\n\t\t\t\tthis._outerScale.y = this.height;\n\n\t\t\t\tif (this.sprite && (this.sprite.renderMode === SPRITE_RENDERMODE_TILED || this.sprite.renderMode === SPRITE_RENDERMODE_SLICED)) {\n\t\t\t\t\tthis._updateTransform();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"batchGroupId\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._batchGroupId;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._batchGroupId === value) return;\n\t\t\t\tvar prev = this._batchGroupId;\n\t\t\t\tthis._batchGroupId = value;\n\n\t\t\t\tif (this.entity.enabled && prev >= 0) {\n\t\t\t\t\tthis.system.app.batcher.remove(BatchGroup.SPRITE, prev, this.entity);\n\t\t\t\t}\n\n\t\t\t\tif (this.entity.enabled && value >= 0) {\n\t\t\t\t\tthis.system.app.batcher.insert(BatchGroup.SPRITE, value, this.entity);\n\t\t\t\t} else {\n\t\t\t\t\tif (prev >= 0) {\n\t\t\t\t\t\tif (this._currentClip && this._currentClip.sprite && this.enabled && this.entity.enabled) {\n\t\t\t\t\t\t\tthis._showModel();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"autoPlayClip\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoPlayClip;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._autoPlayClip = value instanceof SpriteAnimationClip ? value.name : value;\n\n\t\t\t\tthis._tryAutoPlay();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"drawOrder\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._drawOrder;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._drawOrder = value;\n\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\tthis._meshInstance.drawOrder = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"layers\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._layers;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this._addedModel) {\n\t\t\t\t\tthis._hideModel();\n\t\t\t\t}\n\n\t\t\t\tthis._layers = value;\n\n\t\t\t\tif (!this._meshInstance) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.enabled && this.entity.enabled) {\n\t\t\t\t\tthis._showModel();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"aabb\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._meshInstance) {\n\t\t\t\t\treturn this._meshInstance.aabb;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SpriteComponent;\n\t}(Component);\n\n\tvar SpriteComponentData = function SpriteComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$j = ['enabled'];\n\n\tvar SpriteComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(SpriteComponentSystem, _ComponentSystem);\n\n\t\tfunction SpriteComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'sprite';\n\t\t\t_this.ComponentType = SpriteComponent;\n\t\t\t_this.DataType = SpriteComponentData;\n\t\t\t_this.schema = _schema$j;\n\t\t\t_this._defaultTexture = null;\n\t\t\t_this._defaultMaterial = null;\n\t\t\t_this._default9SlicedMaterialSlicedMode = null;\n\t\t\t_this._default9SlicedMaterialTiledMode = null;\n\t\t\tComponentSystem.bind('update', _this.onUpdate, _assertThisInitialized(_this));\n\n\t\t\t_this.on('beforeremove', _this.onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SpriteComponentSystem.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (this._defaultTexture) {\n\t\t\t\tthis._defaultTexture.destroy();\n\n\t\t\t\tthis._defaultTexture = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tif (data.enabled !== undefined) {\n\t\t\t\tcomponent.enabled = data.enabled;\n\t\t\t}\n\n\t\t\tcomponent.type = data.type;\n\n\t\t\tif (data.layers && Array.isArray(data.layers)) {\n\t\t\t\tcomponent.layers = data.layers.slice(0);\n\t\t\t}\n\n\t\t\tif (data.drawOrder !== undefined) {\n\t\t\t\tcomponent.drawOrder = data.drawOrder;\n\t\t\t}\n\n\t\t\tif (data.color !== undefined) {\n\t\t\t\tif (data.color instanceof Color) {\n\t\t\t\t\tcomponent.color.set(data.color.r, data.color.g, data.color.b, data.opacity !== undefined ? data.opacity : 1);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent.color.set(data.color[0], data.color[1], data.color[2], data.opacity !== undefined ? data.opacity : 1);\n\t\t\t\t}\n\n\t\t\t\tcomponent.color = component.color;\n\t\t\t}\n\n\t\t\tif (data.opacity !== undefined) {\n\t\t\t\tcomponent.opacity = data.opacity;\n\t\t\t}\n\n\t\t\tif (data.flipX !== undefined) {\n\t\t\t\tcomponent.flipX = data.flipX;\n\t\t\t}\n\n\t\t\tif (data.flipY !== undefined) {\n\t\t\t\tcomponent.flipY = data.flipY;\n\t\t\t}\n\n\t\t\tif (data.width !== undefined) {\n\t\t\t\tcomponent.width = data.width;\n\t\t\t}\n\n\t\t\tif (data.height !== undefined) {\n\t\t\t\tcomponent.height = data.height;\n\t\t\t}\n\n\t\t\tif (data.spriteAsset !== undefined) {\n\t\t\t\tcomponent.spriteAsset = data.spriteAsset;\n\t\t\t}\n\n\t\t\tif (data.sprite) {\n\t\t\t\tcomponent.sprite = data.sprite;\n\t\t\t}\n\n\t\t\tif (data.frame !== undefined) {\n\t\t\t\tcomponent.frame = data.frame;\n\t\t\t}\n\n\t\t\tif (data.clips) {\n\t\t\t\tfor (var name in data.clips) {\n\t\t\t\t\tcomponent.addClip(data.clips[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.speed !== undefined) {\n\t\t\t\tcomponent.speed = data.speed;\n\t\t\t}\n\n\t\t\tif (data.autoPlayClip) {\n\t\t\t\tcomponent.autoPlayClip = data.autoPlayClip;\n\t\t\t}\n\n\t\t\tcomponent.batchGroupId = data.batchGroupId === undefined || data.batchGroupId === null ? -1 : data.batchGroupId;\n\n\t\t\t_ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar source = entity.sprite;\n\t\t\treturn this.addComponent(clone, {\n\t\t\t\tenabled: source.enabled,\n\t\t\t\ttype: source.type,\n\t\t\t\tspriteAsset: source.spriteAsset,\n\t\t\t\tsprite: source.sprite,\n\t\t\t\tframe: source.frame,\n\t\t\t\tcolor: source.color.clone(),\n\t\t\t\topacity: source.opacity,\n\t\t\t\tflipX: source.flipX,\n\t\t\t\tflipY: source.flipY,\n\t\t\t\tspeed: source.speed,\n\t\t\t\tclips: source.clips,\n\t\t\t\tautoPlayClip: source.autoPlayClip,\n\t\t\t\tbatchGroupId: source.batchGroupId,\n\t\t\t\tdrawOrder: source.drawOrder,\n\t\t\t\tlayers: source.layers.slice(0)\n\t\t\t});\n\t\t};\n\n\t\t_proto.onUpdate = function onUpdate(dt) {\n\t\t\tvar components = this.store;\n\n\t\t\tfor (var id in components) {\n\t\t\t\tif (components.hasOwnProperty(id)) {\n\t\t\t\t\tvar component = components[id];\n\n\t\t\t\t\tif (component.data.enabled && component.entity.enabled) {\n\t\t\t\t\t\tvar sprite = component.entity.sprite;\n\n\t\t\t\t\t\tif (sprite._currentClip) {\n\t\t\t\t\t\t\tsprite._currentClip._update(dt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.onBeforeRemove = function onBeforeRemove(entity, component) {\n\t\t\tcomponent.onDestroy();\n\t\t};\n\n\t\t_createClass(SpriteComponentSystem, [{\n\t\t\tkey: \"defaultMaterial\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._defaultMaterial) {\n\t\t\t\t\tvar texture = new Texture(this.app.graphicsDevice, {\n\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8\n\t\t\t\t\t});\n\t\t\t\t\tvar pixels = new Uint8Array(texture.lock());\n\t\t\t\t\tpixels[0] = pixels[1] = pixels[2] = pixels[3] = 255;\n\t\t\t\t\ttexture.name = 'sprite';\n\t\t\t\t\ttexture.unlock();\n\t\t\t\t\tvar material = new StandardMaterial();\n\t\t\t\t\tmaterial.diffuse.set(0, 0, 0);\n\t\t\t\t\tmaterial.emissive.set(0.5, 0.5, 0.5);\n\t\t\t\t\tmaterial.emissiveMap = texture;\n\t\t\t\t\tmaterial.emissiveMapTint = true;\n\t\t\t\t\tmaterial.opacityMap = texture;\n\t\t\t\t\tmaterial.opacityMapChannel = \"a\";\n\t\t\t\t\tmaterial.opacityTint = true;\n\t\t\t\t\tmaterial.opacity = 0;\n\t\t\t\t\tmaterial.useLighting = false;\n\t\t\t\t\tmaterial.useGammaTonemap = false;\n\t\t\t\t\tmaterial.useFog = false;\n\t\t\t\t\tmaterial.useSkybox = false;\n\t\t\t\t\tmaterial.blendType = BLEND_PREMULTIPLIED;\n\t\t\t\t\tmaterial.depthWrite = false;\n\t\t\t\t\tmaterial.pixelSnap = false;\n\t\t\t\t\tmaterial.cull = CULLFACE_NONE;\n\t\t\t\t\tmaterial.update();\n\t\t\t\t\tthis._defaultTexture = texture;\n\t\t\t\t\tthis._defaultMaterial = material;\n\t\t\t\t}\n\n\t\t\t\treturn this._defaultMaterial;\n\t\t\t},\n\t\t\tset: function set(material) {\n\t\t\t\tthis._defaultMaterial = material;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"default9SlicedMaterialSlicedMode\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._default9SlicedMaterialSlicedMode) {\n\t\t\t\t\tvar material = this.defaultMaterial.clone();\n\t\t\t\t\tmaterial.nineSlicedMode = SPRITE_RENDERMODE_SLICED;\n\t\t\t\t\tmaterial.update();\n\t\t\t\t\tthis._default9SlicedMaterialSlicedMode = material;\n\t\t\t\t}\n\n\t\t\t\treturn this._default9SlicedMaterialSlicedMode;\n\t\t\t},\n\t\t\tset: function set(material) {\n\t\t\t\tthis._default9SlicedMaterialSlicedMode = material;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"default9SlicedMaterialTiledMode\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this._default9SlicedMaterialTiledMode) {\n\t\t\t\t\tvar material = this.defaultMaterial.clone();\n\t\t\t\t\tmaterial.nineSlicedMode = SPRITE_RENDERMODE_TILED;\n\t\t\t\t\tmaterial.update();\n\t\t\t\t\tthis._default9SlicedMaterialTiledMode = material;\n\t\t\t\t}\n\n\t\t\t\treturn this._default9SlicedMaterialTiledMode;\n\t\t\t},\n\t\t\tset: function set(material) {\n\t\t\t\tthis._default9SlicedMaterialTiledMode = material;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SpriteComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(SpriteComponent.prototype, _schema$j);\n\n\tvar ZoneComponent = function (_Component) {\n\t\t_inheritsLoose(ZoneComponent, _Component);\n\n\t\tfunction ZoneComponent(system, entity) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Component.call(this, system, entity) || this;\n\t\t\t_this._oldState = true;\n\t\t\t_this._size = new Vec3();\n\n\t\t\t_this.on('set_enabled', _this._onSetEnabled, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ZoneComponent.prototype;\n\n\t\t_proto.onEnable = function onEnable() {\n\t\t\tthis._checkState();\n\t\t};\n\n\t\t_proto.onDisable = function onDisable() {\n\t\t\tthis._checkState();\n\t\t};\n\n\t\t_proto._onSetEnabled = function _onSetEnabled(prop, old, value) {\n\t\t\tthis._checkState();\n\t\t};\n\n\t\t_proto._checkState = function _checkState() {\n\t\t\tvar state = this.enabled && this.entity.enabled;\n\t\t\tif (state === this._oldState) return;\n\t\t\tthis._oldState = state;\n\t\t\tthis.fire('enable');\n\t\t\tthis.fire('state', this.enabled);\n\t\t};\n\n\t\t_proto._onBeforeRemove = function _onBeforeRemove() {\n\t\t\tthis.fire('remove');\n\t\t};\n\n\t\t_createClass(ZoneComponent, [{\n\t\t\tkey: \"size\",\n\t\t\tset: function set(data) {\n\t\t\t\tif (data instanceof Vec3) {\n\t\t\t\t\tthis._size.copy(data);\n\t\t\t\t} else if (data instanceof Array && data.length >= 3) {\n\t\t\t\t\tthis.size.set(data[0], data[1], data[2]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._size;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ZoneComponent;\n\t}(Component);\n\n\tvar ZoneComponentData = function ZoneComponentData() {\n\t\tthis.enabled = true;\n\t};\n\n\tvar _schema$k = ['enabled'];\n\n\tvar ZoneComponentSystem = function (_ComponentSystem) {\n\t\t_inheritsLoose(ZoneComponentSystem, _ComponentSystem);\n\n\t\tfunction ZoneComponentSystem(app) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ComponentSystem.call(this, app) || this;\n\t\t\t_this.id = 'zone';\n\t\t\t_this.ComponentType = ZoneComponent;\n\t\t\t_this.DataType = ZoneComponentData;\n\t\t\t_this.schema = _schema$k;\n\n\t\t\t_this.on('beforeremove', _this._onBeforeRemove, _assertThisInitialized(_this));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ZoneComponentSystem.prototype;\n\n\t\t_proto.initializeComponentData = function initializeComponentData(component, data, properties) {\n\t\t\tcomponent.enabled = data.hasOwnProperty('enabled') ? !!data.enabled : true;\n\n\t\t\tif (data.size) {\n\t\t\t\tif (data.size instanceof Vec3) {\n\t\t\t\t\tcomponent.size.copy(data.size);\n\t\t\t\t} else if (data.size instanceof Array && data.size.length >= 3) {\n\t\t\t\t\tcomponent.size.set(data.size[0], data.size[1], data.size[2]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.cloneComponent = function cloneComponent(entity, clone) {\n\t\t\tvar data = {\n\t\t\t\tsize: entity.zone.size\n\t\t\t};\n\t\t\treturn this.addComponent(clone, data);\n\t\t};\n\n\t\t_proto._onBeforeRemove = function _onBeforeRemove(entity, component) {\n\t\t\tcomponent._onBeforeRemove();\n\t\t};\n\n\t\treturn ZoneComponentSystem;\n\t}(ComponentSystem);\n\n\tComponent._buildAccessors(ZoneComponent.prototype, _schema$k);\n\n\tvar ApplicationStats = function () {\n\t\tfunction ApplicationStats(device) {\n\t\t\tthis.frame = {\n\t\t\t\tfps: 0,\n\t\t\t\tms: 0,\n\t\t\t\tdt: 0,\n\t\t\t\tupdateStart: 0,\n\t\t\t\tupdateTime: 0,\n\t\t\t\trenderStart: 0,\n\t\t\t\trenderTime: 0,\n\t\t\t\tphysicsStart: 0,\n\t\t\t\tphysicsTime: 0,\n\t\t\t\tcullTime: 0,\n\t\t\t\tsortTime: 0,\n\t\t\t\tskinTime: 0,\n\t\t\t\tmorphTime: 0,\n\t\t\t\tinstancingTime: 0,\n\t\t\t\ttriangles: 0,\n\t\t\t\totherPrimitives: 0,\n\t\t\t\tshaders: 0,\n\t\t\t\tmaterials: 0,\n\t\t\t\tcameras: 0,\n\t\t\t\tshadowMapUpdates: 0,\n\t\t\t\tshadowMapTime: 0,\n\t\t\t\tdepthMapTime: 0,\n\t\t\t\tforwardTime: 0,\n\t\t\t\t_timeToCountFrames: 0,\n\t\t\t\t_fpsAccum: 0\n\t\t\t};\n\t\t\tthis.drawCalls = {\n\t\t\t\tforward: 0,\n\t\t\t\tdepth: 0,\n\t\t\t\tshadow: 0,\n\t\t\t\timmediate: 0,\n\t\t\t\tmisc: 0,\n\t\t\t\ttotal: 0,\n\t\t\t\tskinned: 0,\n\t\t\t\tinstanced: 0,\n\t\t\t\tremovedByInstancing: 0\n\t\t\t};\n\t\t\tthis.misc = {\n\t\t\t\trenderTargetCreationTime: 0\n\t\t\t};\n\t\t\tthis.particles = {\n\t\t\t\tupdatesPerFrame: 0,\n\t\t\t\t_updatesPerFrame: 0,\n\t\t\t\tframeTime: 0,\n\t\t\t\t_frameTime: 0\n\t\t\t};\n\t\t\tthis.shaders = device._shaderStats;\n\t\t\tthis.vram = device._vram;\n\t\t\tObject.defineProperty(this.vram, 'totalUsed', {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this.tex + this.vb + this.ib;\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(this.vram, 'geom', {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this.vb + this.ib;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_createClass(ApplicationStats, [{\n\t\t\tkey: \"scene\",\n\t\t\tget: function get() {\n\t\t\t\treturn Application.getApplication().scene._stats;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"lightmapper\",\n\t\t\tget: function get() {\n\t\t\t\treturn Application.getApplication().lightmapper._stats;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"batcher\",\n\t\t\tget: function get() {\n\t\t\t\treturn Application.getApplication().batcher._stats;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ApplicationStats;\n\t}();\n\n\tvar SceneRegistryItem = function SceneRegistryItem(name, url) {\n\t\tthis.name = name;\n\t\tthis.url = url;\n\t};\n\n\tvar SceneRegistry = function () {\n\t\tfunction SceneRegistry(app) {\n\t\t\tthis._app = app;\n\t\t\tthis._list = [];\n\t\t\tthis._index = {};\n\t\t\tthis._urlIndex = {};\n\t\t}\n\n\t\tvar _proto = SceneRegistry.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._app = null;\n\t\t};\n\n\t\t_proto.list = function list() {\n\t\t\treturn this._list;\n\t\t};\n\n\t\t_proto.add = function add(name, url) {\n\t\t\tif (this._index.hasOwnProperty(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar item = new SceneRegistryItem(name, url);\n\n\t\t\tvar i = this._list.push(item);\n\n\t\t\tthis._index[item.name] = i - 1;\n\t\t\tthis._urlIndex[item.url] = i - 1;\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.find = function find(name) {\n\t\t\tif (this._index.hasOwnProperty(name)) {\n\t\t\t\treturn this._list[this._index[name]];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.findByUrl = function findByUrl(url) {\n\t\t\tif (this._urlIndex.hasOwnProperty(url)) {\n\t\t\t\treturn this._list[this._urlIndex[url]];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto.remove = function remove(name) {\n\t\t\tif (this._index.hasOwnProperty(name)) {\n\t\t\t\tvar i = this._index[name];\n\t\t\t\tvar item = this._list[i];\n\t\t\t\tdelete this._urlIndex[item.url];\n\t\t\t\tdelete this._index[name];\n\n\t\t\t\tthis._list.splice(i, 1);\n\n\t\t\t\tfor (i = 0; i < this._list.length; i++) {\n\t\t\t\t\titem = this._list[i];\n\t\t\t\t\tthis._index[item.name] = i;\n\t\t\t\t\tthis._urlIndex[item.url] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.loadSceneHierarchy = function loadSceneHierarchy(url, callback) {\n\t\t\tvar self = this;\n\n\t\t\tvar handler = this._app.loader.getHandler(\"hierarchy\");\n\n\t\t\tif (this._app.assets && this._app.assets.prefix && !ABSOLUTE_URL.test(url)) {\n\t\t\t\turl = path.join(this._app.assets.prefix, url);\n\t\t\t}\n\n\t\t\thandler.load(url, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (callback) callback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar _loaded = function _loaded() {\n\t\t\t\t\tself._app.systems.script.preloading = true;\n\t\t\t\t\tvar entity = handler.open(url, data);\n\t\t\t\t\tself._app.systems.script.preloading = false;\n\n\t\t\t\t\tself._app.loader.clearCache(url, \"hierarchy\");\n\n\t\t\t\t\tself._app.root.addChild(entity);\n\n\t\t\t\t\tComponentSystem.initialize(entity);\n\t\t\t\t\tComponentSystem.postInitialize(entity);\n\t\t\t\t\tif (callback) callback(err, entity);\n\t\t\t\t};\n\n\t\t\t\tself._app._preloadScripts(data, _loaded);\n\t\t\t});\n\t\t};\n\n\t\t_proto.loadSceneSettings = function loadSceneSettings(url, callback) {\n\t\t\tvar self = this;\n\n\t\t\tif (this._app.assets && this._app.assets.prefix && !ABSOLUTE_URL.test(url)) {\n\t\t\t\turl = path.join(this._app.assets.prefix, url);\n\t\t\t}\n\n\t\t\tthis._app.loader.load(url, \"scenesettings\", function (err, settings) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tself._app.applySceneSettings(settings);\n\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t_proto.loadScene = function loadScene(url, callback) {\n\t\t\tvar self = this;\n\n\t\t\tvar handler = this._app.loader.getHandler(\"scene\");\n\n\t\t\tif (this._app.assets && this._app.assets.prefix && !ABSOLUTE_URL.test(url)) {\n\t\t\t\turl = path.join(this._app.assets.prefix, url);\n\t\t\t}\n\n\t\t\thandler.load(url, function (err, data) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tvar _loaded = function _loaded() {\n\t\t\t\t\t\tself._app.systems.script.preloading = true;\n\t\t\t\t\t\tvar scene = handler.open(url, data);\n\t\t\t\t\t\tself._app.systems.script.preloading = false;\n\n\t\t\t\t\t\tself._app.loader.clearCache(url, \"scene\");\n\n\t\t\t\t\t\tself._app.loader.patch({\n\t\t\t\t\t\t\tresource: scene,\n\t\t\t\t\t\t\ttype: \"scene\"\n\t\t\t\t\t\t}, self._app.assets);\n\n\t\t\t\t\t\tself._app.root.addChild(scene.root);\n\n\t\t\t\t\t\tif (self._app.systems.rigidbody && typeof Ammo !== 'undefined') {\n\t\t\t\t\t\t\tself._app.systems.rigidbody.gravity.set(scene._gravity.x, scene._gravity.y, scene._gravity.z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback(null, scene);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tself._app._preloadScripts(data, _loaded);\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn SceneRegistry;\n\t}();\n\n\tvar Progress = function () {\n\t\tfunction Progress(length) {\n\t\t\tthis.length = length;\n\t\t\tthis.count = 0;\n\t\t}\n\n\t\tvar _proto = Progress.prototype;\n\n\t\t_proto.inc = function inc() {\n\t\t\tthis.count++;\n\t\t};\n\n\t\t_proto.done = function done() {\n\t\t\treturn this.count === this.length;\n\t\t};\n\n\t\treturn Progress;\n\t}();\n\n\tvar _deprecationWarning = false;\n\tvar tempGraphNode = new GraphNode();\n\texports.app = null;\n\n\tvar Application = function (_EventHandler) {\n\t\t_inheritsLoose(Application, _EventHandler);\n\n\t\tfunction Application(canvas, options) {\n\t\t\tvar _this;\n\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\tconsole.log(\"Powered by PlayCanvas \" + version + \" \" + revision);\n\t\t\tApplication._applications[canvas.id] = _assertThisInitialized(_this);\n\t\t\tApplication._currentApplication = _assertThisInitialized(_this);\n\t\t\texports.app = _assertThisInitialized(_this);\n\t\t\t_this._time = 0;\n\t\t\t_this.timeScale = 1;\n\t\t\t_this.maxDeltaTime = 0.1;\n\t\t\t_this.frame = 0;\n\t\t\t_this.autoRender = true;\n\t\t\t_this.renderNextFrame = false;\n\t\t\t_this.useLegacyScriptAttributeCloning = script.legacy;\n\t\t\t_this._librariesLoaded = false;\n\t\t\t_this._fillMode = FILLMODE_KEEP_ASPECT;\n\t\t\t_this._resolutionMode = RESOLUTION_FIXED;\n\t\t\t_this._allowResize = true;\n\t\t\t_this.context = _assertThisInitialized(_this);\n\t\t\tif (!options.graphicsDeviceOptions) options.graphicsDeviceOptions = {};\n\t\t\toptions.graphicsDeviceOptions.xrCompatible = true;\n\t\t\toptions.graphicsDeviceOptions.alpha = options.graphicsDeviceOptions.alpha || false;\n\t\t\t_this.graphicsDevice = new GraphicsDevice(canvas, options.graphicsDeviceOptions);\n\t\t\t_this.stats = new ApplicationStats(_this.graphicsDevice);\n\t\t\t_this._soundManager = new SoundManager(options);\n\t\t\t_this.loader = new ResourceLoader(_assertThisInitialized(_this));\n\t\t\t_this._entityIndex = {};\n\t\t\t_this.scene = new Scene();\n\t\t\t_this.root = new Entity(_assertThisInitialized(_this));\n\t\t\t_this.root._enabledInHierarchy = true;\n\t\t\t_this._enableList = [];\n\t\t\t_this._enableList.size = 0;\n\t\t\t_this.assets = new AssetRegistry(_this.loader);\n\t\t\tif (options.assetPrefix) _this.assets.prefix = options.assetPrefix;\n\t\t\t_this.bundles = new BundleRegistry(_this.assets);\n\t\t\t_this.enableBundles = typeof TextDecoder !== 'undefined';\n\t\t\t_this.scriptsOrder = options.scriptsOrder || [];\n\t\t\t_this.scripts = new ScriptRegistry(_assertThisInitialized(_this));\n\t\t\t_this.i18n = new I18n(_assertThisInitialized(_this));\n\t\t\t_this.scenes = new SceneRegistry(_assertThisInitialized(_this));\n\n\t\t\tvar self = _assertThisInitialized(_this);\n\n\t\t\t_this.defaultLayerWorld = new Layer({\n\t\t\t\tname: \"World\",\n\t\t\t\tid: LAYERID_WORLD\n\t\t\t});\n\n\t\t\tif (_this.graphicsDevice.webgl2) {\n\t\t\t\t_this.defaultLayerDepth = new Layer({\n\t\t\t\t\tenabled: false,\n\t\t\t\t\tname: \"Depth\",\n\t\t\t\t\tid: LAYERID_DEPTH,\n\t\t\t\t\tonEnable: function onEnable() {\n\t\t\t\t\t\tif (this.renderTarget) return;\n\t\t\t\t\t\tvar depthBuffer = new Texture(self.graphicsDevice, {\n\t\t\t\t\t\t\tformat: PIXELFORMAT_DEPTHSTENCIL,\n\t\t\t\t\t\t\twidth: self.graphicsDevice.width,\n\t\t\t\t\t\t\theight: self.graphicsDevice.height\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdepthBuffer.name = 'rt-depth2';\n\t\t\t\t\t\tdepthBuffer.minFilter = FILTER_NEAREST;\n\t\t\t\t\t\tdepthBuffer.magFilter = FILTER_NEAREST;\n\t\t\t\t\t\tdepthBuffer.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tdepthBuffer.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tthis.renderTarget = new RenderTarget({\n\t\t\t\t\t\t\tcolorBuffer: null,\n\t\t\t\t\t\t\tdepthBuffer: depthBuffer,\n\t\t\t\t\t\t\tautoResolve: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.graphicsDevice.scope.resolve(\"uDepthMap\").setValue(depthBuffer);\n\t\t\t\t\t},\n\t\t\t\t\tonDisable: function onDisable() {\n\t\t\t\t\t\tif (!this.renderTarget) return;\n\n\t\t\t\t\t\tthis.renderTarget._depthBuffer.destroy();\n\n\t\t\t\t\t\tthis.renderTarget.destroy();\n\t\t\t\t\t\tthis.renderTarget = null;\n\t\t\t\t\t},\n\t\t\t\t\tonPreRenderOpaque: function onPreRenderOpaque(cameraPass) {\n\t\t\t\t\t\tvar gl = self.graphicsDevice.gl;\n\t\t\t\t\t\tthis.srcFbo = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\n\t\t\t\t\t\tif (!this.renderTarget || this.renderTarget.width !== self.graphicsDevice.width || this.renderTarget.height !== self.graphicsDevice.height) {\n\t\t\t\t\t\t\tthis.onDisable();\n\t\t\t\t\t\t\tthis.onEnable();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.oldClear = this.cameras[cameraPass].camera._clearOptions;\n\t\t\t\t\t\tthis.cameras[cameraPass].camera._clearOptions = this.depthClearOptions;\n\t\t\t\t\t},\n\t\t\t\t\tonPostRenderOpaque: function onPostRenderOpaque(cameraPass) {\n\t\t\t\t\t\tif (!this.renderTarget) return;\n\t\t\t\t\t\tthis.cameras[cameraPass].camera._clearOptions = this.oldClear;\n\t\t\t\t\t\tvar gl = self.graphicsDevice.gl;\n\t\t\t\t\t\tself.graphicsDevice.setRenderTarget(this.renderTarget);\n\t\t\t\t\t\tself.graphicsDevice.updateBegin();\n\t\t\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.srcFbo);\n\t\t\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.renderTarget._glFrameBuffer);\n\t\t\t\t\t\tgl.blitFramebuffer(0, 0, this.renderTarget.width, this.renderTarget.height, 0, 0, this.renderTarget.width, this.renderTarget.height, gl.DEPTH_BUFFER_BIT, gl.NEAREST);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t_this.defaultLayerDepth.depthClearOptions = {\n\t\t\t\t\tflags: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t_this.defaultLayerDepth = new Layer({\n\t\t\t\t\tenabled: false,\n\t\t\t\t\tname: \"Depth\",\n\t\t\t\t\tid: LAYERID_DEPTH,\n\t\t\t\t\tshaderPass: SHADER_DEPTH,\n\t\t\t\t\tonEnable: function onEnable() {\n\t\t\t\t\t\tif (this.renderTarget) return;\n\t\t\t\t\t\tvar colorBuffer = new Texture(self.graphicsDevice, {\n\t\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\t\twidth: self.graphicsDevice.width,\n\t\t\t\t\t\t\theight: self.graphicsDevice.height\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcolorBuffer.name = 'rt-depth1';\n\t\t\t\t\t\tcolorBuffer.minFilter = FILTER_NEAREST;\n\t\t\t\t\t\tcolorBuffer.magFilter = FILTER_NEAREST;\n\t\t\t\t\t\tcolorBuffer.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tcolorBuffer.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tthis.renderTarget = new RenderTarget(self.graphicsDevice, colorBuffer, {\n\t\t\t\t\t\t\tdepth: true,\n\t\t\t\t\t\t\tstencil: self.graphicsDevice.supportsStencil\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.graphicsDevice.scope.resolve(\"uDepthMap\").setValue(colorBuffer);\n\t\t\t\t\t},\n\t\t\t\t\tonDisable: function onDisable() {\n\t\t\t\t\t\tif (!this.renderTarget) return;\n\n\t\t\t\t\t\tthis.renderTarget._colorBuffer.destroy();\n\n\t\t\t\t\t\tthis.renderTarget.destroy();\n\t\t\t\t\t\tthis.renderTarget = null;\n\t\t\t\t\t},\n\t\t\t\t\tonPostCull: function onPostCull(cameraPass) {\n\t\t\t\t\t\tvar visibleObjects = this.instances.visibleOpaque[cameraPass];\n\t\t\t\t\t\tvar visibleList = visibleObjects.list;\n\t\t\t\t\t\tvar visibleLength = 0;\n\t\t\t\t\t\tvar layers = self.scene.layers.layerList;\n\t\t\t\t\t\tvar subLayerEnabled = self.scene.layers.subLayerEnabled;\n\t\t\t\t\t\tvar isTransparent = self.scene.layers.subLayerList;\n\t\t\t\t\t\tvar rt = self.scene.layers.getLayerById(LAYERID_WORLD).renderTarget;\n\t\t\t\t\t\tvar cam = this.cameras[cameraPass];\n\t\t\t\t\t\tvar layer;\n\t\t\t\t\t\tvar j;\n\t\t\t\t\t\tvar layerVisibleList, layerCamId, layerVisibleListLength, drawCall, transparent;\n\n\t\t\t\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\tlayer = layers[i];\n\t\t\t\t\t\t\tif (layer === this) break;\n\t\t\t\t\t\t\tif (layer.renderTarget !== rt || !layer.enabled || !subLayerEnabled[i]) continue;\n\t\t\t\t\t\t\tlayerCamId = layer.cameras.indexOf(cam);\n\t\t\t\t\t\t\tif (layerCamId < 0) continue;\n\t\t\t\t\t\t\ttransparent = isTransparent[i];\n\t\t\t\t\t\t\tlayerVisibleList = transparent ? layer.instances.visibleTransparent[layerCamId] : layer.instances.visibleOpaque[layerCamId];\n\t\t\t\t\t\t\tlayerVisibleListLength = layerVisibleList.length;\n\t\t\t\t\t\t\tlayerVisibleList = layerVisibleList.list;\n\n\t\t\t\t\t\t\tfor (j = 0; j < layerVisibleListLength; j++) {\n\t\t\t\t\t\t\t\tdrawCall = layerVisibleList[j];\n\n\t\t\t\t\t\t\t\tif (drawCall.material && drawCall.material.depthWrite && !drawCall._noDepthDrawGl1) {\n\t\t\t\t\t\t\t\t\tvisibleList[visibleLength] = drawCall;\n\t\t\t\t\t\t\t\t\tvisibleLength++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvisibleObjects.length = visibleLength;\n\t\t\t\t\t},\n\t\t\t\t\tonPreRenderOpaque: function onPreRenderOpaque(cameraPass) {\n\t\t\t\t\t\tif (!this.renderTarget || this.renderTarget.width !== self.graphicsDevice.width || this.renderTarget.height !== self.graphicsDevice.height) {\n\t\t\t\t\t\t\tthis.onDisable();\n\t\t\t\t\t\t\tthis.onEnable();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.oldClear = this.cameras[cameraPass].camera._clearOptions;\n\t\t\t\t\t\tthis.cameras[cameraPass].camera._clearOptions = this.rgbaDepthClearOptions;\n\t\t\t\t\t},\n\t\t\t\t\tonDrawCall: function onDrawCall() {\n\t\t\t\t\t\tself.graphicsDevice.setColorWrite(true, true, true, true);\n\t\t\t\t\t},\n\t\t\t\t\tonPostRenderOpaque: function onPostRenderOpaque(cameraPass) {\n\t\t\t\t\t\tif (!this.renderTarget) return;\n\t\t\t\t\t\tthis.cameras[cameraPass].camera._clearOptions = this.oldClear;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t_this.defaultLayerDepth.rgbaDepthClearOptions = {\n\t\t\t\t\tcolor: [254.0 / 255, 254.0 / 255, 254.0 / 255, 254.0 / 255],\n\t\t\t\t\tdepth: 1.0,\n\t\t\t\t\tflags: CLEARFLAG_COLOR | CLEARFLAG_DEPTH\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t_this.defaultLayerSkybox = new Layer({\n\t\t\t\tenabled: false,\n\t\t\t\tname: \"Skybox\",\n\t\t\t\tid: LAYERID_SKYBOX,\n\t\t\t\topaqueSortMode: SORTMODE_NONE\n\t\t\t});\n\t\t\t_this.defaultLayerUi = new Layer({\n\t\t\t\tenabled: true,\n\t\t\t\tname: \"UI\",\n\t\t\t\tid: LAYERID_UI,\n\t\t\t\ttransparentSortMode: SORTMODE_MANUAL,\n\t\t\t\tpassThrough: false\n\t\t\t});\n\t\t\t_this.defaultLayerImmediate = new Layer({\n\t\t\t\tenabled: true,\n\t\t\t\tname: \"Immediate\",\n\t\t\t\tid: LAYERID_IMMEDIATE,\n\t\t\t\topaqueSortMode: SORTMODE_NONE,\n\t\t\t\tpassThrough: true\n\t\t\t});\n\t\t\t_this.defaultLayerComposition = new LayerComposition();\n\n\t\t\t_this.defaultLayerComposition.pushOpaque(_this.defaultLayerWorld);\n\n\t\t\t_this.defaultLayerComposition.pushOpaque(_this.defaultLayerDepth);\n\n\t\t\t_this.defaultLayerComposition.pushOpaque(_this.defaultLayerSkybox);\n\n\t\t\t_this.defaultLayerComposition.pushTransparent(_this.defaultLayerWorld);\n\n\t\t\t_this.defaultLayerComposition.pushOpaque(_this.defaultLayerImmediate);\n\n\t\t\t_this.defaultLayerComposition.pushTransparent(_this.defaultLayerImmediate);\n\n\t\t\t_this.defaultLayerComposition.pushTransparent(_this.defaultLayerUi);\n\n\t\t\t_this.scene.layers = _this.defaultLayerComposition;\n\t\t\t_this._immediateLayer = _this.defaultLayerImmediate;\n\n\t\t\t_this.scene.on('set:layers', function (oldComp, newComp) {\n\t\t\t\tvar list = newComp.layerList;\n\t\t\t\tvar layer;\n\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlayer = list[i];\n\n\t\t\t\t\tswitch (layer.id) {\n\t\t\t\t\t\tcase LAYERID_DEPTH:\n\t\t\t\t\t\t\tlayer.onEnable = self.defaultLayerDepth.onEnable;\n\t\t\t\t\t\t\tlayer.onDisable = self.defaultLayerDepth.onDisable;\n\t\t\t\t\t\t\tlayer.onPreRenderOpaque = self.defaultLayerDepth.onPreRenderOpaque;\n\t\t\t\t\t\t\tlayer.onPostRenderOpaque = self.defaultLayerDepth.onPostRenderOpaque;\n\t\t\t\t\t\t\tlayer.depthClearOptions = self.defaultLayerDepth.depthClearOptions;\n\t\t\t\t\t\t\tlayer.rgbaDepthClearOptions = self.defaultLayerDepth.rgbaDepthClearOptions;\n\t\t\t\t\t\t\tlayer.shaderPass = self.defaultLayerDepth.shaderPass;\n\t\t\t\t\t\t\tlayer.onPostCull = self.defaultLayerDepth.onPostCull;\n\t\t\t\t\t\t\tlayer.onDrawCall = self.defaultLayerDepth.onDrawCall;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LAYERID_UI:\n\t\t\t\t\t\t\tlayer.passThrough = self.defaultLayerUi.passThrough;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LAYERID_IMMEDIATE:\n\t\t\t\t\t\t\tlayer.passThrough = self.defaultLayerImmediate.passThrough;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_this.renderer = new ForwardRenderer(_this.graphicsDevice);\n\t\t\t_this.renderer.scene = _this.scene;\n\t\t\t_this.lightmapper = new Lightmapper(_this.graphicsDevice, _this.root, _this.scene, _this.renderer, _this.assets);\n\n\t\t\t_this.once('prerender', _this._firstBake, _assertThisInitialized(_this));\n\n\t\t\t_this.batcher = new BatchManager(_this.graphicsDevice, _this.root, _this.scene);\n\n\t\t\t_this.once('prerender', _this._firstBatch, _assertThisInitialized(_this));\n\n\t\t\t_this.keyboard = options.keyboard || null;\n\t\t\t_this.mouse = options.mouse || null;\n\t\t\t_this.touch = options.touch || null;\n\t\t\t_this.gamepads = options.gamepads || null;\n\t\t\t_this.elementInput = options.elementInput || null;\n\t\t\tif (_this.elementInput) _this.elementInput.app = _assertThisInitialized(_this);\n\t\t\t_this.vr = null;\n\t\t\t_this.xr = new XrManager(_assertThisInitialized(_this));\n\t\t\tif (_this.elementInput) _this.elementInput.attachSelectEvents();\n\t\t\t_this._inTools = false;\n\t\t\t_this._skyboxLast = 0;\n\t\t\t_this._scriptPrefix = options.scriptPrefix || '';\n\n\t\t\tif (_this.enableBundles) {\n\t\t\t\t_this.loader.addHandler(\"bundle\", new BundleHandler(_this.assets));\n\t\t\t}\n\n\t\t\t_this.loader.addHandler(\"animation\", new AnimationHandler());\n\n\t\t\t_this.loader.addHandler(\"animclip\", new AnimClipHandler());\n\n\t\t\t_this.loader.addHandler(\"animstategraph\", new AnimStateGraphHandler());\n\n\t\t\t_this.loader.addHandler(\"model\", new ModelHandler(_this.graphicsDevice, _this.scene.defaultMaterial));\n\n\t\t\t_this.loader.addHandler(\"render\", new RenderHandler(_this.assets));\n\n\t\t\t_this.loader.addHandler(\"material\", new MaterialHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"texture\", new TextureHandler(_this.graphicsDevice, _this.assets, _this.loader));\n\n\t\t\t_this.loader.addHandler(\"text\", new TextHandler());\n\n\t\t\t_this.loader.addHandler(\"json\", new JsonHandler());\n\n\t\t\t_this.loader.addHandler(\"audio\", new AudioHandler(_this._soundManager));\n\n\t\t\t_this.loader.addHandler(\"script\", new ScriptHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"scene\", new SceneHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"cubemap\", new CubemapHandler(_this.graphicsDevice, _this.assets, _this.loader));\n\n\t\t\t_this.loader.addHandler(\"html\", new HtmlHandler());\n\n\t\t\t_this.loader.addHandler(\"css\", new CssHandler());\n\n\t\t\t_this.loader.addHandler(\"shader\", new ShaderHandler());\n\n\t\t\t_this.loader.addHandler(\"hierarchy\", new HierarchyHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"scenesettings\", new SceneSettingsHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"folder\", new FolderHandler());\n\n\t\t\t_this.loader.addHandler(\"font\", new FontHandler(_this.loader));\n\n\t\t\t_this.loader.addHandler(\"binary\", new BinaryHandler());\n\n\t\t\t_this.loader.addHandler(\"textureatlas\", new TextureAtlasHandler(_this.loader));\n\n\t\t\t_this.loader.addHandler(\"sprite\", new SpriteHandler(_this.assets, _this.graphicsDevice));\n\n\t\t\t_this.loader.addHandler(\"template\", new TemplateHandler(_assertThisInitialized(_this)));\n\n\t\t\t_this.loader.addHandler(\"container\", new ContainerHandler(_this.graphicsDevice, _this.scene.defaultMaterial));\n\n\t\t\t_this.systems = new ComponentSystemRegistry();\n\n\t\t\t_this.systems.add(new RigidBodyComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new CollisionComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new AnimationComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new AnimComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ModelComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new RenderComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new CameraComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new LightComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\tif (script.legacy) {\n\t\t\t\t_this.systems.add(new ScriptLegacyComponentSystem(_assertThisInitialized(_this)));\n\t\t\t} else {\n\t\t\t\t_this.systems.add(new ScriptComponentSystem(_assertThisInitialized(_this)));\n\t\t\t}\n\n\t\t\t_this.systems.add(new AudioSourceComponentSystem(_assertThisInitialized(_this), _this._soundManager));\n\n\t\t\t_this.systems.add(new SoundComponentSystem(_assertThisInitialized(_this), _this._soundManager));\n\n\t\t\t_this.systems.add(new AudioListenerComponentSystem(_assertThisInitialized(_this), _this._soundManager));\n\n\t\t\t_this.systems.add(new ParticleSystemComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ScreenComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ElementComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ButtonComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ScrollViewComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ScrollbarComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new SpriteComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new LayoutGroupComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new LayoutChildComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this.systems.add(new ZoneComponentSystem(_assertThisInitialized(_this)));\n\n\t\t\t_this._visibilityChangeHandler = _this.onVisibilityChange.bind(_assertThisInitialized(_this));\n\n\t\t\tif (typeof document !== 'undefined') {\n\t\t\t\tif (document.hidden !== undefined) {\n\t\t\t\t\t_this._hiddenAttr = 'hidden';\n\t\t\t\t\tdocument.addEventListener('visibilitychange', _this._visibilityChangeHandler, false);\n\t\t\t\t} else if (document.mozHidden !== undefined) {\n\t\t\t\t\t_this._hiddenAttr = 'mozHidden';\n\t\t\t\t\tdocument.addEventListener('mozvisibilitychange', _this._visibilityChangeHandler, false);\n\t\t\t\t} else if (document.msHidden !== undefined) {\n\t\t\t\t\t_this._hiddenAttr = 'msHidden';\n\t\t\t\t\tdocument.addEventListener('msvisibilitychange', _this._visibilityChangeHandler, false);\n\t\t\t\t} else if (document.webkitHidden !== undefined) {\n\t\t\t\t\t_this._hiddenAttr = 'webkitHidden';\n\t\t\t\t\tdocument.addEventListener('webkitvisibilitychange', _this._visibilityChangeHandler, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.meshInstanceArray = [];\n\t\t\t_this.tick = makeTick(_assertThisInitialized(_this));\n\t\t\treturn _this;\n\t\t}\n\n\t\tApplication.getApplication = function getApplication(id) {\n\t\t\treturn id ? Application._applications[id] : Application._currentApplication;\n\t\t};\n\n\t\tvar _proto2 = Application.prototype;\n\n\t\t_proto2.configure = function configure(url, callback) {\n\t\t\tvar self = this;\n\t\t\thttp.get(url, function (err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar props = response.application_properties;\n\t\t\t\tvar scenes = response.scenes;\n\t\t\t\tvar assets = response.assets;\n\n\t\t\t\tself._parseApplicationProperties(props, function (err) {\n\t\t\t\t\tself._parseScenes(scenes);\n\n\t\t\t\t\tself._parseAssets(assets);\n\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\t_proto2.preload = function preload(callback) {\n\t\t\tvar self = this;\n\t\t\tvar i, total;\n\t\t\tself.fire(\"preload:start\");\n\t\t\tvar assets = this.assets.list({\n\t\t\t\tpreload: true\n\t\t\t});\n\n\t\t\tvar _assets = new Progress(assets.length);\n\n\t\t\tvar _done = false;\n\n\t\t\tvar done = function done() {\n\t\t\t\tif (!self.graphicsDevice) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!_done && _assets.done()) {\n\t\t\t\t\t_done = true;\n\t\t\t\t\tself.fire(\"preload:end\");\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttotal = assets.length;\n\n\t\t\tvar count = function count() {\n\t\t\t\treturn _assets.count;\n\t\t\t};\n\n\t\t\tif (_assets.length) {\n\t\t\t\tvar onAssetLoad = function onAssetLoad(asset) {\n\t\t\t\t\t_assets.inc();\n\n\t\t\t\t\tself.fire('preload:progress', count() / total);\n\t\t\t\t\tif (_assets.done()) done();\n\t\t\t\t};\n\n\t\t\t\tvar onAssetError = function onAssetError(err, asset) {\n\t\t\t\t\t_assets.inc();\n\n\t\t\t\t\tself.fire('preload:progress', count() / total);\n\t\t\t\t\tif (_assets.done()) done();\n\t\t\t\t};\n\n\t\t\t\tfor (i = 0; i < assets.length; i++) {\n\t\t\t\t\tif (!assets[i].loaded) {\n\t\t\t\t\t\tassets[i].once('load', onAssetLoad);\n\t\t\t\t\t\tassets[i].once('error', onAssetError);\n\t\t\t\t\t\tthis.assets.load(assets[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_assets.inc();\n\n\t\t\t\t\t\tself.fire(\"preload:progress\", count() / total);\n\t\t\t\t\t\tif (_assets.done()) done();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\n\t\t_proto2._preloadScripts = function _preloadScripts(sceneData, callback) {\n\t\t\tif (!script.legacy) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tself.systems.script.preloading = true;\n\n\t\t\tvar scripts = this._getScriptReferences(sceneData);\n\n\t\t\tvar i = 0,\n\t\t\t\t\tl = scripts.length;\n\t\t\tvar progress = new Progress(l);\n\t\t\tvar scriptUrl;\n\t\t\tvar regex = /^http(s)?:\\/\\//;\n\n\t\t\tif (l) {\n\t\t\t\tvar onLoad = function onLoad(err, ScriptType) {\n\t\t\t\t\tif (err) console.error(err);\n\t\t\t\t\tprogress.inc();\n\n\t\t\t\t\tif (progress.done()) {\n\t\t\t\t\t\tself.systems.script.preloading = false;\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tscriptUrl = scripts[i];\n\t\t\t\t\tif (!regex.test(scriptUrl.toLowerCase()) && self._scriptPrefix) scriptUrl = path.join(self._scriptPrefix, scripts[i]);\n\t\t\t\t\tthis.loader.load(scriptUrl, 'script', onLoad);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.systems.script.preloading = false;\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\n\t\t_proto2._parseApplicationProperties = function _parseApplicationProperties(props, callback) {\n\t\t\tvar i;\n\t\t\tvar len;\n\n\t\t\tif (typeof props.maxAssetRetries === 'number' && props.maxAssetRetries > 0) {\n\t\t\t\tthis.loader.enableRetry(props.maxAssetRetries);\n\t\t\t}\n\n\t\t\tif (!props.useDevicePixelRatio) props.useDevicePixelRatio = props.use_device_pixel_ratio;\n\t\t\tif (!props.resolutionMode) props.resolutionMode = props.resolution_mode;\n\t\t\tif (!props.fillMode) props.fillMode = props.fill_mode;\n\t\t\tthis._width = props.width;\n\t\t\tthis._height = props.height;\n\n\t\t\tif (props.useDevicePixelRatio) {\n\t\t\t\tthis.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\t\t\t}\n\n\t\t\tthis.setCanvasResolution(props.resolutionMode, this._width, this._height);\n\t\t\tthis.setCanvasFillMode(props.fillMode, this._width, this._height);\n\n\t\t\tif (props.layers && props.layerOrder) {\n\t\t\t\tvar composition = new LayerComposition();\n\t\t\t\tvar layers = {};\n\n\t\t\t\tfor (var key in props.layers) {\n\t\t\t\t\tvar data = props.layers[key];\n\t\t\t\t\tdata.id = parseInt(key, 10);\n\t\t\t\t\tdata.enabled = data.id !== LAYERID_DEPTH;\n\t\t\t\t\tlayers[key] = new Layer(data);\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0, len = props.layerOrder.length; i < len; i++) {\n\t\t\t\t\tvar sublayer = props.layerOrder[i];\n\t\t\t\t\tvar layer = layers[sublayer.layer];\n\t\t\t\t\tif (!layer) continue;\n\n\t\t\t\t\tif (sublayer.transparent) {\n\t\t\t\t\t\tcomposition.pushTransparent(layer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomposition.pushOpaque(layer);\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposition.subLayerEnabled[i] = sublayer.enabled;\n\t\t\t\t}\n\n\t\t\t\tthis.scene.layers = composition;\n\t\t\t}\n\n\t\t\tif (props.batchGroups) {\n\t\t\t\tfor (i = 0, len = props.batchGroups.length; i < len; i++) {\n\t\t\t\t\tvar grp = props.batchGroups[i];\n\t\t\t\t\tthis.batcher.addGroup(grp.name, grp.dynamic, grp.maxAabbSize, grp.id, grp.layers);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (props.i18nAssets) {\n\t\t\t\tthis.i18n.assets = props.i18nAssets;\n\t\t\t}\n\n\t\t\tthis._loadLibraries(props.libraries, callback);\n\t\t};\n\n\t\t_proto2._loadLibraries = function _loadLibraries(urls, callback) {\n\t\t\tvar len = urls.length;\n\t\t\tvar count = len;\n\t\t\tvar self = this;\n\t\t\tvar regex = /^http(s)?:\\/\\//;\n\n\t\t\tif (len) {\n\t\t\t\tvar onLoad = function onLoad(err, script) {\n\t\t\t\t\tcount--;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else if (count === 0) {\n\t\t\t\t\t\tself.onLibrariesLoaded();\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\t\tvar url = urls[i];\n\t\t\t\t\tif (!regex.test(url.toLowerCase()) && self._scriptPrefix) url = path.join(self._scriptPrefix, url);\n\t\t\t\t\tthis.loader.load(url, 'script', onLoad);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.onLibrariesLoaded();\n\t\t\t\tcallback(null);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._parseScenes = function _parseScenes(scenes) {\n\t\t\tif (!scenes) return;\n\n\t\t\tfor (var i = 0; i < scenes.length; i++) {\n\t\t\t\tthis.scenes.add(scenes[i].name, scenes[i].url);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._parseAssets = function _parseAssets(assets) {\n\t\t\tvar i, id;\n\t\t\tvar list = [];\n\t\t\tvar scriptsIndex = {};\n\t\t\tvar bundlesIndex = {};\n\n\t\t\tif (!script.legacy) {\n\t\t\t\tfor (i = 0; i < this.scriptsOrder.length; i++) {\n\t\t\t\t\tid = this.scriptsOrder[i];\n\t\t\t\t\tif (!assets[id]) continue;\n\t\t\t\t\tscriptsIndex[id] = true;\n\t\t\t\t\tlist.push(assets[id]);\n\t\t\t\t}\n\n\t\t\t\tif (this.enableBundles) {\n\t\t\t\t\tfor (id in assets) {\n\t\t\t\t\t\tif (assets[id].type === 'bundle') {\n\t\t\t\t\t\t\tbundlesIndex[id] = true;\n\t\t\t\t\t\t\tlist.push(assets[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (id in assets) {\n\t\t\t\t\tif (scriptsIndex[id] || bundlesIndex[id]) continue;\n\t\t\t\t\tlist.push(assets[id]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.enableBundles) {\n\t\t\t\t\tfor (id in assets) {\n\t\t\t\t\t\tif (assets[id].type === 'bundle') {\n\t\t\t\t\t\t\tbundlesIndex[id] = true;\n\t\t\t\t\t\t\tlist.push(assets[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (id in assets) {\n\t\t\t\t\tif (bundlesIndex[id]) continue;\n\t\t\t\t\tlist.push(assets[id]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < list.length; i++) {\n\t\t\t\tvar data = list[i];\n\t\t\t\tvar asset = new Asset(data.name, data.type, data.file, data.data);\n\t\t\t\tasset.id = parseInt(data.id, 10);\n\t\t\t\tasset.preload = data.preload ? data.preload : false;\n\t\t\t\tasset.loaded = data.type === 'script' && data.data && data.data.loadingType > 0;\n\t\t\t\tasset.tags.add(data.tags);\n\n\t\t\t\tif (data.i18n) {\n\t\t\t\t\tfor (var locale in data.i18n) {\n\t\t\t\t\t\tasset.addLocalizedAssetId(locale, data.i18n[locale]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.assets.add(asset);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._getScriptReferences = function _getScriptReferences(scene) {\n\t\t\tvar i, key;\n\t\t\tvar priorityScripts = [];\n\n\t\t\tif (scene.settings.priority_scripts) {\n\t\t\t\tpriorityScripts = scene.settings.priority_scripts;\n\t\t\t}\n\n\t\t\tvar _scripts = [];\n\t\t\tvar _index = {};\n\n\t\t\tfor (i = 0; i < priorityScripts.length; i++) {\n\t\t\t\t_scripts.push(priorityScripts[i]);\n\n\t\t\t\t_index[priorityScripts[i]] = true;\n\t\t\t}\n\n\t\t\tvar entities = scene.entities;\n\n\t\t\tfor (key in entities) {\n\t\t\t\tif (!entities[key].components.script) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar scripts = entities[key].components.script.scripts;\n\n\t\t\t\tfor (i = 0; i < scripts.length; i++) {\n\t\t\t\t\tif (_index[scripts[i].url]) continue;\n\n\t\t\t\t\t_scripts.push(scripts[i].url);\n\n\t\t\t\t\t_index[scripts[i].url] = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _scripts;\n\t\t};\n\n\t\t_proto2.start = function start() {\n\t\t\tthis.frame = 0;\n\t\t\tthis.fire(\"start\", {\n\t\t\t\ttimestamp: now(),\n\t\t\t\ttarget: this\n\t\t\t});\n\n\t\t\tif (!this._librariesLoaded) {\n\t\t\t\tthis.onLibrariesLoaded();\n\t\t\t}\n\n\t\t\tComponentSystem.initialize(this.root);\n\t\t\tthis.fire(\"initialize\");\n\t\t\tComponentSystem.postInitialize(this.root);\n\t\t\tthis.fire(\"postinitialize\");\n\t\t\tthis.tick();\n\t\t};\n\n\t\t_proto2.update = function update(dt) {\n\t\t\tthis.frame++;\n\t\t\tthis.graphicsDevice.updateClientRect();\n\t\t\tif (this.vr) this.vr.poll();\n\t\t\tif (script.legacy) ComponentSystem.fixedUpdate(1.0 / 60.0, this._inTools);\n\t\t\tComponentSystem.update(dt, this._inTools);\n\t\t\tComponentSystem.animationUpdate(dt, this._inTools);\n\t\t\tComponentSystem.postUpdate(dt, this._inTools);\n\t\t\tthis.fire(\"update\", dt);\n\n\t\t\tif (this.controller) {\n\t\t\t\tthis.controller.update(dt);\n\t\t\t}\n\n\t\t\tif (this.mouse) {\n\t\t\t\tthis.mouse.update(dt);\n\t\t\t}\n\n\t\t\tif (this.keyboard) {\n\t\t\t\tthis.keyboard.update(dt);\n\t\t\t}\n\n\t\t\tif (this.gamepads) {\n\t\t\t\tthis.gamepads.update(dt);\n\t\t\t}\n\t\t};\n\n\t\t_proto2.render = function render() {\n\t\t\tthis.fire(\"prerender\");\n\t\t\tthis.root.syncHierarchy();\n\t\t\tthis.batcher.updateAll();\n\t\t\tthis.renderer.renderComposition(this.scene.layers);\n\t\t\tthis.fire(\"postrender\");\n\t\t};\n\n\t\t_proto2._fillFrameStatsBasic = function _fillFrameStatsBasic(now, dt, ms) {\n\t\t\tvar stats = this.stats.frame;\n\t\t\tstats.dt = dt;\n\t\t\tstats.ms = ms;\n\n\t\t\tif (now > stats._timeToCountFrames) {\n\t\t\t\tstats.fps = stats._fpsAccum;\n\t\t\t\tstats._fpsAccum = 0;\n\t\t\t\tstats._timeToCountFrames = now + 1000;\n\t\t\t} else {\n\t\t\t\tstats._fpsAccum++;\n\t\t\t}\n\n\t\t\tthis.stats.drawCalls.total = this.graphicsDevice._drawCallsPerFrame;\n\t\t\tthis.graphicsDevice._drawCallsPerFrame = 0;\n\t\t};\n\n\t\t_proto2._fillFrameStats = function _fillFrameStats() {\n\t\t\tvar stats = this.stats.frame;\n\t\t\tstats.cameras = this.renderer._camerasRendered;\n\t\t\tstats.materials = this.renderer._materialSwitches;\n\t\t\tstats.shaders = this.graphicsDevice._shaderSwitchesPerFrame;\n\t\t\tstats.shadowMapUpdates = this.renderer._shadowMapUpdates;\n\t\t\tstats.shadowMapTime = this.renderer._shadowMapTime;\n\t\t\tstats.depthMapTime = this.renderer._depthMapTime;\n\t\t\tstats.forwardTime = this.renderer._forwardTime;\n\t\t\tvar prims = this.graphicsDevice._primsPerFrame;\n\t\t\tstats.triangles = prims[PRIMITIVE_TRIANGLES] / 3 + Math.max(prims[PRIMITIVE_TRISTRIP] - 2, 0) + Math.max(prims[PRIMITIVE_TRIFAN] - 2, 0);\n\t\t\tstats.cullTime = this.renderer._cullTime;\n\t\t\tstats.sortTime = this.renderer._sortTime;\n\t\t\tstats.skinTime = this.renderer._skinTime;\n\t\t\tstats.morphTime = this.renderer._morphTime;\n\t\t\tstats.instancingTime = this.renderer._instancingTime;\n\t\t\tstats.otherPrimitives = 0;\n\n\t\t\tfor (var i = 0; i < prims.length; i++) {\n\t\t\t\tif (i < PRIMITIVE_TRIANGLES) {\n\t\t\t\t\tstats.otherPrimitives += prims[i];\n\t\t\t\t}\n\n\t\t\t\tprims[i] = 0;\n\t\t\t}\n\n\t\t\tthis.renderer._camerasRendered = 0;\n\t\t\tthis.renderer._materialSwitches = 0;\n\t\t\tthis.renderer._shadowMapUpdates = 0;\n\t\t\tthis.graphicsDevice._shaderSwitchesPerFrame = 0;\n\t\t\tthis.renderer._cullTime = 0;\n\t\t\tthis.renderer._layerCompositionUpdateTime = 0;\n\t\t\tthis.renderer._sortTime = 0;\n\t\t\tthis.renderer._skinTime = 0;\n\t\t\tthis.renderer._morphTime = 0;\n\t\t\tthis.renderer._instancingTime = 0;\n\t\t\tthis.renderer._shadowMapTime = 0;\n\t\t\tthis.renderer._depthMapTime = 0;\n\t\t\tthis.renderer._forwardTime = 0;\n\t\t\tstats = this.stats.drawCalls;\n\t\t\tstats.forward = this.renderer._forwardDrawCalls;\n\t\t\tstats.culled = this.renderer._numDrawCallsCulled;\n\t\t\tstats.depth = 0;\n\t\t\tstats.shadow = this.renderer._shadowDrawCalls;\n\t\t\tstats.skinned = this.renderer._skinDrawCalls;\n\t\t\tstats.immediate = 0;\n\t\t\tstats.instanced = 0;\n\t\t\tstats.removedByInstancing = 0;\n\t\t\tstats.misc = stats.total - (stats.forward + stats.shadow);\n\t\t\tthis.renderer._depthDrawCalls = 0;\n\t\t\tthis.renderer._shadowDrawCalls = 0;\n\t\t\tthis.renderer._forwardDrawCalls = 0;\n\t\t\tthis.renderer._numDrawCallsCulled = 0;\n\t\t\tthis.renderer._skinDrawCalls = 0;\n\t\t\tthis.renderer._immediateRendered = 0;\n\t\t\tthis.renderer._instancedDrawCalls = 0;\n\t\t\tthis.renderer._removedByInstancing = 0;\n\t\t\tthis.stats.misc.renderTargetCreationTime = this.graphicsDevice.renderTargetCreationTime;\n\t\t\tstats = this.stats.particles;\n\t\t\tstats.updatesPerFrame = stats._updatesPerFrame;\n\t\t\tstats.frameTime = stats._frameTime;\n\t\t\tstats._updatesPerFrame = 0;\n\t\t\tstats._frameTime = 0;\n\t\t};\n\n\t\t_proto2.setCanvasFillMode = function setCanvasFillMode(mode, width, height) {\n\t\t\tthis._fillMode = mode;\n\t\t\tthis.resizeCanvas(width, height);\n\t\t};\n\n\t\t_proto2.setCanvasResolution = function setCanvasResolution(mode, width, height) {\n\t\t\tthis._resolutionMode = mode;\n\n\t\t\tif (mode === RESOLUTION_AUTO && width === undefined) {\n\t\t\t\twidth = this.graphicsDevice.canvas.clientWidth;\n\t\t\t\theight = this.graphicsDevice.canvas.clientHeight;\n\t\t\t}\n\n\t\t\tthis.graphicsDevice.resizeCanvas(width, height);\n\t\t};\n\n\t\t_proto2.isHidden = function isHidden() {\n\t\t\treturn document[this._hiddenAttr];\n\t\t};\n\n\t\t_proto2.onVisibilityChange = function onVisibilityChange() {\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis._soundManager.suspend();\n\t\t\t} else {\n\t\t\t\tthis._soundManager.resume();\n\t\t\t}\n\t\t};\n\n\t\t_proto2.resizeCanvas = function resizeCanvas(width, height) {\n\t\t\tif (!this._allowResize) return;\n\t\t\tif (this.xr && this.xr.session) return;\n\t\t\tvar windowWidth = window.innerWidth;\n\t\t\tvar windowHeight = window.innerHeight;\n\n\t\t\tif (this._fillMode === FILLMODE_KEEP_ASPECT) {\n\t\t\t\tvar r = this.graphicsDevice.canvas.width / this.graphicsDevice.canvas.height;\n\t\t\t\tvar winR = windowWidth / windowHeight;\n\n\t\t\t\tif (r > winR) {\n\t\t\t\t\twidth = windowWidth;\n\t\t\t\t\theight = width / r;\n\t\t\t\t} else {\n\t\t\t\t\theight = windowHeight;\n\t\t\t\t\twidth = height * r;\n\t\t\t\t}\n\t\t\t} else if (this._fillMode === FILLMODE_FILL_WINDOW) {\n\t\t\t\twidth = windowWidth;\n\t\t\t\theight = windowHeight;\n\t\t\t}\n\n\t\t\tthis.graphicsDevice.canvas.style.width = width + 'px';\n\t\t\tthis.graphicsDevice.canvas.style.height = height + 'px';\n\n\t\t\tif (this._resolutionMode === RESOLUTION_AUTO) {\n\t\t\t\tthis.setCanvasResolution(RESOLUTION_AUTO);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t};\n\n\t\t_proto2.onLibrariesLoaded = function onLibrariesLoaded() {\n\t\t\tthis._librariesLoaded = true;\n\t\t\tthis.systems.rigidbody.onLibraryLoaded();\n\t\t};\n\n\t\t_proto2.applySceneSettings = function applySceneSettings(settings) {\n\t\t\tvar asset;\n\n\t\t\tif (this.systems.rigidbody && typeof Ammo !== 'undefined') {\n\t\t\t\tvar gravity = settings.physics.gravity;\n\t\t\t\tthis.systems.rigidbody.gravity.set(gravity[0], gravity[1], gravity[2]);\n\t\t\t}\n\n\t\t\tthis.scene.applySettings(settings);\n\n\t\t\tif (settings.render.hasOwnProperty('skybox')) {\n\t\t\t\tif (settings.render.skybox) {\n\t\t\t\t\tasset = this.assets.get(settings.render.skybox);\n\n\t\t\t\t\tif (asset) {\n\t\t\t\t\t\tthis.setSkybox(asset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.assets.once('add:' + settings.render.skybox, this.setSkybox, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSkybox(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.setSkybox = function setSkybox(asset) {\n\t\t\tif (asset) {\n\t\t\t\tif (this._skyboxLast === asset.id) {\n\t\t\t\t\tif (this.scene.skyboxMip === 0 && !asset.loadFaces) {\n\t\t\t\t\t\tthis._skyboxLoad(asset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._onSkyboxChange(asset);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._skyboxLast) {\n\t\t\t\t\tthis.assets.off('add:' + this._skyboxLast, this.setSkybox, this);\n\t\t\t\t\tthis.assets.off('load:' + this._skyboxLast, this._onSkyboxChange, this);\n\t\t\t\t\tthis.assets.off('remove:' + this._skyboxLast, this._skyboxRemove, this);\n\t\t\t\t}\n\n\t\t\t\tthis._skyboxLast = asset.id;\n\t\t\t\tthis.assets.on('load:' + asset.id, this._onSkyboxChange, this);\n\t\t\t\tthis.assets.once('remove:' + asset.id, this._skyboxRemove, this);\n\t\t\t\tif (asset.resource) this.scene.setSkybox(asset.resources);\n\n\t\t\t\tthis._skyboxLoad(asset);\n\t\t\t} else {\n\t\t\t\tif (!this._skyboxLast) return;\n\n\t\t\t\tthis._skyboxRemove({\n\t\t\t\t\tid: this._skyboxLast\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t_proto2.enableVr = function enableVr() {\n\t\t\tif (!this.vr) {\n\t\t\t\tthis.vr = new VrManager(this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2.disableVr = function disableVr() {\n\t\t\tif (this.vr) {\n\t\t\t\tthis.vr.destroy();\n\t\t\t\tthis.vr = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onSkyboxChange = function _onSkyboxChange(asset) {\n\t\t\tthis.scene.setSkybox(asset.resources);\n\t\t};\n\n\t\t_proto2._skyboxLoad = function _skyboxLoad(asset) {\n\t\t\tif (this.scene.skyboxMip === 0) asset.loadFaces = true;\n\t\t\tthis.assets.load(asset);\n\n\t\t\tthis._onSkyboxChange(asset);\n\t\t};\n\n\t\t_proto2._skyboxRemove = function _skyboxRemove(asset) {\n\t\t\tif (!this._skyboxLast) return;\n\t\t\tthis.assets.off('add:' + asset.id, this.setSkybox, this);\n\t\t\tthis.assets.off('load:' + asset.id, this._onSkyboxChange, this);\n\t\t\tthis.assets.off('remove:' + asset.id, this._skyboxRemove, this);\n\t\t\tthis.scene.setSkybox(null);\n\t\t\tthis._skyboxLast = null;\n\t\t};\n\n\t\t_proto2._firstBake = function _firstBake() {\n\t\t\tthis.lightmapper.bake(null, this.scene.lightmapMode);\n\t\t};\n\n\t\t_proto2._firstBatch = function _firstBatch() {\n\t\t\tif (this.scene._needsStaticPrepare) {\n\t\t\t\tthis.renderer.prepareStaticMeshes(this.graphicsDevice, this.scene);\n\t\t\t\tthis.scene._needsStaticPrepare = false;\n\t\t\t}\n\n\t\t\tthis.batcher.generate();\n\t\t};\n\n\t\t_proto2._processTimestamp = function _processTimestamp(timestamp) {\n\t\t\treturn timestamp;\n\t\t};\n\n\t\t_proto2._preRenderImmediate = function _preRenderImmediate() {\n\t\t\tfor (var i = 0; i < this._immediateData.lineBatches.length; i++) {\n\t\t\t\tif (this._immediateData.lineBatches[i]) {\n\t\t\t\t\tthis._immediateData.lineBatches[i].finalize(this.meshInstanceArray);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._postRenderImmediate = function _postRenderImmediate() {\n\t\t\tfor (var i = 0; i < this._immediateData.layers.length; i++) {\n\t\t\t\tthis._immediateData.layers[i].clearMeshInstances(true);\n\t\t\t}\n\n\t\t\tthis._immediateData.layers.length = 0;\n\t\t};\n\n\t\t_proto2._initImmediate = function _initImmediate() {\n\t\t\tif (!this._immediateData) {\n\t\t\t\tthis._immediateData = new ImmediateData(this.graphicsDevice);\n\t\t\t\tthis.on('prerender', this._preRenderImmediate, this);\n\t\t\t\tthis.on('postrender', this._postRenderImmediate, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._addLines = function _addLines(position, color, options) {\n\t\t\tvar layer = options && options.layer ? options.layer : this.scene.layers.getLayerById(LAYERID_IMMEDIATE);\n\t\t\tvar depthTest = options && options.depthTest !== undefined ? options.depthTest : true;\n\t\t\tvar mask = options && options.mask ? options.mask : undefined;\n\n\t\t\tthis._initImmediate();\n\n\t\t\tthis._immediateData.addLayer(layer);\n\n\t\t\tvar idx = this._immediateData.getLayerIdx(layer);\n\n\t\t\tif (idx === undefined) {\n\t\t\t\tvar batch = new LineBatch();\n\t\t\t\tbatch.init(this.graphicsDevice, this._immediateData.lineVertexFormat, layer, position.length / 2);\n\t\t\t\tbatch.material.depthTest = depthTest;\n\t\t\t\tif (mask) batch.meshInstance.mask = mask;\n\t\t\t\tidx = this._immediateData.lineBatches.push(batch) - 1;\n\n\t\t\t\tthis._immediateData.addLayerIdx(idx, layer);\n\t\t\t} else {\n\t\t\t\tthis._immediateData.lineBatches[idx].init(this.graphicsDevice, this._immediateData.lineVertexFormat, layer, position.length / 2);\n\n\t\t\t\tthis._immediateData.lineBatches[idx].material.depthTest = depthTest;\n\t\t\t\tif (mask) this._immediateData.lineBatches[idx].meshInstance.mask = mask;\n\t\t\t}\n\n\t\t\tthis._immediateData.lineBatches[idx].addLines(position, color);\n\t\t};\n\n\t\t_proto2.renderLine = function renderLine(start, end, color) {\n\t\t\tvar endColor = color;\n\t\t\tvar options;\n\t\t\tvar arg3 = arguments[3];\n\t\t\tvar arg4 = arguments[4];\n\n\t\t\tif (arg3 instanceof Color) {\n\t\t\t\tendColor = arg3;\n\n\t\t\t\tif (typeof arg4 === 'number') {\n\t\t\t\t\tif (!_deprecationWarning) {\n\t\t\t\t\t\tconsole.warn(\"lineBatch argument is deprecated for renderLine. Use options.layer instead\");\n\t\t\t\t\t\t_deprecationWarning = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (arg4 === LINEBATCH_OVERLAY) {\n\t\t\t\t\t\toptions = {\n\t\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\t\tdepthTest: false\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions = {\n\t\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\t\tdepthTest: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toptions = arg4;\n\t\t\t\t}\n\t\t\t} else if (typeof arg3 === 'number') {\n\t\t\t\tif (!_deprecationWarning) {\n\t\t\t\t\tconsole.warn(\"lineBatch argument is deprecated for renderLine. Use options.layer instead\");\n\t\t\t\t\t_deprecationWarning = true;\n\t\t\t\t}\n\n\t\t\t\tendColor = color;\n\n\t\t\t\tif (arg3 === LINEBATCH_OVERLAY) {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\tdepthTest: false\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\tdepthTest: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (arg3) {\n\t\t\t\toptions = arg3;\n\t\t\t}\n\n\t\t\tthis._addLines([start, end], [color, endColor], options);\n\t\t};\n\n\t\t_proto2.renderLines = function renderLines(position, color, options) {\n\t\t\tif (!options) {\n\t\t\t\toptions = {\n\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\tdepthTest: true\n\t\t\t\t};\n\t\t\t} else if (typeof options === 'number') {\n\t\t\t\tif (!_deprecationWarning) {\n\t\t\t\t\tconsole.warn(\"lineBatch argument is deprecated for renderLine. Use options.layer instead\");\n\t\t\t\t\t_deprecationWarning = true;\n\t\t\t\t}\n\n\t\t\t\tif (options === LINEBATCH_OVERLAY) {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\tdepthTest: false\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE),\n\t\t\t\t\t\tdepthTest: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar multiColor = !!color.length;\n\n\t\t\tif (multiColor) {\n\t\t\t\tif (position.length !== color.length) {\n\t\t\t\t\tconsole.error(\"renderLines: position/color arrays have different lengths\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (position.length % 2 !== 0) {\n\t\t\t\tconsole.error(\"renderLines: array length is not divisible by 2\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._addLines(position, color, options);\n\t\t};\n\n\t\t_proto2.renderWireCube = function renderWireCube(matrix, color, options) {\n\t\t\tvar i;\n\n\t\t\tthis._initImmediate();\n\n\t\t\tif (!this._immediateData.cubeLocalPos) {\n\t\t\t\tvar x = 0.5;\n\t\t\t\tthis._immediateData.cubeLocalPos = [new Vec3(-x, -x, -x), new Vec3(-x, x, -x), new Vec3(x, x, -x), new Vec3(x, -x, -x), new Vec3(-x, -x, x), new Vec3(-x, x, x), new Vec3(x, x, x), new Vec3(x, -x, x)];\n\t\t\t\tthis._immediateData.cubeWorldPos = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\t\t\t}\n\n\t\t\tvar cubeLocalPos = this._immediateData.cubeLocalPos;\n\t\t\tvar cubeWorldPos = this._immediateData.cubeWorldPos;\n\n\t\t\tfor (i = 0; i < 8; i++) {\n\t\t\t\tmatrix.transformPoint(cubeLocalPos[i], cubeWorldPos[i]);\n\t\t\t}\n\n\t\t\tthis.renderLines([cubeWorldPos[0], cubeWorldPos[1], cubeWorldPos[1], cubeWorldPos[2], cubeWorldPos[2], cubeWorldPos[3], cubeWorldPos[3], cubeWorldPos[0], cubeWorldPos[4], cubeWorldPos[5], cubeWorldPos[5], cubeWorldPos[6], cubeWorldPos[6], cubeWorldPos[7], cubeWorldPos[7], cubeWorldPos[4], cubeWorldPos[0], cubeWorldPos[4], cubeWorldPos[1], cubeWorldPos[5], cubeWorldPos[2], cubeWorldPos[6], cubeWorldPos[3], cubeWorldPos[7]], color, options);\n\t\t};\n\n\t\t_proto2.renderMeshInstance = function renderMeshInstance(meshInstance, options) {\n\t\t\tif (!options) {\n\t\t\t\toptions = {\n\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._initImmediate();\n\n\t\t\tthis._immediateData.addLayer(options.layer);\n\n\t\t\tthis.meshInstanceArray[0] = meshInstance;\n\t\t\toptions.layer.addMeshInstances(this.meshInstanceArray, true);\n\t\t};\n\n\t\t_proto2.renderMesh = function renderMesh(mesh, material, matrix, options) {\n\t\t\tif (!options) {\n\t\t\t\toptions = {\n\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._initImmediate();\n\n\t\t\ttempGraphNode.worldTransform = matrix;\n\t\t\ttempGraphNode._dirtyWorld = tempGraphNode._dirtyNormal = false;\n\t\t\tvar instance = new MeshInstance(tempGraphNode, mesh, material);\n\t\t\tinstance.cull = false;\n\t\t\tif (options.mask) instance.mask = options.mask;\n\n\t\t\tthis._immediateData.addLayer(options.layer);\n\n\t\t\tthis.meshInstanceArray[0] = instance;\n\t\t\toptions.layer.addMeshInstances(this.meshInstanceArray, true);\n\t\t};\n\n\t\t_proto2.renderQuad = function renderQuad(matrix, material, options) {\n\t\t\tif (!options) {\n\t\t\t\toptions = {\n\t\t\t\t\tlayer: this.scene.layers.getLayerById(LAYERID_IMMEDIATE)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._initImmediate();\n\n\t\t\tif (!this._immediateData.quadMesh) {\n\t\t\t\tvar format = new VertexFormat(this.graphicsDevice, [{\n\t\t\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\t\t\tcomponents: 3,\n\t\t\t\t\ttype: TYPE_FLOAT32\n\t\t\t\t}]);\n\t\t\t\tvar quadVb = new VertexBuffer(this.graphicsDevice, format, 4);\n\t\t\t\tvar iterator = new VertexIterator(quadVb);\n\t\t\t\titerator.element[SEMANTIC_POSITION].set(-0.5, -0.5, 0);\n\t\t\t\titerator.next();\n\t\t\t\titerator.element[SEMANTIC_POSITION].set(0.5, -0.5, 0);\n\t\t\t\titerator.next();\n\t\t\t\titerator.element[SEMANTIC_POSITION].set(-0.5, 0.5, 0);\n\t\t\t\titerator.next();\n\t\t\t\titerator.element[SEMANTIC_POSITION].set(0.5, 0.5, 0);\n\t\t\t\titerator.end();\n\t\t\t\tthis._immediateData.quadMesh = new Mesh(this.graphicsDevice);\n\t\t\t\tthis._immediateData.quadMesh.vertexBuffer = quadVb;\n\t\t\t\tthis._immediateData.quadMesh.primitive[0].type = PRIMITIVE_TRISTRIP;\n\t\t\t\tthis._immediateData.quadMesh.primitive[0].base = 0;\n\t\t\t\tthis._immediateData.quadMesh.primitive[0].count = 4;\n\t\t\t\tthis._immediateData.quadMesh.primitive[0].indexed = false;\n\t\t\t}\n\n\t\t\ttempGraphNode.worldTransform = matrix;\n\t\t\ttempGraphNode._dirtyWorld = tempGraphNode._dirtyNormal = false;\n\t\t\tvar quad = new MeshInstance(tempGraphNode, this._immediateData.quadMesh, material);\n\t\t\tquad.cull = false;\n\t\t\tthis.meshInstanceArray[0] = quad;\n\n\t\t\tthis._immediateData.addLayer(options.layer);\n\n\t\t\toptions.layer.addMeshInstances(this.meshInstanceArray, true);\n\t\t};\n\n\t\t_proto2.destroy = function destroy() {\n\t\t\tvar i, l;\n\t\t\tvar canvasId = this.graphicsDevice.canvas.id;\n\t\t\tthis.off('librariesloaded');\n\t\t\tdocument.removeEventListener('visibilitychange', this._visibilityChangeHandler, false);\n\t\t\tdocument.removeEventListener('mozvisibilitychange', this._visibilityChangeHandler, false);\n\t\t\tdocument.removeEventListener('msvisibilitychange', this._visibilityChangeHandler, false);\n\t\t\tdocument.removeEventListener('webkitvisibilitychange', this._visibilityChangeHandler, false);\n\t\t\tthis._visibilityChangeHandler = null;\n\t\t\tthis.onVisibilityChange = null;\n\t\t\tthis.root.destroy();\n\t\t\tthis.root = null;\n\n\t\t\tif (this.mouse) {\n\t\t\t\tthis.mouse.off();\n\t\t\t\tthis.mouse.detach();\n\t\t\t\tthis.mouse = null;\n\t\t\t}\n\n\t\t\tif (this.keyboard) {\n\t\t\t\tthis.keyboard.off();\n\t\t\t\tthis.keyboard.detach();\n\t\t\t\tthis.keyboard = null;\n\t\t\t}\n\n\t\t\tif (this.touch) {\n\t\t\t\tthis.touch.off();\n\t\t\t\tthis.touch.detach();\n\t\t\t\tthis.touch = null;\n\t\t\t}\n\n\t\t\tif (this.elementInput) {\n\t\t\t\tthis.elementInput.detach();\n\t\t\t\tthis.elementInput = null;\n\t\t\t}\n\n\t\t\tif (this.controller) {\n\t\t\t\tthis.controller = null;\n\t\t\t}\n\n\t\t\tvar systems = this.systems.list;\n\n\t\t\tfor (i = 0, l = systems.length; i < l; i++) {\n\t\t\t\tsystems[i].destroy();\n\t\t\t}\n\n\t\t\tComponentSystem.destroy();\n\t\t\tvar assets = this.assets.list();\n\n\t\t\tfor (i = 0; i < assets.length; i++) {\n\t\t\t\tassets[i].unload();\n\t\t\t\tassets[i].off();\n\t\t\t}\n\n\t\t\tthis.assets.off();\n\t\t\tthis.bundles.destroy();\n\t\t\tthis.bundles = null;\n\t\t\tthis.i18n.destroy();\n\t\t\tthis.i18n = null;\n\n\t\t\tfor (var key in this.loader.getHandler('script')._cache) {\n\t\t\t\tvar element = this.loader.getHandler('script')._cache[key];\n\n\t\t\t\tvar parent = element.parentNode;\n\t\t\t\tif (parent) parent.removeChild(element);\n\t\t\t}\n\n\t\t\tthis.loader.getHandler('script')._cache = {};\n\t\t\tthis.loader.destroy();\n\t\t\tthis.loader = null;\n\t\t\tthis.scene.destroy();\n\t\t\tthis.scene = null;\n\t\t\tthis.systems = [];\n\t\t\tthis.context = null;\n\t\t\tthis.scripts.destroy();\n\t\t\tthis.scripts = null;\n\t\t\tthis.scenes.destroy();\n\t\t\tthis.scenes = null;\n\t\t\tthis.lightmapper.destroy();\n\t\t\tthis.lightmapper = null;\n\t\t\tthis.batcher.destroyManager();\n\t\t\tthis.batcher = null;\n\t\t\tthis._entityIndex = {};\n\t\t\tthis.defaultLayerDepth.onPreRenderOpaque = null;\n\t\t\tthis.defaultLayerDepth.onPostRenderOpaque = null;\n\t\t\tthis.defaultLayerDepth.onDisable = null;\n\t\t\tthis.defaultLayerDepth.onEnable = null;\n\t\t\tthis.defaultLayerDepth = null;\n\t\t\tthis.defaultLayerWorld = null;\n\t\t\tdestroyPostEffectQuad();\n\n\t\t\tif (this.vr) {\n\t\t\t\tthis.vr.destroy();\n\t\t\t\tthis.vr = null;\n\t\t\t}\n\n\t\t\tthis.xr.end();\n\t\t\tthis.graphicsDevice.destroy();\n\t\t\tthis.graphicsDevice = null;\n\t\t\tthis.renderer = null;\n\t\t\tthis.tick = null;\n\t\t\tthis.off();\n\n\t\t\tif (this._soundManager) {\n\t\t\t\tthis._soundManager.destroy();\n\n\t\t\t\tthis._soundManager = null;\n\t\t\t}\n\n\t\t\tscript.app = null;\n\t\t\tParticleEmitter.DEFAULT_PARAM_TEXTURE = null;\n\t\t\tApplication._applications[canvasId] = null;\n\n\t\t\tif (Application._currentApplication === this) {\n\t\t\t\tApplication._currentApplication = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto2.getEntityFromIndex = function getEntityFromIndex(guid) {\n\t\t\treturn this._entityIndex[guid];\n\t\t};\n\n\t\t_createClass(Application, [{\n\t\t\tkey: \"fillMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._fillMode;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"resolutionMode\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._resolutionMode;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Application;\n\t}(EventHandler);\n\n\tApplication._currentApplication = null;\n\tApplication._applications = {};\n\tvar _frameEndData = {};\n\n\tvar makeTick = function makeTick(_app) {\n\t\tvar application = _app;\n\t\tvar frameRequest;\n\t\treturn function (timestamp, frame) {\n\t\t\tif (!application.graphicsDevice) return;\n\t\t\tApplication._currentApplication = application;\n\n\t\t\tif (frameRequest) {\n\t\t\t\twindow.cancelAnimationFrame(frameRequest);\n\t\t\t\tframeRequest = null;\n\t\t\t}\n\n\t\t\texports.app = application;\n\t\t\tvar currentTime = application._processTimestamp(timestamp) || now();\n\t\t\tvar ms = currentTime - (application._time || currentTime);\n\t\t\tvar dt = ms / 1000.0;\n\t\t\tdt = math.clamp(dt, 0, application.maxDeltaTime);\n\t\t\tdt *= application.timeScale;\n\t\t\tapplication._time = currentTime;\n\n\t\t\tif (application.vr && application.vr.display) {\n\t\t\t\tframeRequest = application.vr.display.requestAnimationFrame(application.tick);\n\t\t\t} else if (application.xr.session) {\n\t\t\t\tframeRequest = application.xr.session.requestAnimationFrame(application.tick);\n\t\t\t} else {\n\t\t\t\tframeRequest = window.requestAnimationFrame(application.tick);\n\t\t\t}\n\n\t\t\tif (application.graphicsDevice.contextLost) return;\n\n\t\t\tapplication._fillFrameStatsBasic(currentTime, dt, ms);\n\n\t\t\tapplication.fire(\"frameupdate\", ms);\n\n\t\t\tif (frame) {\n\t\t\t\tapplication.xr.update(frame);\n\t\t\t\tapplication.graphicsDevice.defaultFramebuffer = frame.session.renderState.baseLayer.framebuffer;\n\t\t\t} else {\n\t\t\t\tapplication.graphicsDevice.defaultFramebuffer = null;\n\t\t\t}\n\n\t\t\tapplication.update(dt);\n\t\t\tapplication.fire(\"framerender\");\n\n\t\t\tif (application.autoRender || application.renderNextFrame) {\n\t\t\t\tapplication.render();\n\t\t\t\tapplication.renderNextFrame = false;\n\t\t\t}\n\n\t\t\t_frameEndData.timestamp = now();\n\t\t\t_frameEndData.target = application;\n\t\t\tapplication.fire(\"frameend\", _frameEndData);\n\t\t\tapplication.fire(\"frameEnd\", _frameEndData);\n\n\t\t\tif (application.vr && application.vr.display && application.vr.display.presenting) {\n\t\t\t\tapplication.vr.display.submitFrame();\n\t\t\t}\n\t\t};\n\t};\n\n\tvar _propsSerial = [];\n\tvar _propsSerialDefaultVal = [];\n\tvar _propsInternalNull = [];\n\tvar _propsInternalVec3 = [];\n\tvar _prop2Uniform = {};\n\tvar _propsColor = [];\n\n\tvar Chunks = function () {\n\t\tfunction Chunks() {}\n\n\t\tvar _proto = Chunks.prototype;\n\n\t\t_proto.copy = function copy(from) {\n\t\t\tfor (var p in from) {\n\t\t\t\tif (from.hasOwnProperty(p) && p !== 'copy') this[p] = from[p];\n\t\t\t}\n\t\t};\n\n\t\treturn Chunks;\n\t}();\n\n\tvar StandardMaterial = function (_Material) {\n\t\t_inheritsLoose(StandardMaterial, _Material);\n\n\t\tfunction StandardMaterial() {\n\t\t\tvar _this;\n\n\t\t\t_this = _Material.call(this) || this;\n\t\t\t_this._assetReferences = {};\n\t\t\t_this._validator = null;\n\t\t\t_this.shaderOptBuilder = new StandardMaterialOptionsBuilder();\n\n\t\t\t_this.reset();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto2 = StandardMaterial.prototype;\n\n\t\t_proto2.reset = function reset() {\n\t\t\tfor (var i = 0; i < _propsSerial.length; i++) {\n\t\t\t\tvar defVal = _propsSerialDefaultVal[i];\n\t\t\t\tthis[_propsSerial[i]] = defVal ? defVal.clone ? defVal.clone() : defVal : defVal;\n\t\t\t}\n\n\t\t\tfor (var _i = 0; _i < _propsInternalNull.length; _i++) {\n\t\t\t\tthis[_propsInternalNull[_i]] = null;\n\t\t\t}\n\n\t\t\tfor (var _i2 = 0; _i2 < _propsInternalVec3.length; _i2++) {\n\t\t\t\tthis[_propsInternalVec3[_i2]] = new Float32Array(3);\n\t\t\t}\n\n\t\t\tthis._chunks = new Chunks();\n\t\t\tthis.cubeMapMinUniform = new Float32Array(3);\n\t\t\tthis.cubeMapMaxUniform = new Float32Array(3);\n\t\t};\n\n\t\t_proto2.clone = function clone() {\n\t\t\tvar clone = new StandardMaterial();\n\n\t\t\tthis._cloneInternal(clone);\n\n\t\t\tfor (var i = 0; i < _propsSerial.length; i++) {\n\t\t\t\tvar pname = _propsSerial[i];\n\n\t\t\t\tif (this[pname] !== undefined) {\n\t\t\t\t\tif (this[pname] && this[pname].copy) {\n\t\t\t\t\t\tif (clone[pname]) {\n\t\t\t\t\t\t\tclone[pname].copy(this[pname]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone[pname] = this[pname].clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone[pname] = this[pname];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto2._updateMapTransform = function _updateMapTransform(transform, tiling, offset) {\n\t\t\tif (tiling.x === 1 && tiling.y === 1 && offset.x === 0 && offset.y === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ttransform = transform || new Vec4();\n\t\t\ttransform.set(tiling.x, tiling.y, offset.x, offset.y);\n\t\t\treturn transform;\n\t\t};\n\n\t\t_proto2._setParameter = function _setParameter(name, value) {\n\t\t\tif (!this.parameters[name]) this._propsSet.push(name);\n\t\t\tthis.setParameter(name, value);\n\t\t};\n\n\t\t_proto2._clearParameters = function _clearParameters() {\n\t\t\tvar props = this._propsSet;\n\n\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\tdelete this.parameters[props[i]];\n\t\t\t}\n\n\t\t\tthis._propsSet = [];\n\t\t};\n\n\t\t_proto2._updateMap = function _updateMap(p) {\n\t\t\tvar mname = p + \"Map\";\n\t\t\tvar map = this[mname];\n\n\t\t\tif (map) {\n\t\t\t\tthis._setParameter(\"texture_\" + mname, map);\n\n\t\t\t\tvar tname = mname + \"Transform\";\n\t\t\t\tthis[tname] = this._updateMapTransform(this[tname], this[mname + \"Tiling\"], this[mname + \"Offset\"]);\n\t\t\t\tvar transform = this[tname];\n\n\t\t\t\tif (transform) {\n\t\t\t\t\tvar uname = mname + \"TransformUniform\";\n\t\t\t\t\tvar uniform = this[uname];\n\n\t\t\t\t\tif (!uniform) {\n\t\t\t\t\t\tuniform = new Float32Array(4);\n\t\t\t\t\t\tthis[uname] = uniform;\n\t\t\t\t\t}\n\n\t\t\t\t\tuniform[0] = transform.x;\n\t\t\t\t\tuniform[1] = transform.y;\n\t\t\t\t\tuniform[2] = transform.z;\n\t\t\t\t\tuniform[3] = transform.w;\n\n\t\t\t\t\tthis._setParameter('texture_' + tname, uniform);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2.getUniform = function getUniform(varName, value, changeMat) {\n\t\t\tvar func = _prop2Uniform[varName];\n\n\t\t\tif (func) {\n\t\t\t\treturn func(this, value, changeMat);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t_proto2.updateUniforms = function updateUniforms() {\n\t\t\tthis._clearParameters();\n\n\t\t\tthis._setParameter('material_ambient', this.ambientUniform);\n\n\t\t\tif (!this.diffuseMap || this.diffuseTint) {\n\t\t\t\tthis._setParameter('material_diffuse', this.diffuseUniform);\n\t\t\t}\n\n\t\t\tif (!this.useMetalness) {\n\t\t\t\tif (!this.specularMap || this.specularTint) {\n\t\t\t\t\tthis._setParameter('material_specular', this.specularUniform);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.metalnessMap || this.metalness < 1) {\n\t\t\t\t\tthis._setParameter('material_metalness', this.metalness);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.enableGGXSpecular) {\n\t\t\t\tthis._setParameter('material_anisotropy', this.anisotropy);\n\t\t\t}\n\n\t\t\tif (this.clearCoat > 0) {\n\t\t\t\tthis._setParameter('material_clearCoat', this.clearCoat);\n\n\t\t\t\tthis._setParameter('material_clearCoatGlossiness', this.clearCoatGlossiness);\n\n\t\t\t\tthis._setParameter('material_clearCoatReflectivity', this.clearCoat);\n\n\t\t\t\tthis._setParameter('material_clearCoatBumpiness', this.clearCoatBumpiness);\n\t\t\t}\n\n\t\t\tvar uniform = this.getUniform(\"shininess\", this.shininess, true);\n\n\t\t\tthis._setParameter(uniform.name, uniform.value);\n\n\t\t\tif (!this.emissiveMap || this.emissiveTint) {\n\t\t\t\tthis._setParameter('material_emissive', this.emissiveUniform);\n\t\t\t}\n\n\t\t\tif (this.emissiveMap) {\n\t\t\t\tthis._setParameter('material_emissiveIntensity', this.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (this.refraction > 0) {\n\t\t\t\tthis._setParameter('material_refraction', this.refraction);\n\n\t\t\t\tthis._setParameter('material_refractionIndex', this.refractionIndex);\n\t\t\t}\n\n\t\t\tthis._setParameter('material_opacity', this.opacity);\n\n\t\t\tif (this.opacityFadesSpecular === false) {\n\t\t\t\tthis._setParameter('material_alphaFade', this.alphaFade);\n\t\t\t}\n\n\t\t\tif (this.occludeSpecular) {\n\t\t\t\tthis._setParameter('material_occludeSpecularIntensity', this.occludeSpecularIntensity);\n\t\t\t}\n\n\t\t\tif (this.cubeMapProjection === CUBEPROJ_BOX) {\n\t\t\t\tthis._setParameter(this.getUniform(\"cubeMapProjectionBox\", this.cubeMapProjectionBox, true));\n\t\t\t}\n\n\t\t\tfor (var p in _matTex2D) {\n\t\t\t\tthis._updateMap(p);\n\t\t\t}\n\n\t\t\tif (this.ambientSH) {\n\t\t\t\tthis._setParameter('ambientSH[0]', this.ambientSH);\n\t\t\t}\n\n\t\t\tif (this.normalMap) {\n\t\t\t\tthis._setParameter('material_bumpiness', this.bumpiness);\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalDetailMap) {\n\t\t\t\tthis._setParameter('material_normalDetailMapBumpiness', this.normalDetailMapBumpiness);\n\t\t\t}\n\n\t\t\tif (this.heightMap) {\n\t\t\t\tuniform = this.getUniform('heightMapFactor', this.heightMapFactor, true);\n\n\t\t\t\tthis._setParameter(uniform.name, uniform.value);\n\t\t\t}\n\n\t\t\tif (this.cubeMap) {\n\t\t\t\tthis._setParameter('texture_cubeMap', this.cubeMap);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap128) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap128', this.prefilteredCubeMap128);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[0]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap128', this._scene._skyboxPrefiltered[0]);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap64) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap64', this.prefilteredCubeMap64);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[1]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap64', this._scene._skyboxPrefiltered[1]);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap32) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap32', this.prefilteredCubeMap32);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[2]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap32', this._scene._skyboxPrefiltered[2]);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap16) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap16', this.prefilteredCubeMap16);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[3]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap16', this._scene._skyboxPrefiltered[3]);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap8) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap8', this.prefilteredCubeMap8);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[4]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap8', this._scene._skyboxPrefiltered[4]);\n\t\t\t}\n\n\t\t\tif (this.prefilteredCubeMap4) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap4', this.prefilteredCubeMap4);\n\t\t\t} else if (this._scene && this._scene._skyboxPrefiltered[5]) {\n\t\t\t\tthis._setParameter('texture_prefilteredCubeMap4', this._scene._skyboxPrefiltered[5]);\n\t\t\t}\n\n\t\t\tif (this.sphereMap) {\n\t\t\t\tthis._setParameter('texture_sphereMap', this.sphereMap);\n\t\t\t}\n\n\t\t\tif (this.dpAtlas) {\n\t\t\t\tthis._setParameter('texture_sphereMap', this.dpAtlas);\n\t\t\t}\n\n\t\t\tthis._setParameter('material_reflectivity', this.reflectivity);\n\n\t\t\tif (this.dirtyShader || !this._scene) {\n\t\t\t\tthis.shader = null;\n\t\t\t\tthis.clearVariants();\n\t\t\t}\n\n\t\t\tthis._processColor();\n\t\t};\n\n\t\t_proto2._processColor = function _processColor() {\n\t\t\tif (!this.dirtyColor) return;\n\t\t\tif (!this._scene && this.useGammaTonemap) return;\n\t\t\tvar gammaCorrection = false;\n\t\t\tif (this.useGammaTonemap) gammaCorrection = this._scene.gammaCorrection;\n\n\t\t\tfor (var i = 0; i < _propsColor.length; i++) {\n\t\t\t\tvar clr = this[\"_\" + _propsColor[i]];\n\t\t\t\tvar arr = this[_propsColor[i] + \"Uniform\"];\n\n\t\t\t\tif (gammaCorrection) {\n\t\t\t\t\tarr[0] = Math.pow(clr.r, 2.2);\n\t\t\t\t\tarr[1] = Math.pow(clr.g, 2.2);\n\t\t\t\t\tarr[2] = Math.pow(clr.b, 2.2);\n\t\t\t\t} else {\n\t\t\t\t\tarr[0] = clr.r;\n\t\t\t\t\tarr[1] = clr.g;\n\t\t\t\t\tarr[2] = clr.b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var c = 0; c < 3; c++) {\n\t\t\t\tthis.emissiveUniform[c] *= this.emissiveIntensity;\n\t\t\t}\n\n\t\t\tthis.dirtyColor = false;\n\t\t};\n\n\t\t_proto2.updateShader = function updateShader(device, scene, objDefs, staticLightList, pass, sortedLights) {\n\t\t\tif (!this._colorProcessed && this._scene) {\n\t\t\t\tthis._colorProcessed = true;\n\n\t\t\t\tthis._processColor();\n\t\t\t}\n\n\t\t\tvar useTexCubeLod = device.useTexCubeLod;\n\t\t\tvar useDp = !device.extTextureLod;\n\t\t\tvar globalSky128, globalSky64, globalSky32, globalSky16, globalSky8, globalSky4;\n\n\t\t\tif (this.useSkybox) {\n\t\t\t\tglobalSky128 = scene._skyboxPrefiltered[0];\n\t\t\t\tglobalSky64 = scene._skyboxPrefiltered[1];\n\t\t\t\tglobalSky32 = scene._skyboxPrefiltered[2];\n\t\t\t\tglobalSky16 = scene._skyboxPrefiltered[3];\n\t\t\t\tglobalSky8 = scene._skyboxPrefiltered[4];\n\t\t\t\tglobalSky4 = scene._skyboxPrefiltered[5];\n\t\t\t}\n\n\t\t\tvar prefilteredCubeMap128 = this.prefilteredCubeMap128 || globalSky128;\n\t\t\tvar prefilteredCubeMap64 = this.prefilteredCubeMap64 || globalSky64;\n\t\t\tvar prefilteredCubeMap32 = this.prefilteredCubeMap32 || globalSky32;\n\t\t\tvar prefilteredCubeMap16 = this.prefilteredCubeMap16 || globalSky16;\n\t\t\tvar prefilteredCubeMap8 = this.prefilteredCubeMap8 || globalSky8;\n\t\t\tvar prefilteredCubeMap4 = this.prefilteredCubeMap4 || globalSky4;\n\n\t\t\tif (prefilteredCubeMap128) {\n\t\t\t\tvar allMips = prefilteredCubeMap128 && prefilteredCubeMap64 && prefilteredCubeMap32 && prefilteredCubeMap16 && prefilteredCubeMap8 && prefilteredCubeMap4;\n\n\t\t\t\tif (useDp && allMips) {\n\t\t\t\t\tif (!prefilteredCubeMap128.dpAtlas) {\n\t\t\t\t\t\tvar atlas = [prefilteredCubeMap128, prefilteredCubeMap64, prefilteredCubeMap32, prefilteredCubeMap16, prefilteredCubeMap8, prefilteredCubeMap4];\n\t\t\t\t\t\tprefilteredCubeMap128.dpAtlas = generateDpAtlas(device, atlas);\n\t\t\t\t\t\tprefilteredCubeMap128.sh = shFromCubemap(device, prefilteredCubeMap16);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dpAtlas = prefilteredCubeMap128.dpAtlas;\n\t\t\t\t\tthis.ambientSH = prefilteredCubeMap128.sh;\n\n\t\t\t\t\tthis._setParameter('ambientSH[0]', this.ambientSH);\n\n\t\t\t\t\tthis._setParameter('texture_sphereMap', this.dpAtlas);\n\t\t\t\t} else if (useTexCubeLod) {\n\t\t\t\t\tif (prefilteredCubeMap128._levels.length < 6) {\n\t\t\t\t\t\tif (allMips) {\n\t\t\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap128', prefilteredCubeMap128);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"Can't use prefiltered cubemap: \" + allMips + \", \" + useTexCubeLod + \", \" + prefilteredCubeMap128._levels);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap128', prefilteredCubeMap128);\n\t\t\t\t\t}\n\t\t\t\t} else if (allMips) {\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap128', prefilteredCubeMap128);\n\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap64', prefilteredCubeMap64);\n\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap32', prefilteredCubeMap32);\n\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap16', prefilteredCubeMap16);\n\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap8', prefilteredCubeMap8);\n\n\t\t\t\t\tthis._setParameter('texture_prefilteredCubeMap4', prefilteredCubeMap4);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Can't use prefiltered cubemap: \" + allMips + \", \" + useTexCubeLod + \", \" + prefilteredCubeMap128._levels);\n\t\t\t\t}\n\n\t\t\t\tif (this.useSkybox && !scene.skyboxRotation.equals(Quat.IDENTITY) && scene._skyboxRotationMat3) {\n\t\t\t\t\tthis._setParameter('cubeMapRotationMatrix', scene._skyboxRotationMat3.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar minimalOptions = pass > SHADER_FORWARDHDR && pass <= SHADER_PICK;\n\t\t\tvar options = minimalOptions ? standard.optionsContextMin : standard.optionsContext;\n\t\t\tif (minimalOptions) this.shaderOptBuilder.updateMinRef(options, device, scene, this, objDefs, staticLightList, pass, sortedLights, prefilteredCubeMap128);else this.shaderOptBuilder.updateRef(options, device, scene, this, objDefs, staticLightList, pass, sortedLights, prefilteredCubeMap128);\n\n\t\t\tif (this.onUpdateShader) {\n\t\t\t\toptions = this.onUpdateShader(options);\n\t\t\t}\n\n\t\t\tvar library = device.getProgramLibrary();\n\t\t\tthis.shader = library.getProgram('standard', options);\n\n\t\t\tif (!objDefs) {\n\t\t\t\tthis.clearVariants();\n\t\t\t\tthis.variants[0] = this.shader;\n\t\t\t}\n\n\t\t\tthis.dirtyShader = false;\n\t\t};\n\n\t\treturn StandardMaterial;\n\t}(Material);\n\n\tStandardMaterial.TEXTURE_PARAMETERS = standardMaterialTextureParameters;\n\tStandardMaterial.CUBEMAP_PARAMETERS = standardMaterialCubemapParameters;\n\n\tfunction _defineTex2D(obj, name, uv, channels, defChannel, vertexColor, detailMode) {\n\t\tvar privMap = \"_\" + name + \"Map\";\n\t\tvar privMapTiling = privMap + \"Tiling\";\n\t\tvar privMapOffset = privMap + \"Offset\";\n\t\tvar mapTransform = privMap.substring(1) + \"Transform\";\n\t\tvar mapTransformUniform = mapTransform + \"Uniform\";\n\t\tvar privMapUv = privMap + \"Uv\";\n\t\tvar privMapChannel = privMap + \"Channel\";\n\t\tvar privMapVertexColor = \"_\" + name + \"VertexColor\";\n\t\tvar privMapVertexColorChannel = \"_\" + name + \"VertexColorChannel\";\n\t\tvar privMapDetailMode = \"_\" + name + \"Mode\";\n\t\tobj[privMap] = null;\n\t\tobj[privMapTiling] = new Vec2(1, 1);\n\t\tobj[privMapOffset] = new Vec2(0, 0);\n\t\tobj[mapTransform] = null;\n\t\tobj[mapTransformUniform] = null;\n\t\tobj[privMapUv] = uv;\n\n\t\tif (channels > 0) {\n\t\t\tvar channel = defChannel ? defChannel : channels > 1 ? \"rgb\" : \"g\";\n\t\t\tobj[privMapChannel] = channel;\n\t\t\tif (vertexColor) obj[privMapVertexColorChannel] = channel;\n\t\t}\n\n\t\tif (vertexColor) obj[privMapVertexColor] = false;\n\t\tif (detailMode) obj[privMapDetailMode] = DETAILMODE_MUL;\n\t\t_matTex2D[name] = channels;\n\t\tObject.defineProperty(StandardMaterial.prototype, privMap.substring(1), {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privMap];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar oldVal = this[privMap];\n\t\t\t\tif (!!oldVal ^ !!value) this.dirtyShader = true;\n\n\t\t\t\tif (oldVal && value) {\n\t\t\t\t\tif (oldVal.type !== value.type || oldVal.fixCubemapSeams !== value.fixCubemapSeams || oldVal.format !== value.format) {\n\t\t\t\t\t\tthis.dirtyShader = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis[privMap] = value;\n\t\t\t}\n\t\t});\n\t\tvar mapTiling = privMapTiling.substring(1);\n\t\tvar mapOffset = privMapOffset.substring(1);\n\t\tObject.defineProperty(StandardMaterial.prototype, mapTiling, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privMapTiling];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.dirtyShader = true;\n\t\t\t\tthis[privMapTiling] = value;\n\t\t\t}\n\t\t});\n\n\t\t_prop2Uniform[mapTiling] = function (mat, val, changeMat) {\n\t\t\tvar tform = mat._updateMapTransform(changeMat ? mat[mapTransform] : null, val, mat[privMapOffset]);\n\n\t\t\treturn {\n\t\t\t\tname: \"texture_\" + mapTransform,\n\t\t\t\tvalue: tform.data\n\t\t\t};\n\t\t};\n\n\t\tObject.defineProperty(StandardMaterial.prototype, mapOffset, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privMapOffset];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.dirtyShader = true;\n\t\t\t\tthis[privMapOffset] = value;\n\t\t\t}\n\t\t});\n\n\t\t_prop2Uniform[mapOffset] = function (mat, val, changeMat) {\n\t\t\tvar tform = mat._updateMapTransform(changeMat ? mat[mapTransform] : null, mat[privMapTiling], val);\n\n\t\t\treturn {\n\t\t\t\tname: \"texture_\" + mapTransform,\n\t\t\t\tvalue: tform.data\n\t\t\t};\n\t\t};\n\n\t\tObject.defineProperty(StandardMaterial.prototype, privMapUv.substring(1), {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privMapUv];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[privMapUv] !== value) this.dirtyShader = true;\n\t\t\t\tthis[privMapUv] = value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(StandardMaterial.prototype, privMapChannel.substring(1), {\n\t\t\tget: function get() {\n\t\t\t\treturn this[privMapChannel];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[privMapChannel] !== value) this.dirtyShader = true;\n\t\t\t\tthis[privMapChannel] = value;\n\t\t\t}\n\t\t});\n\n\t\tif (vertexColor) {\n\t\t\tObject.defineProperty(StandardMaterial.prototype, privMapVertexColor.substring(1), {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this[privMapVertexColor];\n\t\t\t\t},\n\t\t\t\tset: function set(value) {\n\t\t\t\t\tthis.dirtyShader = true;\n\t\t\t\t\tthis[privMapVertexColor] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(StandardMaterial.prototype, privMapVertexColorChannel.substring(1), {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this[privMapVertexColorChannel];\n\t\t\t\t},\n\t\t\t\tset: function set(value) {\n\t\t\t\t\tif (this[privMapVertexColorChannel] !== value) this.dirtyShader = true;\n\t\t\t\t\tthis[privMapVertexColorChannel] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (detailMode) {\n\t\t\tObject.defineProperty(StandardMaterial.prototype, privMapDetailMode.substring(1), {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this[privMapDetailMode];\n\t\t\t\t},\n\t\t\t\tset: function set(value) {\n\t\t\t\t\tthis.dirtyShader = true;\n\t\t\t\t\tthis[privMapDetailMode] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_propsSerial.push(privMap.substring(1));\n\n\t\t_propsSerial.push(privMapTiling.substring(1));\n\n\t\t_propsSerial.push(privMapOffset.substring(1));\n\n\t\t_propsSerial.push(privMapUv.substring(1));\n\n\t\t_propsSerial.push(privMapChannel.substring(1));\n\n\t\tif (vertexColor) {\n\t\t\t_propsSerial.push(privMapVertexColor.substring(1));\n\n\t\t\t_propsSerial.push(privMapVertexColorChannel.substring(1));\n\t\t}\n\n\t\tif (detailMode) {\n\t\t\t_propsSerial.push(privMapDetailMode.substring(1));\n\t\t}\n\n\t\t_propsInternalNull.push(mapTransform);\n\t}\n\n\tfunction _defineColor(obj, name, defaultValue, hasMultiplier) {\n\t\tvar priv = \"_\" + name;\n\t\tvar uform = name + \"Uniform\";\n\t\tvar mult = name + \"Intensity\";\n\t\tvar pmult = \"_\" + mult;\n\t\tobj[priv] = defaultValue;\n\t\tobj[uform] = new Float32Array(3);\n\t\tObject.defineProperty(StandardMaterial.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\tthis.dirtyColor = true;\n\t\t\t\tthis.dirtyShader = true;\n\t\t\t\treturn this[priv];\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tvar oldValue = this[priv];\n\t\t\t\tvar wasRound = oldValue.r === 0 && oldValue.g === 0 && oldValue.b === 0 || oldValue.r === 1 && oldValue.g === 1 && oldValue.b === 1;\n\t\t\t\tvar isRound = newValue.r === 0 && newValue.g === 0 && newValue.b === 0 || newValue.r === 1 && newValue.g === 1 && newValue.b === 1;\n\t\t\t\tif (wasRound ^ isRound) this.dirtyShader = true;\n\t\t\t\tthis.dirtyColor = true;\n\t\t\t\tthis[priv] = newValue;\n\t\t\t}\n\t\t});\n\n\t\t_propsSerial.push(name);\n\n\t\t_propsInternalVec3.push(uform);\n\n\t\t_propsColor.push(name);\n\n\t\t_prop2Uniform[name] = function (mat, val, changeMat) {\n\t\t\tvar arr = changeMat ? mat[uform] : new Float32Array(3);\n\t\t\tvar gammaCorrection = false;\n\n\t\t\tif (mat.useGammaTonemap) {\n\t\t\t\tvar scene = mat._scene || Application.getApplication().scene;\n\t\t\t\tgammaCorrection = scene.gammaCorrection;\n\t\t\t}\n\n\t\t\tfor (var c = 0; c < 3; c++) {\n\t\t\t\tif (gammaCorrection) {\n\t\t\t\t\tarr[c] = Math.pow(val.data[c], 2.2);\n\t\t\t\t} else {\n\t\t\t\t\tarr[c] = val.data[c];\n\t\t\t\t}\n\n\t\t\t\tif (hasMultiplier) arr[c] *= mat[pmult];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: \"material_\" + name,\n\t\t\t\tvalue: arr\n\t\t\t};\n\t\t};\n\n\t\tif (hasMultiplier) {\n\t\t\tobj[pmult] = 1;\n\t\t\tObject.defineProperty(StandardMaterial.prototype, mult, {\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this[pmult];\n\t\t\t\t},\n\t\t\t\tset: function set(newValue) {\n\t\t\t\t\tvar oldValue = this[pmult];\n\t\t\t\t\tvar wasRound = oldValue === 0 || oldValue === 1;\n\t\t\t\t\tvar isRound = newValue === 0 || newValue === 1;\n\t\t\t\t\tif (wasRound ^ isRound) this.dirtyShader = true;\n\t\t\t\t\tthis.dirtyColor = true;\n\t\t\t\t\tthis[pmult] = newValue;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_propsSerial.push(mult);\n\n\t\t\t_prop2Uniform[mult] = function (mat, val, changeMat) {\n\t\t\t\tvar arr = changeMat ? mat[uform] : new Float32Array(3);\n\t\t\t\tvar gammaCorrection = false;\n\n\t\t\t\tif (mat.useGammaTonemap) {\n\t\t\t\t\tvar scene = mat._scene || Application.getApplication().scene;\n\t\t\t\t\tgammaCorrection = scene.gammaCorrection;\n\t\t\t\t}\n\n\t\t\t\tfor (var c = 0; c < 3; c++) {\n\t\t\t\t\tif (gammaCorrection) {\n\t\t\t\t\t\tarr[c] = Math.pow(mat[priv].data[c], 2.2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr[c] = mat[priv].data[c];\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[c] *= mat[pmult];\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tname: \"material_\" + name,\n\t\t\t\t\tvalue: arr\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _defineFloat(obj, name, defaultValue, func) {\n\t\tvar priv = \"_\" + name;\n\t\tobj[priv] = defaultValue;\n\t\tObject.defineProperty(StandardMaterial.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[priv];\n\t\t\t},\n\t\t\tset: function set(newValue) {\n\t\t\t\tvar oldValue = this[priv];\n\t\t\t\tif (oldValue === newValue) return;\n\t\t\t\tthis[priv] = newValue;\n\t\t\t\tvar wasRound = oldValue === 0 || oldValue === 1;\n\t\t\t\tvar isRound = newValue === 0 || newValue === 1;\n\t\t\t\tif (wasRound || isRound) this.dirtyShader = true;\n\t\t\t}\n\t\t});\n\n\t\t_propsSerial.push(name);\n\n\t\t_prop2Uniform[name] = func !== undefined ? func : function (mat, val, changeMat) {\n\t\t\treturn {\n\t\t\t\tname: \"material_\" + name,\n\t\t\t\tvalue: val\n\t\t\t};\n\t\t};\n\t}\n\n\tfunction _defineObject(obj, name, func) {\n\t\tvar priv = \"_\" + name;\n\t\tobj[priv] = null;\n\t\tObject.defineProperty(StandardMaterial.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[priv];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar oldVal = this[priv];\n\t\t\t\tif (!!oldVal ^ !!value) this.dirtyShader = true;\n\t\t\t\tthis[priv] = value;\n\t\t\t}\n\t\t});\n\n\t\t_propsSerial.push(name);\n\n\t\t_prop2Uniform[name] = func;\n\t}\n\n\tfunction _defineAlias(obj, newName, oldName) {\n\t\tObject.defineProperty(StandardMaterial.prototype, oldName, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[newName];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis[newName] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction _defineChunks(obj) {\n\t\tObject.defineProperty(StandardMaterial.prototype, \"chunks\", {\n\t\t\tget: function get() {\n\t\t\t\tthis.dirtyShader = true;\n\t\t\t\treturn this._chunks;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.dirtyShader = true;\n\t\t\t\tthis._chunks = value;\n\t\t\t}\n\t\t});\n\n\t\t_propsSerial.push(\"chunks\");\n\t}\n\n\tfunction _defineFlag(obj, name, defaultValue) {\n\t\tvar priv = \"_\" + name;\n\t\tobj[priv] = defaultValue;\n\t\tObject.defineProperty(StandardMaterial.prototype, name, {\n\t\t\tget: function get() {\n\t\t\t\treturn this[priv];\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tif (this[priv] !== value) this.dirtyShader = true;\n\t\t\t\tthis[priv] = value;\n\t\t\t}\n\t\t});\n\n\t\t_propsSerial.push(name);\n\t}\n\n\tfunction _defineMaterialProps(obj) {\n\t\tobj.dirtyShader = true;\n\t\tobj.dirtyColor = true;\n\t\tobj._scene = null;\n\t\tobj._colorProcessed = false;\n\n\t\t_defineColor(obj, \"ambient\", new Color(0.7, 0.7, 0.7));\n\n\t\t_defineColor(obj, \"diffuse\", new Color(1, 1, 1));\n\n\t\t_defineColor(obj, \"specular\", new Color(0, 0, 0));\n\n\t\t_defineColor(obj, \"emissive\", new Color(0, 0, 0), true);\n\n\t\t_defineFloat(obj, \"shininess\", 25, function (mat, shininess) {\n\t\t\tvar value;\n\n\t\t\tif (mat.shadingModel === SPECULAR_PHONG) {\n\t\t\t\tvalue = Math.pow(2, shininess * 0.01 * 11);\n\t\t\t} else {\n\t\t\t\tvalue = shininess * 0.01;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: \"material_shininess\",\n\t\t\t\tvalue: value\n\t\t\t};\n\t\t});\n\n\t\t_defineFloat(obj, \"heightMapFactor\", 1, function (mat, height) {\n\t\t\treturn {\n\t\t\t\tname: 'material_heightMapFactor',\n\t\t\t\tvalue: height * 0.025\n\t\t\t};\n\t\t});\n\n\t\t_defineFloat(obj, \"opacity\", 1);\n\n\t\t_defineFloat(obj, \"alphaFade\", 1);\n\n\t\t_defineFloat(obj, \"alphaTest\", 0);\n\n\t\t_defineFloat(obj, \"bumpiness\", 1);\n\n\t\t_defineFloat(obj, \"normalDetailMapBumpiness\", 1);\n\n\t\t_defineFloat(obj, \"reflectivity\", 1);\n\n\t\t_defineFloat(obj, \"occludeSpecularIntensity\", 1);\n\n\t\t_defineFloat(obj, \"refraction\", 0);\n\n\t\t_defineFloat(obj, \"refractionIndex\", 1.0 / 1.5);\n\n\t\t_defineFloat(obj, \"metalness\", 1);\n\n\t\t_defineFloat(obj, \"anisotropy\", 0);\n\n\t\t_defineFloat(obj, \"clearCoat\", 0);\n\n\t\t_defineFloat(obj, \"clearCoatGlossiness\", 1);\n\n\t\t_defineFloat(obj, \"clearCoatBumpiness\", 1);\n\n\t\t_defineFloat(obj, \"aoUvSet\", 0, null);\n\n\t\t_defineObject(obj, \"ambientSH\", function (mat, val, changeMat) {\n\t\t\treturn {\n\t\t\t\tname: \"ambientSH[0]\",\n\t\t\t\tvalue: val\n\t\t\t};\n\t\t});\n\n\t\t_defineObject(obj, \"cubeMapProjectionBox\", function (mat, val, changeMat) {\n\t\t\tvar bmin = changeMat ? mat.cubeMapMinUniform : new Float32Array(3);\n\t\t\tvar bmax = changeMat ? mat.cubeMapMaxUniform : new Float32Array(3);\n\t\t\tbmin[0] = val.center.x - val.halfExtents.x;\n\t\t\tbmin[1] = val.center.y - val.halfExtents.y;\n\t\t\tbmin[2] = val.center.z - val.halfExtents.z;\n\t\t\tbmax[0] = val.center.x + val.halfExtents.x;\n\t\t\tbmax[1] = val.center.y + val.halfExtents.y;\n\t\t\tbmax[2] = val.center.z + val.halfExtents.z;\n\t\t\treturn [{\n\t\t\t\tname: \"envBoxMin\",\n\t\t\t\tvalue: bmin\n\t\t\t}, {\n\t\t\t\tname: \"envBoxMax\",\n\t\t\t\tvalue: bmax\n\t\t\t}];\n\t\t});\n\n\t\t_defineChunks();\n\n\t\t_defineFlag(obj, \"ambientTint\", false);\n\n\t\t_defineFlag(obj, \"diffuseTint\", false);\n\n\t\t_defineFlag(obj, \"specularTint\", false);\n\n\t\t_defineFlag(obj, \"emissiveTint\", false);\n\n\t\t_defineFlag(obj, \"fastTbn\", false);\n\n\t\t_defineFlag(obj, \"specularAntialias\", false);\n\n\t\t_defineFlag(obj, \"useMetalness\", false);\n\n\t\t_defineFlag(obj, \"enableGGXSpecular\", false);\n\n\t\t_defineFlag(obj, \"occludeDirect\", false);\n\n\t\t_defineFlag(obj, \"normalizeNormalMap\", true);\n\n\t\t_defineFlag(obj, \"conserveEnergy\", true);\n\n\t\t_defineFlag(obj, \"opacityFadesSpecular\", true);\n\n\t\t_defineFlag(obj, \"occludeSpecular\", SPECOCC_AO);\n\n\t\t_defineFlag(obj, \"shadingModel\", SPECULAR_BLINN);\n\n\t\t_defineFlag(obj, \"fresnelModel\", FRESNEL_NONE);\n\n\t\t_defineFlag(obj, \"cubeMapProjection\", CUBEPROJ_NONE);\n\n\t\t_defineFlag(obj, \"customFragmentShader\", null);\n\n\t\t_defineFlag(obj, \"forceFragmentPrecision\", null);\n\n\t\t_defineFlag(obj, \"useFog\", true);\n\n\t\t_defineFlag(obj, \"useLighting\", true);\n\n\t\t_defineFlag(obj, \"useGammaTonemap\", true);\n\n\t\t_defineFlag(obj, \"useSkybox\", true);\n\n\t\t_defineFlag(obj, \"forceUv1\", false);\n\n\t\t_defineFlag(obj, \"pixelSnap\", false);\n\n\t\t_defineFlag(obj, \"twoSidedLighting\", false);\n\n\t\t_defineFlag(obj, \"nineSlicedMode\", undefined);\n\n\t\t_defineTex2D(obj, \"diffuse\", 0, 3, \"\", true);\n\n\t\t_defineTex2D(obj, \"specular\", 0, 3, \"\", true);\n\n\t\t_defineTex2D(obj, \"emissive\", 0, 3, \"\", true);\n\n\t\t_defineTex2D(obj, \"normal\", 0, -1, \"\", false);\n\n\t\t_defineTex2D(obj, \"metalness\", 0, 1, \"\", true);\n\n\t\t_defineTex2D(obj, \"gloss\", 0, 1, \"\", true);\n\n\t\t_defineTex2D(obj, \"opacity\", 0, 1, \"a\", true);\n\n\t\t_defineTex2D(obj, \"height\", 0, 1, \"\", false);\n\n\t\t_defineTex2D(obj, \"ao\", 0, 1, \"\", true);\n\n\t\t_defineTex2D(obj, \"light\", 1, 3, \"\", true);\n\n\t\t_defineTex2D(obj, \"msdf\", 0, 3, \"\", false);\n\n\t\t_defineTex2D(obj, \"diffuseDetail\", 0, 3, \"\", false, true);\n\n\t\t_defineTex2D(obj, \"normalDetail\", 0, -1, \"\", false);\n\n\t\t_defineTex2D(obj, \"clearCoat\", 0, 1, \"\", true);\n\n\t\t_defineTex2D(obj, \"clearCoatGloss\", 0, 1, \"\", true);\n\n\t\t_defineTex2D(obj, \"clearCoatNormal\", 0, -1, \"\", false);\n\n\t\t_defineObject(obj, \"cubeMap\");\n\n\t\t_defineObject(obj, \"sphereMap\");\n\n\t\t_defineObject(obj, \"dpAtlas\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap128\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap64\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap32\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap16\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap8\");\n\n\t\t_defineObject(obj, \"prefilteredCubeMap4\");\n\n\t\t_defineAlias(obj, \"diffuseTint\", \"diffuseMapTint\");\n\n\t\t_defineAlias(obj, \"specularTint\", \"specularMapTint\");\n\n\t\t_defineAlias(obj, \"emissiveTint\", \"emissiveMapTint\");\n\n\t\t_defineAlias(obj, \"aoVertexColor\", \"aoMapVertexColor\");\n\n\t\t_defineAlias(obj, \"diffuseVertexColor\", \"diffuseMapVertexColor\");\n\n\t\t_defineAlias(obj, \"specularVertexColor\", \"specularMapVertexColor\");\n\n\t\t_defineAlias(obj, \"emissiveVertexColor\", \"emissiveMapVertexColor\");\n\n\t\t_defineAlias(obj, \"metalnessVertexColor\", \"metalnessMapVertexColor\");\n\n\t\t_defineAlias(obj, \"glossVertexColor\", \"glossMapVertexColor\");\n\n\t\t_defineAlias(obj, \"opacityVertexColor\", \"opacityMapVertexColor\");\n\n\t\t_defineAlias(obj, \"lightVertexColor\", \"lightMapVertexColor\");\n\n\t\tfor (var i = 0; i < _propsSerial.length; i++) {\n\t\t\t_propsSerialDefaultVal[i] = obj[_propsSerial[i]];\n\t\t}\n\n\t\tobj._propsSet = [];\n\t}\n\n\t_defineMaterialProps(StandardMaterial.prototype);\n\n\tvar ProgramLibrary = function () {\n\t\tfunction ProgramLibrary(device) {\n\t\t\tthis._device = device;\n\t\t\tthis._cache = {};\n\t\t\tthis._generators = {};\n\t\t\tthis._isClearingCache = false;\n\t\t\tthis._precached = false;\n\t\t\tthis._programsCollection = [];\n\t\t\tthis._defaultStdMatOption = {};\n\t\t\tthis._defaultStdMatOptionMin = {};\n\t\t\tvar m = new StandardMaterial();\n\t\t\tm.shaderOptBuilder.updateRef(this._defaultStdMatOption, device, {}, m, null, [], SHADER_FORWARD, null, null);\n\t\t\tm.shaderOptBuilder.updateMinRef(this._defaultStdMatOptionMin, device, {}, m, null, [], SHADER_SHADOW, null, null);\n\t\t}\n\n\t\tvar _proto = ProgramLibrary.prototype;\n\n\t\t_proto.register = function register(name, generator) {\n\t\t\tif (!this.isRegistered(name)) {\n\t\t\t\tthis._generators[name] = generator;\n\t\t\t}\n\t\t};\n\n\t\t_proto.unregister = function unregister(name) {\n\t\t\tif (this.isRegistered(name)) {\n\t\t\t\tdelete this._generators[name];\n\t\t\t}\n\t\t};\n\n\t\t_proto.isRegistered = function isRegistered(name) {\n\t\t\tvar generator = this._generators[name];\n\t\t\treturn generator !== undefined;\n\t\t};\n\n\t\t_proto.getProgram = function getProgram(name, options) {\n\t\t\tvar generator = this._generators[name];\n\n\t\t\tif (generator === undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar gd = this._device;\n\t\t\tvar key = generator.generateKey(options);\n\t\t\tvar shader = this._cache[key];\n\n\t\t\tif (!shader) {\n\t\t\t\tvar lights;\n\n\t\t\t\tif (options.lights) {\n\t\t\t\t\tlights = options.lights;\n\t\t\t\t\toptions.lights = lights.map(function (l) {\n\t\t\t\t\t\tvar lcopy = l.clone ? l.clone() : l;\n\t\t\t\t\t\tlcopy.key = l.key;\n\t\t\t\t\t\treturn lcopy;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.storeNewProgram(name, options);\n\t\t\t\tif (options.lights) options.lights = lights;\n\t\t\t\tif (this._precached) console.warn(\"ProgramLibrary#getProgram: Cache miss for shader\", name, \"key\", key, \"after shaders precaching\");\n\t\t\t\tvar shaderDefinition = generator.createShaderDefinition(gd, options);\n\t\t\t\tshader = this._cache[key] = new Shader(gd, shaderDefinition);\n\t\t\t}\n\n\t\t\treturn shader;\n\t\t};\n\n\t\t_proto.storeNewProgram = function storeNewProgram(name, options) {\n\t\t\tvar opt = {};\n\n\t\t\tif (name === \"standard\") {\n\t\t\t\tvar defaultMat = this._getDefaultStdMatOptions(options.pass);\n\n\t\t\t\tfor (var p in options) {\n\t\t\t\t\tif (options.hasOwnProperty(p) && defaultMat[p] !== options[p] || p === \"pass\") opt[p] = options[p];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\topt = options;\n\t\t\t}\n\n\t\t\tthis._programsCollection.push(JSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\toptions: opt\n\t\t\t}));\n\t\t};\n\n\t\t_proto.dumpPrograms = function dumpPrograms() {\n\t\t\tvar text = 'var device = pc.app ? pc.app.graphicsDevice : pc.Application.getApplication().graphicsDevice;\\n';\n\t\t\ttext += 'var shaders = [';\n\t\t\tif (this._programsCollection[0]) text += '\\n\\t' + this._programsCollection[0];\n\n\t\t\tfor (var i = 1; i < this._programsCollection.length; ++i) {\n\t\t\t\ttext += ',\\n\\t' + this._programsCollection[i];\n\t\t\t}\n\n\t\t\ttext += '\\n];\\n';\n\t\t\ttext += 'device.programLib.precompile(shaders);\\n';\n\t\t\ttext += 'if (pc.version != \\\"' + version + '\\\" || pc.revision != \\\"' + revision + '\\\")\\n';\n\t\t\ttext += '\\tconsole.warn(\\\"precompile-shaders.js: engine version mismatch, rebuild shaders lib with current engine\\\");';\n\t\t\tvar element = document.createElement('a');\n\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n\t\t\telement.setAttribute('download', 'precompile-shaders.js');\n\t\t\telement.style.display = 'none';\n\t\t\tdocument.body.appendChild(element);\n\t\t\telement.click();\n\t\t\tdocument.body.removeChild(element);\n\t\t};\n\n\t\t_proto.clearCache = function clearCache() {\n\t\t\tvar cache = this._cache;\n\t\t\tthis._isClearingCache = true;\n\n\t\t\tfor (var key in cache) {\n\t\t\t\tif (cache.hasOwnProperty(key)) {\n\t\t\t\t\tcache[key].destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = {};\n\t\t\tthis._isClearingCache = false;\n\t\t};\n\n\t\t_proto.removeFromCache = function removeFromCache(shader) {\n\t\t\tif (this._isClearingCache) return;\n\t\t\tvar cache = this._cache;\n\n\t\t\tfor (var key in cache) {\n\t\t\t\tif (cache.hasOwnProperty(key)) {\n\t\t\t\t\tif (cache[key] === shader) {\n\t\t\t\t\t\tdelete cache[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._getDefaultStdMatOptions = function _getDefaultStdMatOptions(pass) {\n\t\t\treturn pass > SHADER_FORWARDHDR && pass <= SHADER_PICK ? this._defaultStdMatOptionMin : this._defaultStdMatOption;\n\t\t};\n\n\t\t_proto.precompile = function precompile(cache) {\n\t\t\tif (cache) {\n\t\t\t\tvar shaders = new Array(cache.length);\n\n\t\t\t\tfor (var i = 0; i < cache.length; i++) {\n\t\t\t\t\tif (cache[i].name === \"standard\") {\n\t\t\t\t\t\tvar opt = cache[i].options;\n\n\t\t\t\t\t\tvar defaultMat = this._getDefaultStdMatOptions(opt.pass);\n\n\t\t\t\t\t\tfor (var p in defaultMat) {\n\t\t\t\t\t\t\tif (defaultMat.hasOwnProperty(p) && opt[p] === undefined) opt[p] = defaultMat[p];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\topt.useTexCubeLod = this._device.useTexCubeLod;\n\t\t\t\t\t}\n\n\t\t\t\t\tshaders[i] = this.getProgram(cache[i].name, cache[i].options);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._precached = true;\n\t\t};\n\n\t\treturn ProgramLibrary;\n\t}();\n\n\tvar Version = function () {\n\t\tfunction Version() {\n\t\t\tthis.globalId = 0;\n\t\t\tthis.revision = 0;\n\t\t}\n\n\t\tvar _proto = Version.prototype;\n\n\t\t_proto.equals = function equals(other) {\n\t\t\treturn this.globalId === other.globalId && this.revision === other.revision;\n\t\t};\n\n\t\t_proto.copy = function copy(other) {\n\t\t\tthis.globalId = other.globalId;\n\t\t\tthis.revision = other.revision;\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis.globalId = 0;\n\t\t\tthis.revision = 0;\n\t\t};\n\n\t\treturn Version;\n\t}();\n\n\tvar idCounter = 0;\n\n\tvar VersionedObject = function () {\n\t\tfunction VersionedObject() {\n\t\t\tidCounter++;\n\t\t\tthis.version = new Version();\n\t\t\tthis.version.globalId = idCounter;\n\t\t}\n\n\t\tvar _proto = VersionedObject.prototype;\n\n\t\t_proto.increment = function increment() {\n\t\t\tthis.version.revision++;\n\t\t};\n\n\t\treturn VersionedObject;\n\t}();\n\n\tvar ScopeId = function () {\n\t\tfunction ScopeId(name) {\n\t\t\tthis.name = name;\n\t\t\tthis.value = null;\n\t\t\tthis.versionObject = new VersionedObject();\n\t\t}\n\n\t\tvar _proto = ScopeId.prototype;\n\n\t\t_proto.setValue = function setValue(value) {\n\t\t\tthis.value = value;\n\t\t\tthis.versionObject.increment();\n\t\t};\n\n\t\t_proto.getValue = function getValue() {\n\t\t\treturn this.value;\n\t\t};\n\n\t\treturn ScopeId;\n\t}();\n\n\tvar ScopeSpace = function () {\n\t\tfunction ScopeSpace(name) {\n\t\t\tthis.name = name;\n\t\t\tthis.variables = {};\n\t\t\tthis.namespaces = {};\n\t\t}\n\n\t\tvar _proto = ScopeSpace.prototype;\n\n\t\t_proto.resolve = function resolve(name) {\n\t\t\tif (!this.variables.hasOwnProperty(name)) {\n\t\t\t\tthis.variables[name] = new ScopeId(name);\n\t\t\t}\n\n\t\t\treturn this.variables[name];\n\t\t};\n\n\t\t_proto.getSubSpace = function getSubSpace(name) {\n\t\t\tif (!this.namespaces.hasOwnProperty(name)) {\n\t\t\t\tthis.namespaces[name] = new ScopeSpace(name);\n\t\t\t}\n\n\t\t\treturn this.namespaces[name];\n\t\t};\n\n\t\treturn ScopeSpace;\n\t}();\n\n\tvar ShaderInput = function ShaderInput(graphicsDevice, name, type, locationId) {\n\t\tthis.locationId = locationId;\n\t\tthis.scopeId = graphicsDevice.scope.resolve(name);\n\t\tthis.version = new Version();\n\n\t\tif (name.substr(name.length - 3) === \"[0]\") {\n\t\t\tswitch (type) {\n\t\t\t\tcase UNIFORMTYPE_FLOAT:\n\t\t\t\t\ttype = UNIFORMTYPE_FLOATARRAY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UNIFORMTYPE_VEC2:\n\t\t\t\t\ttype = UNIFORMTYPE_VEC2ARRAY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UNIFORMTYPE_VEC3:\n\t\t\t\t\ttype = UNIFORMTYPE_VEC3ARRAY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UNIFORMTYPE_VEC4:\n\t\t\t\t\ttype = UNIFORMTYPE_VEC4ARRAY;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.dataType = type;\n\t\tthis.value = [null, null, null, null];\n\t\tthis.array = [];\n\t};\n\n\tvar EVENT_RESIZE = 'resizecanvas';\n\n\tvar _downsampleImage = function _downsampleImage(image, size) {\n\t\tvar srcW = image.width;\n\t\tvar srcH = image.height;\n\n\t\tif (srcW > size || srcH > size) {\n\t\t\tvar scale = size / Math.max(srcW, srcH);\n\t\t\tvar dstW = Math.floor(srcW * scale);\n\t\t\tvar dstH = Math.floor(srcH * scale);\n\t\t\tconsole.warn('Image dimensions larger than max supported texture size of ' + size + '. ' + 'Resizing from ' + srcW + ', ' + srcH + ' to ' + dstW + ', ' + dstH + '.');\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tcanvas.width = dstW;\n\t\t\tcanvas.height = dstH;\n\t\t\tvar context = canvas.getContext('2d');\n\t\t\tcontext.drawImage(image, 0, 0, srcW, srcH, 0, 0, dstW, dstH);\n\t\t\treturn canvas;\n\t\t}\n\n\t\treturn image;\n\t};\n\n\tfunction testRenderable(gl, pixelFormat) {\n\t\tvar result = true;\n\t\tvar texture = gl.createTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, pixelFormat, null);\n\t\tvar framebuffer = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tresult = false;\n\t\t}\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.deleteTexture(texture);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tgl.deleteFramebuffer(framebuffer);\n\t\treturn result;\n\t}\n\n\tfunction testTextureHalfFloatUpdatable(gl, pixelFormat) {\n\t\tvar result = true;\n\t\tvar texture = gl.createTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tvar data = new Uint16Array(4 * 2 * 2);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, pixelFormat, data);\n\n\t\tif (gl.getError() !== gl.NO_ERROR) {\n\t\t\tresult = false;\n\t\t\tconsole.log(\"Above error related to HALF_FLOAT_OES can be ignored, it was triggered by testing half float texture support\");\n\t\t}\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.deleteTexture(texture);\n\t\treturn result;\n\t}\n\n\tfunction testTextureFloatHighPrecision(device) {\n\t\tif (!device.textureFloatRenderable) return false;\n\t\tvar test1 = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.precisionTestPS, \"ptest1\");\n\t\tvar test2 = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.precisionTest2PS, \"ptest2\");\n\t\tvar textureOptions = {\n\t\t\tformat: PIXELFORMAT_RGBA32F,\n\t\t\twidth: 1,\n\t\t\theight: 1,\n\t\t\tmipmaps: false,\n\t\t\tminFilter: FILTER_NEAREST,\n\t\t\tmagFilter: FILTER_NEAREST\n\t\t};\n\t\tvar tex1 = new Texture(device, textureOptions);\n\t\ttex1.name = 'testFHP';\n\t\tvar targ1 = new RenderTarget(device, tex1, {\n\t\t\tdepth: false\n\t\t});\n\t\tdrawQuadWithShader(device, targ1, test1);\n\t\ttextureOptions.format = PIXELFORMAT_R8_G8_B8_A8;\n\t\tvar tex2 = new Texture(device, textureOptions);\n\t\ttex2.name = 'testFHP';\n\t\tvar targ2 = new RenderTarget(device, tex2, {\n\t\t\tdepth: false\n\t\t});\n\t\tdevice.constantTexSource.setValue(tex1);\n\t\tdrawQuadWithShader(device, targ2, test2);\n\t\tvar prevFramebuffer = device.activeFramebuffer;\n\t\tdevice.setFramebuffer(targ2._glFrameBuffer);\n\t\tvar pixels = new Uint8Array(4);\n\t\tdevice.readPixels(0, 0, 1, 1, pixels);\n\t\tdevice.setFramebuffer(prevFramebuffer);\n\t\tvar x = pixels[0] / 255;\n\t\tvar y = pixels[1] / 255;\n\t\tvar z = pixels[2] / 255;\n\t\tvar w = pixels[3] / 255;\n\t\tvar f = x / (256 * 256 * 256) + y / (256 * 256) + z / 256 + w;\n\t\ttex1.destroy();\n\t\ttarg1.destroy();\n\t\ttex2.destroy();\n\t\ttarg2.destroy();\n\t\treturn f === 0;\n\t}\n\n\tvar GraphicsDevice = function (_EventHandler) {\n\t\t_inheritsLoose(GraphicsDevice, _EventHandler);\n\n\t\tfunction GraphicsDevice(canvas, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\tvar i;\n\t\t\t_this.canvas = canvas;\n\t\t\t_this._enableAutoInstancing = false;\n\t\t\t_this.autoInstancingMaxObjects = 16384;\n\t\t\t_this.defaultFramebuffer = null;\n\t\t\t_this._maxPixelRatio = 1;\n\t\t\t_this._width = 0;\n\t\t\t_this._height = 0;\n\n\t\t\t_this.updateClientRect();\n\n\t\t\t_this.shaders = [];\n\t\t\t_this.buffers = [];\n\t\t\t_this.textures = [];\n\t\t\t_this.targets = [];\n\t\t\t_this.contextLost = false;\n\n\t\t\t_this._contextLostHandler = function (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.contextLost = true;\n\t\t\t\tthis.loseContext();\n\t\t\t\tthis.fire('devicelost');\n\t\t\t}.bind(_assertThisInitialized(_this));\n\n\t\t\t_this._contextRestoredHandler = function () {\n\t\t\t\tthis.restoreContext();\n\t\t\t\tthis.contextLost = false;\n\t\t\t\tthis.fire('devicerestored');\n\t\t\t}.bind(_assertThisInitialized(_this));\n\n\t\t\tvar preferWebGl2 = options && options.preferWebGl2 !== undefined ? options.preferWebGl2 : true;\n\t\t\tvar names = preferWebGl2 ? [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"] : [\"webgl\", \"experimental-webgl\"];\n\t\t\tvar gl = null;\n\t\t\toptions = options || {};\n\t\t\toptions.stencil = true;\n\n\t\t\tfor (i = 0; i < names.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tgl = canvas.getContext(names[i], options);\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (gl) {\n\t\t\t\t\t_this.webgl2 = preferWebGl2 && i < 2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!gl) {\n\t\t\t\tthrow new Error(\"WebGL not supported\");\n\t\t\t}\n\n\t\t\t_this.gl = gl;\n\t\t\t_this._tempEnableSafariTextureUnitWorkaround = !!window.safari;\n\t\t\tvar isChrome = !!window.chrome;\n\t\t\tvar isMac = navigator.appVersion.indexOf(\"Mac\") !== -1;\n\t\t\t_this._tempMacChromeBlitFramebufferWorkaround = isMac && isChrome && !options.alpha;\n\t\t\twindow.setupVertexArrayObject(gl);\n\t\t\tcanvas.addEventListener(\"webglcontextlost\", _this._contextLostHandler, false);\n\t\t\tcanvas.addEventListener(\"webglcontextrestored\", _this._contextRestoredHandler, false);\n\n\t\t\t_this.initializeExtensions();\n\n\t\t\t_this.initializeCapabilities();\n\n\t\t\t_this.initializeRenderState();\n\n\t\t\t_this.initializeContextCaches();\n\n\t\t\t_this.defaultClearOptions = {\n\t\t\t\tcolor: [0, 0, 0, 1],\n\t\t\t\tdepth: 1,\n\t\t\t\tstencil: 0,\n\t\t\t\tflags: CLEARFLAG_COLOR | CLEARFLAG_DEPTH\n\t\t\t};\n\t\t\t_this.glAddress = [gl.REPEAT, gl.CLAMP_TO_EDGE, gl.MIRRORED_REPEAT];\n\t\t\t_this.glBlendEquation = [gl.FUNC_ADD, gl.FUNC_SUBTRACT, gl.FUNC_REVERSE_SUBTRACT, _this.webgl2 ? gl.MIN : _this.extBlendMinmax ? _this.extBlendMinmax.MIN_EXT : gl.FUNC_ADD, _this.webgl2 ? gl.MAX : _this.extBlendMinmax ? _this.extBlendMinmax.MAX_EXT : gl.FUNC_ADD];\n\t\t\t_this.glBlendFunction = [gl.ZERO, gl.ONE, gl.SRC_COLOR, gl.ONE_MINUS_SRC_COLOR, gl.DST_COLOR, gl.ONE_MINUS_DST_COLOR, gl.SRC_ALPHA, gl.SRC_ALPHA_SATURATE, gl.ONE_MINUS_SRC_ALPHA, gl.DST_ALPHA, gl.ONE_MINUS_DST_ALPHA];\n\t\t\t_this.glComparison = [gl.NEVER, gl.LESS, gl.EQUAL, gl.LEQUAL, gl.GREATER, gl.NOTEQUAL, gl.GEQUAL, gl.ALWAYS];\n\t\t\t_this.glStencilOp = [gl.KEEP, gl.ZERO, gl.REPLACE, gl.INCR, gl.INCR_WRAP, gl.DECR, gl.DECR_WRAP, gl.INVERT];\n\t\t\t_this.glClearFlag = [0, gl.COLOR_BUFFER_BIT, gl.DEPTH_BUFFER_BIT, gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, gl.STENCIL_BUFFER_BIT, gl.STENCIL_BUFFER_BIT | gl.COLOR_BUFFER_BIT, gl.STENCIL_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, gl.STENCIL_BUFFER_BIT | gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT];\n\t\t\t_this.glCull = [0, gl.BACK, gl.FRONT, gl.FRONT_AND_BACK];\n\t\t\t_this.glFilter = [gl.NEAREST, gl.LINEAR, gl.NEAREST_MIPMAP_NEAREST, gl.NEAREST_MIPMAP_LINEAR, gl.LINEAR_MIPMAP_NEAREST, gl.LINEAR_MIPMAP_LINEAR];\n\t\t\t_this.glPrimitive = [gl.POINTS, gl.LINES, gl.LINE_LOOP, gl.LINE_STRIP, gl.TRIANGLES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN];\n\t\t\t_this.glType = [gl.BYTE, gl.UNSIGNED_BYTE, gl.SHORT, gl.UNSIGNED_SHORT, gl.INT, gl.UNSIGNED_INT, gl.FLOAT];\n\t\t\t_this.pcUniformType = {};\n\t\t\t_this.pcUniformType[gl.BOOL] = UNIFORMTYPE_BOOL;\n\t\t\t_this.pcUniformType[gl.INT] = UNIFORMTYPE_INT;\n\t\t\t_this.pcUniformType[gl.FLOAT] = UNIFORMTYPE_FLOAT;\n\t\t\t_this.pcUniformType[gl.FLOAT_VEC2] = UNIFORMTYPE_VEC2;\n\t\t\t_this.pcUniformType[gl.FLOAT_VEC3] = UNIFORMTYPE_VEC3;\n\t\t\t_this.pcUniformType[gl.FLOAT_VEC4] = UNIFORMTYPE_VEC4;\n\t\t\t_this.pcUniformType[gl.INT_VEC2] = UNIFORMTYPE_IVEC2;\n\t\t\t_this.pcUniformType[gl.INT_VEC3] = UNIFORMTYPE_IVEC3;\n\t\t\t_this.pcUniformType[gl.INT_VEC4] = UNIFORMTYPE_IVEC4;\n\t\t\t_this.pcUniformType[gl.BOOL_VEC2] = UNIFORMTYPE_BVEC2;\n\t\t\t_this.pcUniformType[gl.BOOL_VEC3] = UNIFORMTYPE_BVEC3;\n\t\t\t_this.pcUniformType[gl.BOOL_VEC4] = UNIFORMTYPE_BVEC4;\n\t\t\t_this.pcUniformType[gl.FLOAT_MAT2] = UNIFORMTYPE_MAT2;\n\t\t\t_this.pcUniformType[gl.FLOAT_MAT3] = UNIFORMTYPE_MAT3;\n\t\t\t_this.pcUniformType[gl.FLOAT_MAT4] = UNIFORMTYPE_MAT4;\n\t\t\t_this.pcUniformType[gl.SAMPLER_2D] = UNIFORMTYPE_TEXTURE2D;\n\t\t\t_this.pcUniformType[gl.SAMPLER_CUBE] = UNIFORMTYPE_TEXTURECUBE;\n\n\t\t\tif (_this.webgl2) {\n\t\t\t\t_this.pcUniformType[gl.SAMPLER_2D_SHADOW] = UNIFORMTYPE_TEXTURE2D_SHADOW;\n\t\t\t\t_this.pcUniformType[gl.SAMPLER_CUBE_SHADOW] = UNIFORMTYPE_TEXTURECUBE_SHADOW;\n\t\t\t\t_this.pcUniformType[gl.SAMPLER_3D] = UNIFORMTYPE_TEXTURE3D;\n\t\t\t}\n\n\t\t\t_this.targetToSlot = {};\n\t\t\t_this.targetToSlot[gl.TEXTURE_2D] = 0;\n\t\t\t_this.targetToSlot[gl.TEXTURE_CUBE_MAP] = 1;\n\t\t\t_this.targetToSlot[gl.TEXTURE_3D] = 2;\n\t\t\tvar scopeX, scopeY, scopeZ, scopeW;\n\t\t\tvar uniformValue;\n\t\t\t_this.commitFunction = [];\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_BOOL] = function (uniform, value) {\n\t\t\t\tif (uniform.value !== value) {\n\t\t\t\t\tgl.uniform1i(uniform.locationId, value);\n\t\t\t\t\tuniform.value = value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_INT] = _this.commitFunction[UNIFORMTYPE_BOOL];\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_FLOAT] = function (uniform, value) {\n\t\t\t\tif (uniform.value !== value) {\n\t\t\t\t\tgl.uniform1f(uniform.locationId, value);\n\t\t\t\t\tuniform.value = value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC2] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY) {\n\t\t\t\t\tgl.uniform2fv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC3] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\t\t\t\tscopeZ = value[2];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ) {\n\t\t\t\t\tgl.uniform3fv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t\tuniformValue[2] = scopeZ;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC4] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\t\t\t\tscopeZ = value[2];\n\t\t\t\tscopeW = value[3];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ || uniformValue[3] !== scopeW) {\n\t\t\t\t\tgl.uniform4fv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t\tuniformValue[2] = scopeZ;\n\t\t\t\t\tuniformValue[3] = scopeW;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_IVEC2] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY) {\n\t\t\t\t\tgl.uniform2iv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_BVEC2] = _this.commitFunction[UNIFORMTYPE_IVEC2];\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_IVEC3] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\t\t\t\tscopeZ = value[2];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ) {\n\t\t\t\t\tgl.uniform3iv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t\tuniformValue[2] = scopeZ;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_BVEC3] = _this.commitFunction[UNIFORMTYPE_IVEC3];\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_IVEC4] = function (uniform, value) {\n\t\t\t\tuniformValue = uniform.value;\n\t\t\t\tscopeX = value[0];\n\t\t\t\tscopeY = value[1];\n\t\t\t\tscopeZ = value[2];\n\t\t\t\tscopeW = value[3];\n\n\t\t\t\tif (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ || uniformValue[3] !== scopeW) {\n\t\t\t\t\tgl.uniform4iv(uniform.locationId, value);\n\t\t\t\t\tuniformValue[0] = scopeX;\n\t\t\t\t\tuniformValue[1] = scopeY;\n\t\t\t\t\tuniformValue[2] = scopeZ;\n\t\t\t\t\tuniformValue[3] = scopeW;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_BVEC4] = _this.commitFunction[UNIFORMTYPE_IVEC4];\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_MAT2] = function (uniform, value) {\n\t\t\t\tgl.uniformMatrix2fv(uniform.locationId, false, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_MAT3] = function (uniform, value) {\n\t\t\t\tgl.uniformMatrix3fv(uniform.locationId, false, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_MAT4] = function (uniform, value) {\n\t\t\t\tgl.uniformMatrix4fv(uniform.locationId, false, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_FLOATARRAY] = function (uniform, value) {\n\t\t\t\tgl.uniform1fv(uniform.locationId, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC2ARRAY] = function (uniform, value) {\n\t\t\t\tgl.uniform2fv(uniform.locationId, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC3ARRAY] = function (uniform, value) {\n\t\t\t\tgl.uniform3fv(uniform.locationId, value);\n\t\t\t};\n\n\t\t\t_this.commitFunction[UNIFORMTYPE_VEC4ARRAY] = function (uniform, value) {\n\t\t\t\tgl.uniform4fv(uniform.locationId, value);\n\t\t\t};\n\n\t\t\t_this.scope = new ScopeSpace(\"Device\");\n\t\t\t_this.programLib = new ProgramLibrary(_assertThisInitialized(_this));\n\n\t\t\tfor (var generator in programlib) {\n\t\t\t\t_this.programLib.register(generator, programlib[generator]);\n\t\t\t}\n\n\t\t\t_this.supportsBoneTextures = _this.extTextureFloat && _this.maxVertexTextures > 0;\n\t\t\t_this.useTexCubeLod = _this.extTextureLod && _this.maxTextures < 16;\n\t\t\tvar numUniforms = _this.vertexUniformsCount;\n\t\t\tnumUniforms -= 4 * 4;\n\t\t\tnumUniforms -= 8;\n\t\t\tnumUniforms -= 1;\n\t\t\tnumUniforms -= 4 * 4;\n\t\t\t_this.boneLimit = Math.floor(numUniforms / 3);\n\t\t\t_this.boneLimit = Math.min(_this.boneLimit, 128);\n\n\t\t\tif (_this.unmaskedRenderer === 'Mali-450 MP') {\n\t\t\t\t_this.boneLimit = 34;\n\t\t\t}\n\n\t\t\t_this._drawCallsPerFrame = 0;\n\t\t\t_this._shaderSwitchesPerFrame = 0;\n\t\t\t_this._primsPerFrame = [];\n\n\t\t\tfor (i = PRIMITIVE_POINTS; i <= PRIMITIVE_TRIFAN; i++) {\n\t\t\t\t_this._primsPerFrame[i] = 0;\n\t\t\t}\n\n\t\t\t_this._renderTargetCreationTime = 0;\n\t\t\t_this._vram = {\n\t\t\t\ttex: 0,\n\t\t\t\tvb: 0,\n\t\t\t\tib: 0\n\t\t\t};\n\t\t\t_this._shaderStats = {\n\t\t\t\tvsCompiled: 0,\n\t\t\t\tfsCompiled: 0,\n\t\t\t\tlinked: 0,\n\t\t\t\tmaterialShaders: 0,\n\t\t\t\tcompileTime: 0\n\t\t\t};\n\t\t\t_this.constantTexSource = _this.scope.resolve(\"source\");\n\n\t\t\tif (_this.extTextureFloat) {\n\t\t\t\tif (_this.webgl2) {\n\t\t\t\t\t_this.textureFloatRenderable = !!_this.extColorBufferFloat;\n\t\t\t\t} else {\n\t\t\t\t\t_this.textureFloatRenderable = testRenderable(gl, gl.FLOAT);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_this.textureFloatRenderable = false;\n\t\t\t}\n\n\t\t\tif (_this.extTextureHalfFloat) {\n\t\t\t\tif (_this.webgl2) {\n\t\t\t\t\t_this.textureHalfFloatRenderable = !!_this.extColorBufferFloat;\n\t\t\t\t} else {\n\t\t\t\t\t_this.textureHalfFloatRenderable = testRenderable(gl, _this.extTextureHalfFloat.HALF_FLOAT_OES);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_this.textureHalfFloatRenderable = false;\n\t\t\t}\n\n\t\t\t_this.supportsMorphTargetTexturesCore = _this.maxPrecision === \"highp\" && _this.maxVertexTextures >= 2;\n\t\t\t_this._textureFloatHighPrecision = undefined;\n\t\t\t_this._textureHalfFloatUpdatable = undefined;\n\t\t\t_this.grabPassAvailable = true;\n\t\t\t_this.grabPassApha = options.alpha;\n\n\t\t\t_this.createGrabPass();\n\n\t\t\tVertexFormat.init(_assertThisInitialized(_this));\n\t\t\t_this._areaLightLutFormat = PIXELFORMAT_R8_G8_B8_A8;\n\n\t\t\tif (_this.extTextureHalfFloat && _this.textureHalfFloatUpdatable) {\n\t\t\t\t_this._areaLightLutFormat = PIXELFORMAT_RGBA16F;\n\t\t\t} else if (_this.extTextureFloat) {\n\t\t\t\t_this._areaLightLutFormat = PIXELFORMAT_RGBA32F;\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = GraphicsDevice.prototype;\n\n\t\t_proto.getPrecision = function getPrecision() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar precision = \"highp\";\n\n\t\t\tif (gl.getShaderPrecisionFormat) {\n\t\t\t\tvar vertexShaderPrecisionHighpFloat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT);\n\t\t\t\tvar vertexShaderPrecisionMediumpFloat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT);\n\t\t\t\tvar fragmentShaderPrecisionHighpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n\t\t\t\tvar fragmentShaderPrecisionMediumpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT);\n\t\t\t\tvar highpAvailable = vertexShaderPrecisionHighpFloat.precision > 0 && fragmentShaderPrecisionHighpFloat.precision > 0;\n\t\t\t\tvar mediumpAvailable = vertexShaderPrecisionMediumpFloat.precision > 0 && fragmentShaderPrecisionMediumpFloat.precision > 0;\n\n\t\t\t\tif (!highpAvailable) {\n\t\t\t\t\tif (mediumpAvailable) {\n\t\t\t\t\t\tprecision = \"mediump\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprecision = \"lowp\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn precision;\n\t\t};\n\n\t\t_proto.initializeExtensions = function initializeExtensions() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar ext;\n\t\t\tvar supportedExtensions = gl.getSupportedExtensions();\n\n\t\t\tvar getExtension = function getExtension() {\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t\tif (supportedExtensions.indexOf(arguments[i]) !== -1) {\n\t\t\t\t\t\treturn gl.getExtension(arguments[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tthis.extBlendMinmax = true;\n\t\t\t\tthis.extDrawBuffers = true;\n\t\t\t\tthis.extInstancing = true;\n\t\t\t\tthis.extStandardDerivatives = true;\n\t\t\t\tthis.extTextureFloat = true;\n\t\t\t\tthis.extTextureHalfFloat = true;\n\t\t\t\tthis.extTextureHalfFloatLinear = true;\n\t\t\t\tthis.extTextureLod = true;\n\t\t\t\tthis.extUintElement = true;\n\t\t\t\tthis.extVertexArrayObject = true;\n\t\t\t\tthis.extColorBufferFloat = getExtension('EXT_color_buffer_float');\n\t\t\t\tthis.extDisjointTimerQuery = getExtension('EXT_disjoint_timer_query_webgl2', 'EXT_disjoint_timer_query');\n\t\t\t} else {\n\t\t\t\tthis.extBlendMinmax = getExtension(\"EXT_blend_minmax\");\n\t\t\t\tthis.extDrawBuffers = getExtension('EXT_draw_buffers');\n\t\t\t\tthis.extInstancing = getExtension(\"ANGLE_instanced_arrays\");\n\n\t\t\t\tif (this.extInstancing) {\n\t\t\t\t\text = this.extInstancing;\n\t\t\t\t\tgl.drawArraysInstanced = ext.drawArraysInstancedANGLE.bind(ext);\n\t\t\t\t\tgl.drawElementsInstanced = ext.drawElementsInstancedANGLE.bind(ext);\n\t\t\t\t\tgl.vertexAttribDivisor = ext.vertexAttribDivisorANGLE.bind(ext);\n\t\t\t\t}\n\n\t\t\t\tthis.extStandardDerivatives = getExtension(\"OES_standard_derivatives\");\n\t\t\t\tthis.extTextureFloat = getExtension(\"OES_texture_float\");\n\t\t\t\tthis.extTextureHalfFloat = getExtension(\"OES_texture_half_float\");\n\t\t\t\tthis.extTextureHalfFloatLinear = getExtension(\"OES_texture_half_float_linear\");\n\t\t\t\tthis.extTextureLod = getExtension('EXT_shader_texture_lod');\n\t\t\t\tthis.extUintElement = getExtension(\"OES_element_index_uint\");\n\t\t\t\tthis.extVertexArrayObject = getExtension(\"OES_vertex_array_object\");\n\n\t\t\t\tif (this.extVertexArrayObject) {\n\t\t\t\t\text = this.extVertexArrayObject;\n\t\t\t\t\tgl.createVertexArray = ext.createVertexArrayOES.bind(ext);\n\t\t\t\t\tgl.deleteVertexArray = ext.deleteVertexArrayOES.bind(ext);\n\t\t\t\t\tgl.isVertexArray = ext.isVertexArrayOES.bind(ext);\n\t\t\t\t\tgl.bindVertexArray = ext.bindVertexArrayOES.bind(ext);\n\t\t\t\t}\n\n\t\t\t\tthis.extColorBufferFloat = null;\n\t\t\t\tthis.extDisjointTimerQuery = null;\n\t\t\t}\n\n\t\t\tthis.extDebugRendererInfo = getExtension('WEBGL_debug_renderer_info');\n\t\t\tthis.extTextureFloatLinear = getExtension(\"OES_texture_float_linear\");\n\t\t\tthis.extFloatBlend = getExtension(\"EXT_float_blend\");\n\t\t\tthis.extTextureFilterAnisotropic = getExtension('EXT_texture_filter_anisotropic', 'WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\tthis.extCompressedTextureETC1 = getExtension('WEBGL_compressed_texture_etc1');\n\t\t\tthis.extCompressedTextureETC = getExtension('WEBGL_compressed_texture_etc');\n\t\t\tthis.extCompressedTexturePVRTC = getExtension('WEBGL_compressed_texture_pvrtc', 'WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\tthis.extCompressedTextureS3TC = getExtension('WEBGL_compressed_texture_s3tc', 'WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\tthis.extCompressedTextureATC = getExtension('WEBGL_compressed_texture_atc');\n\t\t\tthis.extCompressedTextureASTC = getExtension('WEBGL_compressed_texture_astc');\n\t\t\tthis.extParallelShaderCompile = getExtension('KHR_parallel_shader_compile');\n\t\t\tthis.supportsInstancing = !!this.extInstancing;\n\t\t};\n\n\t\t_proto.initializeCapabilities = function initializeCapabilities() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar ext;\n\t\t\tthis.maxPrecision = this.precision = this.getPrecision();\n\t\t\tvar contextAttribs = gl.getContextAttributes();\n\t\t\tthis.supportsMsaa = contextAttribs.antialias;\n\t\t\tthis.supportsStencil = contextAttribs.stencil;\n\t\t\tthis.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\t\tthis.maxCubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\t\tthis.maxRenderBufferSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n\t\t\tthis.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\t\tthis.maxCombinedTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\t\tthis.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\t\tthis.vertexUniformsCount = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\t\tthis.fragmentUniformsCount = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tthis.maxDrawBuffers = gl.getParameter(gl.MAX_DRAW_BUFFERS);\n\t\t\t\tthis.maxColorAttachments = gl.getParameter(gl.MAX_COLOR_ATTACHMENTS);\n\t\t\t\tthis.maxVolumeSize = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\n\t\t\t} else {\n\t\t\t\text = this.extDrawBuffers;\n\t\t\t\tthis.maxDrawBuffers = ext ? gl.getParameter(ext.MAX_DRAW_BUFFERS_EXT) : 1;\n\t\t\t\tthis.maxColorAttachments = ext ? gl.getParameter(ext.MAX_COLOR_ATTACHMENTS_EXT) : 1;\n\t\t\t\tthis.maxVolumeSize = 1;\n\t\t\t}\n\n\t\t\text = this.extDebugRendererInfo;\n\t\t\tthis.unmaskedRenderer = ext ? gl.getParameter(ext.UNMASKED_RENDERER_WEBGL) : '';\n\t\t\tthis.unmaskedVendor = ext ? gl.getParameter(ext.UNMASKED_VENDOR_WEBGL) : '';\n\t\t\text = this.extTextureFilterAnisotropic;\n\t\t\tthis.maxAnisotropy = ext ? gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n\t\t\tthis.samples = gl.getParameter(gl.SAMPLES);\n\t\t};\n\n\t\t_proto.initializeRenderState = function initializeRenderState() {\n\t\t\tvar gl = this.gl;\n\t\t\tthis.blending = false;\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tthis.blendSrc = BLENDMODE_ONE;\n\t\t\tthis.blendDst = BLENDMODE_ZERO;\n\t\t\tthis.blendSrcAlpha = BLENDMODE_ONE;\n\t\t\tthis.blendDstAlpha = BLENDMODE_ZERO;\n\t\t\tthis.separateAlphaBlend = false;\n\t\t\tthis.blendEquation = BLENDEQUATION_ADD;\n\t\t\tthis.blendAlphaEquation = BLENDEQUATION_ADD;\n\t\t\tthis.separateAlphaEquation = false;\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tthis.writeRed = true;\n\t\t\tthis.writeGreen = true;\n\t\t\tthis.writeBlue = true;\n\t\t\tthis.writeAlpha = true;\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tthis.cullMode = CULLFACE_BACK;\n\t\t\tgl.enable(gl.CULL_FACE);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tthis.depthTest = true;\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tthis.depthFunc = FUNC_LESSEQUAL;\n\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\tthis.depthWrite = true;\n\t\t\tgl.depthMask(true);\n\t\t\tthis.stencil = false;\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tthis.stencilFuncFront = this.stencilFuncBack = FUNC_ALWAYS;\n\t\t\tthis.stencilRefFront = this.stencilRefBack = 0;\n\t\t\tthis.stencilMaskFront = this.stencilMaskBack = 0xFF;\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xFF);\n\t\t\tthis.stencilFailFront = this.stencilFailBack = STENCILOP_KEEP;\n\t\t\tthis.stencilZfailFront = this.stencilZfailBack = STENCILOP_KEEP;\n\t\t\tthis.stencilZpassFront = this.stencilZpassBack = STENCILOP_KEEP;\n\t\t\tthis.stencilWriteMaskFront = 0xFF;\n\t\t\tthis.stencilWriteMaskBack = 0xFF;\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.stencilMask(0xFF);\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.raster = true;\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\t\tgl.disable(gl.RASTERIZER_DISCARD);\n\t\t\t}\n\n\t\t\tthis.depthBiasEnabled = false;\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tthis.clearDepth = 1;\n\t\t\tgl.clearDepth(1);\n\t\t\tthis.clearRed = 0;\n\t\t\tthis.clearBlue = 0;\n\t\t\tthis.clearGreen = 0;\n\t\t\tthis.clearAlpha = 0;\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tthis.clearStencil = 0;\n\t\t\tgl.clearStencil(0);\n\t\t\tthis.vx = this.vy = this.vw = this.vh = 0;\n\t\t\tthis.sx = this.sy = this.sw = this.sh = 0;\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tgl.hint(gl.FRAGMENT_SHADER_DERIVATIVE_HINT, gl.NICEST);\n\t\t\t} else {\n\t\t\t\tif (this.extStandardDerivatives) {\n\t\t\t\t\tgl.hint(this.extStandardDerivatives.FRAGMENT_SHADER_DERIVATIVE_HINT_OES, gl.NICEST);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\t\t\tthis.unpackFlipY = false;\n\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\t\t\tthis.unpackPremultiplyAlpha = false;\n\t\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n\t\t};\n\n\t\t_proto.initializeContextCaches = function initializeContextCaches() {\n\t\t\tthis.vertexShaderCache = {};\n\t\t\tthis.fragmentShaderCache = {};\n\t\t\tthis._vaoMap = new Map();\n\t\t\tthis.boundVao = null;\n\t\t\tthis.indexBuffer = null;\n\t\t\tthis.vertexBuffers = [];\n\t\t\tthis.shader = null;\n\t\t\tthis.renderTarget = null;\n\t\t\tthis.activeFramebuffer = null;\n\t\t\tthis.feedback = null;\n\t\t\tthis.transformFeedbackBuffer = null;\n\t\t\tthis.textureUnit = 0;\n\t\t\tthis.textureUnits = [];\n\n\t\t\tfor (var i = 0; i < this.maxCombinedTextures; i++) {\n\t\t\t\tthis.textureUnits.push([null, null, null]);\n\t\t\t}\n\t\t};\n\n\t\t_proto.loseContext = function loseContext() {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < this.shaders.length; i++) {\n\t\t\t\tthis.shaders[i].loseContext();\n\t\t\t}\n\n\t\t\tthis.destroyGrabPass();\n\n\t\t\twhile (this.textures.length > 0) {\n\t\t\t\tvar texture = this.textures[0];\n\t\t\t\tthis.destroyTexture(texture);\n\t\t\t\ttexture.dirtyAll();\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.buffers.length; i++) {\n\t\t\t\tthis.buffers[i].loseContext();\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this.targets.length; i++) {\n\t\t\t\tthis.targets[i].loseContext();\n\t\t\t}\n\t\t};\n\n\t\t_proto.restoreContext = function restoreContext() {\n\t\t\tthis.initializeExtensions();\n\t\t\tthis.initializeCapabilities();\n\t\t\tthis.initializeRenderState();\n\t\t\tthis.initializeContextCaches();\n\t\t\tvar i, len;\n\n\t\t\tfor (i = 0, len = this.shaders.length; i < len; i++) {\n\t\t\t\tthis.compileAndLinkShader(this.shaders[i]);\n\t\t\t}\n\n\t\t\tfor (i = 0, len = this.buffers.length; i < len; i++) {\n\t\t\t\tthis.buffers[i].unlock();\n\t\t\t}\n\n\t\t\tthis.createGrabPass();\n\t\t};\n\n\t\t_proto.createGrabPass = function createGrabPass() {\n\t\t\tif (this.grabPassTexture) return;\n\t\t\tvar grabPassTexture = new Texture(this, {\n\t\t\t\tformat: this.grabPassApha === false ? PIXELFORMAT_R8_G8_B8 : PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\tminFilter: FILTER_LINEAR,\n\t\t\t\tmagFilter: FILTER_LINEAR,\n\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\tmipmaps: false\n\t\t\t});\n\t\t\tgrabPassTexture.name = 'texture_grabPass';\n\t\t\tvar grabPassTextureId = this.scope.resolve(grabPassTexture.name);\n\t\t\tgrabPassTextureId.setValue(grabPassTexture);\n\t\t\tvar grabPassRenderTarget = new RenderTarget({\n\t\t\t\tcolorBuffer: grabPassTexture,\n\t\t\t\tdepth: false\n\t\t\t});\n\t\t\tthis.grabPassRenderTarget = grabPassRenderTarget;\n\t\t\tthis.grabPassTextureId = grabPassTextureId;\n\t\t\tthis.grabPassTexture = grabPassTexture;\n\t\t};\n\n\t\t_proto.updateGrabPass = function updateGrabPass() {\n\t\t\tvar gl = this.gl;\n\n\t\t\tif (!this.grabPassAvailable) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar resolveRenderTarget = renderTarget && renderTarget._glResolveFrameBuffer;\n\t\t\tvar grabPassTexture = this.grabPassTexture;\n\t\t\tvar width = this.width;\n\t\t\tvar height = this.height;\n\n\t\t\tif (this.webgl2 && !this._tempMacChromeBlitFramebufferWorkaround && width === grabPassTexture._width && height === grabPassTexture._height) {\n\t\t\t\tif (resolveRenderTarget) {\n\t\t\t\t\trenderTarget.resolve(true);\n\t\t\t\t}\n\n\t\t\t\tvar currentFrameBuffer = renderTarget ? renderTarget._glFrameBuffer : null;\n\t\t\t\tvar resolvedFrameBuffer = renderTarget ? renderTarget._glResolveFrameBuffer || renderTarget._glFrameBuffer : null;\n\t\t\t\tthis.initRenderTarget(this.grabPassRenderTarget);\n\t\t\t\tvar grabPassFrameBuffer = this.grabPassRenderTarget._glFrameBuffer;\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, resolvedFrameBuffer);\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, grabPassFrameBuffer);\n\t\t\t\tgl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST);\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, currentFrameBuffer);\n\t\t\t} else {\n\t\t\t\tif (resolveRenderTarget) {\n\t\t\t\t\trenderTarget.resolve(true);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._glResolveFrameBuffer);\n\t\t\t\t}\n\n\t\t\t\tvar format = grabPassTexture._glFormat;\n\t\t\t\tgl.copyTexImage2D(gl.TEXTURE_2D, 0, format, 0, 0, width, height, 0);\n\t\t\t\tgrabPassTexture._width = width;\n\t\t\t\tgrabPassTexture._height = height;\n\n\t\t\t\tif (resolveRenderTarget) {\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._glFrameBuffer);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.destroyGrabPass = function destroyGrabPass() {\n\t\t\tthis.grabPassRenderTarget.destroy();\n\t\t\tthis.grabPassRenderTarget = null;\n\t\t\tthis.grabPassTextureId = null;\n\t\t\tthis.grabPassTexture.destroy();\n\t\t\tthis.grabPassTexture = null;\n\t\t};\n\n\t\t_proto.updateClientRect = function updateClientRect() {\n\t\t\tthis.clientRect = this.canvas.getBoundingClientRect();\n\t\t};\n\n\t\t_proto.setViewport = function setViewport(x, y, w, h) {\n\t\t\tif (this.vx !== x || this.vy !== y || this.vw !== w || this.vh !== h) {\n\t\t\t\tthis.gl.viewport(x, y, w, h);\n\t\t\t\tthis.vx = x;\n\t\t\t\tthis.vy = y;\n\t\t\t\tthis.vw = w;\n\t\t\t\tthis.vh = h;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setScissor = function setScissor(x, y, w, h) {\n\t\t\tif (this.sx !== x || this.sy !== y || this.sw !== w || this.sh !== h) {\n\t\t\t\tthis.gl.scissor(x, y, w, h);\n\t\t\t\tthis.sx = x;\n\t\t\t\tthis.sy = y;\n\t\t\t\tthis.sw = w;\n\t\t\t\tthis.sh = h;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getProgramLibrary = function getProgramLibrary() {\n\t\t\treturn this.programLib;\n\t\t};\n\n\t\t_proto.setProgramLibrary = function setProgramLibrary(programLib) {\n\t\t\tthis.programLib = programLib;\n\t\t};\n\n\t\t_proto.setFramebuffer = function setFramebuffer(fb) {\n\t\t\tif (this.activeFramebuffer !== fb) {\n\t\t\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, fb);\n\t\t\t\tthis.activeFramebuffer = fb;\n\t\t\t}\n\t\t};\n\n\t\t_proto._checkFbo = function _checkFbo() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n\t\t\tswitch (status) {\n\t\t\t\tcase gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n\t\t\t\t\tconsole.error(\"ERROR: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n\t\t\t\t\tconsole.error(\"ERROR: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n\t\t\t\t\tconsole.error(\"ERROR: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.FRAMEBUFFER_UNSUPPORTED:\n\t\t\t\t\tconsole.error(\"ERROR: FRAMEBUFFER_UNSUPPORTED\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.FRAMEBUFFER_COMPLETE:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t_proto.copyRenderTarget = function copyRenderTarget(source, dest, color, depth) {\n\t\t\tvar gl = this.gl;\n\n\t\t\tif (!this.webgl2 && depth) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (color) {\n\t\t\t\tif (!dest) {\n\t\t\t\t\tif (!source._colorBuffer) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!source._colorBuffer || !dest._colorBuffer) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (source._colorBuffer._format !== dest._colorBuffer._format) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (depth) {\n\t\t\t\tif (!source._depthBuffer || !dest._depthBuffer) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (source._depthBuffer._format !== dest._depthBuffer._format) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.webgl2 && dest) {\n\t\t\t\tvar prevRt = this.renderTarget;\n\t\t\t\tthis.renderTarget = dest;\n\t\t\t\tthis.updateBegin();\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, source ? source._glFrameBuffer : null);\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, dest._glFrameBuffer);\n\t\t\t\tvar w = source ? source.width : dest.width;\n\t\t\t\tvar h = source ? source.height : dest.height;\n\t\t\t\tgl.blitFramebuffer(0, 0, w, h, 0, 0, w, h, (color ? gl.COLOR_BUFFER_BIT : 0) | (depth ? gl.DEPTH_BUFFER_BIT : 0), gl.NEAREST);\n\t\t\t\tthis.renderTarget = prevRt;\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, prevRt ? prevRt._glFrameBuffer : null);\n\t\t\t} else {\n\t\t\t\tvar shader = this.getCopyShader();\n\t\t\t\tthis.constantTexSource.setValue(source._colorBuffer);\n\t\t\t\tdrawQuadWithShader(this, dest, shader);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.initRenderTarget = function initRenderTarget(target) {\n\t\t\tif (target._glFrameBuffer) return;\n\t\t\ttarget._device = this;\n\t\t\tvar gl = this.gl;\n\t\t\ttarget._glFrameBuffer = gl.createFramebuffer();\n\t\t\tthis.setFramebuffer(target._glFrameBuffer);\n\t\t\tvar colorBuffer = target._colorBuffer;\n\n\t\t\tif (colorBuffer) {\n\t\t\t\tif (!colorBuffer._glTexture) {\n\t\t\t\t\tcolorBuffer._width = Math.min(colorBuffer.width, this.maxRenderBufferSize);\n\t\t\t\t\tcolorBuffer._height = Math.min(colorBuffer.height, this.maxRenderBufferSize);\n\t\t\t\t\tthis.setTexture(colorBuffer, 0);\n\t\t\t\t}\n\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, colorBuffer._cubemap ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + target._face : gl.TEXTURE_2D, colorBuffer._glTexture, 0);\n\t\t\t}\n\n\t\t\tvar depthBuffer = target._depthBuffer;\n\n\t\t\tif (depthBuffer && this.webgl2) {\n\t\t\t\tif (!depthBuffer._glTexture) {\n\t\t\t\t\tdepthBuffer._width = Math.min(depthBuffer.width, this.maxRenderBufferSize);\n\t\t\t\t\tdepthBuffer._height = Math.min(depthBuffer.height, this.maxRenderBufferSize);\n\t\t\t\t\tthis.setTexture(depthBuffer, 0);\n\t\t\t\t}\n\n\t\t\t\tif (target._stencil) {\n\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, depthBuffer._cubemap ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + target._face : gl.TEXTURE_2D, target._depthBuffer._glTexture, 0);\n\t\t\t\t} else {\n\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, depthBuffer._cubemap ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + target._face : gl.TEXTURE_2D, target._depthBuffer._glTexture, 0);\n\t\t\t\t}\n\t\t\t} else if (target._depth) {\n\t\t\t\tvar willRenderMsaa = target._samples > 1 && this.webgl2;\n\n\t\t\t\tif (!willRenderMsaa) {\n\t\t\t\t\tif (!target._glDepthBuffer) {\n\t\t\t\t\t\ttarget._glDepthBuffer = gl.createRenderbuffer();\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, target._glDepthBuffer);\n\n\t\t\t\t\tif (target._stencil) {\n\t\t\t\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, target.width, target.height);\n\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, target._glDepthBuffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, target.width, target.height);\n\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, target._glDepthBuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.webgl2 && target._samples > 1) {\n\t\t\t\ttarget._glResolveFrameBuffer = target._glFrameBuffer;\n\t\t\t\ttarget._glFrameBuffer = gl.createFramebuffer();\n\t\t\t\tthis.setFramebuffer(target._glFrameBuffer);\n\n\t\t\t\tif (colorBuffer) {\n\t\t\t\t\tif (!target._glMsaaColorBuffer) {\n\t\t\t\t\t\ttarget._glMsaaColorBuffer = gl.createRenderbuffer();\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, target._glMsaaColorBuffer);\n\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, target._samples, colorBuffer._glInternalFormat, target.width, target.height);\n\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, target._glMsaaColorBuffer);\n\t\t\t\t}\n\n\t\t\t\tif (target._depth) {\n\t\t\t\t\tif (!target._glMsaaDepthBuffer) {\n\t\t\t\t\t\ttarget._glMsaaDepthBuffer = gl.createRenderbuffer();\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, target._glMsaaDepthBuffer);\n\n\t\t\t\t\tif (target._stencil) {\n\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, target._samples, gl.DEPTH24_STENCIL8, target.width, target.height);\n\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, target._glMsaaDepthBuffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, target._samples, gl.DEPTH_COMPONENT32F, target.width, target.height);\n\t\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, target._glMsaaDepthBuffer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.targets.push(target);\n\t\t};\n\n\t\t_proto.getCopyShader = function getCopyShader() {\n\t\t\tif (!this._copyShader) {\n\t\t\t\tthis._copyShader = createShaderFromCode(this, shaderChunks.fullscreenQuadVS, shaderChunks.outputTex2DPS, \"outputTex2D\");\n\t\t\t}\n\n\t\t\treturn this._copyShader;\n\t\t};\n\n\t\t_proto.updateBegin = function updateBegin() {\n\t\t\tthis.boundVao = null;\n\n\t\t\tif (this._tempEnableSafariTextureUnitWorkaround) {\n\t\t\t\tfor (var unit = 0; unit < this.textureUnits.length; ++unit) {\n\t\t\t\t\tfor (var slot = 0; slot < 3; ++slot) {\n\t\t\t\t\t\tthis.textureUnits[unit][slot] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar target = this.renderTarget;\n\n\t\t\tif (target) {\n\t\t\t\tif (!target._glFrameBuffer) {\n\t\t\t\t\tthis.initRenderTarget(target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setFramebuffer(target._glFrameBuffer);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setFramebuffer(this.defaultFramebuffer);\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateEnd = function updateEnd() {\n\t\t\tvar gl = this.gl;\n\t\t\tthis.boundVao = null;\n\t\t\tthis.gl.bindVertexArray(null);\n\t\t\tvar target = this.renderTarget;\n\n\t\t\tif (target) {\n\t\t\t\tvar colorBuffer = target._colorBuffer;\n\n\t\t\t\tif (colorBuffer && colorBuffer._glTexture && colorBuffer.mipmaps && colorBuffer.pot) {\n\t\t\t\t\tthis.activeTexture(this.maxCombinedTextures - 1);\n\t\t\t\t\tthis.bindTexture(colorBuffer);\n\t\t\t\t\tgl.generateMipmap(colorBuffer._glTarget);\n\t\t\t\t}\n\n\t\t\t\tif (this.webgl2 && target._samples > 1 && target.autoResolve) {\n\t\t\t\t\ttarget.resolve();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.initializeTexture = function initializeTexture(texture) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar ext;\n\t\t\ttexture._glTexture = gl.createTexture();\n\t\t\ttexture._glTarget = texture._cubemap ? gl.TEXTURE_CUBE_MAP : texture._volume ? gl.TEXTURE_3D : gl.TEXTURE_2D;\n\n\t\t\tswitch (texture._format) {\n\t\t\t\tcase PIXELFORMAT_A8:\n\t\t\t\t\ttexture._glFormat = gl.ALPHA;\n\t\t\t\t\ttexture._glInternalFormat = gl.ALPHA;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_L8:\n\t\t\t\t\ttexture._glFormat = gl.LUMINANCE;\n\t\t\t\t\ttexture._glInternalFormat = gl.LUMINANCE;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_L8_A8:\n\t\t\t\t\ttexture._glFormat = gl.LUMINANCE_ALPHA;\n\t\t\t\t\ttexture._glInternalFormat = gl.LUMINANCE_ALPHA;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R5_G6_B5:\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = gl.RGB;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_SHORT_5_6_5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R5_G5_B5_A1:\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = gl.RGBA;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R4_G4_B4_A4:\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = gl.RGBA;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R8_G8_B8:\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = this.webgl2 ? gl.RGB8 : gl.RGB;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R8_G8_B8_A8:\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = this.webgl2 ? gl.RGBA8 : gl.RGBA;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_DXT1:\n\t\t\t\t\text = this.extCompressedTextureS3TC;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_DXT3:\n\t\t\t\t\text = this.extCompressedTextureS3TC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_DXT5:\n\t\t\t\t\text = this.extCompressedTextureS3TC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ETC1:\n\t\t\t\t\text = this.extCompressedTextureETC1;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_PVRTC_2BPP_RGB_1:\n\t\t\t\t\text = this.extCompressedTexturePVRTC;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_PVRTC_2BPP_RGBA_1:\n\t\t\t\t\text = this.extCompressedTexturePVRTC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_PVRTC_4BPP_RGB_1:\n\t\t\t\t\text = this.extCompressedTexturePVRTC;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_PVRTC_4BPP_RGBA_1:\n\t\t\t\t\text = this.extCompressedTexturePVRTC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ETC2_RGB:\n\t\t\t\t\text = this.extCompressedTextureETC;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ETC2_RGBA:\n\t\t\t\t\text = this.extCompressedTextureETC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ASTC_4x4:\n\t\t\t\t\text = this.extCompressedTextureASTC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ATC_RGB:\n\t\t\t\t\text = this.extCompressedTextureATC;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGB_ATC_WEBGL;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_ATC_RGBA:\n\t\t\t\t\text = this.extCompressedTextureATC;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = ext.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_RGB16F:\n\t\t\t\t\text = this.extTextureHalfFloat;\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGB16F;\n\t\t\t\t\t\ttexture._glPixelType = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGB;\n\t\t\t\t\t\ttexture._glPixelType = ext.HALF_FLOAT_OES;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_RGBA16F:\n\t\t\t\t\text = this.extTextureHalfFloat;\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGBA16F;\n\t\t\t\t\t\ttexture._glPixelType = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGBA;\n\t\t\t\t\t\ttexture._glPixelType = ext.HALF_FLOAT_OES;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_RGB32F:\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGB32F;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGB;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture._glPixelType = gl.FLOAT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_RGBA32F:\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGBA32F;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._glInternalFormat = gl.RGBA;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture._glPixelType = gl.FLOAT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_R32F:\n\t\t\t\t\ttexture._glFormat = gl.RED;\n\t\t\t\t\ttexture._glInternalFormat = gl.R32F;\n\t\t\t\t\ttexture._glPixelType = gl.FLOAT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_DEPTH:\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\ttexture._glFormat = gl.DEPTH_COMPONENT;\n\t\t\t\t\t\ttexture._glInternalFormat = gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\ttexture._glPixelType = gl.FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._glFormat = gl.DEPTH_COMPONENT;\n\t\t\t\t\t\ttexture._glInternalFormat = gl.DEPTH_COMPONENT;\n\t\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_SHORT;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_DEPTHSTENCIL:\n\t\t\t\t\ttexture._glFormat = gl.DEPTH_STENCIL;\n\t\t\t\t\ttexture._glInternalFormat = gl.DEPTH24_STENCIL8;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_INT_24_8;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_111110F:\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = gl.R11F_G11F_B10F;\n\t\t\t\t\ttexture._glPixelType = gl.FLOAT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_SRGB:\n\t\t\t\t\ttexture._glFormat = gl.RGB;\n\t\t\t\t\ttexture._glInternalFormat = gl.SRGB8;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase PIXELFORMAT_SRGBA:\n\t\t\t\t\ttexture._glFormat = gl.RGBA;\n\t\t\t\t\ttexture._glInternalFormat = gl.SRGB8_ALPHA8;\n\t\t\t\t\ttexture._glPixelType = gl.UNSIGNED_BYTE;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.textures.push(texture);\n\t\t};\n\n\t\t_proto.destroyTexture = function destroyTexture(texture) {\n\t\t\tif (texture._glTexture) {\n\t\t\t\tvar idx = this.textures.indexOf(texture);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.textures.splice(idx, 1);\n\t\t\t\t}\n\n\t\t\t\tfor (var uniformName in this.scope.variables) {\n\t\t\t\t\tvar uniform = this.scope.variables[uniformName];\n\n\t\t\t\t\tif (uniform.value === texture) {\n\t\t\t\t\t\tuniform.value = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < this.textureUnits.length; i++) {\n\t\t\t\t\tvar textureUnit = this.textureUnits[i];\n\n\t\t\t\t\tfor (var j = 0; j < textureUnit.length; j++) {\n\t\t\t\t\t\tif (textureUnit[j] === texture._glTexture) {\n\t\t\t\t\t\t\ttextureUnit[j] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.deleteTexture(texture._glTexture);\n\t\t\t\tdelete texture._glTexture;\n\t\t\t\tdelete texture._glTarget;\n\t\t\t\tdelete texture._glFormat;\n\t\t\t\tdelete texture._glInternalFormat;\n\t\t\t\tdelete texture._glPixelType;\n\t\t\t\tthis._vram.tex -= texture._gpuSize;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setUnpackFlipY = function setUnpackFlipY(flipY) {\n\t\t\tif (this.unpackFlipY !== flipY) {\n\t\t\t\tthis.unpackFlipY = flipY;\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setUnpackPremultiplyAlpha = function setUnpackPremultiplyAlpha(premultiplyAlpha) {\n\t\t\tif (this.unpackPremultiplyAlpha !== premultiplyAlpha) {\n\t\t\t\tthis.unpackPremultiplyAlpha = premultiplyAlpha;\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultiplyAlpha);\n\t\t\t}\n\t\t};\n\n\t\t_proto._isBrowserInterface = function _isBrowserInterface(texture) {\n\t\t\treturn typeof HTMLCanvasElement !== 'undefined' && texture instanceof HTMLCanvasElement || typeof HTMLImageElement !== 'undefined' && texture instanceof HTMLImageElement || typeof HTMLVideoElement !== 'undefined' && texture instanceof HTMLVideoElement || typeof ImageBitmap !== 'undefined' && texture instanceof ImageBitmap;\n\t\t};\n\n\t\t_proto.uploadTexture = function uploadTexture(texture) {\n\t\t\tvar gl = this.gl;\n\t\t\tif (!texture._needsUpload && (texture._needsMipmapsUpload && texture._mipmapsUploaded || !texture.pot)) return;\n\t\t\tvar mipLevel = 0;\n\t\t\tvar mipObject;\n\t\t\tvar resMult;\n\t\t\tvar requiredMipLevels = Math.log2(Math.max(texture._width, texture._height)) + 1;\n\n\t\t\twhile (texture._levels[mipLevel] || mipLevel === 0) {\n\t\t\t\tif (!texture._needsUpload && mipLevel === 0) {\n\t\t\t\t\tmipLevel++;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (mipLevel && (!texture._needsMipmapsUpload || !texture._mipmaps)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tmipObject = texture._levels[mipLevel];\n\n\t\t\t\tif (mipLevel == 1 && !texture._compressed && texture._levels.length < requiredMipLevels) {\n\t\t\t\t\tgl.generateMipmap(texture._glTarget);\n\t\t\t\t\ttexture._mipmapsUploaded = true;\n\t\t\t\t}\n\n\t\t\t\tif (texture._cubemap) {\n\t\t\t\t\tvar face;\n\n\t\t\t\t\tif (this._isBrowserInterface(mipObject[0])) {\n\t\t\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\t\t\tif (!texture._levelsUpdated[0][face]) continue;\n\t\t\t\t\t\t\tvar src = mipObject[face];\n\n\t\t\t\t\t\t\tif (src instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\tif (src.width > this.maxCubeMapSize || src.height > this.maxCubeMapSize) {\n\t\t\t\t\t\t\t\t\tsrc = _downsampleImage(src, this.maxCubeMapSize);\n\n\t\t\t\t\t\t\t\t\tif (mipLevel === 0) {\n\t\t\t\t\t\t\t\t\t\ttexture._width = src.width;\n\t\t\t\t\t\t\t\t\t\ttexture._height = src.height;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.setUnpackFlipY(false);\n\t\t\t\t\t\t\tthis.setUnpackPremultiplyAlpha(texture._premultiplyAlpha);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, mipLevel, texture._glInternalFormat, texture._glFormat, texture._glPixelType, src);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresMult = 1 / Math.pow(2, mipLevel);\n\n\t\t\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\t\t\tif (!texture._levelsUpdated[0][face]) continue;\n\t\t\t\t\t\t\tvar texData = mipObject[face];\n\n\t\t\t\t\t\t\tif (texture._compressed) {\n\t\t\t\t\t\t\t\tgl.compressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), 0, texData);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setUnpackFlipY(false);\n\t\t\t\t\t\t\t\tthis.setUnpackPremultiplyAlpha(texture._premultiplyAlpha);\n\t\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), 0, texture._glFormat, texture._glPixelType, texData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (texture._volume) {\n\t\t\t\t\tresMult = 1 / Math.pow(2, mipLevel);\n\n\t\t\t\t\tif (texture._compressed) {\n\t\t\t\t\t\tgl.compressedTexImage3D(gl.TEXTURE_3D, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), Math.max(texture._depth * resMult, 1), 0, mipObject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setUnpackFlipY(false);\n\t\t\t\t\t\tthis.setUnpackPremultiplyAlpha(texture._premultiplyAlpha);\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_3D, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), Math.max(texture._depth * resMult, 1), 0, texture._glFormat, texture._glPixelType, mipObject);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this._isBrowserInterface(mipObject)) {\n\t\t\t\t\t\tif (mipObject instanceof HTMLImageElement) {\n\t\t\t\t\t\t\tif (mipObject.width > this.maxTextureSize || mipObject.height > this.maxTextureSize) {\n\t\t\t\t\t\t\t\tmipObject = _downsampleImage(mipObject, this.maxTextureSize);\n\n\t\t\t\t\t\t\t\tif (mipLevel === 0) {\n\t\t\t\t\t\t\t\t\ttexture._width = mipObject.width;\n\t\t\t\t\t\t\t\t\ttexture._height = mipObject.height;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.setUnpackFlipY(texture._flipY);\n\t\t\t\t\t\tthis.setUnpackPremultiplyAlpha(texture._premultiplyAlpha);\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, texture._glInternalFormat, texture._glFormat, texture._glPixelType, mipObject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresMult = 1 / Math.pow(2, mipLevel);\n\n\t\t\t\t\t\tif (texture._compressed) {\n\t\t\t\t\t\t\tgl.compressedTexImage2D(gl.TEXTURE_2D, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), 0, mipObject);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setUnpackFlipY(false);\n\t\t\t\t\t\t\tthis.setUnpackPremultiplyAlpha(texture._premultiplyAlpha);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, texture._glInternalFormat, Math.max(texture._width * resMult, 1), Math.max(texture._height * resMult, 1), 0, texture._glFormat, texture._glPixelType, mipObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mipLevel === 0) {\n\t\t\t\t\t\ttexture._mipmapsUploaded = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture._mipmapsUploaded = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmipLevel++;\n\t\t\t}\n\n\t\t\tif (texture._needsUpload) {\n\t\t\t\tif (texture._cubemap) {\n\t\t\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\t\t\ttexture._levelsUpdated[0][i] = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttexture._levelsUpdated[0] = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!texture._compressed && texture._mipmaps && texture._needsMipmapsUpload && texture.pot && texture._levels.length === 1) {\n\t\t\t\tgl.generateMipmap(texture._glTarget);\n\t\t\t\ttexture._mipmapsUploaded = true;\n\t\t\t}\n\n\t\t\tif (texture._gpuSize) {\n\t\t\t\tthis._vram.tex -= texture._gpuSize;\n\t\t\t}\n\n\t\t\ttexture._gpuSize = texture.gpuSize;\n\t\t\tthis._vram.tex += texture._gpuSize;\n\t\t};\n\n\t\t_proto.activeTexture = function activeTexture(textureUnit) {\n\t\t\tif (this.textureUnit !== textureUnit) {\n\t\t\t\tthis.gl.activeTexture(this.gl.TEXTURE0 + textureUnit);\n\t\t\t\tthis.textureUnit = textureUnit;\n\t\t\t}\n\t\t};\n\n\t\t_proto.bindTexture = function bindTexture(texture) {\n\t\t\tvar textureTarget = texture._glTarget;\n\t\t\tvar textureObject = texture._glTexture;\n\t\t\tvar textureUnit = this.textureUnit;\n\t\t\tvar slot = this.targetToSlot[textureTarget];\n\n\t\t\tif (this.textureUnits[textureUnit][slot] !== textureObject) {\n\t\t\t\tthis.gl.bindTexture(textureTarget, textureObject);\n\t\t\t\tthis.textureUnits[textureUnit][slot] = textureObject;\n\t\t\t}\n\t\t};\n\n\t\t_proto.bindTextureOnUnit = function bindTextureOnUnit(texture, textureUnit) {\n\t\t\tvar textureTarget = texture._glTarget;\n\t\t\tvar textureObject = texture._glTexture;\n\t\t\tvar slot = this.targetToSlot[textureTarget];\n\n\t\t\tif (this.textureUnits[textureUnit][slot] !== textureObject) {\n\t\t\t\tthis.activeTexture(textureUnit);\n\t\t\t\tthis.gl.bindTexture(textureTarget, textureObject);\n\t\t\t\tthis.textureUnits[textureUnit][slot] = textureObject;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setTextureParameters = function setTextureParameters(texture) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar flags = texture._parameterFlags;\n\t\t\tvar target = texture._glTarget;\n\n\t\t\tif (flags & 1) {\n\t\t\t\tvar filter = texture._minFilter;\n\n\t\t\t\tif (!texture.pot || !texture._mipmaps || texture._compressed && texture._levels.length === 1) {\n\t\t\t\t\tif (filter === FILTER_NEAREST_MIPMAP_NEAREST || filter === FILTER_NEAREST_MIPMAP_LINEAR) {\n\t\t\t\t\t\tfilter = FILTER_NEAREST;\n\t\t\t\t\t} else if (filter === FILTER_LINEAR_MIPMAP_NEAREST || filter === FILTER_LINEAR_MIPMAP_LINEAR) {\n\t\t\t\t\t\tfilter = FILTER_LINEAR;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl.texParameteri(target, gl.TEXTURE_MIN_FILTER, this.glFilter[filter]);\n\t\t\t}\n\n\t\t\tif (flags & 2) {\n\t\t\t\tgl.texParameteri(target, gl.TEXTURE_MAG_FILTER, this.glFilter[texture._magFilter]);\n\t\t\t}\n\n\t\t\tif (flags & 4) {\n\t\t\t\tif (this.webgl2) {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_WRAP_S, this.glAddress[texture._addressU]);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_WRAP_S, this.glAddress[texture.pot ? texture._addressU : ADDRESS_CLAMP_TO_EDGE]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (flags & 8) {\n\t\t\t\tif (this.webgl2) {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_WRAP_T, this.glAddress[texture._addressV]);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_WRAP_T, this.glAddress[texture.pot ? texture._addressV : ADDRESS_CLAMP_TO_EDGE]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (flags & 16) {\n\t\t\t\tif (this.webgl2) {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_WRAP_R, this.glAddress[texture._addressW]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (flags & 32) {\n\t\t\t\tif (this.webgl2) {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_COMPARE_MODE, texture._compareOnRead ? gl.COMPARE_REF_TO_TEXTURE : gl.NONE);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (flags & 64) {\n\t\t\t\tif (this.webgl2) {\n\t\t\t\t\tgl.texParameteri(target, gl.TEXTURE_COMPARE_FUNC, this.glComparison[texture._compareFunc]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (flags & 128) {\n\t\t\t\tvar ext = this.extTextureFilterAnisotropic;\n\n\t\t\t\tif (ext) {\n\t\t\t\t\tgl.texParameterf(target, ext.TEXTURE_MAX_ANISOTROPY_EXT, Math.max(1, Math.min(Math.round(texture._anisotropy), this.maxAnisotropy)));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setTexture = function setTexture(texture, textureUnit) {\n\t\t\tif (!texture._glTexture) this.initializeTexture(texture);\n\n\t\t\tif (texture._parameterFlags > 0 || texture._needsUpload || texture._needsMipmapsUpload || texture === this.grabPassTexture) {\n\t\t\t\tthis.activeTexture(textureUnit);\n\t\t\t\tthis.bindTexture(texture);\n\n\t\t\t\tif (texture._parameterFlags) {\n\t\t\t\t\tthis.setTextureParameters(texture);\n\t\t\t\t\ttexture._parameterFlags = 0;\n\t\t\t\t}\n\n\t\t\t\tvar processed = false;\n\n\t\t\t\tif (texture === this.grabPassTexture) {\n\t\t\t\t\tprocessed = this.updateGrabPass();\n\t\t\t\t\tprocessed = true;\n\t\t\t\t}\n\n\t\t\t\tif (!processed && (texture._needsUpload || texture._needsMipmapsUpload)) {\n\t\t\t\t\tthis.uploadTexture(texture);\n\t\t\t\t\ttexture._needsUpload = false;\n\t\t\t\t\ttexture._needsMipmapsUpload = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.bindTextureOnUnit(texture, textureUnit);\n\t\t\t}\n\t\t};\n\n\t\t_proto.createVertexArray = function createVertexArray(vertexBuffers) {\n\t\t\tvar i, vertexBuffer, key;\n\t\t\tvar vao;\n\t\t\tvar useCache = vertexBuffers.length > 1;\n\n\t\t\tif (useCache) {\n\t\t\t\tkey = \"\";\n\n\t\t\t\tfor (i = 0; i < vertexBuffers.length; i++) {\n\t\t\t\t\tvertexBuffer = vertexBuffers[i];\n\t\t\t\t\tkey += vertexBuffer.id + vertexBuffer.format.renderingingHash;\n\t\t\t\t}\n\n\t\t\t\tvao = this._vaoMap.get(key);\n\t\t\t}\n\n\t\t\tif (!vao) {\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tvao = gl.createVertexArray();\n\t\t\t\tgl.bindVertexArray(vao);\n\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\t\t\t\tvar e, elements;\n\n\t\t\t\tfor (i = 0; i < vertexBuffers.length; i++) {\n\t\t\t\t\tvertexBuffer = vertexBuffers[i];\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer.bufferId);\n\t\t\t\t\telements = vertexBuffer.format.elements;\n\n\t\t\t\t\tfor (var j = 0; j < elements.length; j++) {\n\t\t\t\t\t\te = elements[j];\n\t\t\t\t\t\tvar loc = semanticToLocation[e.name];\n\t\t\t\t\t\tgl.vertexAttribPointer(loc, e.numComponents, this.glType[e.dataType], e.normalize, e.stride, e.offset);\n\t\t\t\t\t\tgl.enableVertexAttribArray(loc);\n\n\t\t\t\t\t\tif (vertexBuffer.instancing) {\n\t\t\t\t\t\t\tgl.vertexAttribDivisor(loc, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl.bindVertexArray(null);\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\t\t\tif (useCache) {\n\t\t\t\t\tthis._vaoMap.set(key, vao);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn vao;\n\t\t};\n\n\t\t_proto.setBuffers = function setBuffers() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar vertexBuffer, vao;\n\n\t\t\tif (this.vertexBuffers.length === 1) {\n\t\t\t\tvertexBuffer = this.vertexBuffers[0];\n\n\t\t\t\tif (!vertexBuffer._vao) {\n\t\t\t\t\tvertexBuffer._vao = this.createVertexArray(this.vertexBuffers);\n\t\t\t\t}\n\n\t\t\t\tvao = vertexBuffer._vao;\n\t\t\t} else {\n\t\t\t\tvao = this.createVertexArray(this.vertexBuffers);\n\t\t\t}\n\n\t\t\tif (this.boundVao !== vao) {\n\t\t\t\tthis.boundVao = vao;\n\t\t\t\tgl.bindVertexArray(vao);\n\t\t\t}\n\n\t\t\tthis.vertexBuffers.length = 0;\n\t\t\tvar bufferId = this.indexBuffer ? this.indexBuffer.bufferId : null;\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferId);\n\t\t};\n\n\t\t_proto.draw = function draw(primitive, numInstances, keepBuffers) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar i, j, len;\n\t\t\tvar sampler, samplerValue, texture, numTextures;\n\t\t\tvar uniform, scopeId, uniformVersion, programVersion;\n\t\t\tvar shader = this.shader;\n\t\t\tvar samplers = shader.samplers;\n\t\t\tvar uniforms = shader.uniforms;\n\n\t\t\tif (!keepBuffers) {\n\t\t\t\tthis.setBuffers();\n\t\t\t}\n\n\t\t\tvar textureUnit = 0;\n\n\t\t\tfor (i = 0, len = samplers.length; i < len; i++) {\n\t\t\t\tsampler = samplers[i];\n\t\t\t\tsamplerValue = sampler.scopeId.value;\n\n\t\t\t\tif (!samplerValue) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (samplerValue instanceof Texture) {\n\t\t\t\t\ttexture = samplerValue;\n\t\t\t\t\tthis.setTexture(texture, textureUnit);\n\n\t\t\t\t\tif (sampler.slot !== textureUnit) {\n\t\t\t\t\t\tgl.uniform1i(sampler.locationId, textureUnit);\n\t\t\t\t\t\tsampler.slot = textureUnit;\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureUnit++;\n\t\t\t\t} else {\n\t\t\t\t\tsampler.array.length = 0;\n\t\t\t\t\tnumTextures = samplerValue.length;\n\n\t\t\t\t\tfor (j = 0; j < numTextures; j++) {\n\t\t\t\t\t\ttexture = samplerValue[j];\n\t\t\t\t\t\tthis.setTexture(texture, textureUnit);\n\t\t\t\t\t\tsampler.array[j] = textureUnit;\n\t\t\t\t\t\ttextureUnit++;\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.uniform1iv(sampler.locationId, sampler.array);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0, len = uniforms.length; i < len; i++) {\n\t\t\t\tuniform = uniforms[i];\n\t\t\t\tscopeId = uniform.scopeId;\n\t\t\t\tuniformVersion = uniform.version;\n\t\t\t\tprogramVersion = scopeId.versionObject.version;\n\n\t\t\t\tif (uniformVersion.globalId !== programVersion.globalId || uniformVersion.revision !== programVersion.revision) {\n\t\t\t\t\tuniformVersion.globalId = programVersion.globalId;\n\t\t\t\t\tuniformVersion.revision = programVersion.revision;\n\n\t\t\t\t\tif (scopeId.value !== null) {\n\t\t\t\t\t\tthis.commitFunction[uniform.dataType](uniform, scopeId.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.webgl2 && this.transformFeedbackBuffer) {\n\t\t\t\tgl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, this.transformFeedbackBuffer.bufferId);\n\t\t\t\tgl.beginTransformFeedback(gl.POINTS);\n\t\t\t}\n\n\t\t\tvar mode = this.glPrimitive[primitive.type];\n\t\t\tvar count = primitive.count;\n\n\t\t\tif (primitive.indexed) {\n\t\t\t\tvar indexBuffer = this.indexBuffer;\n\t\t\t\tvar format = indexBuffer.glFormat;\n\t\t\t\tvar offset = primitive.base * indexBuffer.bytesPerIndex;\n\n\t\t\t\tif (numInstances > 0) {\n\t\t\t\t\tgl.drawElementsInstanced(mode, count, format, offset, numInstances);\n\t\t\t\t} else {\n\t\t\t\t\tgl.drawElements(mode, count, format, offset);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar first = primitive.base;\n\n\t\t\t\tif (numInstances > 0) {\n\t\t\t\t\tgl.drawArraysInstanced(mode, first, count, numInstances);\n\t\t\t\t} else {\n\t\t\t\t\tgl.drawArrays(mode, first, count);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.webgl2 && this.transformFeedbackBuffer) {\n\t\t\t\tgl.endTransformFeedback();\n\t\t\t\tgl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, null);\n\t\t\t}\n\n\t\t\tthis._drawCallsPerFrame++;\n\t\t};\n\n\t\t_proto.clear = function clear(options) {\n\t\t\tvar defaultOptions = this.defaultClearOptions;\n\t\t\toptions = options || defaultOptions;\n\t\t\tvar flags = options.flags == undefined ? defaultOptions.flags : options.flags;\n\n\t\t\tif (flags !== 0) {\n\t\t\t\tvar gl = this.gl;\n\n\t\t\t\tif (flags & CLEARFLAG_COLOR) {\n\t\t\t\t\tvar color = options.color == undefined ? defaultOptions.color : options.color;\n\t\t\t\t\tthis.setClearColor(color[0], color[1], color[2], color[3]);\n\t\t\t\t}\n\n\t\t\t\tif (flags & CLEARFLAG_DEPTH) {\n\t\t\t\t\tvar depth = options.depth == undefined ? defaultOptions.depth : options.depth;\n\t\t\t\t\tthis.setClearDepth(depth);\n\n\t\t\t\t\tif (!this.depthWrite) {\n\t\t\t\t\t\tgl.depthMask(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (flags & CLEARFLAG_STENCIL) {\n\t\t\t\t\tvar stencil = options.stencil == undefined ? defaultOptions.stencil : options.stencil;\n\t\t\t\t\tthis.setClearStencil(stencil);\n\t\t\t\t}\n\n\t\t\t\tgl.clear(this.glClearFlag[flags]);\n\n\t\t\t\tif (flags & CLEARFLAG_DEPTH) {\n\t\t\t\t\tif (!this.depthWrite) {\n\t\t\t\t\t\tgl.depthMask(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.readPixels = function readPixels(x, y, w, h, pixels) {\n\t\t\tvar gl = this.gl;\n\t\t\tgl.readPixels(x, y, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\t};\n\n\t\t_proto.setClearDepth = function setClearDepth(depth) {\n\t\t\tif (depth !== this.clearDepth) {\n\t\t\t\tthis.gl.clearDepth(depth);\n\t\t\t\tthis.clearDepth = depth;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setClearColor = function setClearColor(r, g, b, a) {\n\t\t\tif (r !== this.clearRed || g !== this.clearGreen || b !== this.clearBlue || a !== this.clearAlpha) {\n\t\t\t\tthis.gl.clearColor(r, g, b, a);\n\t\t\t\tthis.clearRed = r;\n\t\t\t\tthis.clearGreen = g;\n\t\t\t\tthis.clearBlue = b;\n\t\t\t\tthis.clearAlpha = a;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setClearStencil = function setClearStencil(value) {\n\t\t\tif (value !== this.clearStencil) {\n\t\t\t\tthis.gl.clearStencil(value);\n\t\t\t\tthis.clearStencil = value;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setRenderTarget = function setRenderTarget(renderTarget) {\n\t\t\tthis.renderTarget = renderTarget;\n\t\t};\n\n\t\t_proto.getRenderTarget = function getRenderTarget() {\n\t\t\treturn this.renderTarget;\n\t\t};\n\n\t\t_proto.getDepthTest = function getDepthTest() {\n\t\t\treturn this.depthTest;\n\t\t};\n\n\t\t_proto.setDepthTest = function setDepthTest(depthTest) {\n\t\t\tif (this.depthTest !== depthTest) {\n\t\t\t\tvar gl = this.gl;\n\n\t\t\t\tif (depthTest) {\n\t\t\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\t\t} else {\n\t\t\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\t\t}\n\n\t\t\t\tthis.depthTest = depthTest;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setDepthFunc = function setDepthFunc(func) {\n\t\t\tif (this.depthFunc === func) return;\n\t\t\tthis.gl.depthFunc(this.glComparison[func]);\n\t\t\tthis.depthFunc = func;\n\t\t};\n\n\t\t_proto.getDepthWrite = function getDepthWrite() {\n\t\t\treturn this.depthWrite;\n\t\t};\n\n\t\t_proto.setDepthWrite = function setDepthWrite(writeDepth) {\n\t\t\tif (this.depthWrite !== writeDepth) {\n\t\t\t\tthis.gl.depthMask(writeDepth);\n\t\t\t\tthis.depthWrite = writeDepth;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setColorWrite = function setColorWrite(writeRed, writeGreen, writeBlue, writeAlpha) {\n\t\t\tif (this.writeRed !== writeRed || this.writeGreen !== writeGreen || this.writeBlue !== writeBlue || this.writeAlpha !== writeAlpha) {\n\t\t\t\tthis.gl.colorMask(writeRed, writeGreen, writeBlue, writeAlpha);\n\t\t\t\tthis.writeRed = writeRed;\n\t\t\t\tthis.writeGreen = writeGreen;\n\t\t\t\tthis.writeBlue = writeBlue;\n\t\t\t\tthis.writeAlpha = writeAlpha;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setAlphaToCoverage = function setAlphaToCoverage(state) {\n\t\t\tif (!this.webgl2) return;\n\t\t\tif (this.alphaToCoverage === state) return;\n\t\t\tthis.alphaToCoverage = state;\n\n\t\t\tif (state) {\n\t\t\t\tthis.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\t} else {\n\t\t\t\tthis.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setTransformFeedbackBuffer = function setTransformFeedbackBuffer(tf) {\n\t\t\tif (this.transformFeedbackBuffer === tf) return;\n\t\t\tthis.transformFeedbackBuffer = tf;\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tvar gl = this.gl;\n\n\t\t\t\tif (tf) {\n\t\t\t\t\tif (!this.feedback) {\n\t\t\t\t\t\tthis.feedback = gl.createTransformFeedback();\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, this.feedback);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setRaster = function setRaster(on) {\n\t\t\tif (this.raster === on) return;\n\t\t\tthis.raster = on;\n\n\t\t\tif (this.webgl2) {\n\t\t\t\tif (on) {\n\t\t\t\t\tthis.gl.disable(this.gl.RASTERIZER_DISCARD);\n\t\t\t\t} else {\n\t\t\t\t\tthis.gl.enable(this.gl.RASTERIZER_DISCARD);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.setDepthBias = function setDepthBias(on) {\n\t\t\tif (this.depthBiasEnabled === on) return;\n\t\t\tthis.depthBiasEnabled = on;\n\n\t\t\tif (on) {\n\t\t\t\tthis.gl.enable(this.gl.POLYGON_OFFSET_FILL);\n\t\t\t} else {\n\t\t\t\tthis.gl.disable(this.gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setDepthBiasValues = function setDepthBiasValues(constBias, slopeBias) {\n\t\t\tthis.gl.polygonOffset(slopeBias, constBias);\n\t\t};\n\n\t\t_proto.getBlending = function getBlending() {\n\t\t\treturn this.blending;\n\t\t};\n\n\t\t_proto.setBlending = function setBlending(blending) {\n\t\t\tif (this.blending !== blending) {\n\t\t\t\tvar gl = this.gl;\n\n\t\t\t\tif (blending) {\n\t\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t\t} else {\n\t\t\t\t\tgl.disable(gl.BLEND);\n\t\t\t\t}\n\n\t\t\t\tthis.blending = blending;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilTest = function setStencilTest(enable) {\n\t\t\tif (this.stencil !== enable) {\n\t\t\t\tvar gl = this.gl;\n\n\t\t\t\tif (enable) {\n\t\t\t\t\tgl.enable(gl.STENCIL_TEST);\n\t\t\t\t} else {\n\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t}\n\n\t\t\t\tthis.stencil = enable;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilFunc = function setStencilFunc(func, ref, mask) {\n\t\t\tif (this.stencilFuncFront !== func || this.stencilRefFront !== ref || this.stencilMaskFront !== mask || this.stencilFuncBack !== func || this.stencilRefBack !== ref || this.stencilMaskBack !== mask) {\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.stencilFunc(this.glComparison[func], ref, mask);\n\t\t\t\tthis.stencilFuncFront = this.stencilFuncBack = func;\n\t\t\t\tthis.stencilRefFront = this.stencilRefBack = ref;\n\t\t\t\tthis.stencilMaskFront = this.stencilMaskBack = mask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilFuncFront = function setStencilFuncFront(func, ref, mask) {\n\t\t\tif (this.stencilFuncFront !== func || this.stencilRefFront !== ref || this.stencilMaskFront !== mask) {\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.stencilFuncSeparate(gl.FRONT, this.glComparison[func], ref, mask);\n\t\t\t\tthis.stencilFuncFront = func;\n\t\t\t\tthis.stencilRefFront = ref;\n\t\t\t\tthis.stencilMaskFront = mask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilFuncBack = function setStencilFuncBack(func, ref, mask) {\n\t\t\tif (this.stencilFuncBack !== func || this.stencilRefBack !== ref || this.stencilMaskBack !== mask) {\n\t\t\t\tvar gl = this.gl;\n\t\t\t\tgl.stencilFuncSeparate(gl.BACK, this.glComparison[func], ref, mask);\n\t\t\t\tthis.stencilFuncBack = func;\n\t\t\t\tthis.stencilRefBack = ref;\n\t\t\t\tthis.stencilMaskBack = mask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilOperation = function setStencilOperation(fail, zfail, zpass, writeMask) {\n\t\t\tif (this.stencilFailFront !== fail || this.stencilZfailFront !== zfail || this.stencilZpassFront !== zpass || this.stencilFailBack !== fail || this.stencilZfailBack !== zfail || this.stencilZpassBack !== zpass) {\n\t\t\t\tthis.gl.stencilOp(this.glStencilOp[fail], this.glStencilOp[zfail], this.glStencilOp[zpass]);\n\t\t\t\tthis.stencilFailFront = this.stencilFailBack = fail;\n\t\t\t\tthis.stencilZfailFront = this.stencilZfailBack = zfail;\n\t\t\t\tthis.stencilZpassFront = this.stencilZpassBack = zpass;\n\t\t\t}\n\n\t\t\tif (this.stencilWriteMaskFront !== writeMask || this.stencilWriteMaskBack !== writeMask) {\n\t\t\t\tthis.gl.stencilMask(writeMask);\n\t\t\t\tthis.stencilWriteMaskFront = writeMask;\n\t\t\t\tthis.stencilWriteMaskBack = writeMask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilOperationFront = function setStencilOperationFront(fail, zfail, zpass, writeMask) {\n\t\t\tif (this.stencilFailFront !== fail || this.stencilZfailFront !== zfail || this.stencilZpassFront !== zpass) {\n\t\t\t\tthis.gl.stencilOpSeparate(this.gl.FRONT, this.glStencilOp[fail], this.glStencilOp[zfail], this.glStencilOp[zpass]);\n\t\t\t\tthis.stencilFailFront = fail;\n\t\t\t\tthis.stencilZfailFront = zfail;\n\t\t\t\tthis.stencilZpassFront = zpass;\n\t\t\t}\n\n\t\t\tif (this.stencilWriteMaskFront !== writeMask) {\n\t\t\t\tthis.gl.stencilMaskSeparate(this.gl.FRONT, writeMask);\n\t\t\t\tthis.stencilWriteMaskFront = writeMask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setStencilOperationBack = function setStencilOperationBack(fail, zfail, zpass, writeMask) {\n\t\t\tif (this.stencilFailBack !== fail || this.stencilZfailBack !== zfail || this.stencilZpassBack !== zpass) {\n\t\t\t\tthis.gl.stencilOpSeparate(this.gl.BACK, this.glStencilOp[fail], this.glStencilOp[zfail], this.glStencilOp[zpass]);\n\t\t\t\tthis.stencilFailBack = fail;\n\t\t\t\tthis.stencilZfailBack = zfail;\n\t\t\t\tthis.stencilZpassBack = zpass;\n\t\t\t}\n\n\t\t\tif (this.stencilWriteMaskBack !== writeMask) {\n\t\t\t\tthis.gl.stencilMaskSeparate(this.gl.BACK, writeMask);\n\t\t\t\tthis.stencilWriteMaskBack = writeMask;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setBlendFunction = function setBlendFunction(blendSrc, blendDst) {\n\t\t\tif (this.blendSrc !== blendSrc || this.blendDst !== blendDst || this.separateAlphaBlend) {\n\t\t\t\tthis.gl.blendFunc(this.glBlendFunction[blendSrc], this.glBlendFunction[blendDst]);\n\t\t\t\tthis.blendSrc = blendSrc;\n\t\t\t\tthis.blendDst = blendDst;\n\t\t\t\tthis.separateAlphaBlend = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setBlendFunctionSeparate = function setBlendFunctionSeparate(blendSrc, blendDst, blendSrcAlpha, blendDstAlpha) {\n\t\t\tif (this.blendSrc !== blendSrc || this.blendDst !== blendDst || this.blendSrcAlpha !== blendSrcAlpha || this.blendDstAlpha !== blendDstAlpha || !this.separateAlphaBlend) {\n\t\t\t\tthis.gl.blendFuncSeparate(this.glBlendFunction[blendSrc], this.glBlendFunction[blendDst], this.glBlendFunction[blendSrcAlpha], this.glBlendFunction[blendDstAlpha]);\n\t\t\t\tthis.blendSrc = blendSrc;\n\t\t\t\tthis.blendDst = blendDst;\n\t\t\t\tthis.blendSrcAlpha = blendSrcAlpha;\n\t\t\t\tthis.blendDstAlpha = blendDstAlpha;\n\t\t\t\tthis.separateAlphaBlend = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setBlendEquation = function setBlendEquation(blendEquation) {\n\t\t\tif (this.blendEquation !== blendEquation || this.separateAlphaEquation) {\n\t\t\t\tthis.gl.blendEquation(this.glBlendEquation[blendEquation]);\n\t\t\t\tthis.blendEquation = blendEquation;\n\t\t\t\tthis.separateAlphaEquation = false;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setBlendEquationSeparate = function setBlendEquationSeparate(blendEquation, blendAlphaEquation) {\n\t\t\tif (this.blendEquation !== blendEquation || this.blendAlphaEquation !== blendAlphaEquation || !this.separateAlphaEquation) {\n\t\t\t\tthis.gl.blendEquationSeparate(this.glBlendEquation[blendEquation], this.glBlendEquation[blendAlphaEquation]);\n\t\t\t\tthis.blendEquation = blendEquation;\n\t\t\t\tthis.blendAlphaEquation = blendAlphaEquation;\n\t\t\t\tthis.separateAlphaEquation = true;\n\t\t\t}\n\t\t};\n\n\t\t_proto.setCullMode = function setCullMode(cullMode) {\n\t\t\tif (this.cullMode !== cullMode) {\n\t\t\t\tif (cullMode === CULLFACE_NONE) {\n\t\t\t\t\tthis.gl.disable(this.gl.CULL_FACE);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cullMode === CULLFACE_NONE) {\n\t\t\t\t\t\tthis.gl.enable(this.gl.CULL_FACE);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mode = this.glCull[cullMode];\n\n\t\t\t\t\tif (this.cullFace !== mode) {\n\t\t\t\t\t\tthis.gl.cullFace(mode);\n\t\t\t\t\t\tthis.cullFace = mode;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cullMode = cullMode;\n\t\t\t}\n\t\t};\n\n\t\t_proto.getCullMode = function getCullMode() {\n\t\t\treturn this.cullMode;\n\t\t};\n\n\t\t_proto.setIndexBuffer = function setIndexBuffer(indexBuffer) {\n\t\t\tthis.indexBuffer = indexBuffer;\n\t\t};\n\n\t\t_proto.setVertexBuffer = function setVertexBuffer(vertexBuffer) {\n\t\t\tif (vertexBuffer) {\n\t\t\t\tthis.vertexBuffers.push(vertexBuffer);\n\t\t\t}\n\t\t};\n\n\t\t_proto.compileShaderSource = function compileShaderSource(src, isVertexShader) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar glShader = isVertexShader ? this.vertexShaderCache[src] : this.fragmentShaderCache[src];\n\n\t\t\tif (!glShader) {\n\t\t\t\tglShader = gl.createShader(isVertexShader ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n\t\t\t\tgl.shaderSource(glShader, src);\n\t\t\t\tgl.compileShader(glShader);\n\n\t\t\t\tif (isVertexShader) {\n\t\t\t\t\tthis.vertexShaderCache[src] = glShader;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentShaderCache[src] = glShader;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn glShader;\n\t\t};\n\n\t\t_proto.compileAndLinkShader = function compileAndLinkShader(shader) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar definition = shader.definition;\n\t\t\tvar attr,\n\t\t\t\t\tattrs = definition.attributes;\n\t\t\tvar glVertexShader = this.compileShaderSource(definition.vshader, true);\n\t\t\tvar glFragmentShader = this.compileShaderSource(definition.fshader, false);\n\t\t\tvar glProgram = gl.createProgram();\n\t\t\tgl.attachShader(glProgram, glVertexShader);\n\t\t\tgl.attachShader(glProgram, glFragmentShader);\n\n\t\t\tif (this.webgl2 && definition.useTransformFeedback) {\n\t\t\t\tvar outNames = [];\n\n\t\t\t\tfor (attr in attrs) {\n\t\t\t\t\tif (attrs.hasOwnProperty(attr)) {\n\t\t\t\t\t\toutNames.push(\"out_\" + attr);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl.transformFeedbackVaryings(glProgram, outNames, gl.INTERLEAVED_ATTRIBS);\n\t\t\t}\n\n\t\t\tfor (attr in attrs) {\n\t\t\t\tif (attrs.hasOwnProperty(attr)) {\n\t\t\t\t\tvar semantic = attrs[attr];\n\t\t\t\t\tvar loc = semanticToLocation[semantic];\n\t\t\t\t\tgl.bindAttribLocation(glProgram, loc, attr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgl.linkProgram(glProgram);\n\t\t\tshader._glVertexShader = glVertexShader;\n\t\t\tshader._glFragmentShader = glFragmentShader;\n\t\t\tshader._glProgram = glProgram;\n\t\t};\n\n\t\t_proto.createShader = function createShader(shader) {\n\t\t\tthis.compileAndLinkShader(shader);\n\t\t\tthis.shaders.push(shader);\n\t\t};\n\n\t\t_proto.destroyShader = function destroyShader(shader) {\n\t\t\tvar idx = this.shaders.indexOf(shader);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tthis.shaders.splice(idx, 1);\n\t\t\t}\n\n\t\t\tif (shader._glProgram) {\n\t\t\t\tthis.gl.deleteProgram(shader._glProgram);\n\t\t\t\tshader._glProgram = null;\n\t\t\t\tthis.removeShaderFromCache(shader);\n\t\t\t}\n\t\t};\n\n\t\t_proto._addLineNumbers = function _addLineNumbers(src) {\n\t\t\tvar lines = src.split(\"\\n\");\n\n\t\t\tfor (var i = 0, len = lines.length; i < len; i++) {\n\t\t\t\tlines[i] = i + 1 + \":\\t\" + lines[i];\n\t\t\t}\n\n\t\t\treturn lines.join(\"\\n\");\n\t\t};\n\n\t\t_proto.postLink = function postLink(shader) {\n\t\t\tvar gl = this.gl;\n\t\t\tvar glVertexShader = shader._glVertexShader;\n\t\t\tvar glFragmentShader = shader._glFragmentShader;\n\t\t\tvar glProgram = shader._glProgram;\n\t\t\tvar definition = shader.definition;\n\n\t\t\tif (!gl.getShaderParameter(glVertexShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.error(\"Failed to compile vertex shader:\\n\\n\" + this._addLineNumbers(definition.vshader) + \"\\n\\n\" + gl.getShaderInfoLog(glVertexShader));\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!gl.getShaderParameter(glFragmentShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.error(\"Failed to compile fragment shader:\\n\\n\" + this._addLineNumbers(definition.fshader) + \"\\n\\n\" + gl.getShaderInfoLog(glFragmentShader));\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!gl.getProgramParameter(glProgram, gl.LINK_STATUS)) {\n\t\t\t\tconsole.error(\"Failed to link shader program. Error: \" + gl.getProgramInfoLog(glProgram));\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, info, location, shaderInput;\n\t\t\ti = 0;\n\t\t\tvar numAttributes = gl.getProgramParameter(glProgram, gl.ACTIVE_ATTRIBUTES);\n\n\t\t\twhile (i < numAttributes) {\n\t\t\t\tinfo = gl.getActiveAttrib(glProgram, i++);\n\t\t\t\tlocation = gl.getAttribLocation(glProgram, info.name);\n\n\t\t\t\tif (definition.attributes[info.name] === undefined) {\n\t\t\t\t\tconsole.error('Vertex shader attribute \"' + info.name + '\" is not mapped to a semantic in shader definition.');\n\t\t\t\t}\n\n\t\t\t\tshaderInput = new ShaderInput(this, definition.attributes[info.name], this.pcUniformType[info.type], location);\n\t\t\t\tshader.attributes.push(shaderInput);\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tvar numUniforms = gl.getProgramParameter(glProgram, gl.ACTIVE_UNIFORMS);\n\n\t\t\twhile (i < numUniforms) {\n\t\t\t\tinfo = gl.getActiveUniform(glProgram, i++);\n\t\t\t\tlocation = gl.getUniformLocation(glProgram, info.name);\n\t\t\t\tshaderInput = new ShaderInput(this, info.name, this.pcUniformType[info.type], location);\n\n\t\t\t\tif (info.type === gl.SAMPLER_2D || info.type === gl.SAMPLER_CUBE || this.webgl2 && (info.type === gl.SAMPLER_2D_SHADOW || info.type === gl.SAMPLER_CUBE_SHADOW || info.type === gl.SAMPLER_3D)) {\n\t\t\t\t\tshader.samplers.push(shaderInput);\n\t\t\t\t} else {\n\t\t\t\t\tshader.uniforms.push(shaderInput);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshader.ready = true;\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.setShader = function setShader(shader) {\n\t\t\tif (shader !== this.shader) {\n\t\t\t\tif (!shader.ready) {\n\t\t\t\t\tif (!this.postLink(shader)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.shader = shader;\n\t\t\t\tthis.gl.useProgram(shader._glProgram);\n\t\t\t\tthis.attributesInvalidated = true;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.getHdrFormat = function getHdrFormat() {\n\t\t\tif (this.textureHalfFloatRenderable) {\n\t\t\t\treturn PIXELFORMAT_RGBA16F;\n\t\t\t} else if (this.textureFloatRenderable) {\n\t\t\t\treturn PIXELFORMAT_RGBA32F;\n\t\t\t}\n\n\t\t\treturn PIXELFORMAT_R8_G8_B8_A8;\n\t\t};\n\n\t\t_proto.getBoneLimit = function getBoneLimit() {\n\t\t\treturn this.boneLimit;\n\t\t};\n\n\t\t_proto.setBoneLimit = function setBoneLimit(maxBones) {\n\t\t\tthis.boneLimit = maxBones;\n\t\t};\n\n\t\t_proto.resizeCanvas = function resizeCanvas(width, height) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tvar ratio = Math.min(this._maxPixelRatio, window.devicePixelRatio);\n\t\t\twidth *= ratio;\n\t\t\theight *= ratio;\n\t\t\tif (this.canvas.width === width && this.canvas.height === height) return;\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\t\t\tthis.fire(EVENT_RESIZE, width, height);\n\t\t};\n\n\t\t_proto.setResolution = function setResolution(width, height) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\t\t\tthis.fire(EVENT_RESIZE, width, height);\n\t\t};\n\n\t\t_proto.clearShaderCache = function clearShaderCache() {\n\t\t\tvar gl = this.gl;\n\t\t\tvar shaderSrc;\n\n\t\t\tfor (shaderSrc in this.fragmentShaderCache) {\n\t\t\t\tgl.deleteShader(this.fragmentShaderCache[shaderSrc]);\n\t\t\t\tdelete this.fragmentShaderCache[shaderSrc];\n\t\t\t}\n\n\t\t\tfor (shaderSrc in this.vertexShaderCache) {\n\t\t\t\tgl.deleteShader(this.vertexShaderCache[shaderSrc]);\n\t\t\t\tdelete this.vertexShaderCache[shaderSrc];\n\t\t\t}\n\n\t\t\tthis.programLib.clearCache();\n\t\t};\n\n\t\t_proto.clearVertexArrayObjectCache = function clearVertexArrayObjectCache() {\n\t\t\tvar gl = this.gl;\n\n\t\t\tthis._vaoMap.forEach(function (item, key, mapObj) {\n\t\t\t\tgl.deleteVertexArray(item);\n\t\t\t});\n\n\t\t\tthis._vaoMap.clear();\n\t\t};\n\n\t\t_proto.removeShaderFromCache = function removeShaderFromCache(shader) {\n\t\t\tthis.programLib.removeFromCache(shader);\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tvar gl = this.gl;\n\t\t\tthis.destroyGrabPass();\n\n\t\t\tif (this.webgl2 && this.feedback) {\n\t\t\t\tgl.deleteTransformFeedback(this.feedback);\n\t\t\t}\n\n\t\t\tthis.clearShaderCache();\n\t\t\tthis.clearVertexArrayObjectCache();\n\t\t\tthis.canvas.removeEventListener('webglcontextlost', this._contextLostHandler, false);\n\t\t\tthis.canvas.removeEventListener('webglcontextrestored', this._contextRestoredHandler, false);\n\t\t\tthis._contextLostHandler = null;\n\t\t\tthis._contextRestoredHandler = null;\n\t\t\tthis.canvas = null;\n\t\t\tthis.gl = null;\n\t\t};\n\n\t\t_createClass(GraphicsDevice, [{\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.gl.drawingBufferWidth || this.canvas.width;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.gl.drawingBufferHeight || this.canvas.height;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"fullscreen\",\n\t\t\tget: function get() {\n\t\t\t\treturn !!document.fullscreenElement;\n\t\t\t},\n\t\t\tset: function set(fullscreen) {\n\t\t\t\tif (fullscreen) {\n\t\t\t\t\tvar canvas = this.gl.canvas;\n\t\t\t\t\tcanvas.requestFullscreen();\n\t\t\t\t} else {\n\t\t\t\t\tdocument.exitFullscreen();\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"enableAutoInstancing\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enableAutoInstancing;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._enableAutoInstancing = value && this.extInstancing;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"maxPixelRatio\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._maxPixelRatio;\n\t\t\t},\n\t\t\tset: function set(ratio) {\n\t\t\t\tthis._maxPixelRatio = ratio;\n\t\t\t\tthis.resizeCanvas(this._width, this._height);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"textureFloatHighPrecision\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._textureFloatHighPrecision === undefined) {\n\t\t\t\t\tthis._textureFloatHighPrecision = testTextureFloatHighPrecision(this);\n\t\t\t\t}\n\n\t\t\t\treturn this._textureFloatHighPrecision;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"textureHalfFloatUpdatable\",\n\t\t\tget: function get() {\n\t\t\t\tif (this._textureHalfFloatUpdatable === undefined) {\n\t\t\t\t\tif (this.webgl2) {\n\t\t\t\t\t\tthis._textureHalfFloatUpdatable = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._textureHalfFloatUpdatable = testTextureHalfFloatUpdatable(this.gl, this.extTextureHalfFloat.HALF_FLOAT_OES);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._textureHalfFloatUpdatable;\n\t\t\t}\n\t\t}]);\n\n\t\treturn GraphicsDevice;\n\t}(EventHandler);\n\n\tvar defaultOptions = {\n\t\tdepth: true,\n\t\tface: 0\n\t};\n\n\tvar RenderTarget = function () {\n\t\tfunction RenderTarget(options) {\n\t\t\tvar _arg2 = arguments[1];\n\t\t\tvar _arg3 = arguments[2];\n\n\t\t\tif (options instanceof GraphicsDevice) {\n\t\t\t\tthis._colorBuffer = _arg2;\n\t\t\t\toptions = _arg3;\n\t\t\t} else {\n\t\t\t\tthis._colorBuffer = options.colorBuffer;\n\t\t\t}\n\n\t\t\tthis._glFrameBuffer = null;\n\t\t\tthis._glDepthBuffer = null;\n\t\t\toptions = options !== undefined ? options : defaultOptions;\n\t\t\tthis._depthBuffer = options.depthBuffer;\n\t\t\tthis._face = options.face !== undefined ? options.face : 0;\n\n\t\t\tif (this._depthBuffer) {\n\t\t\t\tvar format = this._depthBuffer._format;\n\n\t\t\t\tif (format === PIXELFORMAT_DEPTH) {\n\t\t\t\t\tthis._depth = true;\n\t\t\t\t\tthis._stencil = false;\n\t\t\t\t} else if (format === PIXELFORMAT_DEPTHSTENCIL) {\n\t\t\t\t\tthis._depth = true;\n\t\t\t\t\tthis._stencil = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._depth = false;\n\t\t\t\t\tthis._stencil = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._depth = options.depth !== undefined ? options.depth : true;\n\t\t\t\tthis._stencil = options.stencil !== undefined ? options.stencil : false;\n\t\t\t}\n\n\t\t\tthis._samples = options.samples !== undefined ? options.samples : 1;\n\t\t\tthis.autoResolve = options.autoResolve !== undefined ? options.autoResolve : true;\n\t\t\tthis._glResolveFrameBuffer = null;\n\t\t\tthis._glMsaaColorBuffer = null;\n\t\t\tthis._glMsaaDepthBuffer = null;\n\t\t}\n\n\t\tvar _proto = RenderTarget.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tif (!this._device) return;\n\t\t\tvar device = this._device;\n\t\t\tvar idx = device.targets.indexOf(this);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tdevice.targets.splice(idx, 1);\n\t\t\t}\n\n\t\t\tvar gl = device.gl;\n\n\t\t\tif (this._glFrameBuffer) {\n\t\t\t\tgl.deleteFramebuffer(this._glFrameBuffer);\n\t\t\t\tthis._glFrameBuffer = null;\n\t\t\t}\n\n\t\t\tif (this._glDepthBuffer) {\n\t\t\t\tgl.deleteRenderbuffer(this._glDepthBuffer);\n\t\t\t\tthis._glDepthBuffer = null;\n\t\t\t}\n\n\t\t\tif (this._glResolveFrameBuffer) {\n\t\t\t\tgl.deleteFramebuffer(this._glResolveFrameBuffer);\n\t\t\t\tthis._glResolveFrameBuffer = null;\n\t\t\t}\n\n\t\t\tif (this._glMsaaColorBuffer) {\n\t\t\t\tgl.deleteRenderbuffer(this._glMsaaColorBuffer);\n\t\t\t\tthis._glMsaaColorBuffer = null;\n\t\t\t}\n\n\t\t\tif (this._glMsaaDepthBuffer) {\n\t\t\t\tgl.deleteRenderbuffer(this._glMsaaDepthBuffer);\n\t\t\t\tthis._glMsaaDepthBuffer = null;\n\t\t\t}\n\t\t};\n\n\t\t_proto.loseContext = function loseContext() {\n\t\t\tthis._glFrameBuffer = undefined;\n\t\t\tthis._glDepthBuffer = undefined;\n\t\t\tthis._glResolveFrameBuffer = undefined;\n\t\t\tthis._glMsaaColorBuffer = undefined;\n\t\t\tthis._glMsaaDepthBuffer = undefined;\n\t\t};\n\n\t\t_proto.resolve = function resolve(color, depth) {\n\t\t\tif (color === void 0) {\n\t\t\t\tcolor = true;\n\t\t\t}\n\n\t\t\tif (depth === void 0) {\n\t\t\t\tdepth = !!this._depthBuffer;\n\t\t\t}\n\n\t\t\tif (!this._device) return;\n\t\t\tif (!this._device.webgl2) return;\n\t\t\tvar gl = this._device.gl;\n\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._glFrameBuffer);\n\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._glResolveFrameBuffer);\n\t\t\tgl.blitFramebuffer(0, 0, this.width, this.height, 0, 0, this.width, this.height, (color ? gl.COLOR_BUFFER_BIT : 0) | (depth ? gl.DEPTH_BUFFER_BIT : 0), gl.NEAREST);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this._glFrameBuffer);\n\t\t};\n\n\t\t_proto.copy = function copy(source, color, depth) {\n\t\t\tif (!this._device) {\n\t\t\t\tif (source._device) {\n\t\t\t\t\tthis._device = source._device;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this._device.copyRenderTarget(source, this, color, depth);\n\t\t};\n\n\t\t_createClass(RenderTarget, [{\n\t\t\tkey: \"colorBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._colorBuffer;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"depthBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._depthBuffer;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"face\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._face;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._colorBuffer ? this._colorBuffer.width : this._depthBuffer.width;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._colorBuffer ? this._colorBuffer.height : this._depthBuffer.height;\n\t\t\t}\n\t\t}]);\n\n\t\treturn RenderTarget;\n\t}();\n\n\tfunction syncToCpu(device, targ, face) {\n\t\tvar tex = targ._colorBuffer;\n\t\tif (tex.format != PIXELFORMAT_R8_G8_B8_A8) return;\n\t\tvar pixels = new Uint8Array(tex.width * tex.height * 4);\n\t\tvar gl = device.gl;\n\t\tdevice.setFramebuffer(targ._glFrameBuffer);\n\t\tgl.readPixels(0, 0, tex.width, tex.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\tif (!tex._levels) tex._levels = [];\n\t\tif (!tex._levels[0]) tex._levels[0] = [];\n\t\ttex._levels[0][face] = pixels;\n\t}\n\n\tfunction prefilterCubemap(options) {\n\t\tvar device = options.device;\n\t\tvar sourceCubemap = options.sourceCubemap;\n\t\tvar method = options.method;\n\t\tvar samples = options.samples;\n\t\tvar cpuSync = options.cpuSync;\n\n\t\tif (cpuSync && !sourceCubemap._levels[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sourceType = sourceCubemap.type;\n\t\tvar rgbmSource = sourceType === TEXTURETYPE_RGBM;\n\t\tvar shader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.rgbmPS + shaderChunks.prefilterCubemapPS.replace(/\\$METHOD/g, method === 0 ? \"cos\" : \"phong\").replace(/\\$NUMSAMPLES/g, samples).replace(/\\$textureCube/g, rgbmSource ? \"textureCubeRGBM\" : \"textureCube\"), \"prefilter\" + method + \"\" + samples + \"\" + rgbmSource);\n\t\tvar shader2 = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.outputCubemapPS, \"outputCubemap\");\n\t\tvar constantTexSource = device.scope.resolve(\"source\");\n\t\tvar constantParams = device.scope.resolve(\"params\");\n\t\tvar params = new Vec4();\n\t\tvar size = sourceCubemap.width;\n\t\tvar format = sourceCubemap.format;\n\t\tvar cmapsList = [[], options.filteredFixed, options.filteredRgbm, options.filteredFixedRgbm];\n\t\tvar gloss = method === 0 ? [0.9, 0.85, 0.7, 0.4, 0.25, 0.15, 0.1] : [512, 128, 32, 8, 2, 1, 1];\n\t\tvar mipSize = [64, 32, 16, 8, 4, 2, 1];\n\t\tvar numMips = 7;\n\t\tvar targ;\n\t\tvar i, face, pass;\n\t\tvar rgbFormat = format === PIXELFORMAT_R8_G8_B8;\n\t\tvar isImg = false;\n\t\tvar nextCubemap, cubemap;\n\n\t\tif (cpuSync) {\n\t\t\tisImg = sourceCubemap._levels[0][0] instanceof HTMLImageElement;\n\t\t}\n\n\t\tif ((rgbFormat || isImg) && cpuSync) {\n\t\t\tformat = PIXELFORMAT_R8_G8_B8_A8;\n\t\t\tnextCubemap = new Texture(device, {\n\t\t\t\tcubemap: true,\n\t\t\t\ttype: sourceType,\n\t\t\t\tformat: format,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tmipmaps: false\n\t\t\t});\n\t\t\tnextCubemap.name = 'prefiltered-cube';\n\n\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\ttarg = new RenderTarget(device, nextCubemap, {\n\t\t\t\t\tface: face,\n\t\t\t\t\tdepth: false\n\t\t\t\t});\n\t\t\t\tparams.x = face;\n\t\t\t\tparams.y = 0;\n\t\t\t\tconstantTexSource.setValue(sourceCubemap);\n\t\t\t\tconstantParams.setValue(params.data);\n\t\t\t\tdrawQuadWithShader(device, targ, shader2);\n\t\t\t\tsyncToCpu(device, targ, face);\n\t\t\t}\n\n\t\t\tsourceCubemap = nextCubemap;\n\t\t}\n\n\t\tif (size > 128) {\n\t\t\tvar log128 = Math.round(Math.log2(128));\n\t\t\tvar logSize = Math.round(Math.log2(size));\n\t\t\tvar steps = logSize - log128;\n\n\t\t\tfor (i = 0; i < steps; i++) {\n\t\t\t\tsize = sourceCubemap.width * 0.5;\n\t\t\t\tvar sampleGloss = method === 0 ? 1 : Math.pow(2, Math.round(Math.log2(gloss[0]) + (steps - i) * 2));\n\t\t\t\tnextCubemap = new Texture(device, {\n\t\t\t\t\tcubemap: true,\n\t\t\t\t\ttype: sourceType,\n\t\t\t\t\tformat: format,\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tmipmaps: false\n\t\t\t\t});\n\t\t\t\tnextCubemap.name = 'prefiltered-cube';\n\n\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\ttarg = new RenderTarget(device, nextCubemap, {\n\t\t\t\t\t\tface: face,\n\t\t\t\t\t\tdepth: false\n\t\t\t\t\t});\n\t\t\t\t\tparams.x = face;\n\t\t\t\t\tparams.y = sampleGloss;\n\t\t\t\t\tparams.z = size;\n\t\t\t\t\tparams.w = rgbmSource ? 3 : 0;\n\t\t\t\t\tconstantTexSource.setValue(sourceCubemap);\n\t\t\t\t\tconstantParams.setValue(params.data);\n\t\t\t\t\tdrawQuadWithShader(device, targ, shader2);\n\n\t\t\t\t\tif (i === steps - 1 && cpuSync) {\n\t\t\t\t\t\tsyncToCpu(device, targ, face);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsourceCubemap = nextCubemap;\n\t\t\t}\n\t\t}\n\n\t\toptions.sourceCubemap = sourceCubemap;\n\t\tvar sourceCubemapRgbm = null;\n\n\t\tif (!rgbmSource && options.filteredFixedRgbm) {\n\t\t\tnextCubemap = new Texture(device, {\n\t\t\t\tcubemap: true,\n\t\t\t\ttype: TEXTURETYPE_RGBM,\n\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tmipmaps: false\n\t\t\t});\n\t\t\tnextCubemap.name = 'prefiltered-cube';\n\n\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\ttarg = new RenderTarget(device, nextCubemap, {\n\t\t\t\t\tface: face,\n\t\t\t\t\tdepth: false\n\t\t\t\t});\n\t\t\t\tparams.x = face;\n\t\t\t\tparams.w = 2;\n\t\t\t\tconstantTexSource.setValue(sourceCubemap);\n\t\t\t\tconstantParams.setValue(params.data);\n\t\t\t\tdrawQuadWithShader(device, targ, shader2);\n\t\t\t\tsyncToCpu(device, targ, face);\n\t\t\t}\n\n\t\t\tsourceCubemapRgbm = nextCubemap;\n\t\t}\n\n\t\tvar unblurredGloss = method === 0 ? 1 : 2048;\n\t\tvar startPass = method === 0 ? 0 : -1;\n\t\tcmapsList[startPass] = [];\n\n\t\tfor (i = 0; i < numMips; i++) {\n\t\t\tfor (pass = startPass; pass < cmapsList.length; pass++) {\n\t\t\t\tif (cmapsList[pass] != null) {\n\t\t\t\t\tcmapsList[pass][i] = new Texture(device, {\n\t\t\t\t\t\tcubemap: true,\n\t\t\t\t\t\ttype: pass < 2 ? sourceType : TEXTURETYPE_RGBM,\n\t\t\t\t\t\tformat: pass < 2 ? format : PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\tfixCubemapSeams: pass === 1 || pass === 3,\n\t\t\t\t\t\twidth: mipSize[i],\n\t\t\t\t\t\theight: mipSize[i],\n\t\t\t\t\t\tmipmaps: false\n\t\t\t\t\t});\n\t\t\t\t\tcmapsList[pass][i].name = 'prefiltered-cube';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (pass = startPass; pass < cmapsList.length; pass++) {\n\t\t\tif (cmapsList[pass] != null) {\n\t\t\t\tif (pass > 1 && rgbmSource) {\n\t\t\t\t\tcmapsList[pass] = cmapsList[pass - 2];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < numMips; i++) {\n\t\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\t\ttarg = new RenderTarget(device, cmapsList[pass][i], {\n\t\t\t\t\t\t\tface: face,\n\t\t\t\t\t\t\tdepth: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparams.x = face;\n\t\t\t\t\t\tparams.y = pass < 0 ? unblurredGloss : gloss[i];\n\t\t\t\t\t\tparams.z = mipSize[i];\n\t\t\t\t\t\tparams.w = rgbmSource ? 3 : pass;\n\t\t\t\t\t\tconstantTexSource.setValue(i === 0 ? sourceCubemap : method === 0 ? cmapsList[0][i - 1] : cmapsList[-1][i - 1]);\n\t\t\t\t\t\tconstantParams.setValue(params.data);\n\t\t\t\t\t\tdrawQuadWithShader(device, targ, shader);\n\t\t\t\t\t\tif (cpuSync) syncToCpu(device, targ, face);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toptions.filtered = cmapsList[0];\n\t\tvar mips;\n\n\t\tif (cpuSync && options.singleFilteredFixed) {\n\t\t\tmips = [sourceCubemap].concat(options.filteredFixed);\n\t\t\tcubemap = new Texture(device, {\n\t\t\t\tcubemap: true,\n\t\t\t\ttype: sourceType,\n\t\t\t\tfixCubemapSeams: true,\n\t\t\t\tformat: format,\n\t\t\t\twidth: 128,\n\t\t\t\theight: 128,\n\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t\t});\n\t\t\tcubemap.name = 'prefiltered-cube';\n\n\t\t\tfor (i = 0; i < mips.length; i++) {\n\t\t\t\tcubemap._levels[i] = mips[i]._levels[0];\n\t\t\t}\n\n\t\t\tcubemap.upload();\n\t\t\tcubemap._prefilteredMips = true;\n\t\t\toptions.singleFilteredFixed = cubemap;\n\t\t}\n\n\t\tif (cpuSync && options.singleFilteredFixedRgbm && options.filteredFixedRgbm) {\n\t\t\tmips = [sourceCubemapRgbm].concat(options.filteredFixedRgbm);\n\t\t\tcubemap = new Texture(device, {\n\t\t\t\tcubemap: true,\n\t\t\t\ttype: TEXTURETYPE_RGBM,\n\t\t\t\tfixCubemapSeams: true,\n\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\twidth: 128,\n\t\t\t\theight: 128,\n\t\t\t\taddressU: ADDRESS_CLAMP_TO_EDGE,\n\t\t\t\taddressV: ADDRESS_CLAMP_TO_EDGE\n\t\t\t});\n\t\t\tcubemap.name = 'prefiltered-cube';\n\n\t\t\tfor (i = 0; i < mips.length; i++) {\n\t\t\t\tcubemap._levels[i] = mips[i]._levels[0];\n\t\t\t}\n\n\t\t\tcubemap.upload();\n\t\t\tcubemap._prefilteredMips = true;\n\t\t\toptions.singleFilteredFixedRgbm = cubemap;\n\t\t}\n\t}\n\n\tfunction areaElement(x, y) {\n\t\treturn Math.atan2(x * y, Math.sqrt(x * x + y * y + 1));\n\t}\n\n\tfunction texelCoordSolidAngle(u, v, size) {\n\t\tvar _u = 2.0 * (u + 0.5) / size - 1.0;\n\n\t\tvar _v = 2.0 * (v + 0.5) / size - 1.0;\n\n\t\t_u *= 1.0 - 1.0 / size;\n\t\t_v *= 1.0 - 1.0 / size;\n\t\tvar invResolution = 1.0 / size;\n\t\tvar x0 = _u - invResolution;\n\t\tvar y0 = _v - invResolution;\n\t\tvar x1 = _u + invResolution;\n\t\tvar y1 = _v + invResolution;\n\t\tvar solidAngle = areaElement(x0, y0) - areaElement(x0, y1) - areaElement(x1, y0) + areaElement(x1, y1);\n\n\t\tif (u === 0 && v === 0 || u === size - 1 && v === 0 || u === 0 && v === size - 1 || u === size - 1 && v === size - 1) {\n\t\t\tsolidAngle /= 3;\n\t\t} else if (u === 0 || v === 0 || u === size - 1 || v === size - 1) {\n\t\t\tsolidAngle *= 0.5;\n\t\t}\n\n\t\treturn solidAngle;\n\t}\n\n\tfunction shFromCubemap(device, source, dontFlipX) {\n\t\tvar face;\n\t\tvar cubeSize = source.width;\n\t\tvar x, y;\n\n\t\tif (source.format !== PIXELFORMAT_R8_G8_B8_A8) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!source._levels[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!source._levels[0][0].length) {\n\t\t\tif (source._levels[0][0] instanceof HTMLImageElement) {\n\t\t\t\tvar gl = device.gl;\n\t\t\t\tvar shader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, shaderChunks.fullscreenQuadPS, \"fsQuadSimple\");\n\t\t\t\tvar constantTexSource = device.scope.resolve(\"source\");\n\n\t\t\t\tfor (face = 0; face < 6; face++) {\n\t\t\t\t\tvar img = source._levels[0][face];\n\t\t\t\t\tvar tex = new Texture(device, {\n\t\t\t\t\t\tcubemap: false,\n\t\t\t\t\t\ttype: TEXTURETYPE_DEFAULT,\n\t\t\t\t\t\tformat: source.format,\n\t\t\t\t\t\twidth: cubeSize,\n\t\t\t\t\t\theight: cubeSize,\n\t\t\t\t\t\tmipmaps: false\n\t\t\t\t\t});\n\t\t\t\t\ttex.name = 'prefiltered-cube';\n\t\t\t\t\ttex._levels[0] = img;\n\t\t\t\t\ttex.upload();\n\t\t\t\t\tvar tex2 = new Texture(device, {\n\t\t\t\t\t\tcubemap: false,\n\t\t\t\t\t\ttype: TEXTURETYPE_DEFAULT,\n\t\t\t\t\t\tformat: source.format,\n\t\t\t\t\t\twidth: cubeSize,\n\t\t\t\t\t\theight: cubeSize,\n\t\t\t\t\t\tmipmaps: false\n\t\t\t\t\t});\n\t\t\t\t\ttex2.name = 'prefiltered-cube';\n\t\t\t\t\tvar targ = new RenderTarget(device, tex2, {\n\t\t\t\t\t\tdepth: false\n\t\t\t\t\t});\n\t\t\t\t\tconstantTexSource.setValue(tex);\n\t\t\t\t\tdrawQuadWithShader(device, targ, shader);\n\t\t\t\t\tvar pixels = new Uint8Array(cubeSize * cubeSize * 4);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, targ._glFrameBuffer);\n\t\t\t\t\tgl.readPixels(0, 0, tex.width, tex.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\t\t\t\t\tsource._levels[0][face] = pixels;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar dirs = [];\n\n\t\tfor (y = 0; y < cubeSize; y++) {\n\t\t\tfor (x = 0; x < cubeSize; x++) {\n\t\t\t\tvar u = x / (cubeSize - 1) * 2 - 1;\n\t\t\t\tvar v = y / (cubeSize - 1) * 2 - 1;\n\t\t\t\tdirs[y * cubeSize + x] = new Vec3(u, v, 1.0).normalize();\n\t\t\t}\n\t\t}\n\n\t\tvar sh = new Float32Array(9 * 3);\n\t\tvar coef1 = 0;\n\t\tvar coef2 = 1 * 3;\n\t\tvar coef3 = 2 * 3;\n\t\tvar coef4 = 3 * 3;\n\t\tvar coef5 = 4 * 3;\n\t\tvar coef6 = 5 * 3;\n\t\tvar coef7 = 6 * 3;\n\t\tvar coef8 = 7 * 3;\n\t\tvar coef9 = 8 * 3;\n\t\tvar nx = 0;\n\t\tvar px = 1;\n\t\tvar ny = 2;\n\t\tvar py = 3;\n\t\tvar nz = 4;\n\t\tvar pz = 5;\n\t\tvar addr, c, a, value, weight, dir, dx, dy, dz;\n\t\tvar weight1, weight2, weight3, weight4, weight5;\n\t\tvar accum = 0;\n\n\t\tfor (face = 0; face < 6; face++) {\n\t\t\tfor (y = 0; y < cubeSize; y++) {\n\t\t\t\tfor (x = 0; x < cubeSize; x++) {\n\t\t\t\t\taddr = y * cubeSize + x;\n\t\t\t\t\tweight = texelCoordSolidAngle(x, y, cubeSize);\n\t\t\t\t\tweight1 = weight * 4 / 17;\n\t\t\t\t\tweight2 = weight * 8 / 17;\n\t\t\t\t\tweight3 = weight * 15 / 17;\n\t\t\t\t\tweight4 = weight * 5 / 68;\n\t\t\t\t\tweight5 = weight * 15 / 68;\n\t\t\t\t\tdir = dirs[addr];\n\n\t\t\t\t\tif (face == nx) {\n\t\t\t\t\t\tdx = dir.z;\n\t\t\t\t\t\tdy = -dir.y;\n\t\t\t\t\t\tdz = -dir.x;\n\t\t\t\t\t} else if (face == px) {\n\t\t\t\t\t\tdx = -dir.z;\n\t\t\t\t\t\tdy = -dir.y;\n\t\t\t\t\t\tdz = dir.x;\n\t\t\t\t\t} else if (face == ny) {\n\t\t\t\t\t\tdx = dir.x;\n\t\t\t\t\t\tdy = dir.z;\n\t\t\t\t\t\tdz = dir.y;\n\t\t\t\t\t} else if (face == py) {\n\t\t\t\t\t\tdx = dir.x;\n\t\t\t\t\t\tdy = -dir.z;\n\t\t\t\t\t\tdz = -dir.y;\n\t\t\t\t\t} else if (face == nz) {\n\t\t\t\t\t\tdx = dir.x;\n\t\t\t\t\t\tdy = -dir.y;\n\t\t\t\t\t\tdz = dir.z;\n\t\t\t\t\t} else if (face == pz) {\n\t\t\t\t\t\tdx = -dir.x;\n\t\t\t\t\t\tdy = -dir.y;\n\t\t\t\t\t\tdz = -dir.z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!dontFlipX) dx = -dx;\n\t\t\t\t\ta = source._levels[0][face][addr * 4 + 3] / 255.0;\n\n\t\t\t\t\tfor (c = 0; c < 3; c++) {\n\t\t\t\t\t\tvalue = source._levels[0][face][addr * 4 + c] / 255.0;\n\n\t\t\t\t\t\tif (source.type === TEXTURETYPE_RGBM) {\n\t\t\t\t\t\t\tvalue *= a * 8.0;\n\t\t\t\t\t\t\tvalue *= value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = Math.pow(value, 2.2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsh[coef1 + c] += value * weight1;\n\t\t\t\t\t\tsh[coef2 + c] += value * weight2 * dx;\n\t\t\t\t\t\tsh[coef3 + c] += value * weight2 * dy;\n\t\t\t\t\t\tsh[coef4 + c] += value * weight2 * dz;\n\t\t\t\t\t\tsh[coef5 + c] += value * weight3 * dx * dz;\n\t\t\t\t\t\tsh[coef6 + c] += value * weight3 * dz * dy;\n\t\t\t\t\t\tsh[coef7 + c] += value * weight3 * dy * dx;\n\t\t\t\t\t\tsh[coef8 + c] += value * weight4 * (3.0 * dz * dz - 1.0);\n\t\t\t\t\t\tsh[coef9 + c] += value * weight5 * (dx * dx - dy * dy);\n\t\t\t\t\t\taccum += weight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (c = 0; c < sh.length; c++) {\n\t\t\tsh[c] *= 4 * Math.PI / accum;\n\t\t}\n\n\t\treturn sh;\n\t}\n\n\tfunction getCoding(texture) {\n\t\tswitch (texture.type) {\n\t\t\tcase TEXTURETYPE_RGBM:\n\t\t\t\treturn \"RGBM\";\n\n\t\t\tcase TEXTURETYPE_RGBE:\n\t\t\t\treturn \"RGBE\";\n\n\t\t\tdefault:\n\t\t\t\tswitch (texture.format) {\n\t\t\t\t\tcase PIXELFORMAT_RGB16F:\n\t\t\t\t\tcase PIXELFORMAT_RGB32F:\n\t\t\t\t\tcase PIXELFORMAT_RGBA16F:\n\t\t\t\t\tcase PIXELFORMAT_RGBA32F:\n\t\t\t\t\t\treturn \"Linear\";\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"Gamma\";\n\t\t\t\t}\n\n\t\t}\n\t}\n\n\tfunction reprojectTexture(device, source, target, specularPower, numSamples) {\n\t\tif (numSamples === void 0) {\n\t\t\tnumSamples = 1024;\n\t\t}\n\n\t\tvar processFunc = specularPower !== undefined ? 'prefilter' : 'reproject';\n\t\tvar decodeFunc = \"decode\" + getCoding(source);\n\t\tvar encodeFunc = \"encode\" + getCoding(target);\n\t\tvar sourceFunc = source.cubemap ? \"sampleCubemap\" : \"sampleEquirect\";\n\t\tvar targetFunc = target.cubemap ? \"getDirectionCubemap\" : \"getDirectionEquirect\";\n\t\tvar shader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, \"#define PROCESS_FUNC \" + processFunc + \"\\n\" + \"#define DECODE_FUNC \" + decodeFunc + \"\\n\" + \"#define ENCODE_FUNC \" + encodeFunc + \"\\n\" + \"#define SOURCE_FUNC \" + sourceFunc + \"\\n\" + \"#define TARGET_FUNC \" + targetFunc + \"\\n\" + \"#define NUM_SAMPLES \" + numSamples + \"\\n\\n\" + shaderChunks.reprojectPS, processFunc + decodeFunc + encodeFunc + sourceFunc + targetFunc, null, device.webgl2 ? \"\" : \"#extension GL_OES_standard_derivatives: enable\\n\");\n\t\tvar constantSource = device.scope.resolve(source.cubemap ? \"sourceCube\" : \"sourceTex\");\n\t\tconstantSource.setValue(source);\n\t\tvar constantParams = device.scope.resolve(\"params\");\n\t\tvar params = new Float32Array(4);\n\t\tparams[1] = specularPower !== undefined ? specularPower : 1;\n\t\tparams[2] = 1.0 - (source.fixCubemapSeams ? 1.0 / source.width : 0.0);\n\t\tparams[3] = 1.0 - (target.fixCubemapSeams ? 1.0 / target.width : 0.0);\n\n\t\tfor (var face = 0; face < (target.cubemap ? 6 : 1); face++) {\n\t\t\tvar targ = new RenderTarget(device, target, {\n\t\t\t\tface: face,\n\t\t\t\tdepth: false\n\t\t\t});\n\t\t\tparams[0] = face;\n\t\t\tconstantParams.setValue(params);\n\t\t\tdrawQuadWithShader(device, targ, shader);\n\t\t}\n\t}\n\n\tvar primitive = {\n\t\ttype: PRIMITIVE_TRISTRIP,\n\t\tbase: 0,\n\t\tcount: 4,\n\t\tindexed: false\n\t};\n\n\tvar PostEffect = function () {\n\t\tfunction PostEffect(graphicsDevice) {\n\t\t\tthis.device = graphicsDevice;\n\t\t\tthis.shader = null;\n\t\t\tthis.depthMap = null;\n\t\t\tthis.vertexBuffer = createFullscreenQuad(graphicsDevice);\n\t\t\tthis.needsDepthBuffer = false;\n\t\t}\n\n\t\tvar _proto = PostEffect.prototype;\n\n\t\t_proto.render = function render(inputTarget, outputTarget, rect) {};\n\n\t\treturn PostEffect;\n\t}();\n\n\tfunction createFullscreenQuad(device) {\n\t\tvar vertexFormat = new VertexFormat(device, [{\n\t\t\tsemantic: SEMANTIC_POSITION,\n\t\t\tcomponents: 2,\n\t\t\ttype: TYPE_FLOAT32\n\t\t}]);\n\t\tvar vertexBuffer = new VertexBuffer(device, vertexFormat, 4);\n\t\tvar iterator = new VertexIterator(vertexBuffer);\n\t\titerator.element[SEMANTIC_POSITION].set(-1.0, -1.0);\n\t\titerator.next();\n\t\titerator.element[SEMANTIC_POSITION].set(1.0, -1.0);\n\t\titerator.next();\n\t\titerator.element[SEMANTIC_POSITION].set(-1.0, 1.0);\n\t\titerator.next();\n\t\titerator.element[SEMANTIC_POSITION].set(1.0, 1.0);\n\t\titerator.end();\n\t\treturn vertexBuffer;\n\t}\n\n\tfunction drawFullscreenQuad(device, target, vertexBuffer, shader, rect) {\n\t\tvar oldRt = device.getRenderTarget();\n\t\tdevice.setRenderTarget(target);\n\t\tdevice.updateBegin();\n\t\tvar w = target !== null ? target.width : device.width;\n\t\tvar h = target !== null ? target.height : device.height;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tif (rect) {\n\t\t\tx = rect.x * w;\n\t\t\ty = rect.y * h;\n\t\t\tw *= rect.z;\n\t\t\th *= rect.w;\n\t\t}\n\n\t\tvar oldVx = device.vx;\n\t\tvar oldVy = device.vy;\n\t\tvar oldVw = device.vw;\n\t\tvar oldVh = device.vh;\n\t\tdevice.setViewport(x, y, w, h);\n\t\tvar oldSx = device.sx;\n\t\tvar oldSy = device.sy;\n\t\tvar oldSw = device.sw;\n\t\tvar oldSh = device.sh;\n\t\tdevice.setScissor(x, y, w, h);\n\t\tvar oldBlending = device.getBlending();\n\t\tvar oldDepthTest = device.getDepthTest();\n\t\tvar oldDepthWrite = device.getDepthWrite();\n\t\tvar oldCullMode = device.getCullMode();\n\t\tvar oldWR = device.writeRed;\n\t\tvar oldWG = device.writeGreen;\n\t\tvar oldWB = device.writeBlue;\n\t\tvar oldWA = device.writeAlpha;\n\t\tdevice.setBlending(false);\n\t\tdevice.setDepthTest(false);\n\t\tdevice.setDepthWrite(false);\n\t\tdevice.setCullMode(CULLFACE_NONE);\n\t\tdevice.setColorWrite(true, true, true, true);\n\t\tdevice.setVertexBuffer(vertexBuffer, 0);\n\t\tdevice.setShader(shader);\n\t\tdevice.draw(primitive);\n\t\tdevice.setBlending(oldBlending);\n\t\tdevice.setDepthTest(oldDepthTest);\n\t\tdevice.setDepthWrite(oldDepthWrite);\n\t\tdevice.setCullMode(oldCullMode);\n\t\tdevice.setColorWrite(oldWR, oldWG, oldWB, oldWA);\n\t\tdevice.updateEnd();\n\t\tdevice.setRenderTarget(oldRt);\n\t\tdevice.updateBegin();\n\t\tdevice.setViewport(oldVx, oldVy, oldVw, oldVh);\n\t\tdevice.setScissor(oldSx, oldSy, oldSw, oldSh);\n\t}\n\n\tvar TransformFeedback = function () {\n\t\tfunction TransformFeedback(inputBuffer, usage) {\n\t\t\tif (usage === void 0) {\n\t\t\t\tusage = BUFFER_GPUDYNAMIC;\n\t\t\t}\n\n\t\t\tthis.device = inputBuffer.device;\n\t\t\tvar gl = this.device.gl;\n\t\t\tthis._inputBuffer = inputBuffer;\n\n\t\t\tif (usage === BUFFER_GPUDYNAMIC && inputBuffer.usage !== usage) {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, inputBuffer.bufferId);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, inputBuffer.storage, gl.DYNAMIC_COPY);\n\t\t\t}\n\n\t\t\tthis._outputBuffer = new VertexBuffer(inputBuffer.device, inputBuffer.format, inputBuffer.numVertices, usage, inputBuffer.storage);\n\t\t}\n\n\t\tTransformFeedback.createShader = function createShader(graphicsDevice, vsCode, name) {\n\t\t\treturn createShaderFromCode(graphicsDevice, vsCode, null, name, true);\n\t\t};\n\n\t\tvar _proto = TransformFeedback.prototype;\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tthis._outputBuffer.destroy();\n\t\t};\n\n\t\t_proto.process = function process(shader, swap) {\n\t\t\tif (swap === void 0) {\n\t\t\t\tswap = true;\n\t\t\t}\n\n\t\t\tvar device = this.device;\n\t\t\tdevice.setRenderTarget(null);\n\t\t\tdevice.updateBegin();\n\t\t\tdevice.setVertexBuffer(this._inputBuffer, 0);\n\t\t\tdevice.setRaster(false);\n\t\t\tdevice.setTransformFeedbackBuffer(this._outputBuffer);\n\t\t\tdevice.setShader(shader);\n\t\t\tdevice.draw({\n\t\t\t\ttype: PRIMITIVE_POINTS,\n\t\t\t\tbase: 0,\n\t\t\t\tcount: this._inputBuffer.numVertices,\n\t\t\t\tindexed: false\n\t\t\t});\n\t\t\tdevice.setTransformFeedbackBuffer(null);\n\t\t\tdevice.setRaster(true);\n\t\t\tdevice.updateEnd();\n\n\t\t\tif (swap) {\n\t\t\t\tvar tmp = this._inputBuffer.bufferId;\n\t\t\t\tthis._inputBuffer.bufferId = this._outputBuffer.bufferId;\n\t\t\t\tthis._outputBuffer.bufferId = tmp;\n\t\t\t\ttmp = this._inputBuffer._vao;\n\t\t\t\tthis._inputBuffer._vao = this._outputBuffer._vao;\n\t\t\t\tthis._outputBuffer._vao = tmp;\n\t\t\t}\n\t\t};\n\n\t\t_createClass(TransformFeedback, [{\n\t\t\tkey: \"inputBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._inputBuffer;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"outputBuffer\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._outputBuffer;\n\t\t\t}\n\t\t}]);\n\n\t\treturn TransformFeedback;\n\t}();\n\n\tvar DepthMaterial = function (_Material) {\n\t\t_inheritsLoose(DepthMaterial, _Material);\n\n\t\tfunction DepthMaterial() {\n\t\t\treturn _Material.call(this) || this;\n\t\t}\n\n\t\tvar _proto = DepthMaterial.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\tvar clone = new DepthMaterial();\n\n\t\t\tMaterial.prototype._cloneInternal.call(this, clone);\n\n\t\t\treturn clone;\n\t\t};\n\n\t\t_proto.updateShader = function updateShader(device) {\n\t\t\tvar options = {\n\t\t\t\tskin: !!this.meshInstances[0].skinInstance\n\t\t\t};\n\t\t\tvar library = device.getProgramLibrary();\n\t\t\tthis.shader = library.getProgram('depth', options);\n\t\t};\n\n\t\treturn DepthMaterial;\n\t}(Material);\n\n\tvar Picker = function () {\n\t\tfunction Picker(app, width, height) {\n\t\t\tif (app instanceof GraphicsDevice) {\n\t\t\t\tapp = Application.getApplication();\n\t\t\t}\n\n\t\t\tthis.app = app;\n\t\t\tthis.device = app.graphicsDevice;\n\t\t\tvar device = this.device;\n\t\t\tthis.pickColor = new Float32Array(4);\n\t\t\tthis.pickColor[3] = 1;\n\t\t\tthis.mapping = [];\n\t\t\tthis.scene = null;\n\t\t\tthis.drawCalls = [];\n\t\t\tthis.layer = null;\n\t\t\tthis.layerComp = null;\n\t\t\tthis.clearOptions = {\n\t\t\t\tcolor: [1, 1, 1, 1],\n\t\t\t\tdepth: 1,\n\t\t\t\tflags: CLEARFLAG_COLOR | CLEARFLAG_DEPTH\n\t\t\t};\n\t\t\tvar self = this;\n\t\t\tthis._clearDepthOptions = {\n\t\t\t\tdepth: 1.0,\n\t\t\t\tflags: CLEARFLAG_DEPTH\n\t\t\t};\n\t\t\tthis.clearDepthCommand = new Command(0, 0, function () {\n\t\t\t\tdevice.clear(self._clearDepthOptions);\n\t\t\t});\n\t\t\tthis.resize(width, height);\n\t\t\tthis._ignoreOpacityFor = null;\n\t\t}\n\n\t\tvar _proto = Picker.prototype;\n\n\t\t_proto.getSelection = function getSelection(x, y, width, height) {\n\t\t\tvar device = this.device;\n\n\t\t\tif (typeof x === 'object') {\n\t\t\t\tvar rect = x;\n\t\t\t\tx = rect.x;\n\t\t\t\ty = rect.y;\n\t\t\t\twidth = rect.width;\n\t\t\t\theight = rect.height;\n\t\t\t} else {\n\t\t\t\ty = this.layer.renderTarget.height - (y + (height || 1));\n\t\t\t}\n\n\t\t\tx = Math.floor(x);\n\t\t\ty = Math.floor(y);\n\t\t\twidth = Math.floor(Math.max(width || 1, 1));\n\t\t\theight = Math.floor(Math.max(height || 1, 1));\n\t\t\tvar prevRenderTarget = device.renderTarget;\n\t\t\tdevice.setRenderTarget(this.layer.renderTarget);\n\t\t\tdevice.updateBegin();\n\t\t\tvar pixels = new Uint8Array(4 * width * height);\n\t\t\tdevice.readPixels(x, y, width, height, pixels);\n\t\t\tdevice.updateEnd();\n\t\t\tdevice.setRenderTarget(prevRenderTarget);\n\t\t\tvar selection = [];\n\t\t\tvar mapping = this.mapping;\n\t\t\tvar r, g, b, index;\n\n\t\t\tfor (var i = 0; i < width * height; i++) {\n\t\t\t\tr = pixels[4 * i + 0];\n\t\t\t\tg = pixels[4 * i + 1];\n\t\t\t\tb = pixels[4 * i + 2];\n\t\t\t\tindex = r << 16 | g << 8 | b;\n\n\t\t\t\tif (index !== 0xffffff) {\n\t\t\t\t\tvar selectedMeshInstance = mapping[index];\n\n\t\t\t\t\tif (selection.indexOf(selectedMeshInstance) === -1) {\n\t\t\t\t\t\tselection.push(selectedMeshInstance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn selection;\n\t\t};\n\n\t\t_proto.prepare = function prepare(camera, scene, arg) {\n\t\t\tvar device = this.device;\n\t\t\tvar i, j;\n\t\t\tvar self = this;\n\n\t\t\tif (camera instanceof Camera) {\n\t\t\t\tcamera = camera.node.camera;\n\t\t\t}\n\n\t\t\tthis.scene = scene;\n\t\t\tvar sourceLayer = null;\n\t\t\tvar sourceRt = null;\n\n\t\t\tif (arg instanceof Layer) {\n\t\t\t\tsourceLayer = arg;\n\t\t\t} else {\n\t\t\t\tsourceRt = arg;\n\t\t\t}\n\n\t\t\tif (!this.layer) {\n\t\t\t\tvar pickColorId = device.scope.resolve('uColor');\n\t\t\t\tthis.layer = new Layer({\n\t\t\t\t\tname: \"Picker\",\n\t\t\t\t\tshaderPass: SHADER_PICK,\n\t\t\t\t\topaqueSortMode: SORTMODE_NONE,\n\t\t\t\t\tonEnable: function onEnable() {\n\t\t\t\t\t\tif (this.renderTarget) return;\n\t\t\t\t\t\tvar colorBuffer = new Texture(device, {\n\t\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\t\twidth: self.width,\n\t\t\t\t\t\t\theight: self.height,\n\t\t\t\t\t\t\tmipmaps: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcolorBuffer.name = 'pick';\n\t\t\t\t\t\tcolorBuffer.minFilter = FILTER_NEAREST;\n\t\t\t\t\t\tcolorBuffer.magFilter = FILTER_NEAREST;\n\t\t\t\t\t\tcolorBuffer.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tcolorBuffer.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\tthis.renderTarget = new RenderTarget(device, colorBuffer, {\n\t\t\t\t\t\t\tdepth: true\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonDisable: function onDisable() {\n\t\t\t\t\t\tif (!this.renderTarget) return;\n\n\t\t\t\t\t\tthis.renderTarget._colorBuffer.destroy();\n\n\t\t\t\t\t\tthis.renderTarget.destroy();\n\t\t\t\t\t\tthis.renderTarget = null;\n\t\t\t\t\t},\n\t\t\t\t\tonDrawCall: function onDrawCall(meshInstance, index) {\n\t\t\t\t\t\tself.pickColor[0] = (index >> 16 & 0xff) / 255;\n\t\t\t\t\t\tself.pickColor[1] = (index >> 8 & 0xff) / 255;\n\t\t\t\t\t\tself.pickColor[2] = (index & 0xff) / 255;\n\t\t\t\t\t\tpickColorId.setValue(self.pickColor);\n\t\t\t\t\t\tdevice.setBlending(false);\n\t\t\t\t\t\tself.mapping[index] = meshInstance;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.layerComp = new LayerComposition();\n\t\t\t\tthis.layerComp.pushOpaque(this.layer);\n\t\t\t\tthis.meshInstances = this.layer.opaqueMeshInstances;\n\t\t\t\tthis._instancesVersion = -1;\n\t\t\t}\n\n\t\t\tvar instanceList, instanceListLength, drawCall;\n\n\t\t\tif (!sourceLayer) {\n\t\t\t\tthis.layer.clearMeshInstances();\n\t\t\t\tvar layers = scene.layers.layerList;\n\t\t\t\tvar subLayerEnabled = scene.layers.subLayerEnabled;\n\t\t\t\tvar isTransparent = scene.layers.subLayerList;\n\t\t\t\tvar layer;\n\t\t\t\tvar layerCamId, transparent;\n\n\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\tif (layers[i].overrideClear && layers[i]._clearDepthBuffer) layers[i]._pickerCleared = false;\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\tlayer = layers[i];\n\t\t\t\t\tif (layer.renderTarget !== sourceRt || !layer.enabled || !subLayerEnabled[i]) continue;\n\t\t\t\t\tlayerCamId = layer.cameras.indexOf(camera);\n\t\t\t\t\tif (layerCamId < 0) continue;\n\n\t\t\t\t\tif (layer.overrideClear && layer._clearDepthBuffer && !layer._pickerCleared) {\n\t\t\t\t\t\tthis.meshInstances.push(this.clearDepthCommand);\n\t\t\t\t\t\tlayer._pickerCleared = true;\n\t\t\t\t\t}\n\n\t\t\t\t\ttransparent = isTransparent[i];\n\t\t\t\t\tinstanceList = transparent ? layer.instances.transparentMeshInstances : layer.instances.opaqueMeshInstances;\n\t\t\t\t\tinstanceListLength = instanceList.length;\n\n\t\t\t\t\tfor (j = 0; j < instanceListLength; j++) {\n\t\t\t\t\t\tdrawCall = instanceList[j];\n\n\t\t\t\t\t\tif (drawCall.pick) {\n\t\t\t\t\t\t\tthis.meshInstances.push(drawCall);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._instancesVersion !== sourceLayer._version) {\n\t\t\t\t\tthis.layer.clearMeshInstances();\n\t\t\t\t\tinstanceList = sourceLayer.instances.opaqueMeshInstances;\n\t\t\t\t\tinstanceListLength = instanceList.length;\n\n\t\t\t\t\tfor (j = 0; j < instanceListLength; j++) {\n\t\t\t\t\t\tdrawCall = instanceList[j];\n\n\t\t\t\t\t\tif (drawCall.pick) {\n\t\t\t\t\t\t\tthis.meshInstances.push(drawCall);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tinstanceList = sourceLayer.instances.transparentMeshInstances;\n\t\t\t\t\tinstanceListLength = instanceList.length;\n\n\t\t\t\t\tfor (j = 0; j < instanceListLength; j++) {\n\t\t\t\t\t\tdrawCall = instanceList[j];\n\n\t\t\t\t\t\tif (drawCall.pick) {\n\t\t\t\t\t\t\tthis.meshInstances.push(drawCall);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._instancesVersion = sourceLayer._version;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.layer.cameras[0] !== camera) {\n\t\t\t\tthis.layer.clearCameras();\n\t\t\t\tthis.layer.addCamera(camera);\n\t\t\t}\n\n\t\t\tthis.onLayerPreRender(this.layer, sourceLayer, sourceRt);\n\t\t\tself.mapping.length = 0;\n\t\t\tthis.app.renderer.renderComposition(this.layerComp);\n\t\t\tthis.onLayerPostRender(this.layer);\n\t\t};\n\n\t\t_proto.onLayerPreRender = function onLayerPreRender(layer, sourceLayer, sourceRt) {\n\t\t\tif (this.width !== layer.renderTarget.width || this.height !== layer.renderTarget.height) {\n\t\t\t\tlayer.onDisable();\n\t\t\t\tlayer.onEnable();\n\t\t\t}\n\n\t\t\tlayer.oldClear = layer.cameras[0].camera._clearOptions;\n\t\t\tlayer.oldAspectMode = layer.cameras[0].aspectRatioMode;\n\t\t\tlayer.oldAspect = layer.cameras[0].aspectRatio;\n\t\t\tlayer.cameras[0].camera._clearOptions = this.clearOptions;\n\t\t\tlayer.cameras[0].aspectRatioMode = ASPECT_MANUAL;\n\t\t\tvar rt = sourceRt ? sourceRt : sourceLayer ? sourceLayer.renderTarget : null;\n\t\t\tlayer.cameras[0].aspectRatio = layer.cameras[0].calculateAspectRatio(rt);\n\t\t\tthis.app.renderer.updateCameraFrustum(layer.cameras[0].camera);\n\t\t};\n\n\t\t_proto.onLayerPostRender = function onLayerPostRender(layer) {\n\t\t\tlayer.cameras[0].camera._clearOptions = layer.oldClear;\n\t\t\tlayer.cameras[0].aspectRatioMode = layer.oldAspectMode;\n\t\t\tlayer.cameras[0].aspectRatio = layer.oldAspect;\n\t\t};\n\n\t\t_proto.resize = function resize(width, height) {\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t};\n\n\t\t_createClass(Picker, [{\n\t\t\tkey: \"renderTarget\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.layer.renderTarget;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Picker;\n\t}();\n\n\tvar MAX_TEXTURE_SIZE = 4096;\n\tvar DEFAULT_TEXTURE_SIZE = 512;\n\n\tvar CanvasFont = function (_EventHandler) {\n\t\t_inheritsLoose(CanvasFont, _EventHandler);\n\n\t\tfunction CanvasFont(app, options) {\n\t\t\tvar _this;\n\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this.type = \"bitmap\";\n\t\t\t_this.app = app;\n\t\t\t_this.intensity = 0;\n\t\t\t_this.fontWeight = options.fontWeight || 'normal';\n\t\t\t_this.fontSize = parseInt(options.fontSize, 10);\n\t\t\t_this.glyphSize = _this.fontSize;\n\t\t\t_this.fontName = options.fontName || 'Arial';\n\t\t\t_this.color = options.color || new Color(1, 1, 1);\n\t\t\t_this.padding = options.padding || 0;\n\t\t\tvar w = options.width > MAX_TEXTURE_SIZE ? MAX_TEXTURE_SIZE : options.width || DEFAULT_TEXTURE_SIZE;\n\t\t\tvar h = options.height > MAX_TEXTURE_SIZE ? MAX_TEXTURE_SIZE : options.height || DEFAULT_TEXTURE_SIZE;\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tcanvas.height = h;\n\t\t\tcanvas.width = w;\n\t\t\tvar texture = new Texture(_this.app.graphicsDevice, {\n\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\tautoMipmap: true\n\t\t\t});\n\t\t\ttexture.name = 'font';\n\t\t\ttexture.setSource(canvas);\n\t\t\ttexture.minFilter = FILTER_LINEAR_MIPMAP_LINEAR;\n\t\t\ttexture.magFilter = FILTER_LINEAR;\n\t\t\ttexture.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\ttexture.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t_this.textures = [texture];\n\t\t\t_this.chars = \"\";\n\t\t\t_this.data = {};\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = CanvasFont.prototype;\n\n\t\t_proto.createTextures = function createTextures(text) {\n\t\t\tvar _chars = this._normalizeCharsSet(text);\n\n\t\t\tif (_chars.length !== this.chars.length) {\n\t\t\t\tthis._renderAtlas(_chars);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < _chars.length; i++) {\n\t\t\t\tif (_chars[i] !== this.chars[i]) {\n\t\t\t\t\tthis._renderAtlas(_chars);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.updateTextures = function updateTextures(text) {\n\t\t\tvar _chars = this._normalizeCharsSet(text);\n\n\t\t\tvar newCharsSet = [];\n\n\t\t\tfor (var i = 0; i < _chars.length; i++) {\n\t\t\t\tvar char = _chars[i];\n\n\t\t\t\tif (!this.data.chars[char]) {\n\t\t\t\t\tnewCharsSet.push(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newCharsSet.length > 0) {\n\t\t\t\tthis._renderAtlas(this.chars.concat(newCharsSet));\n\t\t\t}\n\t\t};\n\n\t\t_proto.destroy = function destroy() {\n\t\t\tfor (var i = 0; i < this.textures.length; i++) {\n\t\t\t\tthis.textures[i].destroy();\n\t\t\t}\n\n\t\t\tthis.chars = null;\n\t\t\tthis.color = null;\n\t\t\tthis.data = null;\n\t\t\tthis.fontName = null;\n\t\t\tthis.fontSize = null;\n\t\t\tthis.glyphSize = null;\n\t\t\tthis.intensity = null;\n\t\t\tthis.textures = null;\n\t\t\tthis.type = null;\n\t\t\tthis.fontWeight = null;\n\t\t};\n\n\t\t_proto._getAndClearContext = function _getAndClearContext(canvas, clearColor) {\n\t\t\tvar w = canvas.width;\n\t\t\tvar h = canvas.height;\n\t\t\tvar ctx = canvas.getContext('2d', {\n\t\t\t\talpha: true\n\t\t\t});\n\t\t\tctx.clearRect(0, 0, w, h);\n\t\t\tctx.fillStyle = clearColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t\treturn ctx;\n\t\t};\n\n\t\t_proto._colorToRgbString = function _colorToRgbString(color, alpha) {\n\t\t\tvar str;\n\t\t\tvar r = Math.round(255 * color.r);\n\t\t\tvar g = Math.round(255 * color.g);\n\t\t\tvar b = Math.round(255 * color.b);\n\n\t\t\tif (alpha) {\n\t\t\t\tstr = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + color.a + \")\";\n\t\t\t} else {\n\t\t\t\tstr = \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n\t\t\t}\n\n\t\t\treturn str;\n\t\t};\n\n\t\t_proto.renderCharacter = function renderCharacter(context, char, x, y, color) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fillText(char, x, y);\n\t\t};\n\n\t\t_proto._renderAtlas = function _renderAtlas(charsArray) {\n\t\t\tthis.chars = charsArray;\n\t\t\tvar numTextures = 1;\n\t\t\tvar canvas = this.textures[numTextures - 1].getSource();\n\t\t\tvar w = canvas.width;\n\t\t\tvar h = canvas.height;\n\n\t\t\tvar color = this._colorToRgbString(this.color, false);\n\n\t\t\tvar a = this.color.a;\n\t\t\tthis.color.a = 1 / 255;\n\n\t\t\tvar transparent = this._colorToRgbString(this.color, true);\n\n\t\t\tthis.color.a = a;\n\t\t\tvar TEXT_ALIGN = 'center';\n\t\t\tvar TEXT_BASELINE = 'alphabetic';\n\n\t\t\tvar ctx = this._getAndClearContext(canvas, transparent);\n\n\t\t\tctx.font = this.fontWeight + ' ' + this.fontSize.toString() + 'px ' + this.fontName;\n\t\t\tctx.textAlign = TEXT_ALIGN;\n\t\t\tctx.textBaseline = TEXT_BASELINE;\n\t\t\tthis.data = this._createJson(this.chars, this.fontName, w, h);\n\t\t\tvar symbols = string.getSymbols(this.chars.join(''));\n\t\t\tvar prevNumTextures = this.textures.length;\n\t\t\tvar maxHeight = 0;\n\t\t\tvar maxDescent = 0;\n\t\t\tvar metrics = {};\n\t\t\tvar i, ch;\n\n\t\t\tfor (i = 0; i < symbols.length; i++) {\n\t\t\t\tch = symbols[i];\n\t\t\t\tmetrics[ch] = this._getTextMetrics(ch);\n\t\t\t\tmaxHeight = Math.max(maxHeight, metrics[ch].height);\n\t\t\t\tmaxDescent = Math.max(maxDescent, metrics[ch].descent);\n\t\t\t}\n\n\t\t\tthis.glyphSize = Math.max(this.glyphSize, maxHeight);\n\t\t\tvar sx = this.glyphSize + this.padding * 2;\n\t\t\tvar sy = this.glyphSize + this.padding * 2;\n\n\t\t\tvar _xOffset = this.glyphSize / 2 + this.padding;\n\n\t\t\tvar _yOffset = sy - maxDescent - this.padding;\n\n\t\t\tvar _x = 0;\n\t\t\tvar _y = 0;\n\n\t\t\tfor (i = 0; i < symbols.length; i++) {\n\t\t\t\tch = symbols[i];\n\t\t\t\tvar code = string.getCodePoint(symbols[i]);\n\t\t\t\tvar fs = this.fontSize;\n\t\t\t\tctx.font = this.fontWeight + ' ' + fs.toString() + 'px ' + this.fontName;\n\t\t\t\tctx.textAlign = TEXT_ALIGN;\n\t\t\t\tctx.textBaseline = TEXT_BASELINE;\n\t\t\t\tvar width = ctx.measureText(ch).width;\n\n\t\t\t\tif (width > fs) {\n\t\t\t\t\tfs = this.fontSize * this.fontSize / width;\n\t\t\t\t\tctx.font = this.fontWeight + ' ' + fs.toString() + 'px ' + this.fontName;\n\t\t\t\t\twidth = this.fontSize;\n\t\t\t\t}\n\n\t\t\t\tthis.renderCharacter(ctx, ch, _x + _xOffset, _y + _yOffset, color);\n\t\t\t\tvar xoffset = this.padding + (this.glyphSize - width) / 2;\n\t\t\t\tvar yoffset = -this.padding + metrics[ch].descent - maxDescent;\n\t\t\t\tvar xadvance = width;\n\n\t\t\t\tthis._addChar(this.data, ch, code, _x, _y, sx, sy, xoffset, yoffset, xadvance, numTextures - 1, w, h);\n\n\t\t\t\t_x += sx;\n\n\t\t\t\tif (_x + sx > w) {\n\t\t\t\t\t_x = 0;\n\t\t\t\t\t_y += sy;\n\n\t\t\t\t\tif (_y + sy > h) {\n\t\t\t\t\t\tthis.textures[numTextures - 1].upload();\n\t\t\t\t\t\tnumTextures++;\n\t\t\t\t\t\t_y = 0;\n\n\t\t\t\t\t\tif (numTextures > prevNumTextures) {\n\t\t\t\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t\t\t\t\tcanvas.height = h;\n\t\t\t\t\t\t\tcanvas.width = w;\n\t\t\t\t\t\t\tctx = this._getAndClearContext(canvas, transparent);\n\t\t\t\t\t\t\tvar texture = new Texture(this.app.graphicsDevice, {\n\t\t\t\t\t\t\t\tformat: PIXELFORMAT_R8_G8_B8_A8,\n\t\t\t\t\t\t\t\tautoMipmap: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\ttexture.name = 'font-atlas';\n\t\t\t\t\t\t\ttexture.setSource(canvas);\n\t\t\t\t\t\t\ttexture.minFilter = FILTER_LINEAR_MIPMAP_LINEAR;\n\t\t\t\t\t\t\ttexture.magFilter = FILTER_LINEAR;\n\t\t\t\t\t\t\ttexture.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\t\ttexture.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t\t\t\t\t\tthis.textures.push(texture);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcanvas = this.textures[numTextures - 1].getSource();\n\t\t\t\t\t\t\tctx = this._getAndClearContext(canvas, transparent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.textures[numTextures - 1].upload();\n\n\t\t\tif (numTextures < prevNumTextures) {\n\t\t\t\tfor (i = numTextures; i < prevNumTextures; i++) {\n\t\t\t\t\tthis.textures[i].destroy();\n\t\t\t\t}\n\n\t\t\t\tthis.textures.splice(numTextures);\n\t\t\t}\n\n\t\t\tthis.fire(\"render\");\n\t\t};\n\n\t\t_proto._createJson = function _createJson(chars, fontName, width, height) {\n\t\t\tvar base = {\n\t\t\t\t\"version\": 3,\n\t\t\t\t\"intensity\": this.intensity,\n\t\t\t\t\"info\": {\n\t\t\t\t\t\"face\": fontName,\n\t\t\t\t\t\"width\": width,\n\t\t\t\t\t\"height\": height,\n\t\t\t\t\t\"maps\": [{\n\t\t\t\t\t\t\"width\": width,\n\t\t\t\t\t\t\"height\": height\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\t\"chars\": {}\n\t\t\t};\n\t\t\treturn base;\n\t\t};\n\n\t\t_proto._addChar = function _addChar(json, char, charCode, x, y, w, h, xoffset, yoffset, xadvance, mapNum, mapW, mapH) {\n\t\t\tif (json.info.maps.length < mapNum + 1) {\n\t\t\t\tjson.info.maps.push({\n\t\t\t\t\t\"width\": mapW,\n\t\t\t\t\t\"height\": mapH\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar scale = this.fontSize / 32;\n\t\t\tjson.chars[char] = {\n\t\t\t\t\"id\": charCode,\n\t\t\t\t\"letter\": char,\n\t\t\t\t\"x\": x,\n\t\t\t\t\"y\": y,\n\t\t\t\t\"width\": w,\n\t\t\t\t\"height\": h,\n\t\t\t\t\"xadvance\": xadvance / scale,\n\t\t\t\t\"xoffset\": xoffset / scale,\n\t\t\t\t\"yoffset\": (yoffset + this.padding) / scale,\n\t\t\t\t\"scale\": scale,\n\t\t\t\t\"range\": 1,\n\t\t\t\t\"map\": mapNum,\n\t\t\t\t\"bounds\": [0, 0, w / scale, h / scale]\n\t\t\t};\n\t\t};\n\n\t\t_proto._normalizeCharsSet = function _normalizeCharsSet(text) {\n\t\t\tvar unicodeConverterFunc = this.app.systems.element.getUnicodeConverter();\n\n\t\t\tif (unicodeConverterFunc) {\n\t\t\t\ttext = unicodeConverterFunc(text);\n\t\t\t}\n\n\t\t\tvar set = {};\n\t\t\tvar symbols = string.getSymbols(text);\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < symbols.length; i++) {\n\t\t\t\tvar ch = symbols[i];\n\t\t\t\tif (set[ch]) continue;\n\t\t\t\tset[ch] = ch;\n\t\t\t}\n\n\t\t\tvar chars = Object.keys(set);\n\t\t\treturn chars.sort();\n\t\t};\n\n\t\t_proto._getTextMetrics = function _getTextMetrics(text) {\n\t\t\tvar textSpan = document.createElement('span');\n\t\t\ttextSpan.id = 'content-span';\n\t\t\ttextSpan.innerHTML = text;\n\t\t\tvar block = document.createElement(\"div\");\n\t\t\tblock.id = 'content-block';\n\t\t\tblock.style.display = 'inline-block';\n\t\t\tblock.style.width = '1px';\n\t\t\tblock.style.height = '0px';\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.appendChild(textSpan);\n\t\t\tdiv.appendChild(block);\n\t\t\tdiv.style.font = this.fontName;\n\t\t\tdiv.style.fontSize = this.fontSize + 'px';\n\t\t\tvar body = document.body;\n\t\t\tbody.appendChild(div);\n\t\t\tvar ascent = -1;\n\t\t\tvar descent = -1;\n\t\t\tvar height = -1;\n\n\t\t\ttry {\n\t\t\t\tblock.style['vertical-align'] = 'baseline';\n\t\t\t\tascent = block.offsetTop - textSpan.offsetTop;\n\t\t\t\tblock.style['vertical-align'] = 'bottom';\n\t\t\t\theight = block.offsetTop - textSpan.offsetTop;\n\t\t\t\tdescent = height - ascent;\n\t\t\t} finally {\n\t\t\t\tdocument.body.removeChild(div);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tascent: ascent,\n\t\t\t\tdescent: descent,\n\t\t\t\theight: height\n\t\t\t};\n\t\t};\n\n\t\treturn CanvasFont;\n\t}(EventHandler);\n\n\tvar ResourceHandler = function () {\n\t\tfunction ResourceHandler() {}\n\n\t\tvar _proto = ResourceHandler.prototype;\n\n\t\t_proto.load = function load(url, callback, asset) {\n\t\t\tthrow new Error('not implemented');\n\t\t};\n\n\t\t_proto.open = function open(url, data, asset) {\n\t\t\tthrow new Error('not implemented');\n\t\t};\n\n\t\t_proto.patch = function patch(asset, assets) {};\n\n\t\treturn ResourceHandler;\n\t}();\n\n\tvar funcNameRegex = new RegExp('^\\\\s*function(?:\\\\s|\\\\s*\\\\/\\\\*.*\\\\*\\\\/\\\\s*)+([^\\\\(\\\\s\\\\/]*)\\\\s*');\n\n\tvar ScriptType = function (_EventHandler) {\n\t\t_inheritsLoose(ScriptType, _EventHandler);\n\n\t\tfunction ScriptType(args) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\tvar script = _this.constructor;\n\t\t\t_this.app = args.app;\n\t\t\t_this.entity = args.entity;\n\t\t\t_this._enabled = typeof args.enabled === 'boolean' ? args.enabled : true;\n\t\t\t_this._enabledOld = _this.enabled;\n\t\t\t_this.__destroyed = false;\n\t\t\t_this.__attributes = {};\n\t\t\t_this.__attributesRaw = args.attributes || {};\n\t\t\t_this.__scriptType = script;\n\t\t\t_this.__executionOrder = -1;\n\t\t\treturn _this;\n\t\t}\n\n\t\tScriptType.__getScriptName = function __getScriptName(constructorFn) {\n\t\t\tif (typeof constructorFn !== 'function') return undefined;\n\t\t\tif ('name' in Function.prototype) return constructorFn.name;\n\t\t\tif (constructorFn === Function || constructorFn === Function.prototype.constructor) return 'Function';\n\t\t\tvar match = (\"\" + constructorFn).match(funcNameRegex);\n\t\t\treturn match ? match[1] : undefined;\n\t\t};\n\n\t\tvar _proto = ScriptType.prototype;\n\n\t\t_proto.__initializeAttributes = function __initializeAttributes(force) {\n\t\t\tif (!force && !this.__attributesRaw) return;\n\n\t\t\tfor (var key in this.__scriptType.attributes.index) {\n\t\t\t\tif (this.__attributesRaw && this.__attributesRaw.hasOwnProperty(key)) {\n\t\t\t\t\tthis[key] = this.__attributesRaw[key];\n\t\t\t\t} else if (!this.__attributes.hasOwnProperty(key)) {\n\t\t\t\t\tif (this.__scriptType.attributes.index[key].hasOwnProperty('default')) {\n\t\t\t\t\t\tthis[key] = this.__scriptType.attributes.index[key].default;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[key] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.__attributesRaw = null;\n\t\t};\n\n\t\tScriptType.extend = function extend(methods) {\n\t\t\tfor (var key in methods) {\n\t\t\t\tif (!methods.hasOwnProperty(key)) continue;\n\t\t\t\tthis.prototype[key] = methods[key];\n\t\t\t}\n\t\t};\n\n\t\t_createClass(ScriptType, [{\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled && !this._destroyed && this.entity.script.enabled && this.entity.enabled;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._enabled = !!value;\n\t\t\t\tif (this.enabled === this._enabledOld) return;\n\t\t\t\tthis._enabledOld = this.enabled;\n\t\t\t\tthis.fire(this.enabled ? 'enable' : 'disable');\n\t\t\t\tthis.fire('state', this.enabled);\n\n\t\t\t\tif (!this._initialized && this.enabled) {\n\t\t\t\t\tthis._initialized = true;\n\n\t\t\t\t\tthis.__initializeAttributes(true);\n\n\t\t\t\t\tif (this.initialize) this.entity.script._scriptMethod(this, ScriptComponent.scriptMethods.initialize);\n\t\t\t\t}\n\n\t\t\t\tif (this._initialized && !this._postInitialized && this.enabled && !this.entity.script._beingEnabled) {\n\t\t\t\t\tthis._postInitialized = true;\n\t\t\t\t\tif (this.postInitialize) this.entity.script._scriptMethod(this, ScriptComponent.scriptMethods.postInitialize);\n\t\t\t\t}\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: \"scriptName\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.__name;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"attributes\",\n\t\t\tget: function get() {\n\t\t\t\tif (!this.hasOwnProperty('__attributes')) this.__attributes = new ScriptAttributes(this);\n\t\t\t\treturn this.__attributes;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ScriptType;\n\t}(EventHandler);\n\n\tScriptType.__name = null;\n\n\tvar reservedScriptNames = new Set(['system', 'entity', 'create', 'destroy', 'swap', 'move', 'scripts', '_scripts', '_scriptsIndex', '_scriptsData', 'enabled', '_oldState', 'onEnable', 'onDisable', 'onPostStateChange', '_onSetEnabled', '_checkState', '_onBeforeRemove', '_onInitializeAttributes', '_onInitialize', '_onPostInitialize', '_onUpdate', '_onPostUpdate', '_callbacks', 'has', 'get', 'on', 'off', 'fire', 'once', 'hasEvent']);\n\n\tfunction createScript(name, app) {\n\t\tif (script.legacy) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (reservedScriptNames.has(name)) throw new Error('script name: \\'' + name + '\\' is reserved, please change script name');\n\n\t\tvar scriptType = function scriptType(args) {\n\t\t\tScriptType.call(this, args);\n\t\t};\n\n\t\tscriptType.prototype = Object.create(ScriptType.prototype);\n\t\tscriptType.prototype.constructor = scriptType;\n\t\tscriptType.extend = ScriptType.extend;\n\t\tscriptType.attributes = new ScriptAttributes(scriptType);\n\t\tregisterScript(scriptType, name, app);\n\t\treturn scriptType;\n\t}\n\n\tvar reservedAttributes = {};\n\tScriptAttributes.reservedNames.forEach(function (value, value2, set) {\n\t\treservedAttributes[value] = 1;\n\t});\n\tcreateScript.reservedAttributes = reservedAttributes;\n\n\tfunction registerScript(script, name, app) {\n\t\tif (script.legacy) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof script !== 'function') throw new Error('script class: \\'' + script + '\\' must be a constructor function (i.e. class).');\n\t\tif (!(script.prototype instanceof ScriptType)) throw new Error('script class: \\'' + ScriptType.__getScriptName(script) + '\\' does not extend pc.ScriptType.');\n\t\tname = name || script.__name || ScriptType.__getScriptName(script);\n\t\tif (reservedScriptNames.has(name)) throw new Error('script name: \\'' + name + '\\' is reserved, please change script name');\n\t\tscript.__name = name;\n\t\tvar registry = app ? app.scripts : Application.getApplication().scripts;\n\t\tregistry.add(script);\n\n\t\tScriptHandler._push(script);\n\t}\n\n\tvar ACTION_MOUSE = 'mouse';\n\tvar ACTION_KEYBOARD = 'keyboard';\n\tvar ACTION_GAMEPAD = 'gamepad';\n\tvar AXIS_MOUSE_X = 'mousex';\n\tvar AXIS_MOUSE_Y = 'mousey';\n\tvar AXIS_PAD_L_X = 'padlx';\n\tvar AXIS_PAD_L_Y = 'padly';\n\tvar AXIS_PAD_R_X = 'padrx';\n\tvar AXIS_PAD_R_Y = 'padry';\n\tvar AXIS_KEY = 'key';\n\tvar EVENT_KEYDOWN = 'keydown';\n\tvar EVENT_KEYUP = 'keyup';\n\tvar EVENT_MOUSEDOWN = \"mousedown\";\n\tvar EVENT_MOUSEMOVE = \"mousemove\";\n\tvar EVENT_MOUSEUP = \"mouseup\";\n\tvar EVENT_MOUSEWHEEL = \"mousewheel\";\n\tvar EVENT_TOUCHSTART = 'touchstart';\n\tvar EVENT_TOUCHEND = 'touchend';\n\tvar EVENT_TOUCHMOVE = 'touchmove';\n\tvar EVENT_TOUCHCANCEL = 'touchcancel';\n\tvar EVENT_SELECT = 'select';\n\tvar EVENT_SELECTSTART = 'selectstart';\n\tvar EVENT_SELECTEND = 'selectend';\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_TAB = 9;\n\tvar KEY_RETURN = 13;\n\tvar KEY_ENTER = 13;\n\tvar KEY_SHIFT = 16;\n\tvar KEY_CONTROL = 17;\n\tvar KEY_ALT = 18;\n\tvar KEY_PAUSE = 19;\n\tvar KEY_CAPS_LOCK = 20;\n\tvar KEY_ESCAPE = 27;\n\tvar KEY_SPACE = 32;\n\tvar KEY_PAGE_UP = 33;\n\tvar KEY_PAGE_DOWN = 34;\n\tvar KEY_END = 35;\n\tvar KEY_HOME = 36;\n\tvar KEY_LEFT = 37;\n\tvar KEY_UP = 38;\n\tvar KEY_RIGHT = 39;\n\tvar KEY_DOWN = 40;\n\tvar KEY_PRINT_SCREEN = 44;\n\tvar KEY_INSERT = 45;\n\tvar KEY_DELETE = 46;\n\tvar KEY_0 = 48;\n\tvar KEY_1 = 49;\n\tvar KEY_2 = 50;\n\tvar KEY_3 = 51;\n\tvar KEY_4 = 52;\n\tvar KEY_5 = 53;\n\tvar KEY_6 = 54;\n\tvar KEY_7 = 55;\n\tvar KEY_8 = 56;\n\tvar KEY_9 = 57;\n\tvar KEY_SEMICOLON = 59;\n\tvar KEY_EQUAL = 61;\n\tvar KEY_A = 65;\n\tvar KEY_B = 66;\n\tvar KEY_C = 67;\n\tvar KEY_D = 68;\n\tvar KEY_E = 69;\n\tvar KEY_F = 70;\n\tvar KEY_G = 71;\n\tvar KEY_H = 72;\n\tvar KEY_I = 73;\n\tvar KEY_J = 74;\n\tvar KEY_K = 75;\n\tvar KEY_L = 76;\n\tvar KEY_M = 77;\n\tvar KEY_N = 78;\n\tvar KEY_O = 79;\n\tvar KEY_P = 80;\n\tvar KEY_Q = 81;\n\tvar KEY_R = 82;\n\tvar KEY_S = 83;\n\tvar KEY_T = 84;\n\tvar KEY_U = 85;\n\tvar KEY_V = 86;\n\tvar KEY_W = 87;\n\tvar KEY_X = 88;\n\tvar KEY_Y = 89;\n\tvar KEY_Z = 90;\n\tvar KEY_WINDOWS = 91;\n\tvar KEY_CONTEXT_MENU = 93;\n\tvar KEY_NUMPAD_0 = 96;\n\tvar KEY_NUMPAD_1 = 97;\n\tvar KEY_NUMPAD_2 = 98;\n\tvar KEY_NUMPAD_3 = 99;\n\tvar KEY_NUMPAD_4 = 100;\n\tvar KEY_NUMPAD_5 = 101;\n\tvar KEY_NUMPAD_6 = 102;\n\tvar KEY_NUMPAD_7 = 103;\n\tvar KEY_NUMPAD_8 = 104;\n\tvar KEY_NUMPAD_9 = 105;\n\tvar KEY_MULTIPLY = 106;\n\tvar KEY_ADD = 107;\n\tvar KEY_SEPARATOR = 108;\n\tvar KEY_SUBTRACT = 109;\n\tvar KEY_DECIMAL = 110;\n\tvar KEY_DIVIDE = 111;\n\tvar KEY_F1 = 112;\n\tvar KEY_F2 = 113;\n\tvar KEY_F3 = 114;\n\tvar KEY_F4 = 115;\n\tvar KEY_F5 = 116;\n\tvar KEY_F6 = 117;\n\tvar KEY_F7 = 118;\n\tvar KEY_F8 = 119;\n\tvar KEY_F9 = 120;\n\tvar KEY_F10 = 121;\n\tvar KEY_F11 = 122;\n\tvar KEY_F12 = 123;\n\tvar KEY_COMMA = 188;\n\tvar KEY_PERIOD = 190;\n\tvar KEY_SLASH = 191;\n\tvar KEY_OPEN_BRACKET = 219;\n\tvar KEY_BACK_SLASH = 220;\n\tvar KEY_CLOSE_BRACKET = 221;\n\tvar KEY_META = 224;\n\tvar MOUSEBUTTON_NONE = -1;\n\tvar MOUSEBUTTON_LEFT = 0;\n\tvar MOUSEBUTTON_MIDDLE = 1;\n\tvar MOUSEBUTTON_RIGHT = 2;\n\tvar PAD_1 = 0;\n\tvar PAD_2 = 1;\n\tvar PAD_3 = 2;\n\tvar PAD_4 = 3;\n\tvar PAD_FACE_1 = 0;\n\tvar PAD_FACE_2 = 1;\n\tvar PAD_FACE_3 = 2;\n\tvar PAD_FACE_4 = 3;\n\tvar PAD_L_SHOULDER_1 = 4;\n\tvar PAD_R_SHOULDER_1 = 5;\n\tvar PAD_L_SHOULDER_2 = 6;\n\tvar PAD_R_SHOULDER_2 = 7;\n\tvar PAD_SELECT = 8;\n\tvar PAD_START = 9;\n\tvar PAD_L_STICK_BUTTON = 10;\n\tvar PAD_R_STICK_BUTTON = 11;\n\tvar PAD_UP = 12;\n\tvar PAD_DOWN = 13;\n\tvar PAD_LEFT = 14;\n\tvar PAD_RIGHT = 15;\n\tvar PAD_VENDOR = 16;\n\tvar PAD_L_STICK_X = 0;\n\tvar PAD_L_STICK_Y = 1;\n\tvar PAD_R_STICK_X = 2;\n\tvar PAD_R_STICK_Y = 3;\n\n\tvar KeyboardEvent = function KeyboardEvent(keyboard, event) {\n\t\tif (event) {\n\t\t\tthis.key = event.keyCode;\n\t\t\tthis.element = event.target;\n\t\t\tthis.event = event;\n\t\t} else {\n\t\t\tthis.key = null;\n\t\t\tthis.element = null;\n\t\t\tthis.event = null;\n\t\t}\n\t};\n\n\tvar _keyboardEvent = new KeyboardEvent();\n\n\tfunction makeKeyboardEvent(event) {\n\t\t_keyboardEvent.key = event.keyCode;\n\t\t_keyboardEvent.element = event.target;\n\t\t_keyboardEvent.event = event;\n\t\treturn _keyboardEvent;\n\t}\n\n\tfunction toKeyCode(s) {\n\t\tif (typeof s === \"string\") {\n\t\t\treturn s.toUpperCase().charCodeAt(0);\n\t\t}\n\n\t\treturn s;\n\t}\n\n\tvar _keyCodeToKeyIdentifier = {\n\t\t'9': 'Tab',\n\t\t'13': 'Enter',\n\t\t'16': 'Shift',\n\t\t'17': 'Control',\n\t\t'18': 'Alt',\n\t\t'27': 'Escape',\n\t\t'37': 'Left',\n\t\t'38': 'Up',\n\t\t'39': 'Right',\n\t\t'40': 'Down',\n\t\t'46': 'Delete',\n\t\t'91': 'Win'\n\t};\n\n\tvar Keyboard = function (_EventHandler) {\n\t\t_inheritsLoose(Keyboard, _EventHandler);\n\n\t\tfunction Keyboard(element, options) {\n\t\t\tvar _this;\n\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._element = null;\n\t\t\t_this._keyDownHandler = _this._handleKeyDown.bind(_assertThisInitialized(_this));\n\t\t\t_this._keyUpHandler = _this._handleKeyUp.bind(_assertThisInitialized(_this));\n\t\t\t_this._keyPressHandler = _this._handleKeyPress.bind(_assertThisInitialized(_this));\n\t\t\t_this._keymap = {};\n\t\t\t_this._lastmap = {};\n\n\t\t\tif (element) {\n\t\t\t\t_this.attach(element);\n\t\t\t}\n\n\t\t\t_this.preventDefault = options.preventDefault || false;\n\t\t\t_this.stopPropagation = options.stopPropagation || false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Keyboard.prototype;\n\n\t\t_proto.attach = function attach(element) {\n\t\t\tif (this._element) {\n\t\t\t\tthis.detach();\n\t\t\t}\n\n\t\t\tthis._element = element;\n\n\t\t\tthis._element.addEventListener(\"keydown\", this._keyDownHandler, false);\n\n\t\t\tthis._element.addEventListener(\"keypress\", this._keyPressHandler, false);\n\n\t\t\tthis._element.addEventListener(\"keyup\", this._keyUpHandler, false);\n\t\t};\n\n\t\t_proto.detach = function detach() {\n\t\t\tthis._element.removeEventListener(\"keydown\", this._keyDownHandler);\n\n\t\t\tthis._element.removeEventListener(\"keypress\", this._keyPressHandler);\n\n\t\t\tthis._element.removeEventListener(\"keyup\", this._keyUpHandler);\n\n\t\t\tthis._element = null;\n\t\t};\n\n\t\t_proto.toKeyIdentifier = function toKeyIdentifier(keyCode) {\n\t\t\tkeyCode = toKeyCode(keyCode);\n\t\t\tvar count;\n\t\t\tvar hex;\n\t\t\tvar length;\n\n\t\t\tvar id = _keyCodeToKeyIdentifier[keyCode.toString()];\n\n\t\t\tif (id) {\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\thex = keyCode.toString(16).toUpperCase();\n\t\t\tlength = hex.length;\n\n\t\t\tfor (count = 0; count < 4 - length; count++) {\n\t\t\t\thex = '0' + hex;\n\t\t\t}\n\n\t\t\treturn 'U+' + hex;\n\t\t};\n\n\t\t_proto._handleKeyDown = function _handleKeyDown(event) {\n\t\t\tvar code = event.keyCode || event.charCode;\n\t\t\tif (code === undefined) return;\n\t\t\tvar id = this.toKeyIdentifier(code);\n\t\t\tthis._keymap[id] = true;\n\t\t\tthis.fire(\"keydown\", makeKeyboardEvent(event));\n\n\t\t\tif (this.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif (this.stopPropagation) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t_proto._handleKeyUp = function _handleKeyUp(event) {\n\t\t\tvar code = event.keyCode || event.charCode;\n\t\t\tif (code === undefined) return;\n\t\t\tvar id = this.toKeyIdentifier(code);\n\t\t\tdelete this._keymap[id];\n\t\t\tthis.fire(\"keyup\", makeKeyboardEvent(event));\n\n\t\t\tif (this.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif (this.stopPropagation) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t_proto._handleKeyPress = function _handleKeyPress(event) {\n\t\t\tthis.fire(\"keypress\", makeKeyboardEvent(event));\n\n\t\t\tif (this.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif (this.stopPropagation) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tvar prop;\n\n\t\t\tfor (prop in this._lastmap) {\n\t\t\t\tdelete this._lastmap[prop];\n\t\t\t}\n\n\t\t\tfor (prop in this._keymap) {\n\t\t\t\tif (this._keymap.hasOwnProperty(prop)) {\n\t\t\t\t\tthis._lastmap[prop] = this._keymap[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto.isPressed = function isPressed(key) {\n\t\t\tvar keyCode = toKeyCode(key);\n\t\t\tvar id = this.toKeyIdentifier(keyCode);\n\t\t\treturn !!this._keymap[id];\n\t\t};\n\n\t\t_proto.wasPressed = function wasPressed(key) {\n\t\t\tvar keyCode = toKeyCode(key);\n\t\t\tvar id = this.toKeyIdentifier(keyCode);\n\t\t\treturn !!this._keymap[id] && !!!this._lastmap[id];\n\t\t};\n\n\t\t_proto.wasReleased = function wasReleased(key) {\n\t\t\tvar keyCode = toKeyCode(key);\n\t\t\tvar id = this.toKeyIdentifier(keyCode);\n\t\t\treturn !!!this._keymap[id] && !!this._lastmap[id];\n\t\t};\n\n\t\treturn Keyboard;\n\t}(EventHandler);\n\n\tfunction isMousePointerLocked() {\n\t\treturn !!(document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement);\n\t}\n\n\tvar MouseEvent = function MouseEvent(mouse, event) {\n\t\tvar coords = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\n\t\tif (event) {\n\t\t\tif (event instanceof MouseEvent) {\n\t\t\t\tthrow Error(\"Expected MouseEvent\");\n\t\t\t}\n\n\t\t\tcoords = mouse._getTargetCoords(event);\n\t\t} else {\n\t\t\tevent = {};\n\t\t}\n\n\t\tif (coords) {\n\t\t\tthis.x = coords.x;\n\t\t\tthis.y = coords.y;\n\t\t} else if (isMousePointerLocked()) {\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wheelDelta = 0;\n\n\t\tif (event.type === 'wheel') {\n\t\t\tif (event.deltaY > 0) {\n\t\t\t\tthis.wheelDelta = 1;\n\t\t\t} else if (event.deltaY < 0) {\n\t\t\t\tthis.wheelDelta = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (isMousePointerLocked()) {\n\t\t\tthis.dx = event.movementX || event.webkitMovementX || event.mozMovementX || 0;\n\t\t\tthis.dy = event.movementY || event.webkitMovementY || event.mozMovementY || 0;\n\t\t} else {\n\t\t\tthis.dx = this.x - mouse._lastX;\n\t\t\tthis.dy = this.y - mouse._lastY;\n\t\t}\n\n\t\tif (event.type === 'mousedown' || event.type === 'mouseup') {\n\t\t\tthis.button = event.button;\n\t\t} else {\n\t\t\tthis.button = MOUSEBUTTON_NONE;\n\t\t}\n\n\t\tthis.buttons = mouse._buttons.slice(0);\n\t\tthis.element = event.target;\n\t\tthis.ctrlKey = event.ctrlKey || false;\n\t\tthis.altKey = event.altKey || false;\n\t\tthis.shiftKey = event.shiftKey || false;\n\t\tthis.metaKey = event.metaKey || false;\n\t\tthis.event = event;\n\t};\n\n\tvar Mouse = function (_EventHandler) {\n\t\t_inheritsLoose(Mouse, _EventHandler);\n\n\t\tfunction Mouse(element) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._lastX = 0;\n\t\t\t_this._lastY = 0;\n\t\t\t_this._buttons = [false, false, false];\n\t\t\t_this._lastbuttons = [false, false, false];\n\t\t\t_this._upHandler = _this._handleUp.bind(_assertThisInitialized(_this));\n\t\t\t_this._downHandler = _this._handleDown.bind(_assertThisInitialized(_this));\n\t\t\t_this._moveHandler = _this._handleMove.bind(_assertThisInitialized(_this));\n\t\t\t_this._wheelHandler = _this._handleWheel.bind(_assertThisInitialized(_this));\n\n\t\t\t_this._contextMenuHandler = function (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\n\t\t\t_this._target = null;\n\t\t\t_this._attached = false;\n\n\t\t\t_this.attach(element);\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tMouse.isPointerLocked = function isPointerLocked() {\n\t\t\treturn isMousePointerLocked();\n\t\t};\n\n\t\tvar _proto = Mouse.prototype;\n\n\t\t_proto.attach = function attach(element) {\n\t\t\tthis._target = element;\n\t\t\tif (this._attached) return;\n\t\t\tthis._attached = true;\n\t\t\tvar opts = platform.passiveEvents ? {\n\t\t\t\tpassive: false\n\t\t\t} : false;\n\t\t\twindow.addEventListener(\"mouseup\", this._upHandler, opts);\n\t\t\twindow.addEventListener(\"mousedown\", this._downHandler, opts);\n\t\t\twindow.addEventListener(\"mousemove\", this._moveHandler, opts);\n\t\t\twindow.addEventListener(\"wheel\", this._wheelHandler, opts);\n\t\t};\n\n\t\t_proto.detach = function detach() {\n\t\t\tif (!this._attached) return;\n\t\t\tthis._attached = false;\n\t\t\tthis._target = null;\n\t\t\tvar opts = platform.passiveEvents ? {\n\t\t\t\tpassive: false\n\t\t\t} : false;\n\t\t\twindow.removeEventListener(\"mouseup\", this._upHandler, opts);\n\t\t\twindow.removeEventListener(\"mousedown\", this._downHandler, opts);\n\t\t\twindow.removeEventListener(\"mousemove\", this._moveHandler, opts);\n\t\t\twindow.removeEventListener(\"wheel\", this._wheelHandler, opts);\n\t\t};\n\n\t\t_proto.disableContextMenu = function disableContextMenu() {\n\t\t\tif (!this._target) return;\n\n\t\t\tthis._target.addEventListener(\"contextmenu\", this._contextMenuHandler);\n\t\t};\n\n\t\t_proto.enableContextMenu = function enableContextMenu() {\n\t\t\tif (!this._target) return;\n\n\t\t\tthis._target.removeEventListener(\"contextmenu\", this._contextMenuHandler);\n\t\t};\n\n\t\t_proto.enablePointerLock = function enablePointerLock(success, error) {\n\t\t\tif (!document.body.requestPointerLock) {\n\t\t\t\tif (error) error();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar s = function s() {\n\t\t\t\tsuccess();\n\t\t\t\tdocument.removeEventListener('pointerlockchange', s);\n\t\t\t};\n\n\t\t\tvar e = function e() {\n\t\t\t\terror();\n\t\t\t\tdocument.removeEventListener('pointerlockerror', e);\n\t\t\t};\n\n\t\t\tif (success) {\n\t\t\t\tdocument.addEventListener('pointerlockchange', s, false);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tdocument.addEventListener('pointerlockerror', e, false);\n\t\t\t}\n\n\t\t\tdocument.body.requestPointerLock();\n\t\t};\n\n\t\t_proto.disablePointerLock = function disablePointerLock(success) {\n\t\t\tif (!document.exitPointerLock) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar s = function s() {\n\t\t\t\tsuccess();\n\t\t\t\tdocument.removeEventListener('pointerlockchange', s);\n\t\t\t};\n\n\t\t\tif (success) {\n\t\t\t\tdocument.addEventListener('pointerlockchange', s, false);\n\t\t\t}\n\n\t\t\tdocument.exitPointerLock();\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tthis._lastbuttons[0] = this._buttons[0];\n\t\t\tthis._lastbuttons[1] = this._buttons[1];\n\t\t\tthis._lastbuttons[2] = this._buttons[2];\n\t\t};\n\n\t\t_proto.isPressed = function isPressed(button) {\n\t\t\treturn this._buttons[button];\n\t\t};\n\n\t\t_proto.wasPressed = function wasPressed(button) {\n\t\t\treturn this._buttons[button] && !this._lastbuttons[button];\n\t\t};\n\n\t\t_proto.wasReleased = function wasReleased(button) {\n\t\t\treturn !this._buttons[button] && this._lastbuttons[button];\n\t\t};\n\n\t\t_proto._handleUp = function _handleUp(event) {\n\t\t\tthis._buttons[event.button] = false;\n\t\t\tvar e = new MouseEvent(this, event);\n\t\t\tif (!e.event) return;\n\t\t\tthis.fire(EVENT_MOUSEUP, e);\n\t\t};\n\n\t\t_proto._handleDown = function _handleDown(event) {\n\t\t\tthis._buttons[event.button] = true;\n\t\t\tvar e = new MouseEvent(this, event);\n\t\t\tif (!e.event) return;\n\t\t\tthis.fire(EVENT_MOUSEDOWN, e);\n\t\t};\n\n\t\t_proto._handleMove = function _handleMove(event) {\n\t\t\tvar e = new MouseEvent(this, event);\n\t\t\tif (!e.event) return;\n\t\t\tthis.fire(EVENT_MOUSEMOVE, e);\n\t\t\tthis._lastX = e.x;\n\t\t\tthis._lastY = e.y;\n\t\t};\n\n\t\t_proto._handleWheel = function _handleWheel(event) {\n\t\t\tvar e = new MouseEvent(this, event);\n\t\t\tif (!e.event) return;\n\t\t\tthis.fire(EVENT_MOUSEWHEEL, e);\n\t\t};\n\n\t\t_proto._getTargetCoords = function _getTargetCoords(event) {\n\t\t\tvar rect = this._target.getBoundingClientRect();\n\n\t\t\tvar left = Math.floor(rect.left);\n\t\t\tvar top = Math.floor(rect.top);\n\n\t\t\tif (event.clientX < left || event.clientX >= left + this._target.clientWidth || event.clientY < top || event.clientY >= top + this._target.clientHeight) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: event.clientX - left,\n\t\t\t\ty: event.clientY - top\n\t\t\t};\n\t\t};\n\n\t\treturn Mouse;\n\t}(EventHandler);\n\n\tvar Controller = function () {\n\t\tfunction Controller(element, options) {\n\t\t\tif (options === void 0) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tthis._keyboard = options.keyboard || null;\n\t\t\tthis._mouse = options.mouse || null;\n\t\t\tthis._gamepads = options.gamepads || null;\n\t\t\tthis._element = null;\n\t\t\tthis._actions = {};\n\t\t\tthis._axes = {};\n\t\t\tthis._axesValues = {};\n\n\t\t\tif (element) {\n\t\t\t\tthis.attach(element);\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Controller.prototype;\n\n\t\t_proto.attach = function attach(element) {\n\t\t\tthis._element = element;\n\n\t\t\tif (this._keyboard) {\n\t\t\t\tthis._keyboard.attach(element);\n\t\t\t}\n\n\t\t\tif (this._mouse) {\n\t\t\t\tthis._mouse.attach(element);\n\t\t\t}\n\t\t};\n\n\t\t_proto.detach = function detach() {\n\t\t\tif (this._keyboard) {\n\t\t\t\tthis._keyboard.detach();\n\t\t\t}\n\n\t\t\tif (this._mouse) {\n\t\t\t\tthis._mouse.detach();\n\t\t\t}\n\n\t\t\tthis._element = null;\n\t\t};\n\n\t\t_proto.disableContextMenu = function disableContextMenu() {\n\t\t\tif (!this._mouse) {\n\t\t\t\tthis._enableMouse();\n\t\t\t}\n\n\t\t\tthis._mouse.disableContextMenu();\n\t\t};\n\n\t\t_proto.enableContextMenu = function enableContextMenu() {\n\t\t\tif (!this._mouse) {\n\t\t\t\tthis._enableMouse();\n\t\t\t}\n\n\t\t\tthis._mouse.enableContextMenu();\n\t\t};\n\n\t\t_proto.update = function update(dt) {\n\t\t\tif (this._keyboard) {\n\t\t\t\tthis._keyboard.update(dt);\n\t\t\t}\n\n\t\t\tif (this._mouse) {\n\t\t\t\tthis._mouse.update(dt);\n\t\t\t}\n\n\t\t\tif (this._gamepads) {\n\t\t\t\tthis._gamepads.update(dt);\n\t\t\t}\n\n\t\t\tthis._axesValues = {};\n\n\t\t\tfor (var key in this._axes) {\n\t\t\t\tthis._axesValues[key] = [];\n\t\t\t}\n\t\t};\n\n\t\t_proto.registerKeys = function registerKeys(action, keys) {\n\t\t\tif (!this._keyboard) {\n\t\t\t\tthis._enableKeyboard();\n\t\t\t}\n\n\t\t\tif (this._actions[action]) {\n\t\t\t\tthrow new Error(\"Action: \" + action + \" already registered\");\n\t\t\t}\n\n\t\t\tif (keys === undefined) {\n\t\t\t\tthrow new Error(\"Invalid button\");\n\t\t\t}\n\n\t\t\tif (!keys.length) {\n\t\t\t\tkeys = [keys];\n\t\t\t}\n\n\t\t\tif (this._actions[action]) {\n\t\t\t\tthis._actions[action].push({\n\t\t\t\t\ttype: ACTION_KEYBOARD,\n\t\t\t\t\tkeys: keys\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._actions[action] = [{\n\t\t\t\t\ttype: ACTION_KEYBOARD,\n\t\t\t\t\tkeys: keys\n\t\t\t\t}];\n\t\t\t}\n\t\t};\n\n\t\t_proto.registerMouse = function registerMouse(action, button) {\n\t\t\tif (!this._mouse) {\n\t\t\t\tthis._enableMouse();\n\t\t\t}\n\n\t\t\tif (button === undefined) {\n\t\t\t\tthrow new Error('Invalid button');\n\t\t\t}\n\n\t\t\tif (this._actions[action]) {\n\t\t\t\tthis._actions[action].push({\n\t\t\t\t\ttype: ACTION_MOUSE,\n\t\t\t\t\tbutton: button\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._actions[action] = [{\n\t\t\t\t\ttype: ACTION_MOUSE,\n\t\t\t\t\tbutton: -button\n\t\t\t\t}];\n\t\t\t}\n\t\t};\n\n\t\t_proto.registerPadButton = function registerPadButton(action, pad, button) {\n\t\t\tif (button === undefined) {\n\t\t\t\tthrow new Error('Invalid button');\n\t\t\t}\n\n\t\t\tif (this._actions[action]) {\n\t\t\t\tthis._actions[action].push({\n\t\t\t\t\ttype: ACTION_GAMEPAD,\n\t\t\t\t\tbutton: button,\n\t\t\t\t\tpad: pad\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._actions[action] = [{\n\t\t\t\t\ttype: ACTION_GAMEPAD,\n\t\t\t\t\tbutton: button,\n\t\t\t\t\tpad: pad\n\t\t\t\t}];\n\t\t\t}\n\t\t};\n\n\t\t_proto.registerAxis = function registerAxis(options) {\n\t\t\tvar name = options.name;\n\n\t\t\tif (!this._axes[name]) {\n\t\t\t\tthis._axes[name] = [];\n\t\t\t}\n\n\t\t\tvar i = this._axes[name].push(name);\n\n\t\t\toptions = options || {};\n\t\t\toptions.pad = options.pad || PAD_1;\n\n\t\t\tvar bind = function bind(controller, source, value, key) {\n\t\t\t\tswitch (source) {\n\t\t\t\t\tcase 'mousex':\n\t\t\t\t\t\tcontroller._mouse.on(EVENT_MOUSEMOVE, function (e) {\n\t\t\t\t\t\t\tcontroller._axesValues[name][i] = e.dx / 10;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mousey':\n\t\t\t\t\t\tcontroller._mouse.on(EVENT_MOUSEMOVE, function (e) {\n\t\t\t\t\t\t\tcontroller._axesValues[name][i] = e.dy / 10;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'key':\n\t\t\t\t\t\tcontroller._axes[name].push(function () {\n\t\t\t\t\t\t\treturn controller._keyboard.isPressed(key) ? value : 0;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'padrx':\n\t\t\t\t\t\tcontroller._axes[name].push(function () {\n\t\t\t\t\t\t\treturn controller._gamepads.getAxis(options.pad, PAD_R_STICK_X);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'padry':\n\t\t\t\t\t\tcontroller._axes[name].push(function () {\n\t\t\t\t\t\t\treturn controller._gamepads.getAxis(options.pad, PAD_R_STICK_Y);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'padlx':\n\t\t\t\t\t\tcontroller._axes[name].push(function () {\n\t\t\t\t\t\t\treturn controller._gamepads.getAxis(options.pad, PAD_L_STICK_X);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'padly':\n\t\t\t\t\t\tcontroller._axes[name].push(function () {\n\t\t\t\t\t\t\treturn controller._gamepads.getAxis(options.pad, PAD_L_STICK_Y);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Unknown axis');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tbind(this, options.positive, 1, options.positiveKey);\n\n\t\t\tif (options.negativeKey || options.negative !== options.positive) {\n\t\t\t\tbind(this, options.negative, -1, options.negativeKey);\n\t\t\t}\n\t\t};\n\n\t\t_proto.isPressed = function isPressed(actionName) {\n\t\t\tif (!this._actions[actionName]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar action;\n\t\t\tvar index = 0;\n\t\t\tvar length = this._actions[actionName].length;\n\n\t\t\tfor (index = 0; index < length; ++index) {\n\t\t\t\taction = this._actions[actionName][index];\n\n\t\t\t\tswitch (action.type) {\n\t\t\t\t\tcase ACTION_KEYBOARD:\n\t\t\t\t\t\tif (this._keyboard) {\n\t\t\t\t\t\t\tvar i,\n\t\t\t\t\t\t\t\t\tlen = action.keys.length;\n\n\t\t\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\tif (this._keyboard.isPressed(action.keys[i])) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ACTION_MOUSE:\n\t\t\t\t\t\tif (this._mouse && this._mouse.isPressed(action.button)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ACTION_GAMEPAD:\n\t\t\t\t\t\tif (this._gamepads && this._gamepads.isPressed(action.pad, action.button)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.wasPressed = function wasPressed(actionName) {\n\t\t\tif (!this._actions[actionName]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar index = 0;\n\t\t\tvar length = this._actions[actionName].length;\n\n\t\t\tfor (index = 0; index < length; ++index) {\n\t\t\t\tvar action = this._actions[actionName][index];\n\n\t\t\t\tswitch (action.type) {\n\t\t\t\t\tcase ACTION_KEYBOARD:\n\t\t\t\t\t\tif (this._keyboard) {\n\t\t\t\t\t\t\tvar i,\n\t\t\t\t\t\t\t\t\tlen = action.keys.length;\n\n\t\t\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\tif (this._keyboard.wasPressed(action.keys[i])) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ACTION_MOUSE:\n\t\t\t\t\t\tif (this._mouse && this._mouse.wasPressed(action.button)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ACTION_GAMEPAD:\n\t\t\t\t\t\tif (this._gamepads && this._gamepads.wasPressed(action.pad, action.button)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.getAxis = function getAxis(name) {\n\t\t\tvar value = 0;\n\n\t\t\tif (this._axes[name]) {\n\t\t\t\tvar i,\n\t\t\t\t\t\tlen = this._axes[name].length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (type(this._axes[name][i]) === 'function') {\n\t\t\t\t\t\tvar v = this._axes[name][i]();\n\n\t\t\t\t\t\tif (Math.abs(v) > Math.abs(value)) {\n\t\t\t\t\t\t\tvalue = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this._axesValues[name]) {\n\t\t\t\t\t\tif (Math.abs(this._axesValues[name][i]) > Math.abs(value)) {\n\t\t\t\t\t\t\tvalue = this._axesValues[name][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\n\t\t_proto._enableMouse = function _enableMouse() {\n\t\t\tthis._mouse = new Mouse();\n\n\t\t\tif (!this._element) {\n\t\t\t\tthrow new Error(\"Controller must be attached to an Element\");\n\t\t\t}\n\n\t\t\tthis._mouse.attach(this._element);\n\t\t};\n\n\t\t_proto._enableKeyboard = function _enableKeyboard() {\n\t\t\tthis._keyboard = new Keyboard();\n\n\t\t\tif (!this._element) {\n\t\t\t\tthrow new Error(\"Controller must be attached to an Element\");\n\t\t\t}\n\n\t\t\tthis._keyboard.attach(this._element);\n\t\t};\n\n\t\treturn Controller;\n\t}();\n\n\tvar targetX, targetY;\n\tvar vecA$2 = new Vec3();\n\tvar vecB$2 = new Vec3();\n\tvar rayA = new Ray();\n\tvar rayB = new Ray();\n\tvar rayC = new Ray();\n\trayA.end = new Vec3();\n\trayB.end = new Vec3();\n\trayC.end = new Vec3();\n\n\tvar _pq = new Vec3();\n\n\tvar _pa = new Vec3();\n\n\tvar _pb = new Vec3();\n\n\tvar _pc = new Vec3();\n\n\tvar _pd = new Vec3();\n\n\tvar _m = new Vec3();\n\n\tvar _sct = new Vec3();\n\n\tvar _accumulatedScale = new Vec2();\n\n\tvar _paddingTop = new Vec3();\n\n\tvar _paddingBottom = new Vec3();\n\n\tvar _paddingLeft = new Vec3();\n\n\tvar _paddingRight = new Vec3();\n\n\tvar _cornerBottomLeft = new Vec3();\n\n\tvar _cornerBottomRight = new Vec3();\n\n\tvar _cornerTopRight = new Vec3();\n\n\tvar _cornerTopLeft = new Vec3();\n\n\tvar ZERO_VEC4 = new Vec4();\n\n\tfunction scalarTriple(p1, p2, p3) {\n\t\treturn _sct.cross(p1, p2).dot(p3);\n\t}\n\n\tfunction intersectLineQuad(p, q, corners) {\n\t\t_pq.sub2(q, p);\n\n\t\t_pa.sub2(corners[0], p);\n\n\t\t_pb.sub2(corners[1], p);\n\n\t\t_pc.sub2(corners[2], p);\n\n\t\t_m.cross(_pc, _pq);\n\n\t\tvar v = _pa.dot(_m);\n\n\t\tif (v >= 0) {\n\t\t\tif (-_pb.dot(_m) < 0) return false;\n\t\t\tif (scalarTriple(_pq, _pb, _pa) < 0) return false;\n\t\t} else {\n\t\t\t_pd.sub2(corners[3], p);\n\n\t\t\tif (_pd.dot(_m) < 0) return false;\n\t\t\tif (scalarTriple(_pq, _pa, _pd) < 0) return false;\n\t\t}\n\n\t\tif (_pq.sub2(corners[0], corners[2]).lengthSq() < 0.0001 * 0.0001) return false;\n\t\tif (_pq.sub2(corners[1], corners[3]).lengthSq() < 0.0001 * 0.0001) return false;\n\t\treturn true;\n\t}\n\n\tvar ElementInputEvent = function () {\n\t\tfunction ElementInputEvent(event, element, camera) {\n\t\t\tthis.event = event;\n\t\t\tthis.element = element;\n\t\t\tthis.camera = camera;\n\t\t\tthis._stopPropagation = false;\n\t\t}\n\n\t\tvar _proto = ElementInputEvent.prototype;\n\n\t\t_proto.stopPropagation = function stopPropagation() {\n\t\t\tthis._stopPropagation = true;\n\n\t\t\tif (this.event) {\n\t\t\t\tthis.event.stopImmediatePropagation();\n\t\t\t\tthis.event.stopPropagation();\n\t\t\t}\n\t\t};\n\n\t\treturn ElementInputEvent;\n\t}();\n\n\tvar ElementMouseEvent = function (_ElementInputEvent) {\n\t\t_inheritsLoose(ElementMouseEvent, _ElementInputEvent);\n\n\t\tfunction ElementMouseEvent(event, element, camera, x, y, lastX, lastY) {\n\t\t\tvar _this;\n\n\t\t\t_this = _ElementInputEvent.call(this, event, element, camera) || this;\n\t\t\t_this.x = x;\n\t\t\t_this.y = y;\n\t\t\t_this.ctrlKey = event.ctrlKey || false;\n\t\t\t_this.altKey = event.altKey || false;\n\t\t\t_this.shiftKey = event.shiftKey || false;\n\t\t\t_this.metaKey = event.metaKey || false;\n\t\t\t_this.button = event.button;\n\n\t\t\tif (Mouse.isPointerLocked()) {\n\t\t\t\t_this.dx = event.movementX || event.webkitMovementX || event.mozMovementX || 0;\n\t\t\t\t_this.dy = event.movementY || event.webkitMovementY || event.mozMovementY || 0;\n\t\t\t} else {\n\t\t\t\t_this.dx = x - lastX;\n\t\t\t\t_this.dy = y - lastY;\n\t\t\t}\n\n\t\t\t_this.wheelDelta = 0;\n\n\t\t\tif (event.type === 'wheel') {\n\t\t\t\tif (event.deltaY > 0) {\n\t\t\t\t\t_this.wheelDelta = 1;\n\t\t\t\t} else if (event.deltaY < 0) {\n\t\t\t\t\t_this.wheelDelta = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn ElementMouseEvent;\n\t}(ElementInputEvent);\n\n\tvar ElementTouchEvent = function (_ElementInputEvent2) {\n\t\t_inheritsLoose(ElementTouchEvent, _ElementInputEvent2);\n\n\t\tfunction ElementTouchEvent(event, element, camera, x, y, touch) {\n\t\t\tvar _this2;\n\n\t\t\t_this2 = _ElementInputEvent2.call(this, event, element, camera) || this;\n\t\t\t_this2.touches = event.touches;\n\t\t\t_this2.changedTouches = event.changedTouches;\n\t\t\t_this2.x = x;\n\t\t\t_this2.y = y;\n\t\t\t_this2.touch = touch;\n\t\t\treturn _this2;\n\t\t}\n\n\t\treturn ElementTouchEvent;\n\t}(ElementInputEvent);\n\n\tvar ElementSelectEvent = function (_ElementInputEvent3) {\n\t\t_inheritsLoose(ElementSelectEvent, _ElementInputEvent3);\n\n\t\tfunction ElementSelectEvent(event, element, camera, inputSource) {\n\t\t\tvar _this3;\n\n\t\t\t_this3 = _ElementInputEvent3.call(this, event, element, camera) || this;\n\t\t\t_this3.inputSource = inputSource;\n\t\t\treturn _this3;\n\t\t}\n\n\t\treturn ElementSelectEvent;\n\t}(ElementInputEvent);\n\n\tvar ElementInput = function () {\n\t\tfunction ElementInput(domElement, options) {\n\t\t\tthis._app = null;\n\t\t\tthis._attached = false;\n\t\t\tthis._target = null;\n\t\t\tthis._enabled = true;\n\t\t\tthis._lastX = 0;\n\t\t\tthis._lastY = 0;\n\t\t\tthis._upHandler = this._handleUp.bind(this);\n\t\t\tthis._downHandler = this._handleDown.bind(this);\n\t\t\tthis._moveHandler = this._handleMove.bind(this);\n\t\t\tthis._wheelHandler = this._handleWheel.bind(this);\n\t\t\tthis._touchstartHandler = this._handleTouchStart.bind(this);\n\t\t\tthis._touchendHandler = this._handleTouchEnd.bind(this);\n\t\t\tthis._touchcancelHandler = this._touchendHandler;\n\t\t\tthis._touchmoveHandler = this._handleTouchMove.bind(this);\n\t\t\tthis._sortHandler = this._sortElements.bind(this);\n\t\t\tthis._elements = [];\n\t\t\tthis._hoveredElement = null;\n\t\t\tthis._pressedElement = null;\n\t\t\tthis._touchedElements = {};\n\t\t\tthis._touchesForWhichTouchLeaveHasFired = {};\n\t\t\tthis._selectedElements = {};\n\t\t\tthis._selectedPressedElements = {};\n\t\t\tthis._useMouse = !options || options.useMouse !== false;\n\t\t\tthis._useTouch = !options || options.useTouch !== false;\n\t\t\tthis._useXr = !options || options.useXr !== false;\n\t\t\tthis._selectEventsAttached = false;\n\t\t\tif (platform.touch) this._clickedEntities = {};\n\t\t\tthis.attach(domElement);\n\t\t}\n\n\t\tvar _proto2 = ElementInput.prototype;\n\n\t\t_proto2.attach = function attach(domElement) {\n\t\t\tif (this._attached) {\n\t\t\t\tthis._attached = false;\n\t\t\t\tthis.detach();\n\t\t\t}\n\n\t\t\tthis._target = domElement;\n\t\t\tthis._attached = true;\n\t\t\tvar opts = platform.passiveEvents ? {\n\t\t\t\tpassive: true\n\t\t\t} : false;\n\n\t\t\tif (this._useMouse) {\n\t\t\t\twindow.addEventListener('mouseup', this._upHandler, opts);\n\t\t\t\twindow.addEventListener('mousedown', this._downHandler, opts);\n\t\t\t\twindow.addEventListener('mousemove', this._moveHandler, opts);\n\t\t\t\twindow.addEventListener('wheel', this._wheelHandler, opts);\n\t\t\t}\n\n\t\t\tif (this._useTouch && platform.touch) {\n\t\t\t\tthis._target.addEventListener('touchstart', this._touchstartHandler, opts);\n\n\t\t\t\tthis._target.addEventListener('touchend', this._touchendHandler, false);\n\n\t\t\t\tthis._target.addEventListener('touchmove', this._touchmoveHandler, false);\n\n\t\t\t\tthis._target.addEventListener('touchcancel', this._touchcancelHandler, false);\n\t\t\t}\n\n\t\t\tthis.attachSelectEvents();\n\t\t};\n\n\t\t_proto2.attachSelectEvents = function attachSelectEvents() {\n\t\t\tif (!this._selectEventsAttached && this._useXr && this.app && this.app.xr && this.app.xr.supported) {\n\t\t\t\tif (!this._clickedEntities) this._clickedEntities = {};\n\t\t\t\tthis._selectEventsAttached = true;\n\t\t\t\tthis.app.xr.on('start', this._onXrStart, this);\n\t\t\t}\n\t\t};\n\n\t\t_proto2.detach = function detach() {\n\t\t\tif (!this._attached) return;\n\t\t\tthis._attached = false;\n\t\t\tvar opts = platform.passiveEvents ? {\n\t\t\t\tpassive: true\n\t\t\t} : false;\n\n\t\t\tif (this._useMouse) {\n\t\t\t\twindow.removeEventListener('mouseup', this._upHandler, opts);\n\t\t\t\twindow.removeEventListener('mousedown', this._downHandler, opts);\n\t\t\t\twindow.removeEventListener('mousemove', this._moveHandler, opts);\n\t\t\t\twindow.removeEventListener('wheel', this._wheelHandler, opts);\n\t\t\t}\n\n\t\t\tif (this._useTouch) {\n\t\t\t\tthis._target.removeEventListener('touchstart', this._touchstartHandler, opts);\n\n\t\t\t\tthis._target.removeEventListener('touchend', this._touchendHandler, false);\n\n\t\t\t\tthis._target.removeEventListener('touchmove', this._touchmoveHandler, false);\n\n\t\t\t\tthis._target.removeEventListener('touchcancel', this._touchcancelHandler, false);\n\t\t\t}\n\n\t\t\tif (this._selectEventsAttached) {\n\t\t\t\tthis._selectEventsAttached = false;\n\t\t\t\tthis.app.xr.off('start', this._onXrStart, this);\n\t\t\t\tthis.app.xr.off('end', this._onXrEnd, this);\n\t\t\t\tthis.app.xr.off('update', this._onXrUpdate, this);\n\t\t\t\tthis.app.xr.input.off('selectstart', this._onSelectStart, this);\n\t\t\t\tthis.app.xr.input.off('selectend', this._onSelectEnd, this);\n\t\t\t\tthis.app.xr.input.off('remove', this._onXrInputRemove, this);\n\t\t\t}\n\n\t\t\tthis._target = null;\n\t\t};\n\n\t\t_proto2.addElement = function addElement(element) {\n\t\t\tif (this._elements.indexOf(element) === -1) this._elements.push(element);\n\t\t};\n\n\t\t_proto2.removeElement = function removeElement(element) {\n\t\t\tvar idx = this._elements.indexOf(element);\n\n\t\t\tif (idx !== -1) this._elements.splice(idx, 1);\n\t\t};\n\n\t\t_proto2._handleUp = function _handleUp(event) {\n\t\t\tif (!this._enabled) return;\n\t\t\tif (Mouse.isPointerLocked()) return;\n\n\t\t\tthis._calcMouseCoords(event);\n\n\t\t\tif (targetX === null) return;\n\n\t\t\tthis._onElementMouseEvent('mouseup', event);\n\t\t};\n\n\t\t_proto2._handleDown = function _handleDown(event) {\n\t\t\tif (!this._enabled) return;\n\t\t\tif (Mouse.isPointerLocked()) return;\n\n\t\t\tthis._calcMouseCoords(event);\n\n\t\t\tif (targetX === null) return;\n\n\t\t\tthis._onElementMouseEvent('mousedown', event);\n\t\t};\n\n\t\t_proto2._handleMove = function _handleMove(event) {\n\t\t\tif (!this._enabled) return;\n\n\t\t\tthis._calcMouseCoords(event);\n\n\t\t\tif (targetX === null) return;\n\n\t\t\tthis._onElementMouseEvent('mousemove', event);\n\n\t\t\tthis._lastX = targetX;\n\t\t\tthis._lastY = targetY;\n\t\t};\n\n\t\t_proto2._handleWheel = function _handleWheel(event) {\n\t\t\tif (!this._enabled) return;\n\n\t\t\tthis._calcMouseCoords(event);\n\n\t\t\tif (targetX === null) return;\n\n\t\t\tthis._onElementMouseEvent('mousewheel', event);\n\t\t};\n\n\t\t_proto2._determineTouchedElements = function _determineTouchedElements(event) {\n\t\t\tvar touchedElements = {};\n\t\t\tvar cameras = this.app.systems.camera.cameras;\n\t\t\tvar i, j, len;\n\n\t\t\tfor (i = cameras.length - 1; i >= 0; i--) {\n\t\t\t\tvar camera = cameras[i];\n\t\t\t\tvar done = 0;\n\n\t\t\t\tfor (j = 0, len = event.changedTouches.length; j < len; j++) {\n\t\t\t\t\tif (touchedElements[event.changedTouches[j].identifier]) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar coords = this._calcTouchCoords(event.changedTouches[j]);\n\n\t\t\t\t\tvar element = this._getTargetElement(camera, coords.x, coords.y);\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\ttouchedElements[event.changedTouches[j].identifier] = {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\tcamera: camera,\n\t\t\t\t\t\t\tx: coords.x,\n\t\t\t\t\t\t\ty: coords.y\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (done === len) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn touchedElements;\n\t\t};\n\n\t\t_proto2._handleTouchStart = function _handleTouchStart(event) {\n\t\t\tif (!this._enabled) return;\n\n\t\t\tvar newTouchedElements = this._determineTouchedElements(event);\n\n\t\t\tfor (var i = 0, len = event.changedTouches.length; i < len; i++) {\n\t\t\t\tvar touch = event.changedTouches[i];\n\t\t\t\tvar newTouchInfo = newTouchedElements[touch.identifier];\n\t\t\t\tvar oldTouchInfo = this._touchedElements[touch.identifier];\n\n\t\t\t\tif (newTouchInfo && (!oldTouchInfo || newTouchInfo.element !== oldTouchInfo.element)) {\n\t\t\t\t\tthis._fireEvent(event.type, new ElementTouchEvent(event, newTouchInfo.element, newTouchInfo.camera, newTouchInfo.x, newTouchInfo.y, touch));\n\n\t\t\t\t\tthis._touchesForWhichTouchLeaveHasFired[touch.identifier] = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var touchId in newTouchedElements) {\n\t\t\t\tthis._touchedElements[touchId] = newTouchedElements[touchId];\n\t\t\t}\n\t\t};\n\n\t\t_proto2._handleTouchEnd = function _handleTouchEnd(event) {\n\t\t\tif (!this._enabled) return;\n\t\t\tvar cameras = this.app.systems.camera.cameras;\n\n\t\t\tfor (var key in this._clickedEntities) {\n\t\t\t\tdelete this._clickedEntities[key];\n\t\t\t}\n\n\t\t\tfor (var i = 0, len = event.changedTouches.length; i < len; i++) {\n\t\t\t\tvar touch = event.changedTouches[i];\n\t\t\t\tvar touchInfo = this._touchedElements[touch.identifier];\n\t\t\t\tif (!touchInfo) continue;\n\t\t\t\tvar element = touchInfo.element;\n\t\t\t\tvar camera = touchInfo.camera;\n\t\t\t\tvar x = touchInfo.x;\n\t\t\t\tvar y = touchInfo.y;\n\t\t\t\tdelete this._touchedElements[touch.identifier];\n\t\t\t\tdelete this._touchesForWhichTouchLeaveHasFired[touch.identifier];\n\n\t\t\t\tthis._fireEvent(event.type, new ElementTouchEvent(event, element, camera, x, y, touch));\n\n\t\t\t\tif (event.touches.length === 0) {\n\t\t\t\t\tvar coords = this._calcTouchCoords(touch);\n\n\t\t\t\t\tfor (var c = cameras.length - 1; c >= 0; c--) {\n\t\t\t\t\t\tvar hovered = this._getTargetElement(cameras[c], coords.x, coords.y);\n\n\t\t\t\t\t\tif (hovered === element) {\n\t\t\t\t\t\t\tif (!this._clickedEntities[element.entity.getGuid()]) {\n\t\t\t\t\t\t\t\tthis._fireEvent('click', new ElementTouchEvent(event, element, camera, x, y, touch));\n\n\t\t\t\t\t\t\t\tthis._clickedEntities[element.entity.getGuid()] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._handleTouchMove = function _handleTouchMove(event) {\n\t\t\tevent.preventDefault();\n\t\t\tif (!this._enabled) return;\n\n\t\t\tvar newTouchedElements = this._determineTouchedElements(event);\n\n\t\t\tfor (var i = 0, len = event.changedTouches.length; i < len; i++) {\n\t\t\t\tvar touch = event.changedTouches[i];\n\t\t\t\tvar newTouchInfo = newTouchedElements[touch.identifier];\n\t\t\t\tvar oldTouchInfo = this._touchedElements[touch.identifier];\n\n\t\t\t\tif (oldTouchInfo) {\n\t\t\t\t\tvar coords = this._calcTouchCoords(touch);\n\n\t\t\t\t\tif ((!newTouchInfo || newTouchInfo.element !== oldTouchInfo.element) && !this._touchesForWhichTouchLeaveHasFired[touch.identifier]) {\n\t\t\t\t\t\tthis._fireEvent('touchleave', new ElementTouchEvent(event, oldTouchInfo.element, oldTouchInfo.camera, coords.x, coords.y, touch));\n\n\t\t\t\t\t\tthis._touchesForWhichTouchLeaveHasFired[touch.identifier] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fireEvent('touchmove', new ElementTouchEvent(event, oldTouchInfo.element, oldTouchInfo.camera, coords.x, coords.y, touch));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onElementMouseEvent = function _onElementMouseEvent(eventType, event) {\n\t\t\tvar element;\n\t\t\tvar hovered = this._hoveredElement;\n\t\t\tthis._hoveredElement = null;\n\t\t\tvar cameras = this.app.systems.camera.cameras;\n\t\t\tvar camera;\n\n\t\t\tfor (var i = cameras.length - 1; i >= 0; i--) {\n\t\t\t\tcamera = cameras[i];\n\t\t\t\telement = this._getTargetElement(camera, targetX, targetY);\n\t\t\t\tif (element) break;\n\t\t\t}\n\n\t\t\tif (element) {\n\t\t\t\tthis._fireEvent(eventType, new ElementMouseEvent(event, element, camera, targetX, targetY, this._lastX, this._lastY));\n\n\t\t\t\tthis._hoveredElement = element;\n\n\t\t\t\tif (eventType === 'mousedown') {\n\t\t\t\t\tthis._pressedElement = element;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hovered !== this._hoveredElement) {\n\t\t\t\tif (hovered) {\n\t\t\t\t\tthis._fireEvent('mouseleave', new ElementMouseEvent(event, hovered, camera, targetX, targetY, this._lastX, this._lastY));\n\t\t\t\t}\n\n\t\t\t\tif (this._hoveredElement) {\n\t\t\t\t\tthis._fireEvent('mouseenter', new ElementMouseEvent(event, this._hoveredElement, camera, targetX, targetY, this._lastX, this._lastY));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (eventType === 'mouseup' && this._pressedElement) {\n\t\t\t\tif (this._pressedElement === this._hoveredElement) {\n\t\t\t\t\tthis._pressedElement = null;\n\n\t\t\t\t\tif (!this._clickedEntities || !this._clickedEntities[this._hoveredElement.entity.getGuid()]) {\n\t\t\t\t\t\tthis._fireEvent('click', new ElementMouseEvent(event, this._hoveredElement, camera, targetX, targetY, this._lastX, this._lastY));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._pressedElement = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onXrStart = function _onXrStart() {\n\t\t\tthis.app.xr.on('end', this._onXrEnd, this);\n\t\t\tthis.app.xr.on('update', this._onXrUpdate, this);\n\t\t\tthis.app.xr.input.on('selectstart', this._onSelectStart, this);\n\t\t\tthis.app.xr.input.on('selectend', this._onSelectEnd, this);\n\t\t\tthis.app.xr.input.on('remove', this._onXrInputRemove, this);\n\t\t};\n\n\t\t_proto2._onXrEnd = function _onXrEnd() {\n\t\t\tthis.app.xr.off('update', this._onXrUpdate, this);\n\t\t\tthis.app.xr.input.off('selectstart', this._onSelectStart, this);\n\t\t\tthis.app.xr.input.off('selectend', this._onSelectEnd, this);\n\t\t\tthis.app.xr.input.off('remove', this._onXrInputRemove, this);\n\t\t};\n\n\t\t_proto2._onXrUpdate = function _onXrUpdate() {\n\t\t\tif (!this._enabled) return;\n\t\t\tvar inputSources = this.app.xr.input.inputSources;\n\n\t\t\tfor (var i = 0; i < inputSources.length; i++) {\n\t\t\t\tthis._onElementSelectEvent('selectmove', inputSources[i], null);\n\t\t\t}\n\t\t};\n\n\t\t_proto2._onXrInputRemove = function _onXrInputRemove(inputSource) {\n\t\t\tvar hovered = this._selectedElements[inputSource.id];\n\n\t\t\tif (hovered) {\n\t\t\t\tinputSource._elementEntity = null;\n\n\t\t\t\tthis._fireEvent('selectleave', new ElementSelectEvent(null, hovered, null, inputSource));\n\t\t\t}\n\n\t\t\tdelete this._selectedElements[inputSource.id];\n\t\t\tdelete this._selectedPressedElements[inputSource.id];\n\t\t};\n\n\t\t_proto2._onSelectStart = function _onSelectStart(inputSource, event) {\n\t\t\tif (!this._enabled) return;\n\n\t\t\tthis._onElementSelectEvent('selectstart', inputSource, event);\n\t\t};\n\n\t\t_proto2._onSelectEnd = function _onSelectEnd(inputSource, event) {\n\t\t\tif (!this._enabled) return;\n\n\t\t\tthis._onElementSelectEvent('selectend', inputSource, event);\n\t\t};\n\n\t\t_proto2._onElementSelectEvent = function _onElementSelectEvent(eventType, inputSource, event) {\n\t\t\tvar element;\n\t\t\tvar hoveredBefore = this._selectedElements[inputSource.id];\n\t\t\tvar hoveredNow;\n\t\t\tvar cameras = this.app.systems.camera.cameras;\n\t\t\tvar camera;\n\n\t\t\tif (inputSource.elementInput) {\n\t\t\t\trayC.set(inputSource.getOrigin(), inputSource.getDirection());\n\n\t\t\t\tfor (var i = cameras.length - 1; i >= 0; i--) {\n\t\t\t\t\tcamera = cameras[i];\n\t\t\t\t\telement = this._getTargetElementByRay(rayC, camera);\n\t\t\t\t\tif (element) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinputSource._elementEntity = element || null;\n\n\t\t\tif (element) {\n\t\t\t\tthis._selectedElements[inputSource.id] = element;\n\t\t\t\thoveredNow = element;\n\t\t\t} else {\n\t\t\t\tdelete this._selectedElements[inputSource.id];\n\t\t\t}\n\n\t\t\tif (hoveredBefore !== hoveredNow) {\n\t\t\t\tif (hoveredBefore) this._fireEvent('selectleave', new ElementSelectEvent(event, hoveredBefore, camera, inputSource));\n\t\t\t\tif (hoveredNow) this._fireEvent('selectenter', new ElementSelectEvent(event, hoveredNow, camera, inputSource));\n\t\t\t}\n\n\t\t\tif (eventType === 'selectstart') {\n\t\t\t\tthis._selectedPressedElements[inputSource.id] = hoveredNow;\n\t\t\t\tif (hoveredNow) this._fireEvent('selectstart', new ElementSelectEvent(event, hoveredNow, camera, inputSource));\n\t\t\t}\n\n\t\t\tvar pressed = this._selectedPressedElements[inputSource.id];\n\n\t\t\tif (!inputSource.elementInput && pressed) {\n\t\t\t\tdelete this._selectedPressedElements[inputSource.id];\n\t\t\t\tif (hoveredBefore) this._fireEvent('selectend', new ElementSelectEvent(event, hoveredBefore, camera, inputSource));\n\t\t\t}\n\n\t\t\tif (eventType === 'selectend' && inputSource.elementInput) {\n\t\t\t\tdelete this._selectedPressedElements[inputSource.id];\n\t\t\t\tif (hoveredBefore) this._fireEvent('selectend', new ElementSelectEvent(event, hoveredBefore, camera, inputSource));\n\n\t\t\t\tif (pressed && pressed === hoveredBefore) {\n\t\t\t\t\tthis._fireEvent('click', new ElementSelectEvent(event, pressed, camera, inputSource));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto2._fireEvent = function _fireEvent(name, evt) {\n\t\t\tvar element = evt.element;\n\n\t\t\twhile (true) {\n\t\t\t\telement.fire(name, evt);\n\t\t\t\tif (evt._stopPropagation) break;\n\t\t\t\tif (!element.entity.parent) break;\n\t\t\t\telement = element.entity.parent.element;\n\t\t\t\tif (!element) break;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._calcMouseCoords = function _calcMouseCoords(event) {\n\t\t\tvar rect = this._target.getBoundingClientRect();\n\n\t\t\tvar left = Math.floor(rect.left);\n\t\t\tvar top = Math.floor(rect.top);\n\n\t\t\tif (event.clientX < left || event.clientX >= left + this._target.clientWidth || event.clientY < top || event.clientY >= top + this._target.clientHeight) {\n\t\t\t\ttargetX = null;\n\t\t\t\ttargetY = null;\n\t\t\t} else {\n\t\t\t\ttargetX = event.clientX - left;\n\t\t\t\ttargetY = event.clientY - top;\n\t\t\t}\n\t\t};\n\n\t\t_proto2._calcTouchCoords = function _calcTouchCoords(touch) {\n\t\t\tvar totalOffsetX = 0;\n\t\t\tvar totalOffsetY = 0;\n\t\t\tvar target = touch.target;\n\n\t\t\twhile (!(target instanceof HTMLElement)) {\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\n\t\t\tvar currentElement = target;\n\n\t\t\tdo {\n\t\t\t\ttotalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n\t\t\t\ttotalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n\t\t\t\tcurrentElement = currentElement.offsetParent;\n\t\t\t} while (currentElement);\n\n\t\t\treturn {\n\t\t\t\tx: touch.pageX - totalOffsetX,\n\t\t\t\ty: touch.pageY - totalOffsetY\n\t\t\t};\n\t\t};\n\n\t\t_proto2._sortElements = function _sortElements(a, b) {\n\t\t\tvar layerOrder = this.app.scene.layers.sortTransparentLayers(a.layers, b.layers);\n\t\t\tif (layerOrder !== 0) return layerOrder;\n\t\t\tif (a.screen && !b.screen) return -1;\n\t\t\tif (!a.screen && b.screen) return 1;\n\t\t\tif (!a.screen && !b.screen) return 0;\n\t\t\tif (a.screen.screen.screenSpace && !b.screen.screen.screenSpace) return -1;\n\t\t\tif (b.screen.screen.screenSpace && !a.screen.screen.screenSpace) return 1;\n\t\t\treturn b.drawOrder - a.drawOrder;\n\t\t};\n\n\t\t_proto2._getTargetElement = function _getTargetElement(camera, x, y) {\n\t\t\tvar result = null;\n\n\t\t\tthis._elements.sort(this._sortHandler);\n\n\t\t\tvar rayScreen, ray3d;\n\n\t\t\tfor (var i = 0, len = this._elements.length; i < len; i++) {\n\t\t\t\tvar element = this._elements[i];\n\t\t\t\tvar screen = false;\n\t\t\t\tvar ray;\n\n\t\t\t\tif (element.screen && element.screen.screen.screenSpace) {\n\t\t\t\t\tif (rayScreen === undefined) {\n\t\t\t\t\t\trayScreen = rayA;\n\n\t\t\t\t\t\tif (this._calculateRayScreen(x, y, camera, rayScreen) === false) {\n\t\t\t\t\t\t\trayScreen = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tray = rayScreen;\n\t\t\t\t\tscreen = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (ray3d === undefined) {\n\t\t\t\t\t\tray3d = rayB;\n\n\t\t\t\t\t\tif (this._calculateRay3d(x, y, camera, ray3d) === false) {\n\t\t\t\t\t\t\tray3d = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tray = ray3d;\n\t\t\t\t}\n\n\t\t\t\tif (ray && this._checkElement(ray, element, screen)) {\n\t\t\t\t\tresult = element;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto2._getTargetElementByRay = function _getTargetElementByRay(ray, camera) {\n\t\t\tvar result = null;\n\t\t\trayA.origin.copy(ray.origin);\n\t\t\trayA.direction.copy(ray.direction);\n\t\t\trayA.end.copy(rayA.direction).scale(camera.farClip * 2).add(rayA.origin);\n\n\t\t\tthis._elements.sort(this._sortHandler);\n\n\t\t\tfor (var i = 0, len = this._elements.length; i < len; i++) {\n\t\t\t\tvar element = this._elements[i];\n\n\t\t\t\tif (!element.screen || !element.screen.screen.screenSpace) {\n\t\t\t\t\tif (this._checkElement(rayA, element, false)) {\n\t\t\t\t\t\tresult = element;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t_proto2._buildHitCorners = function _buildHitCorners(element, screenOrWorldCorners, scaleX, scaleY) {\n\t\t\tvar hitCorners = screenOrWorldCorners;\n\t\t\tvar button = element.entity && element.entity.button;\n\n\t\t\tif (button) {\n\t\t\t\tvar hitPadding = element.entity.button.hitPadding || ZERO_VEC4;\n\n\t\t\t\t_paddingTop.copy(element.entity.up);\n\n\t\t\t\t_paddingBottom.copy(_paddingTop).scale(-1);\n\n\t\t\t\t_paddingRight.copy(element.entity.right);\n\n\t\t\t\t_paddingLeft.copy(_paddingRight).scale(-1);\n\n\t\t\t\t_paddingTop.scale(hitPadding.w * scaleY);\n\n\t\t\t\t_paddingBottom.scale(hitPadding.y * scaleY);\n\n\t\t\t\t_paddingRight.scale(hitPadding.z * scaleX);\n\n\t\t\t\t_paddingLeft.scale(hitPadding.x * scaleX);\n\n\t\t\t\t_cornerBottomLeft.copy(hitCorners[0]).add(_paddingBottom).add(_paddingLeft);\n\n\t\t\t\t_cornerBottomRight.copy(hitCorners[1]).add(_paddingBottom).add(_paddingRight);\n\n\t\t\t\t_cornerTopRight.copy(hitCorners[2]).add(_paddingTop).add(_paddingRight);\n\n\t\t\t\t_cornerTopLeft.copy(hitCorners[3]).add(_paddingTop).add(_paddingLeft);\n\n\t\t\t\thitCorners = [_cornerBottomLeft, _cornerBottomRight, _cornerTopRight, _cornerTopLeft];\n\t\t\t}\n\n\t\t\treturn hitCorners;\n\t\t};\n\n\t\t_proto2._calculateScaleToScreen = function _calculateScaleToScreen(element) {\n\t\t\tvar current = element.entity;\n\t\t\tvar screenScale = element.screen.screen.scale;\n\n\t\t\t_accumulatedScale.set(screenScale, screenScale);\n\n\t\t\twhile (current && !current.screen) {\n\t\t\t\t_accumulatedScale.mul(current.getLocalScale());\n\n\t\t\t\tcurrent = current.parent;\n\t\t\t}\n\n\t\t\treturn _accumulatedScale;\n\t\t};\n\n\t\t_proto2._calculateRayScreen = function _calculateRayScreen(x, y, camera, ray) {\n\t\t\tvar sw = this.app.graphicsDevice.width;\n\t\t\tvar sh = this.app.graphicsDevice.height;\n\t\t\tvar cameraWidth = camera.rect.z * sw;\n\t\t\tvar cameraHeight = camera.rect.w * sh;\n\t\t\tvar cameraLeft = camera.rect.x * sw;\n\t\t\tvar cameraRight = cameraLeft + cameraWidth;\n\t\t\tvar cameraBottom = (1 - camera.rect.y) * sh;\n\t\t\tvar cameraTop = cameraBottom - cameraHeight;\n\n\t\t\tvar _x = x * sw / this._target.clientWidth;\n\n\t\t\tvar _y = y * sh / this._target.clientHeight;\n\n\t\t\tif (_x >= cameraLeft && _x <= cameraRight && _y <= cameraBottom && _y >= cameraTop) {\n\t\t\t\t_x = sw * (_x - cameraLeft) / cameraWidth;\n\t\t\t\t_y = sh * (_y - cameraTop) / cameraHeight;\n\t\t\t\t_y = sh - _y;\n\t\t\t\tray.origin.set(_x, _y, 1);\n\t\t\t\tray.direction.set(0, 0, -1);\n\t\t\t\tray.end.copy(ray.direction).scale(2).add(ray.origin);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto2._calculateRay3d = function _calculateRay3d(x, y, camera, ray) {\n\t\t\tvar sw = this._target.clientWidth;\n\t\t\tvar sh = this._target.clientHeight;\n\t\t\tvar cameraWidth = camera.rect.z * sw;\n\t\t\tvar cameraHeight = camera.rect.w * sh;\n\t\t\tvar cameraLeft = camera.rect.x * sw;\n\t\t\tvar cameraRight = cameraLeft + cameraWidth;\n\t\t\tvar cameraBottom = (1 - camera.rect.y) * sh;\n\t\t\tvar cameraTop = cameraBottom - cameraHeight;\n\t\t\tvar _x = x;\n\t\t\tvar _y = y;\n\n\t\t\tif (x >= cameraLeft && x <= cameraRight && y <= cameraBottom && _y >= cameraTop) {\n\t\t\t\t_x = sw * (_x - cameraLeft) / cameraWidth;\n\t\t\t\t_y = sh * (_y - cameraTop) / cameraHeight;\n\t\t\t\tcamera.screenToWorld(_x, _y, camera.nearClip, vecA$2);\n\t\t\t\tcamera.screenToWorld(_x, _y, camera.farClip, vecB$2);\n\t\t\t\tray.origin.copy(vecA$2);\n\t\t\t\tray.direction.set(0, 0, -1);\n\t\t\t\tray.end.copy(vecB$2);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto2._checkElement = function _checkElement(ray, element, screen) {\n\t\t\tif (element.maskedBy) {\n\t\t\t\tvar result = this._checkElement(ray, element.maskedBy.element, screen);\n\n\t\t\t\tif (!result) return false;\n\t\t\t}\n\n\t\t\tvar scale;\n\n\t\t\tif (screen) {\n\t\t\t\tscale = this._calculateScaleToScreen(element);\n\t\t\t} else {\n\t\t\t\tscale = element.entity.getWorldTransform().getScale();\n\t\t\t}\n\n\t\t\tvar corners = this._buildHitCorners(element, screen ? element.screenCorners : element.worldCorners, scale.x, scale.y);\n\n\t\t\tif (intersectLineQuad(ray.origin, ray.end, corners)) return true;\n\t\t\treturn false;\n\t\t};\n\n\t\t_createClass(ElementInput, [{\n\t\t\tkey: \"enabled\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._enabled;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._enabled = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"app\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._app || Application.getApplication();\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._app = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ElementInput;\n\t}();\n\n\tvar MAPS = {\n\t\tDEFAULT: {\n\t\t\tbuttons: ['PAD_FACE_1', 'PAD_FACE_2', 'PAD_FACE_3', 'PAD_FACE_4', 'PAD_L_SHOULDER_1', 'PAD_R_SHOULDER_1', 'PAD_L_SHOULDER_2', 'PAD_R_SHOULDER_2', 'PAD_SELECT', 'PAD_START', 'PAD_L_STICK_BUTTON', 'PAD_R_STICK_BUTTON', 'PAD_UP', 'PAD_DOWN', 'PAD_LEFT', 'PAD_RIGHT', 'PAD_VENDOR'],\n\t\t\taxes: ['PAD_L_STICK_X', 'PAD_L_STICK_Y', 'PAD_R_STICK_X', 'PAD_R_STICK_Y']\n\t\t},\n\t\tPS3: {\n\t\t\tbuttons: ['PAD_FACE_1', 'PAD_FACE_2', 'PAD_FACE_4', 'PAD_FACE_3', 'PAD_L_SHOULDER_1', 'PAD_R_SHOULDER_1', 'PAD_L_SHOULDER_2', 'PAD_R_SHOULDER_2', 'PAD_SELECT', 'PAD_START', 'PAD_L_STICK_BUTTON', 'PAD_R_STICK_BUTTON', 'PAD_UP', 'PAD_DOWN', 'PAD_LEFT', 'PAD_RIGHT', 'PAD_VENDOR'],\n\t\t\taxes: ['PAD_L_STICK_X', 'PAD_L_STICK_Y', 'PAD_R_STICK_X', 'PAD_R_STICK_Y']\n\t\t}\n\t};\n\tvar PRODUCT_CODES = {\n\t\t'Product: 0268': 'PS3'\n\t};\n\n\tvar GamePads = function () {\n\t\tfunction GamePads() {\n\t\t\tthis.gamepadsSupported = !!navigator.getGamepads || !!navigator.webkitGetGamepads;\n\t\t\tthis.current = [];\n\t\t\tthis.previous = [];\n\t\t\tthis.deadZone = 0.25;\n\t\t}\n\n\t\tvar _proto = GamePads.prototype;\n\n\t\t_proto.update = function update() {\n\t\t\tvar i, j, l;\n\t\t\tvar buttons, buttonsLen;\n\n\t\t\tfor (i = 0, l = this.current.length; i < l; i++) {\n\t\t\t\tbuttons = this.current[i].pad.buttons;\n\t\t\t\tbuttonsLen = buttons.length;\n\n\t\t\t\tfor (j = 0; j < buttonsLen; j++) {\n\t\t\t\t\tif (this.previous[i] === undefined) {\n\t\t\t\t\t\tthis.previous[i] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.previous[i][j] = buttons[j].pressed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.poll(this.current);\n\t\t};\n\n\t\t_proto.poll = function poll(pads) {\n\t\t\tif (pads === void 0) {\n\t\t\t\tpads = [];\n\t\t\t}\n\n\t\t\tif (pads.length > 0) {\n\t\t\t\tpads.length = 0;\n\t\t\t}\n\n\t\t\tif (this.gamepadsSupported) {\n\t\t\t\tvar padDevices = navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads();\n\t\t\t\tvar i,\n\t\t\t\t\t\tlen = padDevices.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (padDevices[i]) {\n\t\t\t\t\t\tpads.push({\n\t\t\t\t\t\t\tmap: this.getMap(padDevices[i]),\n\t\t\t\t\t\t\tpad: padDevices[i]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn pads;\n\t\t};\n\n\t\t_proto.getMap = function getMap(pad) {\n\t\t\tfor (var code in PRODUCT_CODES) {\n\t\t\t\tif (pad.id.indexOf(code) >= 0) {\n\t\t\t\t\treturn MAPS[PRODUCT_CODES[code]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn MAPS.DEFAULT;\n\t\t};\n\n\t\t_proto.isPressed = function isPressed(index, button) {\n\t\t\tif (!this.current[index]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar key = this.current[index].map.buttons[button];\n\t\t\treturn this.current[index].pad.buttons[pc[key]].pressed;\n\t\t};\n\n\t\t_proto.wasPressed = function wasPressed(index, button) {\n\t\t\tif (!this.current[index]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar key = this.current[index].map.buttons[button];\n\t\t\tvar i = pc[key];\n\t\t\treturn this.current[index].pad.buttons[i].pressed && !this.previous[index][i];\n\t\t};\n\n\t\t_proto.getAxis = function getAxis(index, axes) {\n\t\t\tif (!this.current[index]) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar key = this.current[index].map.axes[axes];\n\t\t\tvar value = this.current[index].pad.axes[pc[key]];\n\n\t\t\tif (Math.abs(value) < this.deadZone) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\n\t\treturn GamePads;\n\t}();\n\n\tfunction getTouchTargetCoords(touch) {\n\t\tvar totalOffsetX = 0;\n\t\tvar totalOffsetY = 0;\n\t\tvar target = touch.target;\n\n\t\twhile (!(target instanceof HTMLElement)) {\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\tvar currentElement = target;\n\n\t\tdo {\n\t\t\ttotalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n\t\t\ttotalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n\t\t\tcurrentElement = currentElement.offsetParent;\n\t\t} while (currentElement);\n\n\t\treturn {\n\t\t\tx: touch.pageX - totalOffsetX,\n\t\t\ty: touch.pageY - totalOffsetY\n\t\t};\n\t}\n\n\tvar Touch = function Touch(touch) {\n\t\tvar coords = getTouchTargetCoords(touch);\n\t\tthis.id = touch.identifier;\n\t\tthis.x = coords.x;\n\t\tthis.y = coords.y;\n\t\tthis.target = touch.target;\n\t\tthis.touch = touch;\n\t};\n\n\tvar TouchEvent = function () {\n\t\tfunction TouchEvent(device, event) {\n\t\t\tthis.element = event.target;\n\t\t\tthis.event = event;\n\t\t\tthis.touches = [];\n\t\t\tthis.changedTouches = [];\n\n\t\t\tif (event) {\n\t\t\t\tvar i,\n\t\t\t\t\t\tl = event.touches.length;\n\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tthis.touches.push(new Touch(event.touches[i]));\n\t\t\t\t}\n\n\t\t\t\tl = event.changedTouches.length;\n\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tthis.changedTouches.push(new Touch(event.changedTouches[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = TouchEvent.prototype;\n\n\t\t_proto.getTouchById = function getTouchById(id, list) {\n\t\t\tvar i,\n\t\t\t\t\tl = list.length;\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (list[i].id === id) {\n\t\t\t\t\treturn list[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\treturn TouchEvent;\n\t}();\n\n\tvar TouchDevice = function (_EventHandler) {\n\t\t_inheritsLoose(TouchDevice, _EventHandler);\n\n\t\tfunction TouchDevice(element) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventHandler.call(this) || this;\n\t\t\t_this._element = null;\n\t\t\t_this._startHandler = _this._handleTouchStart.bind(_assertThisInitialized(_this));\n\t\t\t_this._endHandler = _this._handleTouchEnd.bind(_assertThisInitialized(_this));\n\t\t\t_this._moveHandler = _this._handleTouchMove.bind(_assertThisInitialized(_this));\n\t\t\t_this._cancelHandler = _this._handleTouchCancel.bind(_assertThisInitialized(_this));\n\n\t\t\t_this.attach(element);\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = TouchDevice.prototype;\n\n\t\t_proto.attach = function attach(element) {\n\t\t\tif (this._element) {\n\t\t\t\tthis.detach();\n\t\t\t}\n\n\t\t\tthis._element = element;\n\n\t\t\tthis._element.addEventListener('touchstart', this._startHandler, false);\n\n\t\t\tthis._element.addEventListener('touchend', this._endHandler, false);\n\n\t\t\tthis._element.addEventListener('touchmove', this._moveHandler, false);\n\n\t\t\tthis._element.addEventListener('touchcancel', this._cancelHandler, false);\n\t\t};\n\n\t\t_proto.detach = function detach() {\n\t\t\tif (this._element) {\n\t\t\t\tthis._element.removeEventListener('touchstart', this._startHandler, false);\n\n\t\t\t\tthis._element.removeEventListener('touchend', this._endHandler, false);\n\n\t\t\t\tthis._element.removeEventListener('touchmove', this._moveHandler, false);\n\n\t\t\t\tthis._element.removeEventListener('touchcancel', this._cancelHandler, false);\n\t\t\t}\n\n\t\t\tthis._element = null;\n\t\t};\n\n\t\t_proto._handleTouchStart = function _handleTouchStart(e) {\n\t\t\tthis.fire('touchstart', new TouchEvent(this, e));\n\t\t};\n\n\t\t_proto._handleTouchEnd = function _handleTouchEnd(e) {\n\t\t\tthis.fire('touchend', new TouchEvent(this, e));\n\t\t};\n\n\t\t_proto._handleTouchMove = function _handleTouchMove(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.fire('touchmove', new TouchEvent(this, e));\n\t\t};\n\n\t\t_proto._handleTouchCancel = function _handleTouchCancel(e) {\n\t\t\tthis.fire('touchcancel', new TouchEvent(this, e));\n\t\t};\n\n\t\treturn TouchDevice;\n\t}(EventHandler);\n\n\tvar ComponentData = function ComponentData() {};\n\n\tvar _backbufferRt = [null, null];\n\tvar _constInput = null;\n\n\tvar _constScreenSize;\n\n\tvar _constScreenSizeValue = new Vec4();\n\n\tvar _constScreenSizeValueUniform = new Float32Array(4);\n\n\tvar _postEffectChain = [];\n\tvar _backbufferRtUsed = false;\n\tvar _backbufferRt2Used = false;\n\tvar _backbufferRtWrittenByPost = false;\n\tvar _regexUniforms = /uniform[ \\t\\n\\r]+\\S+[ \\t\\n\\r]+\\S+[ \\t\\n\\r]*\\;/g;\n\tvar _regexUniformStart = /\\S+[ \\t\\n\\r]*\\;/;\n\tvar _regexUniformEnd = /[ \\t\\n\\r]*\\;/;\n\tvar _regexVariables = /(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;/g;\n\tvar _regexVariableSurroundings = /(float|int|bool|vec2|vec3|vec4|struct|\\,|\\;|\\{|\\})/g;\n\tvar _regexIrrelevantVariables = /(uniform|varying|in|out)[ \\t\\n\\r]+(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;/g;\n\tvar _regexIrrelevantVariableSurroundings = /(float|int|bool|vec2|vec3|vec4|struct|uniform|varying|in|out|\\,|\\;|\\{|\\})/g;\n\tvar _regexVersion = /#version/g;\n\tvar _regexFragColor = /out highp vec4 pc_fragColor;/g;\n\tvar _regexFragColor2 = /#define gl_FragColor/g;\n\tvar _regexFragColor3 = /gl_FragColor/g;\n\tvar _regexColorBuffer = /uniform[ \\t\\n\\r]+sampler2D[ \\t\\n\\r]+uColorBuffer;/g;\n\tvar _regexUv = /(varying|in)[ \\t\\n\\r]+vec2[ \\t\\n\\r]+vUv0;/g;\n\tvar _regexColorBufferSample = /(texture2D|texture)[ \\t\\n\\r]*\\([ \\t\\n\\r]*uColorBuffer/g;\n\tvar _regexMain = /void[ \\t\\n\\r]+main/g;\n\n\tfunction _createBackbufferRt(id, device, format) {\n\t\tvar tex = new Texture(device, {\n\t\t\tformat: format,\n\t\t\twidth: device.width,\n\t\t\theight: device.height\n\t\t});\n\t\ttex.name = 'posteffect-pass';\n\t\ttex.minFilter = FILTER_NEAREST;\n\t\ttex.magFilter = FILTER_NEAREST;\n\t\ttex.addressU = ADDRESS_CLAMP_TO_EDGE;\n\t\ttex.addressV = ADDRESS_CLAMP_TO_EDGE;\n\t\t_backbufferRt[id]._colorBuffer = tex;\n\t}\n\n\tfunction _destroyBackbufferRt(id) {\n\t\t_backbufferRt[id].colorBuffer.destroy();\n\n\t\t_backbufferRt[id].destroy();\n\t}\n\n\tfunction _collectUniforms(code) {\n\t\tvar strs = code.match(_regexUniforms) || [];\n\t\tvar start, end, uname;\n\t\tvar uniforms = [];\n\n\t\tfor (var i = 0; i < strs.length; i++) {\n\t\t\tstart = strs[i].search(_regexUniformStart);\n\t\t\tend = strs[i].search(_regexUniformEnd);\n\t\t\tuname = strs[i].substr(start, end - start);\n\n\t\t\tif (uname !== \"uColorBuffer\") {\n\t\t\t\tuniforms.push(uname);\n\t\t\t}\n\t\t}\n\n\t\treturn uniforms;\n\t}\n\n\tfunction _uniformsCollide(layers, chain, count, shader) {\n\t\tvar uniforms = _collectUniforms(shader.definition.fshader);\n\n\t\tif (uniforms.length === 0) return false;\n\t\tvar i, j, k, uniforms2;\n\t\tvar uname;\n\n\t\tfor (i = 0; i < count; i++) {\n\t\t\tfor (j = 0; j < uniforms.length; j++) {\n\t\t\t\tuname = uniforms[j];\n\t\t\t\tuniforms2 = _collectUniforms(layers[chain[i]].shader.definition.fshader);\n\n\t\t\t\tfor (k = 0; k < uniforms2.length; k++) {\n\t\t\t\t\tif (uniforms2[k] === uname) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _collectGlobalTempVars(code, list) {\n\t\tvar len = code.length;\n\t\tvar chr;\n\t\tvar scopeStart = 0;\n\t\tvar scopeEnd = 0;\n\t\tvar scopeDepth = 0;\n\t\tvar codeStart = 0;\n\t\tvar codeWithoutScopes = \"\";\n\t\tvar i, j;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tchr = code.charAt(i);\n\n\t\t\tif (chr === \"{\") {\n\t\t\t\tif (scopeDepth === 0) {\n\t\t\t\t\tscopeStart = i;\n\t\t\t\t}\n\n\t\t\t\tscopeDepth++;\n\t\t\t} else if (chr === \"}\") {\n\t\t\t\tif (scopeDepth === 1) {\n\t\t\t\t\tscopeEnd = i;\n\t\t\t\t\tcodeWithoutScopes += code.substr(codeStart, scopeStart - codeStart + 1);\n\t\t\t\t\tcodeStart = scopeEnd;\n\t\t\t\t}\n\n\t\t\t\tscopeDepth--;\n\t\t\t}\n\t\t}\n\n\t\tcodeWithoutScopes += code.substr(codeStart, code.length - codeStart + 1);\n\t\tvar collisions = null;\n\t\tvar decls = codeWithoutScopes.match(_regexVariables) || [];\n\t\tvar vars, varName;\n\n\t\tfor (i = 0; i < decls.length; i++) {\n\t\t\tvars = decls[i].split(\",\");\n\n\t\t\tfor (j = 0; j < vars.length; j++) {\n\t\t\t\tvarName = vars[j].replace(_regexVariableSurroundings, \"\").trim();\n\n\t\t\t\tif (list.indexOf(varName) >= 0) {\n\t\t\t\t\tif (!collisions) collisions = [];\n\t\t\t\t\tcollisions.push(varName);\n\t\t\t\t} else {\n\t\t\t\t\tlist.push(varName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar irrelevantDecls = codeWithoutScopes.match(_regexIrrelevantVariables) || [];\n\t\tvar index;\n\n\t\tfor (i = 0; i < irrelevantDecls.length; i++) {\n\t\t\tvars = irrelevantDecls[i].split(\",\");\n\n\t\t\tfor (j = 0; j < vars.length; j++) {\n\t\t\t\tvarName = vars[j].replace(_regexIrrelevantVariableSurroundings, \"\").trim();\n\t\t\t\tindex = list.indexOf(varName);\n\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tlist.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn collisions;\n\t}\n\n\tvar PostEffectPass = function () {\n\t\tfunction PostEffectPass(app, options) {\n\t\t\tthis.app = app;\n\t\t\tthis.srcRenderTarget = options.srcRenderTarget;\n\t\t\tthis.hdr = options.hdr;\n\t\t\tthis.blending = options.blending;\n\t\t\tthis.shader = options.shader;\n\t\t\tthis.setup = options.setup;\n\t\t\tvar self = this;\n\t\t\tvar device = app.graphicsDevice;\n\t\t\tthis.layer = new Layer({\n\t\t\t\topaqueSortMode: SORTMODE_NONE,\n\t\t\t\ttransparentSortMode: SORTMODE_NONE,\n\t\t\t\tpassThrough: true,\n\t\t\t\tname: options.name,\n\t\t\t\tonPostRender: function onPostRender() {\n\t\t\t\t\tif (self.srcRenderTarget) {\n\t\t\t\t\t\t_constScreenSizeValue.x = self.srcRenderTarget.width;\n\t\t\t\t\t\t_constScreenSizeValue.y = self.srcRenderTarget.height;\n\t\t\t\t\t\t_constScreenSizeValue.z = 1.0 / self.srcRenderTarget.width;\n\t\t\t\t\t\t_constScreenSizeValue.w = 1.0 / self.srcRenderTarget.height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_constScreenSizeValue.x = device.width;\n\t\t\t\t\t\t_constScreenSizeValue.y = device.height;\n\t\t\t\t\t\t_constScreenSizeValue.z = 1.0 / device.width;\n\t\t\t\t\t\t_constScreenSizeValue.w = 1.0 / device.height;\n\t\t\t\t\t}\n\n\t\t\t\t\t_constScreenSizeValueUniform[0] = _constScreenSizeValue.x;\n\t\t\t\t\t_constScreenSizeValueUniform[1] = _constScreenSizeValue.y;\n\t\t\t\t\t_constScreenSizeValueUniform[2] = _constScreenSizeValue.z;\n\t\t\t\t\t_constScreenSizeValueUniform[3] = _constScreenSizeValue.w;\n\n\t\t\t\t\t_constScreenSize.setValue(_constScreenSizeValueUniform);\n\n\t\t\t\t\tif (this._postEffectCombined && this._postEffectCombined < 0) {\n\t\t\t\t\t\tif (self.setup) self.setup(device, self, _constScreenSizeValue, null, this.renderTarget);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar src;\n\n\t\t\t\t\tif (this._postEffectCombinedSrc) {\n\t\t\t\t\t\tsrc = this._postEffectCombinedSrc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsrc = self.srcRenderTarget ? self.srcRenderTarget : _backbufferRt[this._backbufferRtId];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (src._samples > 1) src.resolve(true, false);\n\t\t\t\t\tvar tex = src._colorBuffer;\n\t\t\t\t\ttex.magFilter = (this._postEffectCombinedShader ? this._postEffectCombinedBilinear : this.postEffectBilinear) ? FILTER_LINEAR : FILTER_NEAREST;\n\n\t\t\t\t\t_constInput.setValue(tex);\n\n\t\t\t\t\tif (self.setup) self.setup(device, self, _constScreenSizeValue, src, this.renderTarget);\n\t\t\t\t\tvar shader = this._postEffectCombinedShader ? this._postEffectCombinedShader : this.shader;\n\t\t\t\t\tif (shader) drawQuadWithShader(device, this.renderTarget, shader, null, null, self.blending);\n\t\t\t\t\tif (self.srcRenderTarget) return;\n\t\t\t\t\tvar layers = app.scene.layers.layerList;\n\n\t\t\t\t\tfor (var i = 0; i < layers.length; i++) {\n\t\t\t\t\t\tif (layers[i] === self.layer) break;\n\n\t\t\t\t\t\tif (layers[i].renderTarget === _backbufferRt[0] || layers[i].renderTarget === _backbufferRt[1]) {\n\t\t\t\t\t\t\tlayers[i].renderTarget = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.layer._generateCameraHash();\n\n\t\t\tthis.layer.isPostEffect = true;\n\t\t\tthis.layer.unmodifiedUvs = options.unmodifiedUvs;\n\t\t\tthis.layer.postEffectBilinear = options.bilinear;\n\t\t\tthis.layer.postEffect = this;\n\t\t\tthis.layer.shader = options.shader;\n\t\t\tthis.layer.renderTarget = options.destRenderTarget;\n\n\t\t\tif (!_constInput) {\n\t\t\t\t_constInput = device.scope.resolve(\"uColorBuffer\");\n\t\t\t\t_constScreenSize = device.scope.resolve(\"uScreenSize\");\n\n\t\t\t\tvar _backbufferMsaa = device.supportsMsaa ? 4 : 1;\n\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t_backbufferRt[i] = new RenderTarget({\n\t\t\t\t\t\tdepth: true,\n\t\t\t\t\t\tstencil: device.supportsStencil,\n\t\t\t\t\t\tsamples: _backbufferMsaa,\n\t\t\t\t\t\tautoResolve: false\n\t\t\t\t\t});\n\t\t\t\t\t_backbufferRt[i].name = \"backbuffer\" + i;\n\t\t\t\t}\n\n\t\t\t\tapp.on(\"prerender\", function () {\n\t\t\t\t\tvar layers = app.scene.layers.layerList;\n\t\t\t\t\tvar i, j;\n\t\t\t\t\tvar offset = 0;\n\t\t\t\t\tvar rtId = 0;\n\t\t\t\t\t_backbufferRtUsed = false;\n\t\t\t\t\t_backbufferRt2Used = false;\n\t\t\t\t\t_backbufferRtWrittenByPost = false;\n\t\t\t\t\tvar backbufferRtFormat = PIXELFORMAT_R8_G8_B8_A8;\n\n\t\t\t\t\tif (app.scene.layers._dirty) {\n\t\t\t\t\t\tvar iterator = 0;\n\t\t\t\t\t\tvar breakChain = false;\n\t\t\t\t\t\tvar collisions, k;\n\n\t\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\t\tbreakChain = false;\n\n\t\t\t\t\t\t\tif (layers[i].isPostEffect && (iterator === 0 || layers[i].unmodifiedUvs && layers[i].shader && !_uniformsCollide(layers, _postEffectChain, iterator, layers[i].shader))) {\n\t\t\t\t\t\t\t\t_postEffectChain[iterator] = i;\n\t\t\t\t\t\t\t\titerator++;\n\t\t\t\t\t\t\t\tif (i === layers.length - 1) breakChain = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (iterator > 0) {\n\t\t\t\t\t\t\t\t\tbreakChain = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (breakChain) {\n\t\t\t\t\t\t\t\tif (iterator > 1) {\n\t\t\t\t\t\t\t\t\tvar cachedName = \"post_\";\n\t\t\t\t\t\t\t\t\tvar layer;\n\n\t\t\t\t\t\t\t\t\tfor (j = 0; j < iterator; j++) {\n\t\t\t\t\t\t\t\t\t\tlayer = layers[_postEffectChain[j]];\n\t\t\t\t\t\t\t\t\t\tcachedName += layer.name ? layer.name : layer.id;\n\t\t\t\t\t\t\t\t\t\tif (j < iterator - 1) cachedName += \"_\";\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar shader = device.programLib._cache[cachedName];\n\n\t\t\t\t\t\t\t\t\tif (!shader) {\n\t\t\t\t\t\t\t\t\t\tvar subCode;\n\t\t\t\t\t\t\t\t\t\tvar code = \"vec4 shaderOutput;\\n\";\n\t\t\t\t\t\t\t\t\t\tvar mainCode = \"void main() {\\n\";\n\t\t\t\t\t\t\t\t\t\tvar globalTempVars = [];\n\n\t\t\t\t\t\t\t\t\t\tfor (j = 0; j < iterator; j++) {\n\t\t\t\t\t\t\t\t\t\t\tsubCode = layers[_postEffectChain[j]].shader.definition.fshader + \"\\n\";\n\t\t\t\t\t\t\t\t\t\t\tsubCode = subCode.replace(_regexVersion, \"//\").replace(_regexFragColor, \"//\").replace(_regexFragColor2, \"//\").replace(_regexFragColor3, \"shaderOutput\");\n\n\t\t\t\t\t\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tsubCode = subCode.replace(_regexColorBuffer, \"//\").replace(_regexUv, \"//\").replace(_regexColorBufferSample, \"shaderOutput;\\/\\/\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tsubCode = subCode.replace(_regexMain, \"void main\" + j);\n\t\t\t\t\t\t\t\t\t\t\tcollisions = _collectGlobalTempVars(subCode, globalTempVars);\n\n\t\t\t\t\t\t\t\t\t\t\tif (collisions) {\n\t\t\t\t\t\t\t\t\t\t\t\tfor (k = 0; k < collisions.length; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubCode = subCode.replace(new RegExp(\"\\\\b\" + collisions[k] + \"\\\\b\", 'g'), collisions[k] + \"NNNN\" + j);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tcode += subCode;\n\t\t\t\t\t\t\t\t\t\t\tmainCode += \"main\" + j + \"();\\n\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tmainCode += \"gl_FragColor = shaderOutput;\\n}\\n\";\n\t\t\t\t\t\t\t\t\t\tshader = createShaderFromCode(device, shaderChunks.fullscreenQuadVS, code + mainCode, cachedName);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tfor (j = 0; j < iterator; j++) {\n\t\t\t\t\t\t\t\t\t\tlayers[_postEffectChain[j]]._postEffectCombined = j === iterator - 1 ? 1 : -1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlayers[_postEffectChain[iterator - 1]]._postEffectCombinedShader = shader;\n\t\t\t\t\t\t\t\t\tlayers[_postEffectChain[iterator - 1]]._postEffectCombinedBilinear = layers[_postEffectChain[0]].postEffectBilinear;\n\t\t\t\t\t\t\t\t\tlayers[_postEffectChain[iterator - 1]]._postEffectCombinedSrc = layers[_postEffectChain[0]].postEffect.srcRenderTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_postEffectChain[0] = i;\n\t\t\t\t\t\t\t\titerator = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < layers.length; i++) {\n\t\t\t\t\t\tif (layers[i].isPostEffect && (!layers[i].postEffect.srcRenderTarget && !layers[i]._postEffectCombined || !layers[i].postEffect._postEffectCombinedSrc && layers[i]._postEffectCombined >= 0)) {\n\t\t\t\t\t\t\tfor (j = i - 1; j >= offset; j--) {\n\t\t\t\t\t\t\t\tif (!layers[j].renderTarget) {\n\t\t\t\t\t\t\t\t\tlayers[j].renderTarget = _backbufferRt[rtId];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayers[i]._backbufferRtId = rtId;\n\t\t\t\t\t\t\toffset = i;\n\t\t\t\t\t\t\t_backbufferRtUsed = true;\n\t\t\t\t\t\t\tif (rtId === 1) _backbufferRt2Used = true;\n\n\t\t\t\t\t\t\tif (layers[i].postEffect.hdr) {\n\t\t\t\t\t\t\t\tif (device.webgl2 && device.textureFloatRenderable) {\n\t\t\t\t\t\t\t\t\tbackbufferRtFormat = PIXELFORMAT_111110F;\n\t\t\t\t\t\t\t\t} else if (device.extTextureHalfFloatLinear && device.textureHalfFloatRenderable) {\n\t\t\t\t\t\t\t\t\tbackbufferRtFormat = PIXELFORMAT_RGBA16F;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbackbufferRtFormat = PIXELFORMAT_R8_G8_B8_A8;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (layers[i].postEffect.shader && !layers[i].renderTarget) rtId = 1 - rtId;\n\t\t\t\t\t\t} else if (!layers[i].isPostEffect && !layers[i].renderTarget && _backbufferRtUsed) {\n\t\t\t\t\t\t\tlayers[i].renderTarget = _backbufferRt[rtId];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (layers[i].isPostEffect && !layers[i].renderTarget) {\n\t\t\t\t\t\t\t_backbufferRtWrittenByPost = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_backbufferRtUsed) {\n\t\t\t\t\t\tif (!_backbufferRt[0].colorBuffer) {\n\t\t\t\t\t\t\t_createBackbufferRt(0, device, backbufferRtFormat);\n\t\t\t\t\t\t} else if (_backbufferRt[0].width !== device.width || _backbufferRt[0].height !== device.height || _backbufferRt[0]._colorBuffer._format !== backbufferRtFormat) {\n\t\t\t\t\t\t\t_destroyBackbufferRt(0);\n\n\t\t\t\t\t\t\t_createBackbufferRt(0, device, backbufferRtFormat);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_backbufferRt2Used) {\n\t\t\t\t\t\tif (!_backbufferRt[1].colorBuffer) {\n\t\t\t\t\t\t\t_createBackbufferRt(1, device, backbufferRtFormat);\n\t\t\t\t\t\t} else if (_backbufferRt[1].width !== device.width || _backbufferRt[1].height !== device.height || _backbufferRt[1]._colorBuffer._format !== backbufferRtFormat) {\n\t\t\t\t\t\t\t_destroyBackbufferRt(1);\n\n\t\t\t\t\t\t\t_createBackbufferRt(1, device, backbufferRtFormat);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\tapp.on(\"postrender\", function () {\n\t\t\t\t\tvar device = app.graphicsDevice;\n\n\t\t\t\t\tif (_backbufferRtUsed && !_backbufferRtWrittenByPost) {\n\t\t\t\t\t\tvar layers = app.scene.layers.layerList;\n\t\t\t\t\t\tvar rt;\n\n\t\t\t\t\t\tfor (var i = layers.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\trt = layers[i].renderTarget;\n\n\t\t\t\t\t\t\tif (rt === _backbufferRt[0] || rt === _backbufferRt[1]) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rt) {\n\t\t\t\t\t\t\tif (rt._samples > 1) {\n\t\t\t\t\t\t\t\trt.resolve(true, false);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdevice.copyRenderTarget(rt, null, true, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = PostEffectPass.prototype;\n\n\t\t_proto.addToComposition = function addToComposition(order) {\n\t\t\tthis.app.scene.layers.insertTransparent(this.layer, order);\n\t\t};\n\n\t\treturn PostEffectPass;\n\t}();\n\n\tvar log = {\n\t\twrite: function write(text) {\n\t\t\tconsole.log(text);\n\t\t},\n\t\topen: function open() {\n\t\t\tlog.write(\"Powered by PlayCanvas \" + version + \" \" + revision);\n\t\t},\n\t\tinfo: function info(text) {\n\t\t\tconsole.info(\"INFO:\t\t\" + text);\n\t\t},\n\t\tdebug: function debug(text) {\n\t\t\tconsole.debug(\"DEBUG:\t \" + text);\n\t\t},\n\t\terror: function error(text) {\n\t\t\tconsole.error(\"ERROR:\t \" + text);\n\t\t},\n\t\twarning: function warning(text) {\n\t\t\tconsole.warn(\"WARNING: \" + text);\n\t\t},\n\t\talert: function (_alert) {\n\t\t\tfunction alert(_x) {\n\t\t\t\treturn _alert.apply(this, arguments);\n\t\t\t}\n\n\t\t\talert.toString = function () {\n\t\t\t\treturn _alert.toString();\n\t\t\t};\n\n\t\t\treturn alert;\n\t\t}(function (text) {\n\t\t\tlog.write(\"ALERT:\t \" + text);\n\t\t\talert(text);\n\t\t}),\n\t\tassert: function assert(condition, text) {\n\t\t\tif (condition === false) {\n\t\t\t\tlog.write(\"ASSERT:\t\" + text);\n\t\t\t}\n\t\t}\n\t};\n\n\tstring.endsWith = function (s, subs) {\n\t\treturn s.endsWith(subs);\n\t};\n\n\tstring.startsWith = function (s, subs) {\n\t\treturn s.startsWith(subs);\n\t};\n\n\tvar time = {\n\t\tnow: now,\n\t\tTimer: Timer\n\t};\n\tObject.defineProperty(Color.prototype, \"data\", {\n\t\tget: function get() {\n\t\t\tif (!this._data) {\n\t\t\t\tthis._data = new Float32Array(4);\n\t\t\t}\n\n\t\t\tthis._data[0] = this.r;\n\t\t\tthis._data[1] = this.g;\n\t\t\tthis._data[2] = this.b;\n\t\t\tthis._data[3] = this.a;\n\t\t\treturn this._data;\n\t\t}\n\t});\n\tObject.defineProperty(Color.prototype, \"data3\", {\n\t\tget: function get() {\n\t\t\tif (!this._data3) {\n\t\t\t\tthis._data3 = new Float32Array(3);\n\t\t\t}\n\n\t\t\tthis._data3[0] = this.r;\n\t\t\tthis._data3[1] = this.g;\n\t\t\tthis._data3[2] = this.b;\n\t\t\treturn this._data3;\n\t\t}\n\t});\n\tfunction inherits(Self, Super) {\n\t\tvar Temp = function Temp() {};\n\n\t\tvar Func = function Func(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n\t\t\tSuper.call(this, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n\t\t\tSelf.call(this, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n\t\t};\n\n\t\tFunc._super = Super.prototype;\n\t\tTemp.prototype = Super.prototype;\n\t\tFunc.prototype = new Temp();\n\t\treturn Func;\n\t}\n\tfunction makeArray(arr) {\n\t\treturn Array.prototype.slice.call(arr);\n\t}\n\tmath.INV_LOG2 = Math.LOG2E;\n\tmath.intToBytes = math.intToBytes32;\n\tmath.bytesToInt = math.bytesToInt32;\n\tObject.defineProperty(Vec2.prototype, \"data\", {\n\t\tget: function get() {\n\t\t\tif (!this._data) {\n\t\t\t\tthis._data = new Float32Array(2);\n\t\t\t}\n\n\t\t\tthis._data[0] = this.x;\n\t\t\tthis._data[1] = this.y;\n\t\t\treturn this._data;\n\t\t}\n\t});\n\tObject.defineProperty(Vec3.prototype, \"data\", {\n\t\tget: function get() {\n\t\t\tif (!this._data) {\n\t\t\t\tthis._data = new Float32Array(3);\n\t\t\t}\n\n\t\t\tthis._data[0] = this.x;\n\t\t\tthis._data[1] = this.y;\n\t\t\tthis._data[2] = this.z;\n\t\t\treturn this._data;\n\t\t}\n\t});\n\tObject.defineProperty(Vec4.prototype, \"data\", {\n\t\tget: function get() {\n\t\t\tif (!this._data) {\n\t\t\t\tthis._data = new Float32Array(4);\n\t\t\t}\n\n\t\t\tthis._data[0] = this.x;\n\t\t\tthis._data[1] = this.y;\n\t\t\tthis._data[2] = this.z;\n\t\t\tthis._data[3] = this.w;\n\t\t\treturn this._data;\n\t\t}\n\t});\n\tvar shape = {\n\t\tAabb: BoundingBox,\n\t\tSphere: BoundingSphere,\n\t\tPlane: Plane\n\t};\n\tBoundingSphere.prototype.intersectRay = BoundingSphere.prototype.intersectsRay;\n\n\tFrustum.prototype.update = function (projectionMatrix, viewMatrix) {\n\t\tvar viewProj = new Mat4();\n\t\tviewProj.mul2(projectionMatrix, viewMatrix);\n\t\tthis.setFromMat4(viewProj);\n\t};\n\n\tvar ELEMENTTYPE_INT8 = TYPE_INT8;\n\tvar ELEMENTTYPE_UINT8 = TYPE_UINT8;\n\tvar ELEMENTTYPE_INT16 = TYPE_INT16;\n\tvar ELEMENTTYPE_UINT16 = TYPE_UINT16;\n\tvar ELEMENTTYPE_INT32 = TYPE_INT32;\n\tvar ELEMENTTYPE_UINT32 = TYPE_UINT32;\n\tvar ELEMENTTYPE_FLOAT32 = TYPE_FLOAT32;\n\tfunction UnsupportedBrowserError(message) {\n\t\tthis.name = \"UnsupportedBrowserError\";\n\t\tthis.message = message || \"\";\n\t}\n\tUnsupportedBrowserError.prototype = Error.prototype;\n\tfunction ContextCreationError(message) {\n\t\tthis.name = \"ContextCreationError\";\n\t\tthis.message = message || \"\";\n\t}\n\tContextCreationError.prototype = Error.prototype;\n\tvar gfx = {\n\t\tADDRESS_CLAMP_TO_EDGE: ADDRESS_CLAMP_TO_EDGE,\n\t\tADDRESS_MIRRORED_REPEAT: ADDRESS_MIRRORED_REPEAT,\n\t\tADDRESS_REPEAT: ADDRESS_REPEAT,\n\t\tBLENDMODE_ZERO: BLENDMODE_ZERO,\n\t\tBLENDMODE_ONE: BLENDMODE_ONE,\n\t\tBLENDMODE_SRC_COLOR: BLENDMODE_SRC_COLOR,\n\t\tBLENDMODE_ONE_MINUS_SRC_COLOR: BLENDMODE_ONE_MINUS_SRC_COLOR,\n\t\tBLENDMODE_DST_COLOR: BLENDMODE_DST_COLOR,\n\t\tBLENDMODE_ONE_MINUS_DST_COLOR: BLENDMODE_ONE_MINUS_DST_COLOR,\n\t\tBLENDMODE_SRC_ALPHA: BLENDMODE_SRC_ALPHA,\n\t\tBLENDMODE_SRC_ALPHA_SATURATE: BLENDMODE_SRC_ALPHA_SATURATE,\n\t\tBLENDMODE_ONE_MINUS_SRC_ALPHA: BLENDMODE_ONE_MINUS_SRC_ALPHA,\n\t\tBLENDMODE_DST_ALPHA: BLENDMODE_DST_ALPHA,\n\t\tBLENDMODE_ONE_MINUS_DST_ALPHA: BLENDMODE_ONE_MINUS_DST_ALPHA,\n\t\tBUFFER_STATIC: BUFFER_STATIC,\n\t\tBUFFER_DYNAMIC: BUFFER_DYNAMIC,\n\t\tBUFFER_STREAM: BUFFER_STREAM,\n\t\tCULLFACE_NONE: CULLFACE_NONE,\n\t\tCULLFACE_BACK: CULLFACE_BACK,\n\t\tCULLFACE_FRONT: CULLFACE_FRONT,\n\t\tCULLFACE_FRONTANDBACK: CULLFACE_FRONTANDBACK,\n\t\tELEMENTTYPE_INT8: TYPE_INT8,\n\t\tELEMENTTYPE_UINT8: TYPE_UINT8,\n\t\tELEMENTTYPE_INT16: TYPE_INT16,\n\t\tELEMENTTYPE_UINT16: TYPE_UINT16,\n\t\tELEMENTTYPE_INT32: TYPE_INT32,\n\t\tELEMENTTYPE_UINT32: TYPE_UINT32,\n\t\tELEMENTTYPE_FLOAT32: TYPE_FLOAT32,\n\t\tFILTER_NEAREST: FILTER_NEAREST,\n\t\tFILTER_LINEAR: FILTER_LINEAR,\n\t\tFILTER_NEAREST_MIPMAP_NEAREST: FILTER_NEAREST_MIPMAP_NEAREST,\n\t\tFILTER_NEAREST_MIPMAP_LINEAR: FILTER_NEAREST_MIPMAP_LINEAR,\n\t\tFILTER_LINEAR_MIPMAP_NEAREST: FILTER_LINEAR_MIPMAP_NEAREST,\n\t\tFILTER_LINEAR_MIPMAP_LINEAR: FILTER_LINEAR_MIPMAP_LINEAR,\n\t\tINDEXFORMAT_UINT8: INDEXFORMAT_UINT8,\n\t\tINDEXFORMAT_UINT16: INDEXFORMAT_UINT16,\n\t\tINDEXFORMAT_UINT32: INDEXFORMAT_UINT32,\n\t\tPIXELFORMAT_R5_G6_B5: PIXELFORMAT_R5_G6_B5,\n\t\tPIXELFORMAT_R8_G8_B8: PIXELFORMAT_R8_G8_B8,\n\t\tPIXELFORMAT_R8_G8_B8_A8: PIXELFORMAT_R8_G8_B8_A8,\n\t\tPRIMITIVE_POINTS: PRIMITIVE_POINTS,\n\t\tPRIMITIVE_LINES: PRIMITIVE_LINES,\n\t\tPRIMITIVE_LINELOOP: PRIMITIVE_LINELOOP,\n\t\tPRIMITIVE_LINESTRIP: PRIMITIVE_LINESTRIP,\n\t\tPRIMITIVE_TRIANGLES: PRIMITIVE_TRIANGLES,\n\t\tPRIMITIVE_TRISTRIP: PRIMITIVE_TRISTRIP,\n\t\tPRIMITIVE_TRIFAN: PRIMITIVE_TRIFAN,\n\t\tSEMANTIC_POSITION: SEMANTIC_POSITION,\n\t\tSEMANTIC_NORMAL: SEMANTIC_NORMAL,\n\t\tSEMANTIC_COLOR: SEMANTIC_COLOR,\n\t\tSEMANTIC_TEXCOORD: SEMANTIC_TEXCOORD,\n\t\tSEMANTIC_TEXCOORD0: SEMANTIC_TEXCOORD0,\n\t\tSEMANTIC_TEXCOORD1: SEMANTIC_TEXCOORD1,\n\t\tSEMANTIC_ATTR0: SEMANTIC_ATTR0,\n\t\tSEMANTIC_ATTR1: SEMANTIC_ATTR1,\n\t\tSEMANTIC_ATTR2: SEMANTIC_ATTR2,\n\t\tSEMANTIC_ATTR3: SEMANTIC_ATTR3,\n\t\tTEXTURELOCK_READ: TEXTURELOCK_READ,\n\t\tTEXTURELOCK_WRITE: TEXTURELOCK_WRITE,\n\t\tdrawQuadWithShader: drawQuadWithShader,\n\t\tprogramlib: programlib,\n\t\tshaderChunks: shaderChunks,\n\t\tContextCreationError: ContextCreationError,\n\t\tDevice: GraphicsDevice,\n\t\tIndexBuffer: IndexBuffer,\n\t\tProgramLibrary: ProgramLibrary,\n\t\tRenderTarget: RenderTarget,\n\t\tScopeId: ScopeId,\n\t\tShader: Shader,\n\t\tShaderInput: ShaderInput,\n\t\tTexture: Texture,\n\t\tUnsupportedBrowserError: UnsupportedBrowserError,\n\t\tVertexBuffer: VertexBuffer,\n\t\tVertexFormat: VertexFormat,\n\t\tVertexIterator: VertexIterator\n\t};\n\tvar posteffect = {\n\t\tcreateFullscreenQuad: createFullscreenQuad,\n\t\tdrawFullscreenQuad: drawFullscreenQuad,\n\t\tPostEffect: PostEffect,\n\t\tPostEffectQueue: PostEffectQueue\n\t};\n\tObject.defineProperty(shaderChunks, \"transformSkinnedVS\", {\n\t\tget: function get() {\n\t\t\treturn \"#define SKIN\\n\" + shaderChunks.transformVS;\n\t\t}\n\t});\n\tObject.defineProperties(Texture.prototype, {\n\t\trgbm: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.type === TEXTURETYPE_RGBM;\n\t\t\t},\n\t\t\tset: function set(rgbm) {\n\t\t\t\tthis.type = rgbm ? TEXTURETYPE_RGBM : TEXTURETYPE_DEFAULT;\n\t\t\t}\n\t\t},\n\t\tswizzleGGGR: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.type === TEXTURETYPE_SWIZZLEGGGR;\n\t\t\t},\n\t\t\tset: function set(swizzleGGGR) {\n\t\t\t\tthis.type = swizzleGGGR ? TEXTURETYPE_SWIZZLEGGGR : TEXTURETYPE_DEFAULT;\n\t\t\t}\n\t\t}\n\t});\n\tvar PhongMaterial = StandardMaterial;\n\tvar scene = {\n\t\tpartitionSkin: partitionSkin,\n\t\tprocedural: {\n\t\t\tcalculateTangents: calculateTangents,\n\t\t\tcreateMesh: createMesh,\n\t\t\tcreateTorus: createTorus,\n\t\t\tcreateCylinder: createCylinder,\n\t\t\tcreateCapsule: createCapsule,\n\t\t\tcreateCone: createCone,\n\t\t\tcreateSphere: createSphere,\n\t\t\tcreatePlane: createPlane,\n\t\t\tcreateBox: createBox\n\t\t},\n\t\tBasicMaterial: BasicMaterial,\n\t\tCommand: Command,\n\t\tDepthMaterial: DepthMaterial,\n\t\tForwardRenderer: ForwardRenderer,\n\t\tGraphNode: GraphNode,\n\t\tMaterial: Material,\n\t\tMesh: Mesh,\n\t\tMeshInstance: MeshInstance,\n\t\tModel: Model,\n\t\tParticleEmitter: ParticleEmitter,\n\t\tPhongMaterial: StandardMaterial,\n\t\tPicker: Picker,\n\t\tProjection: {\n\t\t\tORTHOGRAPHIC: PROJECTION_ORTHOGRAPHIC,\n\t\t\tPERSPECTIVE: PROJECTION_PERSPECTIVE\n\t\t},\n\t\tScene: Scene,\n\t\tSkin: Skin,\n\t\tSkinInstance: SkinInstance\n\t};\n\n\tGraphNode.prototype._dirtify = function (local) {\n\t\tif (local) this._dirtifyLocal();else this._dirtifyWorld();\n\t};\n\n\tGraphNode.prototype.addLabel = function (label) {\n\t\tthis._labels[label] = true;\n\t};\n\n\tGraphNode.prototype.getLabels = function () {\n\t\treturn Object.keys(this._labels);\n\t};\n\n\tGraphNode.prototype.hasLabel = function (label) {\n\t\treturn !!this._labels[label];\n\t};\n\n\tGraphNode.prototype.removeLabel = function (label) {\n\t\tdelete this._labels[label];\n\t};\n\n\tGraphNode.prototype.findByLabel = function (label, results) {\n\t\tvar i,\n\t\t\t\tlength = this._children.length;\n\t\tresults = results || [];\n\n\t\tif (this.hasLabel(label)) {\n\t\t\tresults.push(this);\n\t\t}\n\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tresults = this._children[i].findByLabel(label, results);\n\t\t}\n\n\t\treturn results;\n\t};\n\n\tGraphNode.prototype.getChildren = function () {\n\t\treturn this.children;\n\t};\n\n\tGraphNode.prototype.getName = function () {\n\t\treturn this.name;\n\t};\n\n\tGraphNode.prototype.getPath = function () {\n\t\treturn this.path;\n\t};\n\n\tGraphNode.prototype.getRoot = function () {\n\t\treturn this.root;\n\t};\n\n\tGraphNode.prototype.getParent = function () {\n\t\treturn this.parent;\n\t};\n\n\tGraphNode.prototype.setName = function (name) {\n\t\tthis.name = name;\n\t};\n\n\tMaterial.prototype.getName = function () {\n\t\treturn this.name;\n\t};\n\n\tMaterial.prototype.setName = function (name) {\n\t\tthis.name = name;\n\t};\n\n\tMaterial.prototype.getShader = function () {\n\t\treturn this.shader;\n\t};\n\n\tMaterial.prototype.setShader = function (shader) {\n\t\tthis.shader = shader;\n\t};\n\n\tvar anim = {\n\t\tAnimation: Animation,\n\t\tKey: Key,\n\t\tNode: Node,\n\t\tSkeleton: Skeleton\n\t};\n\n\tAnimation.prototype.getDuration = function () {\n\t\treturn this.duration;\n\t};\n\n\tAnimation.prototype.getName = function () {\n\t\treturn this.name;\n\t};\n\n\tAnimation.prototype.getNodes = function () {\n\t\treturn this.nodes;\n\t};\n\n\tAnimation.prototype.setDuration = function (duration) {\n\t\tthis.duration = duration;\n\t};\n\n\tAnimation.prototype.setName = function (name) {\n\t\tthis.name = name;\n\t};\n\n\tSkeleton.prototype.getAnimation = function () {\n\t\treturn this.animation;\n\t};\n\n\tSkeleton.prototype.getCurrentTime = function () {\n\t\treturn this.currentTime;\n\t};\n\n\tSkeleton.prototype.getLooping = function () {\n\t\treturn this.looping;\n\t};\n\n\tSkeleton.prototype.getNumNodes = function () {\n\t\treturn this.numNodes;\n\t};\n\n\tSkeleton.prototype.setAnimation = function (animation) {\n\t\tthis.animation = animation;\n\t};\n\n\tSkeleton.prototype.setCurrentTime = function (time) {\n\t\tthis.currentTime = time;\n\t};\n\n\tSkeleton.prototype.setLooping = function (looping) {\n\t\tthis.looping = looping;\n\t};\n\n\tvar audio = {\n\t\tAudioManager: SoundManager,\n\t\tChannel: Channel,\n\t\tChannel3d: Channel3d,\n\t\tListener: Listener,\n\t\tSound: Sound\n\t};\n\n\tSoundManager.prototype.getListener = function () {\n\t\treturn this.listener;\n\t};\n\n\tSoundManager.prototype.getVolume = function () {\n\t\treturn this.volume;\n\t};\n\n\tSoundManager.prototype.setVolume = function (volume) {\n\t\tthis.volume = volume;\n\t};\n\n\tvar asset = {\n\t\tASSET_ANIMATION: 'animation',\n\t\tASSET_AUDIO: 'audio',\n\t\tASSET_IMAGE: 'image',\n\t\tASSET_JSON: 'json',\n\t\tASSET_MODEL: 'model',\n\t\tASSET_MATERIAL: 'material',\n\t\tASSET_TEXT: 'text',\n\t\tASSET_TEXTURE: 'texture',\n\t\tASSET_CUBEMAP: 'cubemap',\n\t\tASSET_SCRIPT: 'script'\n\t};\n\n\tAssetRegistry.prototype.getAssetById = function (id) {\n\t\treturn this.get(id);\n\t};\n\n\tObject.defineProperty(XrInputSource.prototype, 'ray', {\n\t\tget: function get() {\n\t\t\treturn this._rayLocal;\n\t\t}\n\t});\n\tObject.defineProperty(XrInputSource.prototype, 'position', {\n\t\tget: function get() {\n\t\t\treturn this._localPosition;\n\t\t}\n\t});\n\tObject.defineProperty(XrInputSource.prototype, 'rotation', {\n\t\tget: function get() {\n\t\t\treturn this._localRotation;\n\t\t}\n\t});\n\tvar input = {\n\t\tgetTouchTargetCoords: getTouchTargetCoords,\n\t\tController: Controller,\n\t\tGamePads: GamePads,\n\t\tKeyboard: Keyboard,\n\t\tKeyboardEvent: KeyboardEvent,\n\t\tMouse: Mouse,\n\t\tMouseEvent: MouseEvent,\n\t\tTouch: Touch,\n\t\tTouchDevice: TouchDevice,\n\t\tTouchEvent: TouchEvent\n\t};\n\tObject.defineProperty(ElementInput.prototype, 'wheel', {\n\t\tget: function get() {\n\t\t\treturn this.wheelDelta * -2;\n\t\t}\n\t});\n\tObject.defineProperty(MouseEvent.prototype, 'wheel', {\n\t\tget: function get() {\n\t\t\treturn this.wheelDelta * -2;\n\t\t}\n\t});\n\tvar RIGIDBODY_TYPE_STATIC = BODYTYPE_STATIC;\n\tvar RIGIDBODY_TYPE_DYNAMIC = BODYTYPE_DYNAMIC;\n\tvar RIGIDBODY_TYPE_KINEMATIC = BODYTYPE_KINEMATIC;\n\tvar RIGIDBODY_CF_STATIC_OBJECT = BODYFLAG_STATIC_OBJECT;\n\tvar RIGIDBODY_CF_KINEMATIC_OBJECT = BODYFLAG_KINEMATIC_OBJECT;\n\tvar RIGIDBODY_CF_NORESPONSE_OBJECT = BODYFLAG_NORESPONSE_OBJECT;\n\tvar RIGIDBODY_ACTIVE_TAG = BODYSTATE_ACTIVE_TAG;\n\tvar RIGIDBODY_ISLAND_SLEEPING = BODYSTATE_ISLAND_SLEEPING;\n\tvar RIGIDBODY_WANTS_DEACTIVATION = BODYSTATE_WANTS_DEACTIVATION;\n\tvar RIGIDBODY_DISABLE_DEACTIVATION = BODYSTATE_DISABLE_DEACTIVATION;\n\tvar RIGIDBODY_DISABLE_SIMULATION = BODYSTATE_DISABLE_SIMULATION;\n\tvar fw = {\n\t\tApplication: Application,\n\t\tComponent: Component,\n\t\tComponentData: ComponentData,\n\t\tComponentSystem: ComponentSystem,\n\t\tEntity: Entity,\n\t\tFillMode: {\n\t\t\tNONE: FILLMODE_NONE,\n\t\t\tFILL_WINDOW: FILLMODE_FILL_WINDOW,\n\t\t\tKEEP_ASPECT: FILLMODE_KEEP_ASPECT\n\t\t},\n\t\tResolutionMode: {\n\t\t\tAUTO: RESOLUTION_AUTO,\n\t\t\tFIXED: RESOLUTION_FIXED\n\t\t}\n\t};\n\n\tApplication.prototype.isFullscreen = function () {\n\t\treturn !!document.fullscreenElement;\n\t};\n\n\tApplication.prototype.enableFullscreen = function (element, success, error) {\n\t\telement = element || this.graphicsDevice.canvas;\n\n\t\tvar s = function s() {\n\t\t\tsuccess();\n\t\t\tdocument.removeEventListener('fullscreenchange', s);\n\t\t};\n\n\t\tvar e = function e() {\n\t\t\terror();\n\t\t\tdocument.removeEventListener('fullscreenerror', e);\n\t\t};\n\n\t\tif (success) {\n\t\t\tdocument.addEventListener('fullscreenchange', s, false);\n\t\t}\n\n\t\tif (error) {\n\t\t\tdocument.addEventListener('fullscreenerror', e, false);\n\t\t}\n\n\t\tif (element.requestFullscreen) {\n\t\t\telement.requestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n\t\t} else {\n\t\t\terror();\n\t\t}\n\t};\n\n\tApplication.prototype.disableFullscreen = function (success) {\n\t\tvar s = function s() {\n\t\t\tsuccess();\n\t\t\tdocument.removeEventListener('fullscreenchange', s);\n\t\t};\n\n\t\tif (success) {\n\t\t\tdocument.addEventListener('fullscreenchange', s, false);\n\t\t}\n\n\t\tdocument.exitFullscreen();\n\t};\n\n\tApplication.prototype.getSceneUrl = function (name) {\n\t\tvar entry = this.scenes.find(name);\n\n\t\tif (entry) {\n\t\t\treturn entry.url;\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tApplication.prototype.loadScene = function (url, callback) {\n\t\tthis.scenes.loadScene(url, callback);\n\t};\n\n\tApplication.prototype.loadSceneHierarchy = function (url, callback) {\n\t\tthis.scenes.loadSceneHierarchy(url, callback);\n\t};\n\n\tApplication.prototype.loadSceneSettings = function (url, callback) {\n\t\tthis.scenes.loadSceneSettings(url, callback);\n\t};\n\n\tObject.defineProperty(CameraComponent.prototype, \"node\", {\n\t\tget: function get() {\n\t\t\treturn this.entity;\n\t\t}\n\t});\n\tObject.defineProperty(LightComponent.prototype, \"enable\", {\n\t\tget: function get() {\n\t\t\treturn this.enabled;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis.enabled = value;\n\t\t}\n\t});\n\n\tModelComponent.prototype.setVisible = function (visible) {\n\t\tthis.enabled = visible;\n\t};\n\n\tObject.defineProperty(RigidBodyComponent.prototype, \"bodyType\", {\n\t\tget: function get() {\n\t\t\treturn this.type;\n\t\t},\n\t\tset: function set(type) {\n\t\t\tthis.type = type;\n\t\t}\n\t});\n\n\tRigidBodyComponent.prototype.syncBodyToEntity = function () {\n\t\tthis._updateDynamic();\n\t};\n\n\tRigidBodyComponentSystem.prototype.setGravity = function () {\n\t\tif (arguments.length === 1) {\n\t\t\tthis.gravity.copy(arguments[0]);\n\t\t} else {\n\t\t\tthis.gravity.set(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\t};\n\n\texports.ABSOLUTE_URL = ABSOLUTE_URL;\n\texports.ACTION_GAMEPAD = ACTION_GAMEPAD;\n\texports.ACTION_KEYBOARD = ACTION_KEYBOARD;\n\texports.ACTION_MOUSE = ACTION_MOUSE;\n\texports.ADDRESS_CLAMP_TO_EDGE = ADDRESS_CLAMP_TO_EDGE;\n\texports.ADDRESS_MIRRORED_REPEAT = ADDRESS_MIRRORED_REPEAT;\n\texports.ADDRESS_REPEAT = ADDRESS_REPEAT;\n\texports.ANIM_BLEND_1D = ANIM_BLEND_1D;\n\texports.ANIM_BLEND_2D_CARTESIAN = ANIM_BLEND_2D_CARTESIAN;\n\texports.ANIM_BLEND_2D_DIRECTIONAL = ANIM_BLEND_2D_DIRECTIONAL;\n\texports.ANIM_BLEND_DIRECT = ANIM_BLEND_DIRECT;\n\texports.ANIM_EQUAL_TO = ANIM_EQUAL_TO;\n\texports.ANIM_GREATER_THAN = ANIM_GREATER_THAN;\n\texports.ANIM_GREATER_THAN_EQUAL_TO = ANIM_GREATER_THAN_EQUAL_TO;\n\texports.ANIM_INTERRUPTION_NEXT = ANIM_INTERRUPTION_NEXT;\n\texports.ANIM_INTERRUPTION_NEXT_PREV = ANIM_INTERRUPTION_NEXT_PREV;\n\texports.ANIM_INTERRUPTION_NONE = ANIM_INTERRUPTION_NONE;\n\texports.ANIM_INTERRUPTION_PREV = ANIM_INTERRUPTION_PREV;\n\texports.ANIM_INTERRUPTION_PREV_NEXT = ANIM_INTERRUPTION_PREV_NEXT;\n\texports.ANIM_LESS_THAN = ANIM_LESS_THAN;\n\texports.ANIM_LESS_THAN_EQUAL_TO = ANIM_LESS_THAN_EQUAL_TO;\n\texports.ANIM_NOT_EQUAL_TO = ANIM_NOT_EQUAL_TO;\n\texports.ANIM_PARAMETER_BOOLEAN = ANIM_PARAMETER_BOOLEAN;\n\texports.ANIM_PARAMETER_FLOAT = ANIM_PARAMETER_FLOAT;\n\texports.ANIM_PARAMETER_INTEGER = ANIM_PARAMETER_INTEGER;\n\texports.ANIM_PARAMETER_TRIGGER = ANIM_PARAMETER_TRIGGER;\n\texports.ANIM_STATE_ANY = ANIM_STATE_ANY;\n\texports.ANIM_STATE_END = ANIM_STATE_END;\n\texports.ANIM_STATE_START = ANIM_STATE_START;\n\texports.ASPECT_AUTO = ASPECT_AUTO;\n\texports.ASPECT_MANUAL = ASPECT_MANUAL;\n\texports.ASSET_ANIMATION = ASSET_ANIMATION;\n\texports.ASSET_AUDIO = ASSET_AUDIO;\n\texports.ASSET_CONTAINER = ASSET_CONTAINER;\n\texports.ASSET_CSS = ASSET_CSS;\n\texports.ASSET_CUBEMAP = ASSET_CUBEMAP;\n\texports.ASSET_HTML = ASSET_HTML;\n\texports.ASSET_IMAGE = ASSET_IMAGE;\n\texports.ASSET_JSON = ASSET_JSON;\n\texports.ASSET_MATERIAL = ASSET_MATERIAL;\n\texports.ASSET_MODEL = ASSET_MODEL;\n\texports.ASSET_SCRIPT = ASSET_SCRIPT;\n\texports.ASSET_SHADER = ASSET_SHADER;\n\texports.ASSET_TEXT = ASSET_TEXT;\n\texports.ASSET_TEXTURE = ASSET_TEXTURE;\n\texports.AXIS_KEY = AXIS_KEY;\n\texports.AXIS_MOUSE_X = AXIS_MOUSE_X;\n\texports.AXIS_MOUSE_Y = AXIS_MOUSE_Y;\n\texports.AXIS_PAD_L_X = AXIS_PAD_L_X;\n\texports.AXIS_PAD_L_Y = AXIS_PAD_L_Y;\n\texports.AXIS_PAD_R_X = AXIS_PAD_R_X;\n\texports.AXIS_PAD_R_Y = AXIS_PAD_R_Y;\n\texports.AnimBinder = AnimBinder;\n\texports.AnimClip = AnimClip;\n\texports.AnimClipHandler = AnimClipHandler;\n\texports.AnimComponent = AnimComponent;\n\texports.AnimComponentLayer = AnimComponentLayer;\n\texports.AnimComponentSystem = AnimComponentSystem;\n\texports.AnimController = AnimController;\n\texports.AnimCurve = AnimCurve;\n\texports.AnimData = AnimData;\n\texports.AnimEvaluator = AnimEvaluator;\n\texports.AnimSnapshot = AnimSnapshot;\n\texports.AnimStateGraph = AnimStateGraph;\n\texports.AnimStateGraphHandler = AnimStateGraphHandler;\n\texports.AnimTarget = AnimTarget;\n\texports.AnimTrack = AnimTrack;\n\texports.Animation = Animation;\n\texports.AnimationComponent = AnimationComponent;\n\texports.AnimationComponentSystem = AnimationComponentSystem;\n\texports.AnimationHandler = AnimationHandler;\n\texports.Application = Application;\n\texports.Asset = Asset;\n\texports.AssetListLoader = AssetListLoader;\n\texports.AssetReference = AssetReference;\n\texports.AssetRegistry = AssetRegistry;\n\texports.AudioHandler = AudioHandler;\n\texports.AudioListenerComponent = AudioListenerComponent;\n\texports.AudioListenerComponentSystem = AudioListenerComponentSystem;\n\texports.AudioSourceComponent = AudioSourceComponent;\n\texports.AudioSourceComponentSystem = AudioSourceComponentSystem;\n\texports.BAKE_COLOR = BAKE_COLOR;\n\texports.BAKE_COLORDIR = BAKE_COLORDIR;\n\texports.BLENDEQUATION_ADD = BLENDEQUATION_ADD;\n\texports.BLENDEQUATION_MAX = BLENDEQUATION_MAX;\n\texports.BLENDEQUATION_MIN = BLENDEQUATION_MIN;\n\texports.BLENDEQUATION_REVERSE_SUBTRACT = BLENDEQUATION_REVERSE_SUBTRACT;\n\texports.BLENDEQUATION_SUBTRACT = BLENDEQUATION_SUBTRACT;\n\texports.BLENDMODE_DST_ALPHA = BLENDMODE_DST_ALPHA;\n\texports.BLENDMODE_DST_COLOR = BLENDMODE_DST_COLOR;\n\texports.BLENDMODE_ONE = BLENDMODE_ONE;\n\texports.BLENDMODE_ONE_MINUS_DST_ALPHA = BLENDMODE_ONE_MINUS_DST_ALPHA;\n\texports.BLENDMODE_ONE_MINUS_DST_COLOR = BLENDMODE_ONE_MINUS_DST_COLOR;\n\texports.BLENDMODE_ONE_MINUS_SRC_ALPHA = BLENDMODE_ONE_MINUS_SRC_ALPHA;\n\texports.BLENDMODE_ONE_MINUS_SRC_COLOR = BLENDMODE_ONE_MINUS_SRC_COLOR;\n\texports.BLENDMODE_SRC_ALPHA = BLENDMODE_SRC_ALPHA;\n\texports.BLENDMODE_SRC_ALPHA_SATURATE = BLENDMODE_SRC_ALPHA_SATURATE;\n\texports.BLENDMODE_SRC_COLOR = BLENDMODE_SRC_COLOR;\n\texports.BLENDMODE_ZERO = BLENDMODE_ZERO;\n\texports.BLEND_ADDITIVE = BLEND_ADDITIVE;\n\texports.BLEND_ADDITIVEALPHA = BLEND_ADDITIVEALPHA;\n\texports.BLEND_MAX = BLEND_MAX;\n\texports.BLEND_MIN = BLEND_MIN;\n\texports.BLEND_MULTIPLICATIVE = BLEND_MULTIPLICATIVE;\n\texports.BLEND_MULTIPLICATIVE2X = BLEND_MULTIPLICATIVE2X;\n\texports.BLEND_NONE = BLEND_NONE;\n\texports.BLEND_NORMAL = BLEND_NORMAL;\n\texports.BLEND_PREMULTIPLIED = BLEND_PREMULTIPLIED;\n\texports.BLEND_SCREEN = BLEND_SCREEN;\n\texports.BLEND_SUBTRACTIVE = BLEND_SUBTRACTIVE;\n\texports.BLUR_BOX = BLUR_BOX;\n\texports.BLUR_GAUSSIAN = BLUR_GAUSSIAN;\n\texports.BODYFLAG_KINEMATIC_OBJECT = BODYFLAG_KINEMATIC_OBJECT;\n\texports.BODYFLAG_NORESPONSE_OBJECT = BODYFLAG_NORESPONSE_OBJECT;\n\texports.BODYFLAG_STATIC_OBJECT = BODYFLAG_STATIC_OBJECT;\n\texports.BODYGROUP_DEFAULT = BODYGROUP_DEFAULT;\n\texports.BODYGROUP_DYNAMIC = BODYGROUP_DYNAMIC;\n\texports.BODYGROUP_ENGINE_1 = BODYGROUP_ENGINE_1;\n\texports.BODYGROUP_ENGINE_2 = BODYGROUP_ENGINE_2;\n\texports.BODYGROUP_ENGINE_3 = BODYGROUP_ENGINE_3;\n\texports.BODYGROUP_KINEMATIC = BODYGROUP_KINEMATIC;\n\texports.BODYGROUP_NONE = BODYGROUP_NONE;\n\texports.BODYGROUP_STATIC = BODYGROUP_STATIC;\n\texports.BODYGROUP_TRIGGER = BODYGROUP_TRIGGER;\n\texports.BODYGROUP_USER_1 = BODYGROUP_USER_1;\n\texports.BODYGROUP_USER_2 = BODYGROUP_USER_2;\n\texports.BODYGROUP_USER_3 = BODYGROUP_USER_3;\n\texports.BODYGROUP_USER_4 = BODYGROUP_USER_4;\n\texports.BODYGROUP_USER_5 = BODYGROUP_USER_5;\n\texports.BODYGROUP_USER_6 = BODYGROUP_USER_6;\n\texports.BODYGROUP_USER_7 = BODYGROUP_USER_7;\n\texports.BODYGROUP_USER_8 = BODYGROUP_USER_8;\n\texports.BODYMASK_ALL = BODYMASK_ALL;\n\texports.BODYMASK_NONE = BODYMASK_NONE;\n\texports.BODYMASK_NOT_STATIC = BODYMASK_NOT_STATIC;\n\texports.BODYMASK_NOT_STATIC_KINEMATIC = BODYMASK_NOT_STATIC_KINEMATIC;\n\texports.BODYMASK_STATIC = BODYMASK_STATIC;\n\texports.BODYSTATE_ACTIVE_TAG = BODYSTATE_ACTIVE_TAG;\n\texports.BODYSTATE_DISABLE_DEACTIVATION = BODYSTATE_DISABLE_DEACTIVATION;\n\texports.BODYSTATE_DISABLE_SIMULATION = BODYSTATE_DISABLE_SIMULATION;\n\texports.BODYSTATE_ISLAND_SLEEPING = BODYSTATE_ISLAND_SLEEPING;\n\texports.BODYSTATE_WANTS_DEACTIVATION = BODYSTATE_WANTS_DEACTIVATION;\n\texports.BODYTYPE_DYNAMIC = BODYTYPE_DYNAMIC;\n\texports.BODYTYPE_KINEMATIC = BODYTYPE_KINEMATIC;\n\texports.BODYTYPE_STATIC = BODYTYPE_STATIC;\n\texports.BUFFER_DYNAMIC = BUFFER_DYNAMIC;\n\texports.BUFFER_GPUDYNAMIC = BUFFER_GPUDYNAMIC;\n\texports.BUFFER_STATIC = BUFFER_STATIC;\n\texports.BUFFER_STREAM = BUFFER_STREAM;\n\texports.BUTTON_TRANSITION_MODE_SPRITE_CHANGE = BUTTON_TRANSITION_MODE_SPRITE_CHANGE;\n\texports.BUTTON_TRANSITION_MODE_TINT = BUTTON_TRANSITION_MODE_TINT;\n\texports.BasicMaterial = BasicMaterial;\n\texports.BasisParser = BasisParser;\n\texports.Batch = Batch;\n\texports.BatchGroup = BatchGroup;\n\texports.BatchManager = BatchManager;\n\texports.BinaryHandler = BinaryHandler;\n\texports.BoundingBox = BoundingBox;\n\texports.BoundingSphere = BoundingSphere;\n\texports.Bundle = Bundle;\n\texports.BundleHandler = BundleHandler;\n\texports.BundleRegistry = BundleRegistry;\n\texports.ButtonComponent = ButtonComponent;\n\texports.ButtonComponentSystem = ButtonComponentSystem;\n\texports.CLEARFLAG_COLOR = CLEARFLAG_COLOR;\n\texports.CLEARFLAG_DEPTH = CLEARFLAG_DEPTH;\n\texports.CLEARFLAG_STENCIL = CLEARFLAG_STENCIL;\n\texports.COMPUPDATED_BLEND = COMPUPDATED_BLEND;\n\texports.COMPUPDATED_CAMERAS = COMPUPDATED_CAMERAS;\n\texports.COMPUPDATED_INSTANCES = COMPUPDATED_INSTANCES;\n\texports.COMPUPDATED_LIGHTS = COMPUPDATED_LIGHTS;\n\texports.CUBEFACE_NEGX = CUBEFACE_NEGX;\n\texports.CUBEFACE_NEGY = CUBEFACE_NEGY;\n\texports.CUBEFACE_NEGZ = CUBEFACE_NEGZ;\n\texports.CUBEFACE_POSX = CUBEFACE_POSX;\n\texports.CUBEFACE_POSY = CUBEFACE_POSY;\n\texports.CUBEFACE_POSZ = CUBEFACE_POSZ;\n\texports.CUBEPROJ_BOX = CUBEPROJ_BOX;\n\texports.CUBEPROJ_NONE = CUBEPROJ_NONE;\n\texports.CULLFACE_BACK = CULLFACE_BACK;\n\texports.CULLFACE_FRONT = CULLFACE_FRONT;\n\texports.CULLFACE_FRONTANDBACK = CULLFACE_FRONTANDBACK;\n\texports.CULLFACE_NONE = CULLFACE_NONE;\n\texports.CURVE_CARDINAL = CURVE_CARDINAL;\n\texports.CURVE_CATMULL = CURVE_CATMULL;\n\texports.CURVE_LINEAR = CURVE_LINEAR;\n\texports.CURVE_SMOOTHSTEP = CURVE_SMOOTHSTEP;\n\texports.CURVE_SPLINE = CURVE_SPLINE;\n\texports.CURVE_STEP = CURVE_STEP;\n\texports.Camera = Camera;\n\texports.CameraComponent = CameraComponent;\n\texports.CameraComponentSystem = CameraComponentSystem;\n\texports.CanvasFont = CanvasFont;\n\texports.CollisionComponent = CollisionComponent;\n\texports.CollisionComponentSystem = CollisionComponentSystem;\n\texports.Color = Color;\n\texports.Command = Command;\n\texports.Component = Component;\n\texports.ComponentData = ComponentData;\n\texports.ComponentSystem = ComponentSystem;\n\texports.ComponentSystemRegistry = ComponentSystemRegistry;\n\texports.ContactPoint = ContactPoint;\n\texports.ContactResult = ContactResult;\n\texports.ContainerHandler = ContainerHandler;\n\texports.ContainerResource = ContainerResource;\n\texports.ContextCreationError = ContextCreationError;\n\texports.Controller = Controller;\n\texports.CssHandler = CssHandler;\n\texports.CubemapHandler = CubemapHandler;\n\texports.Curve = Curve;\n\texports.CurveSet = CurveSet;\n\texports.DETAILMODE_ADD = DETAILMODE_ADD;\n\texports.DETAILMODE_MAX = DETAILMODE_MAX;\n\texports.DETAILMODE_MIN = DETAILMODE_MIN;\n\texports.DETAILMODE_MUL = DETAILMODE_MUL;\n\texports.DETAILMODE_OVERLAY = DETAILMODE_OVERLAY;\n\texports.DETAILMODE_SCREEN = DETAILMODE_SCREEN;\n\texports.DISTANCE_EXPONENTIAL = DISTANCE_EXPONENTIAL;\n\texports.DISTANCE_INVERSE = DISTANCE_INVERSE;\n\texports.DISTANCE_LINEAR = DISTANCE_LINEAR;\n\texports.DefaultAnimBinder = DefaultAnimBinder;\n\texports.DepthMaterial = DepthMaterial;\n\texports.ELEMENTTYPE_FLOAT32 = ELEMENTTYPE_FLOAT32;\n\texports.ELEMENTTYPE_GROUP = ELEMENTTYPE_GROUP;\n\texports.ELEMENTTYPE_IMAGE = ELEMENTTYPE_IMAGE;\n\texports.ELEMENTTYPE_INT16 = ELEMENTTYPE_INT16;\n\texports.ELEMENTTYPE_INT32 = ELEMENTTYPE_INT32;\n\texports.ELEMENTTYPE_INT8 = ELEMENTTYPE_INT8;\n\texports.ELEMENTTYPE_TEXT = ELEMENTTYPE_TEXT;\n\texports.ELEMENTTYPE_UINT16 = ELEMENTTYPE_UINT16;\n\texports.ELEMENTTYPE_UINT32 = ELEMENTTYPE_UINT32;\n\texports.ELEMENTTYPE_UINT8 = ELEMENTTYPE_UINT8;\n\texports.EMITTERSHAPE_BOX = EMITTERSHAPE_BOX;\n\texports.EMITTERSHAPE_SPHERE = EMITTERSHAPE_SPHERE;\n\texports.EVENT_KEYDOWN = EVENT_KEYDOWN;\n\texports.EVENT_KEYUP = EVENT_KEYUP;\n\texports.EVENT_MOUSEDOWN = EVENT_MOUSEDOWN;\n\texports.EVENT_MOUSEMOVE = EVENT_MOUSEMOVE;\n\texports.EVENT_MOUSEUP = EVENT_MOUSEUP;\n\texports.EVENT_MOUSEWHEEL = EVENT_MOUSEWHEEL;\n\texports.EVENT_SELECT = EVENT_SELECT;\n\texports.EVENT_SELECTEND = EVENT_SELECTEND;\n\texports.EVENT_SELECTSTART = EVENT_SELECTSTART;\n\texports.EVENT_TOUCHCANCEL = EVENT_TOUCHCANCEL;\n\texports.EVENT_TOUCHEND = EVENT_TOUCHEND;\n\texports.EVENT_TOUCHMOVE = EVENT_TOUCHMOVE;\n\texports.EVENT_TOUCHSTART = EVENT_TOUCHSTART;\n\texports.ElementComponent = ElementComponent;\n\texports.ElementComponentSystem = ElementComponentSystem;\n\texports.ElementDragHelper = ElementDragHelper;\n\texports.ElementInput = ElementInput;\n\texports.ElementInputEvent = ElementInputEvent;\n\texports.ElementMouseEvent = ElementMouseEvent;\n\texports.ElementSelectEvent = ElementSelectEvent;\n\texports.ElementTouchEvent = ElementTouchEvent;\n\texports.Entity = Entity;\n\texports.EntityReference = EntityReference;\n\texports.EventHandler = EventHandler;\n\texports.FILLMODE_FILL_WINDOW = FILLMODE_FILL_WINDOW;\n\texports.FILLMODE_KEEP_ASPECT = FILLMODE_KEEP_ASPECT;\n\texports.FILLMODE_NONE = FILLMODE_NONE;\n\texports.FILTER_LINEAR = FILTER_LINEAR;\n\texports.FILTER_LINEAR_MIPMAP_LINEAR = FILTER_LINEAR_MIPMAP_LINEAR;\n\texports.FILTER_LINEAR_MIPMAP_NEAREST = FILTER_LINEAR_MIPMAP_NEAREST;\n\texports.FILTER_NEAREST = FILTER_NEAREST;\n\texports.FILTER_NEAREST_MIPMAP_LINEAR = FILTER_NEAREST_MIPMAP_LINEAR;\n\texports.FILTER_NEAREST_MIPMAP_NEAREST = FILTER_NEAREST_MIPMAP_NEAREST;\n\texports.FITTING_BOTH = FITTING_BOTH;\n\texports.FITTING_NONE = FITTING_NONE;\n\texports.FITTING_SHRINK = FITTING_SHRINK;\n\texports.FITTING_STRETCH = FITTING_STRETCH;\n\texports.FOG_EXP = FOG_EXP;\n\texports.FOG_EXP2 = FOG_EXP2;\n\texports.FOG_LINEAR = FOG_LINEAR;\n\texports.FOG_NONE = FOG_NONE;\n\texports.FONT_BITMAP = FONT_BITMAP;\n\texports.FONT_MSDF = FONT_MSDF;\n\texports.FRESNEL_NONE = FRESNEL_NONE;\n\texports.FRESNEL_SCHLICK = FRESNEL_SCHLICK;\n\texports.FUNC_ALWAYS = FUNC_ALWAYS;\n\texports.FUNC_EQUAL = FUNC_EQUAL;\n\texports.FUNC_GREATER = FUNC_GREATER;\n\texports.FUNC_GREATEREQUAL = FUNC_GREATEREQUAL;\n\texports.FUNC_LESS = FUNC_LESS;\n\texports.FUNC_LESSEQUAL = FUNC_LESSEQUAL;\n\texports.FUNC_NEVER = FUNC_NEVER;\n\texports.FUNC_NOTEQUAL = FUNC_NOTEQUAL;\n\texports.FolderHandler = FolderHandler;\n\texports.Font = Font;\n\texports.FontHandler = FontHandler;\n\texports.ForwardRenderer = ForwardRenderer;\n\texports.Frustum = Frustum;\n\texports.GAMMA_NONE = GAMMA_NONE;\n\texports.GAMMA_SRGB = GAMMA_SRGB;\n\texports.GAMMA_SRGBFAST = GAMMA_SRGBFAST;\n\texports.GAMMA_SRGBHDR = GAMMA_SRGBHDR;\n\texports.GamePads = GamePads;\n\texports.GraphNode = GraphNode;\n\texports.GraphicsDevice = GraphicsDevice;\n\texports.HierarchyHandler = HierarchyHandler;\n\texports.HtmlHandler = HtmlHandler;\n\texports.Http = Http;\n\texports.I18n = I18n;\n\texports.INDEXFORMAT_UINT16 = INDEXFORMAT_UINT16;\n\texports.INDEXFORMAT_UINT32 = INDEXFORMAT_UINT32;\n\texports.INDEXFORMAT_UINT8 = INDEXFORMAT_UINT8;\n\texports.INTERPOLATION_CUBIC = INTERPOLATION_CUBIC;\n\texports.INTERPOLATION_LINEAR = INTERPOLATION_LINEAR;\n\texports.INTERPOLATION_STEP = INTERPOLATION_STEP;\n\texports.ImageElement = ImageElement;\n\texports.ImgParser = ImgParser;\n\texports.IndexBuffer = IndexBuffer;\n\texports.IndexedList = IndexedList;\n\texports.JsonHandler = JsonHandler;\n\texports.JsonStandardMaterialParser = JsonStandardMaterialParser;\n\texports.KEY_0 = KEY_0;\n\texports.KEY_1 = KEY_1;\n\texports.KEY_2 = KEY_2;\n\texports.KEY_3 = KEY_3;\n\texports.KEY_4 = KEY_4;\n\texports.KEY_5 = KEY_5;\n\texports.KEY_6 = KEY_6;\n\texports.KEY_7 = KEY_7;\n\texports.KEY_8 = KEY_8;\n\texports.KEY_9 = KEY_9;\n\texports.KEY_A = KEY_A;\n\texports.KEY_ADD = KEY_ADD;\n\texports.KEY_ALT = KEY_ALT;\n\texports.KEY_B = KEY_B;\n\texports.KEY_BACKSPACE = KEY_BACKSPACE;\n\texports.KEY_BACK_SLASH = KEY_BACK_SLASH;\n\texports.KEY_C = KEY_C;\n\texports.KEY_CAPS_LOCK = KEY_CAPS_LOCK;\n\texports.KEY_CLOSE_BRACKET = KEY_CLOSE_BRACKET;\n\texports.KEY_COMMA = KEY_COMMA;\n\texports.KEY_CONTEXT_MENU = KEY_CONTEXT_MENU;\n\texports.KEY_CONTROL = KEY_CONTROL;\n\texports.KEY_D = KEY_D;\n\texports.KEY_DECIMAL = KEY_DECIMAL;\n\texports.KEY_DELETE = KEY_DELETE;\n\texports.KEY_DIVIDE = KEY_DIVIDE;\n\texports.KEY_DOWN = KEY_DOWN;\n\texports.KEY_E = KEY_E;\n\texports.KEY_END = KEY_END;\n\texports.KEY_ENTER = KEY_ENTER;\n\texports.KEY_EQUAL = KEY_EQUAL;\n\texports.KEY_ESCAPE = KEY_ESCAPE;\n\texports.KEY_F = KEY_F;\n\texports.KEY_F1 = KEY_F1;\n\texports.KEY_F10 = KEY_F10;\n\texports.KEY_F11 = KEY_F11;\n\texports.KEY_F12 = KEY_F12;\n\texports.KEY_F2 = KEY_F2;\n\texports.KEY_F3 = KEY_F3;\n\texports.KEY_F4 = KEY_F4;\n\texports.KEY_F5 = KEY_F5;\n\texports.KEY_F6 = KEY_F6;\n\texports.KEY_F7 = KEY_F7;\n\texports.KEY_F8 = KEY_F8;\n\texports.KEY_F9 = KEY_F9;\n\texports.KEY_G = KEY_G;\n\texports.KEY_H = KEY_H;\n\texports.KEY_HOME = KEY_HOME;\n\texports.KEY_I = KEY_I;\n\texports.KEY_INSERT = KEY_INSERT;\n\texports.KEY_J = KEY_J;\n\texports.KEY_K = KEY_K;\n\texports.KEY_L = KEY_L;\n\texports.KEY_LEFT = KEY_LEFT;\n\texports.KEY_M = KEY_M;\n\texports.KEY_META = KEY_META;\n\texports.KEY_MULTIPLY = KEY_MULTIPLY;\n\texports.KEY_N = KEY_N;\n\texports.KEY_NUMPAD_0 = KEY_NUMPAD_0;\n\texports.KEY_NUMPAD_1 = KEY_NUMPAD_1;\n\texports.KEY_NUMPAD_2 = KEY_NUMPAD_2;\n\texports.KEY_NUMPAD_3 = KEY_NUMPAD_3;\n\texports.KEY_NUMPAD_4 = KEY_NUMPAD_4;\n\texports.KEY_NUMPAD_5 = KEY_NUMPAD_5;\n\texports.KEY_NUMPAD_6 = KEY_NUMPAD_6;\n\texports.KEY_NUMPAD_7 = KEY_NUMPAD_7;\n\texports.KEY_NUMPAD_8 = KEY_NUMPAD_8;\n\texports.KEY_NUMPAD_9 = KEY_NUMPAD_9;\n\texports.KEY_O = KEY_O;\n\texports.KEY_OPEN_BRACKET = KEY_OPEN_BRACKET;\n\texports.KEY_P = KEY_P;\n\texports.KEY_PAGE_DOWN = KEY_PAGE_DOWN;\n\texports.KEY_PAGE_UP = KEY_PAGE_UP;\n\texports.KEY_PAUSE = KEY_PAUSE;\n\texports.KEY_PERIOD = KEY_PERIOD;\n\texports.KEY_PRINT_SCREEN = KEY_PRINT_SCREEN;\n\texports.KEY_Q = KEY_Q;\n\texports.KEY_R = KEY_R;\n\texports.KEY_RETURN = KEY_RETURN;\n\texports.KEY_RIGHT = KEY_RIGHT;\n\texports.KEY_S = KEY_S;\n\texports.KEY_SEMICOLON = KEY_SEMICOLON;\n\texports.KEY_SEPARATOR = KEY_SEPARATOR;\n\texports.KEY_SHIFT = KEY_SHIFT;\n\texports.KEY_SLASH = KEY_SLASH;\n\texports.KEY_SPACE = KEY_SPACE;\n\texports.KEY_SUBTRACT = KEY_SUBTRACT;\n\texports.KEY_T = KEY_T;\n\texports.KEY_TAB = KEY_TAB;\n\texports.KEY_U = KEY_U;\n\texports.KEY_UP = KEY_UP;\n\texports.KEY_V = KEY_V;\n\texports.KEY_W = KEY_W;\n\texports.KEY_WINDOWS = KEY_WINDOWS;\n\texports.KEY_X = KEY_X;\n\texports.KEY_Y = KEY_Y;\n\texports.KEY_Z = KEY_Z;\n\texports.Key = Key;\n\texports.Keyboard = Keyboard;\n\texports.KeyboardEvent = KeyboardEvent;\n\texports.KtxParser = KtxParser;\n\texports.LAYERID_DEPTH = LAYERID_DEPTH;\n\texports.LAYERID_IMMEDIATE = LAYERID_IMMEDIATE;\n\texports.LAYERID_SKYBOX = LAYERID_SKYBOX;\n\texports.LAYERID_UI = LAYERID_UI;\n\texports.LAYERID_WORLD = LAYERID_WORLD;\n\texports.LAYER_FX = LAYER_FX;\n\texports.LAYER_GIZMO = LAYER_GIZMO;\n\texports.LAYER_HUD = LAYER_HUD;\n\texports.LAYER_WORLD = LAYER_WORLD;\n\texports.LIGHTFALLOFF_INVERSESQUARED = LIGHTFALLOFF_INVERSESQUARED;\n\texports.LIGHTFALLOFF_LINEAR = LIGHTFALLOFF_LINEAR;\n\texports.LIGHTSHAPE_DISK = LIGHTSHAPE_DISK;\n\texports.LIGHTSHAPE_PUNCTUAL = LIGHTSHAPE_PUNCTUAL;\n\texports.LIGHTSHAPE_RECT = LIGHTSHAPE_RECT;\n\texports.LIGHTSHAPE_SPHERE = LIGHTSHAPE_SPHERE;\n\texports.LIGHTTYPE_DIRECTIONAL = LIGHTTYPE_DIRECTIONAL;\n\texports.LIGHTTYPE_OMNI = LIGHTTYPE_OMNI;\n\texports.LIGHTTYPE_POINT = LIGHTTYPE_POINT;\n\texports.LIGHTTYPE_SPOT = LIGHTTYPE_SPOT;\n\texports.LINEBATCH_GIZMO = LINEBATCH_GIZMO;\n\texports.LINEBATCH_OVERLAY = LINEBATCH_OVERLAY;\n\texports.LINEBATCH_WORLD = LINEBATCH_WORLD;\n\texports.Layer = Layer;\n\texports.LayerComposition = LayerComposition;\n\texports.LayoutCalculator = LayoutCalculator;\n\texports.LayoutChildComponent = LayoutChildComponent;\n\texports.LayoutChildComponentSystem = LayoutChildComponentSystem;\n\texports.LayoutGroupComponent = LayoutGroupComponent;\n\texports.LayoutGroupComponentSystem = LayoutGroupComponentSystem;\n\texports.LegacyDdsParser = LegacyDdsParser;\n\texports.Light = Light;\n\texports.LightComponent = LightComponent;\n\texports.LightComponentSystem = LightComponentSystem;\n\texports.Lightmapper = Lightmapper;\n\texports.LocalizedAsset = LocalizedAsset;\n\texports.MASK_BAKED = MASK_BAKED;\n\texports.MASK_DYNAMIC = MASK_DYNAMIC;\n\texports.MASK_LIGHTMAP = MASK_LIGHTMAP;\n\texports.MOUSEBUTTON_LEFT = MOUSEBUTTON_LEFT;\n\texports.MOUSEBUTTON_MIDDLE = MOUSEBUTTON_MIDDLE;\n\texports.MOUSEBUTTON_NONE = MOUSEBUTTON_NONE;\n\texports.MOUSEBUTTON_RIGHT = MOUSEBUTTON_RIGHT;\n\texports.Mat3 = Mat3;\n\texports.Mat4 = Mat4;\n\texports.Material = Material;\n\texports.MaterialHandler = MaterialHandler;\n\texports.Mesh = Mesh;\n\texports.MeshInstance = MeshInstance;\n\texports.Model = Model;\n\texports.ModelComponent = ModelComponent;\n\texports.ModelComponentSystem = ModelComponentSystem;\n\texports.ModelHandler = ModelHandler;\n\texports.Morph = Morph;\n\texports.MorphInstance = MorphInstance;\n\texports.MorphTarget = MorphTarget;\n\texports.Mouse = Mouse;\n\texports.MouseEvent = MouseEvent;\n\texports.Node = Node;\n\texports.ORIENTATION_HORIZONTAL = ORIENTATION_HORIZONTAL;\n\texports.ORIENTATION_VERTICAL = ORIENTATION_VERTICAL;\n\texports.OrientedBox = OrientedBox;\n\texports.PAD_1 = PAD_1;\n\texports.PAD_2 = PAD_2;\n\texports.PAD_3 = PAD_3;\n\texports.PAD_4 = PAD_4;\n\texports.PAD_DOWN = PAD_DOWN;\n\texports.PAD_FACE_1 = PAD_FACE_1;\n\texports.PAD_FACE_2 = PAD_FACE_2;\n\texports.PAD_FACE_3 = PAD_FACE_3;\n\texports.PAD_FACE_4 = PAD_FACE_4;\n\texports.PAD_LEFT = PAD_LEFT;\n\texports.PAD_L_SHOULDER_1 = PAD_L_SHOULDER_1;\n\texports.PAD_L_SHOULDER_2 = PAD_L_SHOULDER_2;\n\texports.PAD_L_STICK_BUTTON = PAD_L_STICK_BUTTON;\n\texports.PAD_L_STICK_X = PAD_L_STICK_X;\n\texports.PAD_L_STICK_Y = PAD_L_STICK_Y;\n\texports.PAD_RIGHT = PAD_RIGHT;\n\texports.PAD_R_SHOULDER_1 = PAD_R_SHOULDER_1;\n\texports.PAD_R_SHOULDER_2 = PAD_R_SHOULDER_2;\n\texports.PAD_R_STICK_BUTTON = PAD_R_STICK_BUTTON;\n\texports.PAD_R_STICK_X = PAD_R_STICK_X;\n\texports.PAD_R_STICK_Y = PAD_R_STICK_Y;\n\texports.PAD_SELECT = PAD_SELECT;\n\texports.PAD_START = PAD_START;\n\texports.PAD_UP = PAD_UP;\n\texports.PAD_VENDOR = PAD_VENDOR;\n\texports.PARTICLEMODE_CPU = PARTICLEMODE_CPU;\n\texports.PARTICLEMODE_GPU = PARTICLEMODE_GPU;\n\texports.PARTICLEORIENTATION_EMITTER = PARTICLEORIENTATION_EMITTER;\n\texports.PARTICLEORIENTATION_SCREEN = PARTICLEORIENTATION_SCREEN;\n\texports.PARTICLEORIENTATION_WORLD = PARTICLEORIENTATION_WORLD;\n\texports.PARTICLESORT_DISTANCE = PARTICLESORT_DISTANCE;\n\texports.PARTICLESORT_NEWER_FIRST = PARTICLESORT_NEWER_FIRST;\n\texports.PARTICLESORT_NONE = PARTICLESORT_NONE;\n\texports.PARTICLESORT_OLDER_FIRST = PARTICLESORT_OLDER_FIRST;\n\texports.PIXELFORMAT_111110F = PIXELFORMAT_111110F;\n\texports.PIXELFORMAT_A8 = PIXELFORMAT_A8;\n\texports.PIXELFORMAT_ASTC_4x4 = PIXELFORMAT_ASTC_4x4;\n\texports.PIXELFORMAT_ATC_RGB = PIXELFORMAT_ATC_RGB;\n\texports.PIXELFORMAT_ATC_RGBA = PIXELFORMAT_ATC_RGBA;\n\texports.PIXELFORMAT_DEPTH = PIXELFORMAT_DEPTH;\n\texports.PIXELFORMAT_DEPTHSTENCIL = PIXELFORMAT_DEPTHSTENCIL;\n\texports.PIXELFORMAT_DXT1 = PIXELFORMAT_DXT1;\n\texports.PIXELFORMAT_DXT3 = PIXELFORMAT_DXT3;\n\texports.PIXELFORMAT_DXT5 = PIXELFORMAT_DXT5;\n\texports.PIXELFORMAT_ETC1 = PIXELFORMAT_ETC1;\n\texports.PIXELFORMAT_ETC2_RGB = PIXELFORMAT_ETC2_RGB;\n\texports.PIXELFORMAT_ETC2_RGBA = PIXELFORMAT_ETC2_RGBA;\n\texports.PIXELFORMAT_L8 = PIXELFORMAT_L8;\n\texports.PIXELFORMAT_L8_A8 = PIXELFORMAT_L8_A8;\n\texports.PIXELFORMAT_PVRTC_2BPP_RGBA_1 = PIXELFORMAT_PVRTC_2BPP_RGBA_1;\n\texports.PIXELFORMAT_PVRTC_2BPP_RGB_1 = PIXELFORMAT_PVRTC_2BPP_RGB_1;\n\texports.PIXELFORMAT_PVRTC_4BPP_RGBA_1 = PIXELFORMAT_PVRTC_4BPP_RGBA_1;\n\texports.PIXELFORMAT_PVRTC_4BPP_RGB_1 = PIXELFORMAT_PVRTC_4BPP_RGB_1;\n\texports.PIXELFORMAT_R32F = PIXELFORMAT_R32F;\n\texports.PIXELFORMAT_R4_G4_B4_A4 = PIXELFORMAT_R4_G4_B4_A4;\n\texports.PIXELFORMAT_R5_G5_B5_A1 = PIXELFORMAT_R5_G5_B5_A1;\n\texports.PIXELFORMAT_R5_G6_B5 = PIXELFORMAT_R5_G6_B5;\n\texports.PIXELFORMAT_R8_G8_B8 = PIXELFORMAT_R8_G8_B8;\n\texports.PIXELFORMAT_R8_G8_B8_A8 = PIXELFORMAT_R8_G8_B8_A8;\n\texports.PIXELFORMAT_RGB16F = PIXELFORMAT_RGB16F;\n\texports.PIXELFORMAT_RGB32F = PIXELFORMAT_RGB32F;\n\texports.PIXELFORMAT_RGBA16F = PIXELFORMAT_RGBA16F;\n\texports.PIXELFORMAT_RGBA32F = PIXELFORMAT_RGBA32F;\n\texports.PIXELFORMAT_SRGB = PIXELFORMAT_SRGB;\n\texports.PIXELFORMAT_SRGBA = PIXELFORMAT_SRGBA;\n\texports.PRIMITIVE_LINELOOP = PRIMITIVE_LINELOOP;\n\texports.PRIMITIVE_LINES = PRIMITIVE_LINES;\n\texports.PRIMITIVE_LINESTRIP = PRIMITIVE_LINESTRIP;\n\texports.PRIMITIVE_POINTS = PRIMITIVE_POINTS;\n\texports.PRIMITIVE_TRIANGLES = PRIMITIVE_TRIANGLES;\n\texports.PRIMITIVE_TRIFAN = PRIMITIVE_TRIFAN;\n\texports.PRIMITIVE_TRISTRIP = PRIMITIVE_TRISTRIP;\n\texports.PROJECTION_ORTHOGRAPHIC = PROJECTION_ORTHOGRAPHIC;\n\texports.PROJECTION_PERSPECTIVE = PROJECTION_PERSPECTIVE;\n\texports.ParticleEmitter = ParticleEmitter;\n\texports.ParticleSystemComponent = ParticleSystemComponent;\n\texports.ParticleSystemComponentSystem = ParticleSystemComponentSystem;\n\texports.PhongMaterial = PhongMaterial;\n\texports.Picker = Picker;\n\texports.Plane = Plane;\n\texports.PostEffect = PostEffect;\n\texports.PostEffectPass = PostEffectPass;\n\texports.PostEffectQueue = PostEffectQueue;\n\texports.ProgramLibrary = ProgramLibrary;\n\texports.Quat = Quat;\n\texports.RENDERSTYLE_POINTS = RENDERSTYLE_POINTS;\n\texports.RENDERSTYLE_SOLID = RENDERSTYLE_SOLID;\n\texports.RENDERSTYLE_WIREFRAME = RENDERSTYLE_WIREFRAME;\n\texports.RESOLUTION_AUTO = RESOLUTION_AUTO;\n\texports.RESOLUTION_FIXED = RESOLUTION_FIXED;\n\texports.RIGIDBODY_ACTIVE_TAG = RIGIDBODY_ACTIVE_TAG;\n\texports.RIGIDBODY_CF_KINEMATIC_OBJECT = RIGIDBODY_CF_KINEMATIC_OBJECT;\n\texports.RIGIDBODY_CF_NORESPONSE_OBJECT = RIGIDBODY_CF_NORESPONSE_OBJECT;\n\texports.RIGIDBODY_CF_STATIC_OBJECT = RIGIDBODY_CF_STATIC_OBJECT;\n\texports.RIGIDBODY_DISABLE_DEACTIVATION = RIGIDBODY_DISABLE_DEACTIVATION;\n\texports.RIGIDBODY_DISABLE_SIMULATION = RIGIDBODY_DISABLE_SIMULATION;\n\texports.RIGIDBODY_ISLAND_SLEEPING = RIGIDBODY_ISLAND_SLEEPING;\n\texports.RIGIDBODY_TYPE_DYNAMIC = RIGIDBODY_TYPE_DYNAMIC;\n\texports.RIGIDBODY_TYPE_KINEMATIC = RIGIDBODY_TYPE_KINEMATIC;\n\texports.RIGIDBODY_TYPE_STATIC = RIGIDBODY_TYPE_STATIC;\n\texports.RIGIDBODY_WANTS_DEACTIVATION = RIGIDBODY_WANTS_DEACTIVATION;\n\texports.Ray = Ray;\n\texports.RaycastResult = RaycastResult;\n\texports.RenderHandler = RenderHandler;\n\texports.RenderTarget = RenderTarget;\n\texports.ResourceHandler = ResourceHandler;\n\texports.ResourceLoader = ResourceLoader;\n\texports.RigidBodyComponent = RigidBodyComponent;\n\texports.RigidBodyComponentSystem = RigidBodyComponentSystem;\n\texports.SCALEMODE_BLEND = SCALEMODE_BLEND;\n\texports.SCALEMODE_NONE = SCALEMODE_NONE;\n\texports.SCROLLBAR_VISIBILITY_SHOW_ALWAYS = SCROLLBAR_VISIBILITY_SHOW_ALWAYS;\n\texports.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED = SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED;\n\texports.SCROLL_MODE_BOUNCE = SCROLL_MODE_BOUNCE;\n\texports.SCROLL_MODE_CLAMP = SCROLL_MODE_CLAMP;\n\texports.SCROLL_MODE_INFINITE = SCROLL_MODE_INFINITE;\n\texports.SEMANTIC_ATTR = SEMANTIC_ATTR;\n\texports.SEMANTIC_ATTR0 = SEMANTIC_ATTR0;\n\texports.SEMANTIC_ATTR1 = SEMANTIC_ATTR1;\n\texports.SEMANTIC_ATTR10 = SEMANTIC_ATTR10;\n\texports.SEMANTIC_ATTR11 = SEMANTIC_ATTR11;\n\texports.SEMANTIC_ATTR12 = SEMANTIC_ATTR12;\n\texports.SEMANTIC_ATTR13 = SEMANTIC_ATTR13;\n\texports.SEMANTIC_ATTR14 = SEMANTIC_ATTR14;\n\texports.SEMANTIC_ATTR15 = SEMANTIC_ATTR15;\n\texports.SEMANTIC_ATTR2 = SEMANTIC_ATTR2;\n\texports.SEMANTIC_ATTR3 = SEMANTIC_ATTR3;\n\texports.SEMANTIC_ATTR4 = SEMANTIC_ATTR4;\n\texports.SEMANTIC_ATTR5 = SEMANTIC_ATTR5;\n\texports.SEMANTIC_ATTR6 = SEMANTIC_ATTR6;\n\texports.SEMANTIC_ATTR7 = SEMANTIC_ATTR7;\n\texports.SEMANTIC_ATTR8 = SEMANTIC_ATTR8;\n\texports.SEMANTIC_ATTR9 = SEMANTIC_ATTR9;\n\texports.SEMANTIC_BLENDINDICES = SEMANTIC_BLENDINDICES;\n\texports.SEMANTIC_BLENDWEIGHT = SEMANTIC_BLENDWEIGHT;\n\texports.SEMANTIC_COLOR = SEMANTIC_COLOR;\n\texports.SEMANTIC_NORMAL = SEMANTIC_NORMAL;\n\texports.SEMANTIC_POSITION = SEMANTIC_POSITION;\n\texports.SEMANTIC_TANGENT = SEMANTIC_TANGENT;\n\texports.SEMANTIC_TEXCOORD = SEMANTIC_TEXCOORD;\n\texports.SEMANTIC_TEXCOORD0 = SEMANTIC_TEXCOORD0;\n\texports.SEMANTIC_TEXCOORD1 = SEMANTIC_TEXCOORD1;\n\texports.SEMANTIC_TEXCOORD2 = SEMANTIC_TEXCOORD2;\n\texports.SEMANTIC_TEXCOORD3 = SEMANTIC_TEXCOORD3;\n\texports.SEMANTIC_TEXCOORD4 = SEMANTIC_TEXCOORD4;\n\texports.SEMANTIC_TEXCOORD5 = SEMANTIC_TEXCOORD5;\n\texports.SEMANTIC_TEXCOORD6 = SEMANTIC_TEXCOORD6;\n\texports.SEMANTIC_TEXCOORD7 = SEMANTIC_TEXCOORD7;\n\texports.SHADERDEF_DIRLM = SHADERDEF_DIRLM;\n\texports.SHADERDEF_INSTANCING = SHADERDEF_INSTANCING;\n\texports.SHADERDEF_LM = SHADERDEF_LM;\n\texports.SHADERDEF_MORPH_NORMAL = SHADERDEF_MORPH_NORMAL;\n\texports.SHADERDEF_MORPH_POSITION = SHADERDEF_MORPH_POSITION;\n\texports.SHADERDEF_MORPH_TEXTURE_BASED = SHADERDEF_MORPH_TEXTURE_BASED;\n\texports.SHADERDEF_NOSHADOW = SHADERDEF_NOSHADOW;\n\texports.SHADERDEF_SCREENSPACE = SHADERDEF_SCREENSPACE;\n\texports.SHADERDEF_SKIN = SHADERDEF_SKIN;\n\texports.SHADERDEF_TANGENTS = SHADERDEF_TANGENTS;\n\texports.SHADERDEF_UV0 = SHADERDEF_UV0;\n\texports.SHADERDEF_UV1 = SHADERDEF_UV1;\n\texports.SHADERDEF_VCOLOR = SHADERDEF_VCOLOR;\n\texports.SHADERTAG_MATERIAL = SHADERTAG_MATERIAL;\n\texports.SHADER_DEPTH = SHADER_DEPTH;\n\texports.SHADER_FORWARD = SHADER_FORWARD;\n\texports.SHADER_FORWARDHDR = SHADER_FORWARDHDR;\n\texports.SHADER_PICK = SHADER_PICK;\n\texports.SHADER_SHADOW = SHADER_SHADOW;\n\texports.SHADOWUPDATE_NONE = SHADOWUPDATE_NONE;\n\texports.SHADOWUPDATE_REALTIME = SHADOWUPDATE_REALTIME;\n\texports.SHADOWUPDATE_THISFRAME = SHADOWUPDATE_THISFRAME;\n\texports.SHADOW_DEPTH = SHADOW_DEPTH;\n\texports.SHADOW_PCF3 = SHADOW_PCF3;\n\texports.SHADOW_PCF5 = SHADOW_PCF5;\n\texports.SHADOW_VSM16 = SHADOW_VSM16;\n\texports.SHADOW_VSM32 = SHADOW_VSM32;\n\texports.SHADOW_VSM8 = SHADOW_VSM8;\n\texports.SORTKEY_DEPTH = SORTKEY_DEPTH;\n\texports.SORTKEY_FORWARD = SORTKEY_FORWARD;\n\texports.SORTMODE_BACK2FRONT = SORTMODE_BACK2FRONT;\n\texports.SORTMODE_CUSTOM = SORTMODE_CUSTOM;\n\texports.SORTMODE_FRONT2BACK = SORTMODE_FRONT2BACK;\n\texports.SORTMODE_MANUAL = SORTMODE_MANUAL;\n\texports.SORTMODE_MATERIALMESH = SORTMODE_MATERIALMESH;\n\texports.SORTMODE_NONE = SORTMODE_NONE;\n\texports.SPECOCC_AO = SPECOCC_AO;\n\texports.SPECOCC_GLOSSDEPENDENT = SPECOCC_GLOSSDEPENDENT;\n\texports.SPECOCC_NONE = SPECOCC_NONE;\n\texports.SPECULAR_BLINN = SPECULAR_BLINN;\n\texports.SPECULAR_PHONG = SPECULAR_PHONG;\n\texports.SPRITETYPE_ANIMATED = SPRITETYPE_ANIMATED;\n\texports.SPRITETYPE_SIMPLE = SPRITETYPE_SIMPLE;\n\texports.SPRITE_RENDERMODE_SIMPLE = SPRITE_RENDERMODE_SIMPLE;\n\texports.SPRITE_RENDERMODE_SLICED = SPRITE_RENDERMODE_SLICED;\n\texports.SPRITE_RENDERMODE_TILED = SPRITE_RENDERMODE_TILED;\n\texports.STENCILOP_DECREMENT = STENCILOP_DECREMENT;\n\texports.STENCILOP_DECREMENTWRAP = STENCILOP_DECREMENTWRAP;\n\texports.STENCILOP_INCREMENT = STENCILOP_INCREMENT;\n\texports.STENCILOP_INCREMENTWRAP = STENCILOP_INCREMENTWRAP;\n\texports.STENCILOP_INVERT = STENCILOP_INVERT;\n\texports.STENCILOP_KEEP = STENCILOP_KEEP;\n\texports.STENCILOP_REPLACE = STENCILOP_REPLACE;\n\texports.STENCILOP_ZERO = STENCILOP_ZERO;\n\texports.Scene = Scene;\n\texports.SceneHandler = SceneHandler;\n\texports.SceneRegistry = SceneRegistry;\n\texports.SceneRegistryItem = SceneRegistryItem;\n\texports.SceneSettingsHandler = SceneSettingsHandler;\n\texports.ScopeId = ScopeId;\n\texports.ScopeSpace = ScopeSpace;\n\texports.ScreenComponent = ScreenComponent;\n\texports.ScreenComponentSystem = ScreenComponentSystem;\n\texports.ScriptAttributes = ScriptAttributes;\n\texports.ScriptComponent = ScriptComponent;\n\texports.ScriptComponentSystem = ScriptComponentSystem;\n\texports.ScriptHandler = ScriptHandler;\n\texports.ScriptLegacyComponent = ScriptLegacyComponent;\n\texports.ScriptLegacyComponentSystem = ScriptLegacyComponentSystem;\n\texports.ScriptRegistry = ScriptRegistry;\n\texports.ScriptType = ScriptType;\n\texports.ScrollViewComponent = ScrollViewComponent;\n\texports.ScrollViewComponentSystem = ScrollViewComponentSystem;\n\texports.ScrollbarComponent = ScrollbarComponent;\n\texports.ScrollbarComponentSystem = ScrollbarComponentSystem;\n\texports.Shader = Shader;\n\texports.ShaderHandler = ShaderHandler;\n\texports.SingleContactResult = SingleContactResult;\n\texports.Skeleton = Skeleton;\n\texports.Skin = Skin;\n\texports.SkinBatchInstance = SkinBatchInstance;\n\texports.SkinInstance = SkinInstance;\n\texports.SortedLoopArray = SortedLoopArray;\n\texports.Sound = Sound;\n\texports.SoundComponent = SoundComponent;\n\texports.SoundComponentSystem = SoundComponentSystem;\n\texports.SoundInstance = SoundInstance;\n\texports.SoundInstance3d = SoundInstance3d;\n\texports.SoundManager = SoundManager;\n\texports.SoundSlot = SoundSlot;\n\texports.Sprite = Sprite;\n\texports.SpriteAnimationClip = SpriteAnimationClip;\n\texports.SpriteComponent = SpriteComponent;\n\texports.SpriteComponentSystem = SpriteComponentSystem;\n\texports.SpriteHandler = SpriteHandler;\n\texports.StandardMaterial = StandardMaterial;\n\texports.StencilParameters = StencilParameters;\n\texports.TEXHINT_ASSET = TEXHINT_ASSET;\n\texports.TEXHINT_LIGHTMAP = TEXHINT_LIGHTMAP;\n\texports.TEXHINT_NONE = TEXHINT_NONE;\n\texports.TEXHINT_SHADOWMAP = TEXHINT_SHADOWMAP;\n\texports.TEXTURELOCK_READ = TEXTURELOCK_READ;\n\texports.TEXTURELOCK_WRITE = TEXTURELOCK_WRITE;\n\texports.TEXTURETYPE_DEFAULT = TEXTURETYPE_DEFAULT;\n\texports.TEXTURETYPE_RGBE = TEXTURETYPE_RGBE;\n\texports.TEXTURETYPE_RGBM = TEXTURETYPE_RGBM;\n\texports.TEXTURETYPE_SWIZZLEGGGR = TEXTURETYPE_SWIZZLEGGGR;\n\texports.TONEMAP_ACES = TONEMAP_ACES;\n\texports.TONEMAP_ACES2 = TONEMAP_ACES2;\n\texports.TONEMAP_FILMIC = TONEMAP_FILMIC;\n\texports.TONEMAP_HEJL = TONEMAP_HEJL;\n\texports.TONEMAP_LINEAR = TONEMAP_LINEAR;\n\texports.TYPE_FLOAT32 = TYPE_FLOAT32;\n\texports.TYPE_INT16 = TYPE_INT16;\n\texports.TYPE_INT32 = TYPE_INT32;\n\texports.TYPE_INT8 = TYPE_INT8;\n\texports.TYPE_UINT16 = TYPE_UINT16;\n\texports.TYPE_UINT32 = TYPE_UINT32;\n\texports.TYPE_UINT8 = TYPE_UINT8;\n\texports.Tags = Tags;\n\texports.Template = Template;\n\texports.TemplateHandler = TemplateHandler;\n\texports.TemplateUtils = TemplateUtils;\n\texports.TextElement = TextElement;\n\texports.TextHandler = TextHandler;\n\texports.Texture = Texture;\n\texports.TextureAtlas = TextureAtlas;\n\texports.TextureAtlasHandler = TextureAtlasHandler;\n\texports.TextureHandler = TextureHandler;\n\texports.TextureParser = TextureParser;\n\texports.Timer = Timer;\n\texports.Touch = Touch;\n\texports.TouchDevice = TouchDevice;\n\texports.TouchEvent = TouchEvent;\n\texports.TransformFeedback = TransformFeedback;\n\texports.UNIFORMTYPE_BOOL = UNIFORMTYPE_BOOL;\n\texports.UNIFORMTYPE_BVEC2 = UNIFORMTYPE_BVEC2;\n\texports.UNIFORMTYPE_BVEC3 = UNIFORMTYPE_BVEC3;\n\texports.UNIFORMTYPE_BVEC4 = UNIFORMTYPE_BVEC4;\n\texports.UNIFORMTYPE_FLOAT = UNIFORMTYPE_FLOAT;\n\texports.UNIFORMTYPE_FLOATARRAY = UNIFORMTYPE_FLOATARRAY;\n\texports.UNIFORMTYPE_INT = UNIFORMTYPE_INT;\n\texports.UNIFORMTYPE_IVEC2 = UNIFORMTYPE_IVEC2;\n\texports.UNIFORMTYPE_IVEC3 = UNIFORMTYPE_IVEC3;\n\texports.UNIFORMTYPE_IVEC4 = UNIFORMTYPE_IVEC4;\n\texports.UNIFORMTYPE_MAT2 = UNIFORMTYPE_MAT2;\n\texports.UNIFORMTYPE_MAT3 = UNIFORMTYPE_MAT3;\n\texports.UNIFORMTYPE_MAT4 = UNIFORMTYPE_MAT4;\n\texports.UNIFORMTYPE_TEXTURE2D = UNIFORMTYPE_TEXTURE2D;\n\texports.UNIFORMTYPE_TEXTURE2D_SHADOW = UNIFORMTYPE_TEXTURE2D_SHADOW;\n\texports.UNIFORMTYPE_TEXTURE3D = UNIFORMTYPE_TEXTURE3D;\n\texports.UNIFORMTYPE_TEXTURECUBE = UNIFORMTYPE_TEXTURECUBE;\n\texports.UNIFORMTYPE_TEXTURECUBE_SHADOW = UNIFORMTYPE_TEXTURECUBE_SHADOW;\n\texports.UNIFORMTYPE_VEC2 = UNIFORMTYPE_VEC2;\n\texports.UNIFORMTYPE_VEC2ARRAY = UNIFORMTYPE_VEC2ARRAY;\n\texports.UNIFORMTYPE_VEC3 = UNIFORMTYPE_VEC3;\n\texports.UNIFORMTYPE_VEC3ARRAY = UNIFORMTYPE_VEC3ARRAY;\n\texports.UNIFORMTYPE_VEC4 = UNIFORMTYPE_VEC4;\n\texports.UNIFORMTYPE_VEC4ARRAY = UNIFORMTYPE_VEC4ARRAY;\n\texports.URI = URI;\n\texports.UnsupportedBrowserError = UnsupportedBrowserError;\n\texports.VIEW_CENTER = VIEW_CENTER;\n\texports.VIEW_LEFT = VIEW_LEFT;\n\texports.VIEW_RIGHT = VIEW_RIGHT;\n\texports.Vec2 = Vec2;\n\texports.Vec3 = Vec3;\n\texports.Vec4 = Vec4;\n\texports.VertexBuffer = VertexBuffer;\n\texports.VertexFormat = VertexFormat;\n\texports.VertexIterator = VertexIterator;\n\texports.VrDisplay = VrDisplay;\n\texports.VrManager = VrManager;\n\texports.XRHAND_LEFT = XRHAND_LEFT;\n\texports.XRHAND_NONE = XRHAND_NONE;\n\texports.XRHAND_RIGHT = XRHAND_RIGHT;\n\texports.XRSPACE_BOUNDEDFLOOR = XRSPACE_BOUNDEDFLOOR;\n\texports.XRSPACE_LOCAL = XRSPACE_LOCAL;\n\texports.XRSPACE_LOCALFLOOR = XRSPACE_LOCALFLOOR;\n\texports.XRSPACE_UNBOUNDED = XRSPACE_UNBOUNDED;\n\texports.XRSPACE_VIEWER = XRSPACE_VIEWER;\n\texports.XRTARGETRAY_GAZE = XRTARGETRAY_GAZE;\n\texports.XRTARGETRAY_POINTER = XRTARGETRAY_POINTER;\n\texports.XRTARGETRAY_SCREEN = XRTARGETRAY_SCREEN;\n\texports.XRTRACKABLE_MESH = XRTRACKABLE_MESH;\n\texports.XRTRACKABLE_PLANE = XRTRACKABLE_PLANE;\n\texports.XRTRACKABLE_POINT = XRTRACKABLE_POINT;\n\texports.XRTYPE_AR = XRTYPE_AR;\n\texports.XRTYPE_INLINE = XRTYPE_INLINE;\n\texports.XRTYPE_VR = XRTYPE_VR;\n\texports.XrDepthSensing = XrDepthSensing;\n\texports.XrDomOverlay = XrDomOverlay;\n\texports.XrHitTest = XrHitTest;\n\texports.XrHitTestSource = XrHitTestSource;\n\texports.XrImageTracking = XrImageTracking;\n\texports.XrInput = XrInput;\n\texports.XrInputSource = XrInputSource;\n\texports.XrLightEstimation = XrLightEstimation;\n\texports.XrManager = XrManager;\n\texports.XrTrackedImage = XrTrackedImage;\n\texports.ZoneComponent = ZoneComponent;\n\texports.ZoneComponentSystem = ZoneComponentSystem;\n\texports.anim = anim;\n\texports.apps = apps;\n\texports.asset = asset;\n\texports.audio = audio;\n\texports.basisDownload = basisDownload;\n\texports.basisDownloadFromConfig = basisDownloadFromConfig;\n\texports.basisInitialize = basisInitialize;\n\texports.basisSetDownloadConfig = basisSetDownloadConfig;\n\texports.basisTargetFormat = basisTargetFormat;\n\texports.basisTranscode = basisTranscode;\n\texports.calculateNormals = calculateNormals;\n\texports.calculateTangents = calculateTangents;\n\texports.common = common;\n\texports.config = config;\n\texports.createBox = createBox;\n\texports.createCapsule = createCapsule;\n\texports.createCone = createCone;\n\texports.createCylinder = createCylinder;\n\texports.createMesh = createMesh;\n\texports.createPlane = createPlane;\n\texports.createScript = createScript;\n\texports.createSphere = createSphere;\n\texports.createStyle = createStyle;\n\texports.createTorus = createTorus;\n\texports.createURI = createURI;\n\texports.data = data;\n\texports.debug = debug;\n\texports.drawFullscreenQuad = drawFullscreenQuad;\n\texports.drawQuadWithShader = drawQuadWithShader;\n\texports.drawTexture = drawTexture;\n\texports.events = events;\n\texports.extend = extend;\n\texports.fw = fw;\n\texports.getTouchTargetCoords = getTouchTargetCoords;\n\texports.gfx = gfx;\n\texports.guid = guid;\n\texports.http = http;\n\texports.inherits = inherits;\n\texports.input = input;\n\texports.isDefined = isDefined;\n\texports.log = log;\n\texports.makeArray = makeArray;\n\texports.math = math;\n\texports.now = now;\n\texports.path = path;\n\texports.platform = platform;\n\texports.posteffect = posteffect;\n\texports.prefilterCubemap = prefilterCubemap;\n\texports.programlib = programlib;\n\texports.registerScript = registerScript;\n\texports.reprojectTexture = reprojectTexture;\n\texports.revision = revision;\n\texports.scene = scene;\n\texports.script = script;\n\texports.semanticToLocation = semanticToLocation;\n\texports.shFromCubemap = shFromCubemap;\n\texports.shaderChunks = shaderChunks;\n\texports.shape = shape;\n\texports.string = string;\n\texports.time = time;\n\texports.type = type;\n\texports.typedArrayIndexFormats = typedArrayIndexFormats;\n\texports.typedArrayIndexFormatsByteSize = typedArrayIndexFormatsByteSize;\n\texports.typedArrayToType = typedArrayToType;\n\texports.typedArrayTypes = typedArrayTypes;\n\texports.typedArrayTypesByteSize = typedArrayTypesByteSize;\n\texports.version = version;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import * as pc from 'playcanvas'\r\nimport {AssetsLoader} from './assets-loader'\r\n\r\n\r\n\r\nexport class App {\r\n\r\n    public app:pc.Application\r\n\tprivate canvas:HTMLCanvasElement\r\n\tprivate cubes:pc.Entity[]=[];\r\n\r\n    public get App(): pc.Application {\r\n        return this.app;\r\n    };\r\n\r\n    public Awake(): void {\r\n        this.initApp();\r\n        AssetsLoader.loadAssets(this.app,() => this.assetsLoaded())\r\n    }\r\n\r\n    \r\n    private initApp(){\r\n        this.canvas = this.createCanvas();\r\n\r\n        this.app = new pc.Application(this.canvas, {\r\n            mouse: new pc.Mouse(this.canvas),\r\n            touch: new pc.TouchDevice(this.canvas),\r\n            keyboard: new pc.Keyboard(window)\r\n\t\t});\r\n\r\n        this.app.start();\r\n        this.app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\r\n        this.app.setCanvasResolution(pc.RESOLUTION_AUTO);\r\n        window.addEventListener(\"resize\", () => {\r\n            this.app.resizeCanvas(this.canvas.width, this.canvas.height);\r\n\t\t});\r\n\t\tconsole.log(\"-----> APP INITIALIZED\")\r\n    }\r\n\r\n\r\n    public assetsLoaded():void{\r\n        console.log(\"ASSETS LOADED\");\r\n\t\t// create camera\r\n\t\tvar c = new pc.Entity();\r\n\t\tc.addComponent('camera', {\r\n\t\t\tclearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\r\n\t\t\tfarClip: 10000\r\n\t\t});\r\n\t\tthis.app.root.addChild(c);\r\n\r\n\t\tvar l = new pc.Entity();\r\n\t\tl.addComponent(\"light\", {\r\n\t\t\ttype: \"spot\",\r\n\t\t\trange: 30\r\n\t\t});\r\n\t\tl.translate(0, 10, 0);\r\n\t\tthis.app.root.addChild(l);\r\n\r\n\t\tvar material = new pc.StandardMaterial();\r\n\t\t\r\n\r\n\t\t// create a grid of cubes\r\n\t\tvar SIZE = 4;\r\n\t\tfor (var x = 0; x <= SIZE; x++) {\r\n\t\t\tfor (var y = 0; y <= SIZE; y++) {\r\n\t\t\t\tthis.createCube(2 * x - SIZE, -1.5, 2 * y - SIZE, material);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// load a texture, create material and apply to box\r\n\t\t\r\n\t\tvar asset:pc.Asset = this.app.assets.find(\"panel2\");\r\n\t\tmaterial.diffuseMap = asset.resource;\r\n\t\tmaterial.update();\r\n\t\t\r\n\t\t//TExto\r\n\t\tthis.addTexto(this.app);\r\n\r\n    }\r\n\r\n\tprivate  createCube   (x:number, y:number, z:number, material:pc.StandardMaterial) {\r\n\t\tvar cube = new pc.Entity();\r\n\t\tcube.addComponent(\"model\", {\r\n\t\t\ttype: \"box\",\r\n\t\t\tmaterial: material\r\n\t\t});\r\n\t\tcube.setLocalScale(1, 1, 1);\r\n\t\tcube.translate(x, y, z);\r\n\t\tthis.app.root.addChild(cube);\r\n\t\tthis.cubes.push(cube);\r\n\t};\r\n\r\n    private createCanvas():HTMLCanvasElement{\r\n        const canvas:HTMLCanvasElement = document.createElement('canvas')\r\n        canvas.setAttribute('width', '500px')\r\n        canvas.setAttribute('height', '500px')\r\n        document.body.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n\taddTexto(app:pc.Application){\r\n\t\tvar asset:pc.Asset = this.app.assets.find(\"font\");\r\n\t\tvar texto = new pc.Entity(\"texto\");\r\n\t\ttexto.addComponent(\"element\", {\r\n\t\t\tanchor: [0.5, 0.5, 0.5, 0.5],\r\n\t\t\tautoWidth: true,\r\n\t\t\tautoHeigth: true,\r\n\t\t\tfontSize: 0.2,\r\n\t\t\tcolor: new pc.Color(0.9, 0.9, 0.9),\r\n\t\t\tAlignment:[0,1],\r\n\t\t\tpivot: [0.5, 0.5],\r\n\t\t\t//shadowColor: new pc.Color(0, 0, 0),\r\n\t\t\t//shadowOffset: new pc.Vec2(0.25, -0.25),\r\n\t\t\ttext: \"AAAAAAAAA\",\r\n\t\t\ttype: pc.ELEMENTTYPE_TEXT\r\n\t\t});\r\n\t\tif(texto.element)\r\n\t\t\ttexto.element.fontAsset = asset.id;\r\n\t\ttexto.tags.add(\"texto\");\r\n\t\ttexto.tags.add(\"scalable\");\r\n\t\ttexto.setLocalPosition(0.4,0.6,-2);\r\n\t\ttexto.setLocalEulerAngles(75, 0, 0);\r\n\t\tapp.root.addChild(texto);\r\n\t\tconsole.log(\"texto creado\");\r\n\t\t\r\n\t}\r\n}","\r\nimport * as pc from 'playcanvas';\r\nimport { getAssetPath } from './helpers';\r\n\r\nclass AssetDesc{\r\n    id:string;\r\n    type:string;\r\n    url:string;\r\n    tag:string;\r\n    options?:{};\r\n}\r\n\r\nconst assetsDesc:AssetDesc[] = [\r\n\t//Models\r\n        { id:\"che\", type:\"container\", url:\"./objects/che.glb\", tag:\"init\"},\r\n\t\t{ id:\"jump\", type:\"audio\", url:\"./objects/jump.mp3\", tag:\"init\"},\r\n\t\t{ id:\"chop\", type:\"audio\", url:\"./objects/chop.mp3\", tag:\"init\"},\r\n\t\t{ id:\"ui_select\", type:\"audio\", url:\"./objects/ui_select.mp3\", tag:\"init\"},     \r\n\t\t{ id:\"orbitCamera\", type:\"script\", url:\"./cameras/orbit-camera.js\", tag:\"init\"},\r\n\t\t{ id:\"background\", type:\"cubemap\", url:\"./images/helipad.dds\", tag:\"init\", options:{ type: pc.TEXTURETYPE_RGBM}},\r\n\t\t{ id:\"wturbine\", type:\"container\", url:\"./objects/windTurbine.glb\", tag:\"init\"},\r\n\t\t{ id:\"bomba\", type:\"container\", url:\"./objects/bomba.glb\", tag:\"init\"},\r\n\t\t{ id:\"turbina\", type:\"container\", url:\"./objects/turbina.glb\", tag:\"init\"},\r\n\t\t{ id:\"edificio1\", type:\"container\", url:\"./objects/edificio1.glb\", tag:\"init\"},\r\n\t\t{ id:\"edificio2\", type:\"container\", url:\"./objects/edificio2.glb\", tag:\"init\"},\r\n\t\t{ id:\"avatar\", type:\"container\", url:\"./objects/avatar.glb\", tag:\"init\"},\r\n\t\t{ id:\"font\", type:\"font\", url:\"./fonts/arial.json\", tag:\"init\"},\r\n\t\t{ id:\"panel\", type:\"texture\", url:\"./images/panel.png\", tag:\"init\"},\r\n\t\t{ id:\"panel2\", type:\"texture\", url:\"./images/panel2.png\", tag:\"init\"},\r\n        { id:\"bilboard\", type:\"script\", url:\"./cameras/billboard.js\", tag:\"init\"},\r\n        { id:\"cube\", type:\"container\", url:\"./objects/cube.glb\", tag:\"init\"},\r\n\t/*\t\r\n\t\t{ id:\"clouds\", type:\"texture\", url:\"./images/clouds.jpg\", tag:\"init\"},\r\n\t\t{ id:\"grass\", type:\"texture\", url:\"./images/Grass.png\", tag:\"init\"},\r\n\t\t{ id:\"flyCamera\", type:\"script\", url:\"./cameras/fly-camera.js\", tag:\"init\"},*/\r\n\t];\r\n\r\n\r\n\r\nexport class AssetsLoader{\r\n\r\n    public static loadAssets(app:pc.Application, allAssetsLoaded: () => void):void{\r\n        console.log(\"loading Assets\");\r\n        assetsDesc.forEach((data:AssetDesc) =>{\r\n            const asset = new pc.Asset(data.id, data.type, {\r\n                url: getAssetPath(data.url)}, data.options);\r\n            asset.tags.add(data.tag.split(' '));\r\n            asset.tags.add(data.id);\r\n            app.assets.add(asset);\r\n        });\r\n        \r\n        //First load only the ones with 'init' Tag\r\n        const assets = app.assets.findByTag('init');\r\n        let assetsLoaded = 0;\r\n        const assestTotal = assets.length;\r\n\r\n        // Start loading all the assets\r\n        for(var i = 0; i < assets.length; i++) {\r\n            assets[i].ready(()=>{\r\n                assetsLoaded += 1;        \r\n            // Update the progress bar\r\n            //self.setLoadingBarProgress(assetsLoaded / assestTotal);        \r\n            if (assetsLoaded === assestTotal) {\r\n                allAssetsLoaded();\r\n            }        \r\n            });\r\n            app.assets.load(assets[i]);\r\n        }\r\n\r\n        if (!assets.length) {\r\n            allAssetsLoaded();\r\n        }    \r\n    }\r\n\r\n}","function getAssetPath(assetPath: string): string {\r\n    // @ts-ignore: path variable injected at build time\r\n    return (__PUBLIC_PATH__ ? __PUBLIC_PATH__ : '/static/') + assetPath;\r\n}\r\n\r\nexport { getAssetPath };","export * from './app'","import { App } from '@/game'\r\nimport { getAssetPath } from './game/helpers';\r\n\r\ndeclare function wasmSupported():any;\r\ndeclare function loadWasmModuleAsync(name:string, url:string, url2:string, allAssetsLoaded: () => void ):any;\r\n\r\nwindow.pc = require('playcanvas');\r\n/*\r\nvar script = document.createElement('script');\r\nscript.src = \"./static/tween.js\"; //Tween for playcanvas\r\ndocument.head.appendChild(script);\r\n*/\r\neval(`\r\npc.extend(pc, function () {\r\n\r\n    /**\r\n     * @name pc.TweenManager\r\n     * @description Handles updating tweens\r\n     * @param {pc.Application} app  The application\r\n     */\r\n    var TweenManager = function (app) {\r\n        this._app = app;\r\n        this._tweens = [];\r\n        this._add = []; // to be added\r\n    };\r\n\r\n    TweenManager.prototype = {\r\n        add: function (tween) {\r\n            this._add.push(tween);\r\n            return tween;\r\n        },\r\n\r\n        update: function (dt) {\r\n            var i = 0;\r\n            var n = this._tweens.length;\r\n            while (i < n) {\r\n                if (this._tweens[i].update(dt)) {\r\n                    i++;\r\n                } else {\r\n                    this._tweens.splice(i, 1);\r\n                    n--;\r\n                }\r\n            }\r\n\r\n            // add any tweens that were added mid-update\r\n            if (this._add.length) {\r\n                this._tweens = this._tweens.concat(this._add);\r\n                this._add.length = 0;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @name  pc.Tween\r\n     * @param {Object} target The target property that will be tweened\r\n     * @param {pc.TweenManager} manager The tween manager\r\n     * @param {pc.Entity} entity The pc.Entity whose property we are tweening\r\n     */\r\n    var Tween = function (target, manager, entity) {\r\n        pc.events.attach(this);\r\n\r\n        this.manager = manager;\r\n\r\n        if (entity) {\r\n            this.entity = null; // if present the tween will dirty the transforms after modify the target\r\n        }\r\n\r\n        this.time = 0;\r\n\r\n        this.complete = false;\r\n        this.playing = false;\r\n        this.stopped = true;\r\n        this.pending = false;\r\n\r\n        this.target = target;\r\n\r\n        this.duration = 0;\r\n        this._currentDelay = 0;\r\n        this.timeScale = 1;\r\n        this._reverse = false;\r\n\r\n        this._delay = 0;\r\n        this._yoyo = false;\r\n\r\n        this._count = 0;\r\n        this._numRepeats = 0;\r\n        this._repeatDelay = 0;\r\n\r\n        this._from = false; // indicates a \"from\" tween\r\n\r\n        // for rotation tween\r\n        this._slerp = false; // indicates a rotation tween\r\n        this._fromQuat = new pc.Quat();\r\n        this._toQuat = new pc.Quat();\r\n        this._quat = new pc.Quat();\r\n\r\n        this.easing = pc.Linear;\r\n\r\n        this._sv = {}; // start values\r\n        this._ev = {}; // end values\r\n    };\r\n\r\n    var _parseProperties = function (properties) {\r\n        var _properties;\r\n        if (properties instanceof pc.Vec2) {\r\n            _properties = {\r\n                x: properties.x,\r\n                y: properties.y\r\n            };\r\n        } else if (properties instanceof pc.Vec3) {\r\n            _properties = {\r\n                x: properties.x,\r\n                y: properties.y,\r\n                z: properties.z\r\n            };\r\n        } else if (properties instanceof pc.Vec4) {\r\n            _properties = {\r\n                x: properties.x,\r\n                y: properties.y,\r\n                z: properties.z,\r\n                w: properties.w\r\n            };\r\n        } else if (properties instanceof pc.Quat) {\r\n            _properties = {\r\n                x: properties.x,\r\n                y: properties.y,\r\n                z: properties.z,\r\n                w: properties.w\r\n            };\r\n        } else if (properties instanceof pc.Color) {\r\n            _properties = {\r\n                r: properties.r,\r\n                g: properties.g,\r\n                b: properties.b,\r\n            };\r\n            if (properties.a !== undefined) {\r\n                _properties.a = properties.a;\r\n            }\r\n        } else {\r\n            _properties = properties;\r\n        }\r\n        return _properties;\r\n    }\r\n    Tween.prototype = {\r\n        // properties - js obj of values to update in target\r\n        to: function (properties, duration, easing, delay, repeat, yoyo) {\r\n            this._properties = _parseProperties(properties);\r\n            this.duration = duration;\r\n\r\n            if (easing) this.easing = easing;\r\n            if (delay) {\r\n                this.delay(delay);\r\n            }\r\n            if (repeat) {\r\n                this.repeat(repeat);\r\n            }\r\n\r\n            if (yoyo) {\r\n                this.yoyo(yoyo);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        from: function (properties, duration, easing, delay, repeat, yoyo) {\r\n            this._properties = _parseProperties(properties);\r\n            this.duration = duration;\r\n\r\n            if (easing) this.easing = easing;\r\n            if (delay) {\r\n                this.delay(delay);\r\n            }\r\n            if (repeat) {\r\n                this.repeat(repeat);\r\n            }\r\n\r\n            if (yoyo) {\r\n                this.yoyo(yoyo);\r\n            }\r\n\r\n            this._from = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        rotate: function (properties, duration, easing, delay, repeat, yoyo) {\r\n            this._properties = _parseProperties(properties);\r\n\r\n            this.duration = duration;\r\n\r\n            if (easing) this.easing = easing;\r\n            if (delay) {\r\n                this.delay(delay);\r\n            }\r\n            if (repeat) {\r\n                this.repeat(repeat);\r\n            }\r\n\r\n            if (yoyo) {\r\n                this.yoyo(yoyo);\r\n            }\r\n\r\n            this._slerp = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        start: function () {\r\n            var prop, _x, _y, _z;\r\n\r\n            this.playing = true;\r\n            this.complete = false;\r\n            this.stopped = false;\r\n            this._count = 0;\r\n            this.pending = (this._delay > 0);\r\n\r\n            if (this._reverse && !this.pending) {\r\n                this.time = this.duration;\r\n            } else {\r\n                this.time = 0;\r\n            }\r\n\r\n            if (this._from) {\r\n                for (prop in this._properties) {\r\n                    if (this._properties.hasOwnProperty(prop)) {\r\n                        this._sv[prop] = this._properties[prop];\r\n                        this._ev[prop] = this.target[prop];\r\n                    }\r\n                }\r\n\r\n                if (this._slerp) {\r\n                    this._toQuat.setFromEulerAngles(this.target.x, this.target.y, this.target.z);\r\n\r\n                    _x = this._properties.x !== undefined ? this._properties.x : this.target.x;\r\n                    _y = this._properties.y !== undefined ? this._properties.y : this.target.y;\r\n                    _z = this._properties.z !== undefined ? this._properties.z : this.target.z;\r\n                    this._fromQuat.setFromEulerAngles(_x, _y, _z);\r\n                }\r\n            } else {\r\n                for (prop in this._properties) {\r\n                    if (this._properties.hasOwnProperty(prop)) {\r\n                        this._sv[prop] = this.target[prop];\r\n                        this._ev[prop] = this._properties[prop];\r\n                    }\r\n                }\r\n\r\n                if (this._slerp) {\r\n                    this._fromQuat.setFromEulerAngles(this.target.x, this.target.y, this.target.z);\r\n\r\n                    _x = this._properties.x !== undefined ? this._properties.x : this.target.x;\r\n                    _y = this._properties.y !== undefined ? this._properties.y : this.target.y;\r\n                    _z = this._properties.z !== undefined ? this._properties.z : this.target.z;\r\n                    this._toQuat.setFromEulerAngles(_x, _y, _z);\r\n                }\r\n            }\r\n\r\n            // set delay\r\n            this._currentDelay = this._delay;\r\n\r\n            // add to manager when started\r\n            this.manager.add(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        pause: function () {\r\n            this.playing = false;\r\n        },\r\n\r\n        resume: function () {\r\n            this.playing = true;\r\n        },\r\n\r\n        stop: function () {\r\n            this.playing = false;\r\n            this.stopped = true;\r\n        },\r\n\r\n        delay: function (delay) {\r\n            this._delay = delay;\r\n            this.pending = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        repeat: function (num, delay) {\r\n            this._count = 0;\r\n            this._numRepeats = num;\r\n            if (delay) {\r\n                this._repeatDelay = delay;\r\n            } else {\r\n                this._repeatDelay = 0;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        loop: function (loop) {\r\n            if (loop) {\r\n                this._count = 0;\r\n                this._numRepeats = Infinity;\r\n            } else {\r\n                this._numRepeats = 0;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        yoyo: function (yoyo) {\r\n            this._yoyo = yoyo;\r\n            return this;\r\n        },\r\n\r\n        reverse: function () {\r\n            this._reverse = !this._reverse;\r\n\r\n            return this;\r\n        },\r\n\r\n        chain: function () {\r\n            var n = arguments.length;\r\n\r\n            while(n--) {\r\n                if (n > 0) {\r\n                    arguments[n-1]._chained = arguments[n];\r\n                } else {\r\n                    this._chained = arguments[n];\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        update: function (dt) {\r\n            if (this.stopped) return false;\r\n\r\n            if (!this.playing) return true;\r\n\r\n            if (!this._reverse || this.pending) {\r\n                this.time += dt*this.timeScale;\r\n            } else {\r\n                this.time -= dt*this.timeScale;\r\n            }\r\n\r\n            // delay start if required\r\n            if (this.pending) {\r\n                if (this.time > this._currentDelay) {\r\n                    if (this._reverse) {\r\n                        this.time = this.duration - (this.time - this._currentDelay);\r\n                    } else {\r\n                        this.time = this.time - this._currentDelay;\r\n                    }\r\n                    this.pending = false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            var _extra = 0;\r\n            if ((!this._reverse && this.time > this.duration) || (this._reverse && this.time < 0)){\r\n                this._count++;\r\n                this.complete = true;\r\n                this.playing = false;\r\n                if (this._reverse) {\r\n                    _extra = this.duration - this.time;\r\n                    this.time = 0;\r\n                } else {\r\n                    _extra = this.time - this.duration;\r\n                    this.time = this.duration;\r\n                }\r\n            }\r\n\r\n            var elapsed = (this.duration === 0) ? 1 : (this.time / this.duration);\r\n\r\n            // run easing\r\n            var a = this.easing(elapsed);\r\n\r\n            // increment property\r\n            var s,e,d;\r\n            for (var prop in this._properties) {\r\n                if (this._properties.hasOwnProperty(prop)) {\r\n                    s = this._sv[prop];\r\n                    e = this._ev[prop];\r\n                    this.target[prop] = s + (e - s) * a;\r\n                }\r\n            }\r\n\r\n            if (this._slerp) {\r\n                this._quat.slerp(this._fromQuat, this._toQuat, a);\r\n            }\r\n\r\n            // if this is a entity property then we should dirty the transform\r\n            if (this.entity) {\r\n                this.entity._dirtifyLocal();\r\n\r\n                // apply element property changes\r\n                if (this.element && this.entity.element) {\r\n                    this.entity.element[this.element] = this.target;\r\n                }\r\n\r\n                if (this._slerp) {\r\n                    this.entity.setLocalRotation(this._quat);\r\n                }\r\n            }\r\n\r\n            this.fire(\"update\", dt);\r\n\r\n            if (this.complete) {\r\n                var repeat = this._repeat(_extra);\r\n                if (!repeat) {\r\n                    this.fire(\"complete\", _extra);\r\n                    if (this.entity)\r\n                        this.entity.off('destroy', this.stop, this);\r\n                    if (this._chained) this._chained.start();\r\n                } else {\r\n                    this.fire(\"loop\");\r\n                }\r\n\r\n                return repeat;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _repeat: function (extra) {\r\n            // test for repeat conditions\r\n            if (this._count < this._numRepeats) {\r\n                // do a repeat\r\n                if (this._reverse) {\r\n                    this.time = this.duration - extra;\r\n                } else {\r\n                    this.time = extra; // include overspill time\r\n                }\r\n                this.complete = false;\r\n                this.playing = true;\r\n\r\n                this._currentDelay = this._repeatDelay;\r\n                this.pending = true;\r\n\r\n                if (this._yoyo) {\r\n                    // swap start/end properties\r\n                    for (var prop in this._properties) {\r\n                        var tmp = this._sv[prop];\r\n                        this._sv[prop] = this._ev[prop];\r\n                        this._ev[prop] = tmp;\r\n                    }\r\n\r\n                    if (this._slerp) {\r\n                        this._quat.copy(this._fromQuat);\r\n                        this._fromQuat.copy(this._toQuat);\r\n                        this._toQuat.copy(this._quat);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Easing methods\r\n     */\r\n\r\n    var Linear = function (k) {\r\n        return k;\r\n    };\r\n\r\n    var QuadraticIn = function (k) {\r\n        return k * k;\r\n    };\r\n\r\n    var QuadraticOut = function (k) {\r\n        return k * (2 - k);\r\n    };\r\n\r\n    var QuadraticInOut = function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * k * k;\r\n        }\r\n        return -0.5 * (--k * (k - 2) - 1);\r\n    };\r\n\r\n    var CubicIn = function (k) {\r\n        return k * k * k;\r\n    };\r\n\r\n    var CubicOut = function (k) {\r\n        return --k * k * k + 1;\r\n    };\r\n\r\n    var CubicInOut = function (k) {\r\n        if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k;\r\n        return 0.5 * ( ( k -= 2 ) * k * k + 2 );\r\n    };\r\n\r\n    var QuarticIn = function (k) {\r\n            return k * k * k * k;\r\n    };\r\n\r\n    var QuarticOut = function (k) {\r\n        return 1 - ( --k * k * k * k );\r\n    };\r\n\r\n    var QuarticInOut = function (k) {\r\n        if ( ( k *= 2 ) < 1) return 0.5 * k * k * k * k;\r\n        return - 0.5 * ( ( k -= 2 ) * k * k * k - 2 );\r\n    };\r\n\r\n    var QuinticIn = function (k) {\r\n            return k * k * k * k * k;\r\n    };\r\n\r\n    var QuinticOut = function (k) {\r\n            return --k * k * k * k * k + 1;\r\n    };\r\n\r\n    var QuinticInOut = function (k) {\r\n        if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k * k * k;\r\n        return 0.5 * ( ( k -= 2 ) * k * k * k * k + 2 );\r\n    };\r\n\r\n    var SineIn = function (k) {\r\n        if (k === 0) return 0;\r\n        if (k === 1) return 1;\r\n        return 1 - Math.cos( k * Math.PI / 2 );\r\n    };\r\n\r\n    var SineOut = function (k) {\r\n        if (k === 0) return 0;\r\n        if (k === 1) return 1;\r\n        return Math.sin( k * Math.PI / 2 );\r\n    };\r\n\r\n    var SineInOut = function (k) {\r\n        if (k === 0) return 0;\r\n        if (k === 1) return 1;\r\n        return 0.5 * ( 1 - Math.cos( Math.PI * k ) );\r\n    };\r\n\r\n    var ExponentialIn = function (k) {\r\n        return k === 0 ? 0 : Math.pow( 1024, k - 1 );\r\n    };\r\n\r\n    var ExponentialOut = function (k) {\r\n        return k === 1 ? 1 : 1 - Math.pow( 2, - 10 * k );\r\n    };\r\n\r\n    var ExponentialInOut = function (k) {\r\n        if ( k === 0 ) return 0;\r\n        if ( k === 1 ) return 1;\r\n        if ( ( k *= 2 ) < 1 ) return 0.5 * Math.pow( 1024, k - 1 );\r\n        return 0.5 * ( - Math.pow( 2, - 10 * ( k - 1 ) ) + 2 );\r\n    };\r\n\r\n    var CircularIn = function (k) {\r\n        return 1 - Math.sqrt( 1 - k * k );\r\n    };\r\n\r\n    var CircularOut = function (k) {\r\n        return Math.sqrt( 1 - ( --k * k ) );\r\n    };\r\n\r\n    var CircularInOut = function (k) {\r\n        if ( ( k *= 2 ) < 1) return - 0.5 * ( Math.sqrt( 1 - k * k) - 1);\r\n        return 0.5 * ( Math.sqrt( 1 - ( k -= 2) * k) + 1);\r\n    };\r\n\r\n    var ElasticIn = function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if ( k === 0 ) return 0;\r\n        if ( k === 1 ) return 1;\r\n        if ( !a || a < 1 ) { a = 1; s = p / 4; }\r\n        else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\r\n        return - ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\r\n    };\r\n\r\n    var ElasticOut = function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if ( k === 0 ) return 0;\r\n        if ( k === 1 ) return 1;\r\n        if ( !a || a < 1 ) { a = 1; s = p / 4; }\r\n        else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\r\n        return ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\r\n    };\r\n\r\n    var ElasticInOut = function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if ( k === 0 ) return 0;\r\n        if ( k === 1 ) return 1;\r\n        if ( !a || a < 1 ) { a = 1; s = p / 4; }\r\n        else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\r\n        if ( ( k *= 2 ) < 1 ) return - 0.5 * ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\r\n        return a * Math.pow( 2, -10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) * 0.5 + 1;\r\n    };\r\n\r\n    var BackIn = function (k) {\r\n            var s = 1.70158;\r\n            return k * k * ( ( s + 1 ) * k - s );\r\n    };\r\n\r\n    var BackOut = function (k) {\r\n        var s = 1.70158;\r\n        return --k * k * ( ( s + 1 ) * k + s ) + 1;\r\n    };\r\n\r\n    var BackInOut = function (k) {\r\n        var s = 1.70158 * 1.525;\r\n        if ( ( k *= 2 ) < 1 ) return 0.5 * ( k * k * ( ( s + 1 ) * k - s ) );\r\n        return 0.5 * ( ( k -= 2 ) * k * ( ( s + 1 ) * k + s ) + 2 );\r\n    };\r\n\r\n    var BounceIn = function (k) {\r\n        return 1 - BounceOut( 1 - k );\r\n    };\r\n\r\n    var BounceOut = function (k) {\r\n        if ( k < ( 1 / 2.75 ) ) {\r\n            return 7.5625 * k * k;\r\n        } else if ( k < ( 2 / 2.75 ) ) {\r\n            return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\r\n        } else if ( k < ( 2.5 / 2.75 ) ) {\r\n            return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\r\n        } else {\r\n            return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\r\n        }\r\n    };\r\n\r\n    var BounceInOut = function (k) {\r\n        if ( k < 0.5 ) return BounceIn( k * 2 ) * 0.5;\r\n        return BounceOut( k * 2 - 1 ) * 0.5 + 0.5;\r\n    };\r\n\r\n    return {\r\n        TweenManager: TweenManager,\r\n        Tween: Tween,\r\n        Linear: Linear,\r\n        QuadraticIn: QuadraticIn,\r\n        QuadraticOut: QuadraticOut,\r\n        QuadraticInOut: QuadraticInOut,\r\n        CubicIn: CubicIn,\r\n        CubicOut: CubicOut,\r\n        CubicInOut: CubicInOut,\r\n        QuarticIn: QuarticIn,\r\n        QuarticOut: QuarticOut,\r\n        QuarticInOut: QuarticInOut,\r\n        QuinticIn: QuinticIn,\r\n        QuinticOut: QuinticOut,\r\n        QuinticInOut: QuinticInOut,\r\n        SineIn: SineIn,\r\n        SineOut: SineOut,\r\n        SineInOut: SineInOut,\r\n        ExponentialIn: ExponentialIn,\r\n        ExponentialOut: ExponentialOut,\r\n        ExponentialInOut: ExponentialInOut,\r\n        CircularIn: CircularIn,\r\n        CircularOut: CircularOut,\r\n        CircularInOut: CircularInOut,\r\n        BackIn: BackIn,\r\n        BackOut: BackOut,\r\n        BackInOut: BackInOut,\r\n        BounceIn: BounceIn,\r\n        BounceOut: BounceOut,\r\n        BounceInOut: BounceInOut,\r\n        ElasticIn: ElasticIn,\r\n        ElasticOut: ElasticOut,\r\n        ElasticInOut: ElasticInOut\r\n    };\r\n}());\r\n\r\n// Expose prototype methods and create a default tween manager on the application\r\n(function () {\r\n    // Add pc.Application#addTweenManager method\r\n    pc.Application.prototype.addTweenManager = function () {\r\n        this._tweenManager = new pc.TweenManager(this);\r\n\r\n        this.on(\"update\", function (dt) {\r\n            this._tweenManager.update(dt);\r\n        });\r\n    };\r\n\r\n    // Add pc.Application#tween method\r\n    pc.Application.prototype.tween = function (target) {\r\n        return new pc.Tween(target, this._tweenManager);\r\n    };\r\n\r\n    // Add pc.Entity#tween method\r\n    pc.Entity.prototype.tween = function (target, options) {\r\n        var tween = this._app.tween(target);\r\n        tween.entity = this;\r\n\r\n        this.once('destroy', tween.stop, tween);\r\n\r\n        if (options && options.element) {\r\n            // specifiy a element property to be updated\r\n            tween.element = options.element;\r\n        }\r\n        return tween;\r\n    };\r\n\r\n    // Create a default tween manager on the application\r\n    var application = pc.Application.getApplication();\r\n    if (application) {\r\n        application.addTweenManager();\r\n    }\r\n})();\r\n`\r\n)\r\n\r\nif (wasmSupported()) {\r\n    loadWasmModuleAsync('Ammo', getAssetPath('./ammo/ammo.wasm.js'), getAssetPath('./ammo/ammo.wasm.wasm'), \r\n    ()=> new App().Awake());\r\n} else {\r\n    loadWasmModuleAsync('Ammo', getAssetPath('./ammo/ammo.js'), '', ()=> new App().Awake());\r\n}\r\n\r\n"],"sourceRoot":""}